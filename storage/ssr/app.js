"use strict";
var _a;
var _ = require("lodash");
var axios$1 = require("axios");
var vue = require("vue");
var inertiaVue3 = require("@inertiajs/inertia-vue3");
var progress = require("@inertiajs/progress");
var CountryFlag = require("vue-country-flag-next");
var VueCountdown = require("@chenfengyuan/vue-countdown");
var fontawesomeSvgCore = require("@fortawesome/fontawesome-svg-core");
var Notifications = require("notiwind");
var CKEditor = require("@ckeditor/ckeditor5-vue");
var freeBrandsSvgIcons = require("@fortawesome/free-brands-svg-icons");
var freeSolidSvgIcons = require("@fortawesome/free-solid-svg-icons");
var vueFontawesome = require("@fortawesome/vue-fontawesome");
var serverRenderer = require("vue/server-renderer");
var vueChartjs = require("vue-chartjs");
var chart_js = require("chart.js");
var solid = require("@heroicons/vue/20/solid");
var swiper = require("swiper");
var vue$2 = require("swiper/vue");
require("swiper/css");
require("swiper/css/navigation");
require("swiper/css/pagination");
var inertia = require("@inertiajs/inertia");
var reactivity = require("@vue/reactivity");
require("qs");
var vue$1 = require("@headlessui/vue");
var uuid = require("uuid");
var ClassicEditor = require("@ckeditor/ckeditor5-editor-classic/src/classiceditor");
var EssentialsPlugin = require("@ckeditor/ckeditor5-essentials/src/essentials");
var BoldPlugin = require("@ckeditor/ckeditor5-basic-styles/src/bold");
var ItalicPlugin = require("@ckeditor/ckeditor5-basic-styles/src/italic");
var LinkPlugin = require("@ckeditor/ckeditor5-link/src/link");
var ParagraphPlugin = require("@ckeditor/ckeditor5-paragraph/src/paragraph");
var HeadingPlugin = require("@ckeditor/ckeditor5-heading/src/heading");
var ListPlugin = require("@ckeditor/ckeditor5-list/src/list");
var TablePlugin = require("@ckeditor/ckeditor5-table/src/table");
var outline = require("@heroicons/vue/24/outline");
function _interopDefaultLegacy(e2) {
  return e2 && typeof e2 === "object" && "default" in e2 ? e2 : { "default": e2 };
}
var ___default = /* @__PURE__ */ _interopDefaultLegacy(_);
var axios__default = /* @__PURE__ */ _interopDefaultLegacy(axios$1);
var CountryFlag__default = /* @__PURE__ */ _interopDefaultLegacy(CountryFlag);
var VueCountdown__default = /* @__PURE__ */ _interopDefaultLegacy(VueCountdown);
var Notifications__default = /* @__PURE__ */ _interopDefaultLegacy(Notifications);
var CKEditor__default = /* @__PURE__ */ _interopDefaultLegacy(CKEditor);
var ClassicEditor__default = /* @__PURE__ */ _interopDefaultLegacy(ClassicEditor);
var EssentialsPlugin__default = /* @__PURE__ */ _interopDefaultLegacy(EssentialsPlugin);
var BoldPlugin__default = /* @__PURE__ */ _interopDefaultLegacy(BoldPlugin);
var ItalicPlugin__default = /* @__PURE__ */ _interopDefaultLegacy(ItalicPlugin);
var LinkPlugin__default = /* @__PURE__ */ _interopDefaultLegacy(LinkPlugin);
var ParagraphPlugin__default = /* @__PURE__ */ _interopDefaultLegacy(ParagraphPlugin);
var HeadingPlugin__default = /* @__PURE__ */ _interopDefaultLegacy(HeadingPlugin);
var ListPlugin__default = /* @__PURE__ */ _interopDefaultLegacy(ListPlugin);
var TablePlugin__default = /* @__PURE__ */ _interopDefaultLegacy(TablePlugin);
window._ = ___default["default"];
window.axios = axios__default["default"];
window.axios.defaults.headers.common["X-Requested-With"] = "XMLHttpRequest";
var app = "";
var styles = "";
async function resolvePageComponent(path, pages) {
  const page = pages[path];
  if (typeof page === "undefined") {
    throw new Error(`Page not found: ${path}`);
  }
  return typeof page === "function" ? page() : page;
}
function t(t4, r2) {
  for (var n2 = 0; n2 < r2.length; n2++) {
    var e2 = r2[n2];
    e2.enumerable = e2.enumerable || false, e2.configurable = true, "value" in e2 && (e2.writable = true), Object.defineProperty(t4, e2.key, e2);
  }
}
function r(r2, n2, e2) {
  return n2 && t(r2.prototype, n2), e2 && t(r2, e2), Object.defineProperty(r2, "prototype", { writable: false }), r2;
}
function n() {
  return n = Object.assign || function(t4) {
    for (var r2 = 1; r2 < arguments.length; r2++) {
      var n2 = arguments[r2];
      for (var e2 in n2)
        Object.prototype.hasOwnProperty.call(n2, e2) && (t4[e2] = n2[e2]);
    }
    return t4;
  }, n.apply(this, arguments);
}
function e(t4) {
  return e = Object.setPrototypeOf ? Object.getPrototypeOf : function(t5) {
    return t5.__proto__ || Object.getPrototypeOf(t5);
  }, e(t4);
}
function o(t4, r2) {
  return o = Object.setPrototypeOf || function(t5, r3) {
    return t5.__proto__ = r3, t5;
  }, o(t4, r2);
}
function i() {
  if ("undefined" == typeof Reflect || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if ("function" == typeof Proxy)
    return true;
  try {
    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    })), true;
  } catch (t4) {
    return false;
  }
}
function u(t4, r2, n2) {
  return u = i() ? Reflect.construct : function(t5, r3, n3) {
    var e2 = [null];
    e2.push.apply(e2, r3);
    var i2 = new (Function.bind.apply(t5, e2))();
    return n3 && o(i2, n3.prototype), i2;
  }, u.apply(null, arguments);
}
function f(t4) {
  var r2 = "function" == typeof Map ? /* @__PURE__ */ new Map() : void 0;
  return f = function(t5) {
    if (null === t5 || -1 === Function.toString.call(t5).indexOf("[native code]"))
      return t5;
    if ("function" != typeof t5)
      throw new TypeError("Super expression must either be null or a function");
    if (void 0 !== r2) {
      if (r2.has(t5))
        return r2.get(t5);
      r2.set(t5, n2);
    }
    function n2() {
      return u(t5, arguments, e(this).constructor);
    }
    return n2.prototype = Object.create(t5.prototype, { constructor: { value: n2, enumerable: false, writable: true, configurable: true } }), o(n2, t5);
  }, f(t4);
}
var a = String.prototype.replace, c = /%20/g, l = { default: "RFC3986", formatters: { RFC1738: function(t4) {
  return a.call(t4, c, "+");
}, RFC3986: function(t4) {
  return String(t4);
} }, RFC1738: "RFC1738", RFC3986: "RFC3986" }, s = Object.prototype.hasOwnProperty, v = Array.isArray, p = function() {
  for (var t4 = [], r2 = 0; r2 < 256; ++r2)
    t4.push("%" + ((r2 < 16 ? "0" : "") + r2.toString(16)).toUpperCase());
  return t4;
}(), y = function(t4, r2) {
  for (var n2 = r2 && r2.plainObjects ? /* @__PURE__ */ Object.create(null) : {}, e2 = 0; e2 < t4.length; ++e2)
    void 0 !== t4[e2] && (n2[e2] = t4[e2]);
  return n2;
}, d = { arrayToObject: y, assign: function(t4, r2) {
  return Object.keys(r2).reduce(function(t5, n2) {
    return t5[n2] = r2[n2], t5;
  }, t4);
}, combine: function(t4, r2) {
  return [].concat(t4, r2);
}, compact: function(t4) {
  for (var r2 = [{ obj: { o: t4 }, prop: "o" }], n2 = [], e2 = 0; e2 < r2.length; ++e2)
    for (var o2 = r2[e2], i2 = o2.obj[o2.prop], u2 = Object.keys(i2), f2 = 0; f2 < u2.length; ++f2) {
      var a2 = u2[f2], c2 = i2[a2];
      "object" == typeof c2 && null !== c2 && -1 === n2.indexOf(c2) && (r2.push({ obj: i2, prop: a2 }), n2.push(c2));
    }
  return function(t5) {
    for (; t5.length > 1; ) {
      var r3 = t5.pop(), n3 = r3.obj[r3.prop];
      if (v(n3)) {
        for (var e3 = [], o3 = 0; o3 < n3.length; ++o3)
          void 0 !== n3[o3] && e3.push(n3[o3]);
        r3.obj[r3.prop] = e3;
      }
    }
  }(r2), t4;
}, decode: function(t4, r2, n2) {
  var e2 = t4.replace(/\+/g, " ");
  if ("iso-8859-1" === n2)
    return e2.replace(/%[0-9a-f]{2}/gi, unescape);
  try {
    return decodeURIComponent(e2);
  } catch (t5) {
    return e2;
  }
}, encode: function(t4, r2, n2, e2, o2) {
  if (0 === t4.length)
    return t4;
  var i2 = t4;
  if ("symbol" == typeof t4 ? i2 = Symbol.prototype.toString.call(t4) : "string" != typeof t4 && (i2 = String(t4)), "iso-8859-1" === n2)
    return escape(i2).replace(/%u[0-9a-f]{4}/gi, function(t5) {
      return "%26%23" + parseInt(t5.slice(2), 16) + "%3B";
    });
  for (var u2 = "", f2 = 0; f2 < i2.length; ++f2) {
    var a2 = i2.charCodeAt(f2);
    45 === a2 || 46 === a2 || 95 === a2 || 126 === a2 || a2 >= 48 && a2 <= 57 || a2 >= 65 && a2 <= 90 || a2 >= 97 && a2 <= 122 || o2 === l.RFC1738 && (40 === a2 || 41 === a2) ? u2 += i2.charAt(f2) : a2 < 128 ? u2 += p[a2] : a2 < 2048 ? u2 += p[192 | a2 >> 6] + p[128 | 63 & a2] : a2 < 55296 || a2 >= 57344 ? u2 += p[224 | a2 >> 12] + p[128 | a2 >> 6 & 63] + p[128 | 63 & a2] : (a2 = 65536 + ((1023 & a2) << 10 | 1023 & i2.charCodeAt(f2 += 1)), u2 += p[240 | a2 >> 18] + p[128 | a2 >> 12 & 63] + p[128 | a2 >> 6 & 63] + p[128 | 63 & a2]);
  }
  return u2;
}, isBuffer: function(t4) {
  return !(!t4 || "object" != typeof t4 || !(t4.constructor && t4.constructor.isBuffer && t4.constructor.isBuffer(t4)));
}, isRegExp: function(t4) {
  return "[object RegExp]" === Object.prototype.toString.call(t4);
}, maybeMap: function(t4, r2) {
  if (v(t4)) {
    for (var n2 = [], e2 = 0; e2 < t4.length; e2 += 1)
      n2.push(r2(t4[e2]));
    return n2;
  }
  return r2(t4);
}, merge: function t2(r2, n2, e2) {
  if (!n2)
    return r2;
  if ("object" != typeof n2) {
    if (v(r2))
      r2.push(n2);
    else {
      if (!r2 || "object" != typeof r2)
        return [r2, n2];
      (e2 && (e2.plainObjects || e2.allowPrototypes) || !s.call(Object.prototype, n2)) && (r2[n2] = true);
    }
    return r2;
  }
  if (!r2 || "object" != typeof r2)
    return [r2].concat(n2);
  var o2 = r2;
  return v(r2) && !v(n2) && (o2 = y(r2, e2)), v(r2) && v(n2) ? (n2.forEach(function(n3, o3) {
    if (s.call(r2, o3)) {
      var i2 = r2[o3];
      i2 && "object" == typeof i2 && n3 && "object" == typeof n3 ? r2[o3] = t2(i2, n3, e2) : r2.push(n3);
    } else
      r2[o3] = n3;
  }), r2) : Object.keys(n2).reduce(function(r3, o3) {
    var i2 = n2[o3];
    return r3[o3] = s.call(r3, o3) ? t2(r3[o3], i2, e2) : i2, r3;
  }, o2);
} }, b = Object.prototype.hasOwnProperty, h = { brackets: function(t4) {
  return t4 + "[]";
}, comma: "comma", indices: function(t4, r2) {
  return t4 + "[" + r2 + "]";
}, repeat: function(t4) {
  return t4;
} }, m = Array.isArray, g = String.prototype.split, j = Array.prototype.push, w = function(t4, r2) {
  j.apply(t4, m(r2) ? r2 : [r2]);
}, O = Date.prototype.toISOString, E = l.default, R = { addQueryPrefix: false, allowDots: false, charset: "utf-8", charsetSentinel: false, delimiter: "&", encode: true, encoder: d.encode, encodeValuesOnly: false, format: E, formatter: l.formatters[E], indices: false, serializeDate: function(t4) {
  return O.call(t4);
}, skipNulls: false, strictNullHandling: false }, S = function t3(r2, n2, e2, o2, i2, u2, f2, a2, c2, l2, s2, v2, p2, y2) {
  var b2, h2 = r2;
  if ("function" == typeof f2 ? h2 = f2(n2, h2) : h2 instanceof Date ? h2 = l2(h2) : "comma" === e2 && m(h2) && (h2 = d.maybeMap(h2, function(t4) {
    return t4 instanceof Date ? l2(t4) : t4;
  })), null === h2) {
    if (o2)
      return u2 && !p2 ? u2(n2, R.encoder, y2, "key", s2) : n2;
    h2 = "";
  }
  if ("string" == typeof (b2 = h2) || "number" == typeof b2 || "boolean" == typeof b2 || "symbol" == typeof b2 || "bigint" == typeof b2 || d.isBuffer(h2)) {
    if (u2) {
      var j2 = p2 ? n2 : u2(n2, R.encoder, y2, "key", s2);
      if ("comma" === e2 && p2) {
        for (var O2 = g.call(String(h2), ","), E2 = "", S2 = 0; S2 < O2.length; ++S2)
          E2 += (0 === S2 ? "" : ",") + v2(u2(O2[S2], R.encoder, y2, "value", s2));
        return [v2(j2) + "=" + E2];
      }
      return [v2(j2) + "=" + v2(u2(h2, R.encoder, y2, "value", s2))];
    }
    return [v2(n2) + "=" + v2(String(h2))];
  }
  var k2, x2 = [];
  if (void 0 === h2)
    return x2;
  if ("comma" === e2 && m(h2))
    k2 = [{ value: h2.length > 0 ? h2.join(",") || null : void 0 }];
  else if (m(f2))
    k2 = f2;
  else {
    var C2 = Object.keys(h2);
    k2 = a2 ? C2.sort(a2) : C2;
  }
  for (var N2 = 0; N2 < k2.length; ++N2) {
    var T2 = k2[N2], F2 = "object" == typeof T2 && void 0 !== T2.value ? T2.value : h2[T2];
    if (!i2 || null !== F2) {
      var D2 = m(h2) ? "function" == typeof e2 ? e2(n2, T2) : n2 : n2 + (c2 ? "." + T2 : "[" + T2 + "]");
      w(x2, t3(F2, D2, e2, o2, i2, u2, f2, a2, c2, l2, s2, v2, p2, y2));
    }
  }
  return x2;
}, k = Object.prototype.hasOwnProperty, x = Array.isArray, C = { allowDots: false, allowPrototypes: false, arrayLimit: 20, charset: "utf-8", charsetSentinel: false, comma: false, decoder: d.decode, delimiter: "&", depth: 5, ignoreQueryPrefix: false, interpretNumericEntities: false, parameterLimit: 1e3, parseArrays: true, plainObjects: false, strictNullHandling: false }, N = function(t4) {
  return t4.replace(/&#(\d+);/g, function(t5, r2) {
    return String.fromCharCode(parseInt(r2, 10));
  });
}, T = function(t4, r2) {
  return t4 && "string" == typeof t4 && r2.comma && t4.indexOf(",") > -1 ? t4.split(",") : t4;
}, F = function(t4, r2, n2, e2) {
  if (t4) {
    var o2 = n2.allowDots ? t4.replace(/\.([^.[]+)/g, "[$1]") : t4, i2 = /(\[[^[\]]*])/g, u2 = n2.depth > 0 && /(\[[^[\]]*])/.exec(o2), f2 = u2 ? o2.slice(0, u2.index) : o2, a2 = [];
    if (f2) {
      if (!n2.plainObjects && k.call(Object.prototype, f2) && !n2.allowPrototypes)
        return;
      a2.push(f2);
    }
    for (var c2 = 0; n2.depth > 0 && null !== (u2 = i2.exec(o2)) && c2 < n2.depth; ) {
      if (c2 += 1, !n2.plainObjects && k.call(Object.prototype, u2[1].slice(1, -1)) && !n2.allowPrototypes)
        return;
      a2.push(u2[1]);
    }
    return u2 && a2.push("[" + o2.slice(u2.index) + "]"), function(t5, r3, n3, e3) {
      for (var o3 = e3 ? r3 : T(r3, n3), i3 = t5.length - 1; i3 >= 0; --i3) {
        var u3, f3 = t5[i3];
        if ("[]" === f3 && n3.parseArrays)
          u3 = [].concat(o3);
        else {
          u3 = n3.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
          var a3 = "[" === f3.charAt(0) && "]" === f3.charAt(f3.length - 1) ? f3.slice(1, -1) : f3, c3 = parseInt(a3, 10);
          n3.parseArrays || "" !== a3 ? !isNaN(c3) && f3 !== a3 && String(c3) === a3 && c3 >= 0 && n3.parseArrays && c3 <= n3.arrayLimit ? (u3 = [])[c3] = o3 : "__proto__" !== a3 && (u3[a3] = o3) : u3 = { 0: o3 };
        }
        o3 = u3;
      }
      return o3;
    }(a2, r2, n2, e2);
  }
}, D = function(t4, r2) {
  var n2 = function(t5) {
    if (!t5)
      return C;
    if (null != t5.decoder && "function" != typeof t5.decoder)
      throw new TypeError("Decoder has to be a function.");
    if (void 0 !== t5.charset && "utf-8" !== t5.charset && "iso-8859-1" !== t5.charset)
      throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
    return { allowDots: void 0 === t5.allowDots ? C.allowDots : !!t5.allowDots, allowPrototypes: "boolean" == typeof t5.allowPrototypes ? t5.allowPrototypes : C.allowPrototypes, arrayLimit: "number" == typeof t5.arrayLimit ? t5.arrayLimit : C.arrayLimit, charset: void 0 === t5.charset ? C.charset : t5.charset, charsetSentinel: "boolean" == typeof t5.charsetSentinel ? t5.charsetSentinel : C.charsetSentinel, comma: "boolean" == typeof t5.comma ? t5.comma : C.comma, decoder: "function" == typeof t5.decoder ? t5.decoder : C.decoder, delimiter: "string" == typeof t5.delimiter || d.isRegExp(t5.delimiter) ? t5.delimiter : C.delimiter, depth: "number" == typeof t5.depth || false === t5.depth ? +t5.depth : C.depth, ignoreQueryPrefix: true === t5.ignoreQueryPrefix, interpretNumericEntities: "boolean" == typeof t5.interpretNumericEntities ? t5.interpretNumericEntities : C.interpretNumericEntities, parameterLimit: "number" == typeof t5.parameterLimit ? t5.parameterLimit : C.parameterLimit, parseArrays: false !== t5.parseArrays, plainObjects: "boolean" == typeof t5.plainObjects ? t5.plainObjects : C.plainObjects, strictNullHandling: "boolean" == typeof t5.strictNullHandling ? t5.strictNullHandling : C.strictNullHandling };
  }(r2);
  if ("" === t4 || null == t4)
    return n2.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
  for (var e2 = "string" == typeof t4 ? function(t5, r3) {
    var n3, e3 = {}, o3 = (r3.ignoreQueryPrefix ? t5.replace(/^\?/, "") : t5).split(r3.delimiter, Infinity === r3.parameterLimit ? void 0 : r3.parameterLimit), i3 = -1, u3 = r3.charset;
    if (r3.charsetSentinel)
      for (n3 = 0; n3 < o3.length; ++n3)
        0 === o3[n3].indexOf("utf8=") && ("utf8=%E2%9C%93" === o3[n3] ? u3 = "utf-8" : "utf8=%26%2310003%3B" === o3[n3] && (u3 = "iso-8859-1"), i3 = n3, n3 = o3.length);
    for (n3 = 0; n3 < o3.length; ++n3)
      if (n3 !== i3) {
        var f3, a3, c2 = o3[n3], l2 = c2.indexOf("]="), s2 = -1 === l2 ? c2.indexOf("=") : l2 + 1;
        -1 === s2 ? (f3 = r3.decoder(c2, C.decoder, u3, "key"), a3 = r3.strictNullHandling ? null : "") : (f3 = r3.decoder(c2.slice(0, s2), C.decoder, u3, "key"), a3 = d.maybeMap(T(c2.slice(s2 + 1), r3), function(t6) {
          return r3.decoder(t6, C.decoder, u3, "value");
        })), a3 && r3.interpretNumericEntities && "iso-8859-1" === u3 && (a3 = N(a3)), c2.indexOf("[]=") > -1 && (a3 = x(a3) ? [a3] : a3), e3[f3] = k.call(e3, f3) ? d.combine(e3[f3], a3) : a3;
      }
    return e3;
  }(t4, n2) : t4, o2 = n2.plainObjects ? /* @__PURE__ */ Object.create(null) : {}, i2 = Object.keys(e2), u2 = 0; u2 < i2.length; ++u2) {
    var f2 = i2[u2], a2 = F(f2, e2[f2], n2, "string" == typeof t4);
    o2 = d.merge(o2, a2, n2);
  }
  return d.compact(o2);
}, $ = /* @__PURE__ */ function() {
  function t4(t5, r2, n3) {
    var e2, o2;
    this.name = t5, this.definition = r2, this.bindings = null != (e2 = r2.bindings) ? e2 : {}, this.wheres = null != (o2 = r2.wheres) ? o2 : {}, this.config = n3;
  }
  var n2 = t4.prototype;
  return n2.matchesUrl = function(t5) {
    var r2 = this;
    if (!this.definition.methods.includes("GET"))
      return false;
    var n3 = this.template.replace(/(\/?){([^}?]*)(\??)}/g, function(t6, n4, e3, o3) {
      var i3, u3 = "(?<" + e3 + ">" + ((null == (i3 = r2.wheres[e3]) ? void 0 : i3.replace(/(^\^)|(\$$)/g, "")) || "[^/?]+") + ")";
      return o3 ? "(" + n4 + u3 + ")?" : "" + n4 + u3;
    }).replace(/^\w+:\/\//, ""), e2 = t5.replace(/^\w+:\/\//, "").split("?"), o2 = e2[0], i2 = e2[1], u2 = new RegExp("^" + n3 + "/?$").exec(o2);
    return !!u2 && { params: u2.groups, query: D(i2) };
  }, n2.compile = function(t5) {
    var r2 = this, n3 = this.parameterSegments;
    return n3.length ? this.template.replace(/{([^}?]+)(\??)}/g, function(e2, o2, i2) {
      var u2, f2, a2;
      if (!i2 && [null, void 0].includes(t5[o2]))
        throw new Error("Ziggy error: '" + o2 + "' parameter is required for route '" + r2.name + "'.");
      if (n3[n3.length - 1].name === o2 && ".*" === r2.wheres[o2])
        return encodeURIComponent(null != (a2 = t5[o2]) ? a2 : "").replace(/%2F/g, "/");
      if (r2.wheres[o2] && !new RegExp("^" + (i2 ? "(" + r2.wheres[o2] + ")?" : r2.wheres[o2]) + "$").test(null != (u2 = t5[o2]) ? u2 : ""))
        throw new Error("Ziggy error: '" + o2 + "' parameter does not match required format '" + r2.wheres[o2] + "' for route '" + r2.name + "'.");
      return encodeURIComponent(null != (f2 = t5[o2]) ? f2 : "");
    }).replace(/\/+$/, "") : this.template;
  }, r(t4, [{ key: "template", get: function() {
    return ((this.config.absolute ? this.definition.domain ? "" + this.config.url.match(/^\w+:\/\//)[0] + this.definition.domain + (this.config.port ? ":" + this.config.port : "") : this.config.url : "") + "/" + this.definition.uri).replace(/\/+$/, "");
  } }, { key: "parameterSegments", get: function() {
    var t5, r2;
    return null != (t5 = null == (r2 = this.template.match(/{[^}?]+\??}/g)) ? void 0 : r2.map(function(t6) {
      return { name: t6.replace(/{|\??}/g, ""), required: !/\?}$/.test(t6) };
    })) ? t5 : [];
  } }]), t4;
}(), A = /* @__PURE__ */ function(t4) {
  var e2, i2;
  function u2(r2, e3, o2, i3) {
    var u3;
    if (void 0 === o2 && (o2 = true), (u3 = t4.call(this) || this).t = null != i3 ? i3 : "undefined" != typeof Ziggy ? Ziggy : null == globalThis ? void 0 : globalThis.Ziggy, u3.t = n({}, u3.t, { absolute: o2 }), r2) {
      if (!u3.t.routes[r2])
        throw new Error("Ziggy error: route '" + r2 + "' is not in the route list.");
      u3.i = new $(r2, u3.t.routes[r2], u3.t), u3.u = u3.l(e3);
    }
    return u3;
  }
  i2 = t4, (e2 = u2).prototype = Object.create(i2.prototype), e2.prototype.constructor = e2, o(e2, i2);
  var f2 = u2.prototype;
  return f2.toString = function() {
    var t5 = this, r2 = Object.keys(this.u).filter(function(r3) {
      return !t5.i.parameterSegments.some(function(t6) {
        return t6.name === r3;
      });
    }).filter(function(t6) {
      return "_query" !== t6;
    }).reduce(function(r3, e3) {
      var o2;
      return n({}, r3, ((o2 = {})[e3] = t5.u[e3], o2));
    }, {});
    return this.i.compile(this.u) + function(t6, r3) {
      var n2, e3 = t6, o2 = function(t7) {
        if (!t7)
          return R;
        if (null != t7.encoder && "function" != typeof t7.encoder)
          throw new TypeError("Encoder has to be a function.");
        var r4 = t7.charset || R.charset;
        if (void 0 !== t7.charset && "utf-8" !== t7.charset && "iso-8859-1" !== t7.charset)
          throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
        var n3 = l.default;
        if (void 0 !== t7.format) {
          if (!b.call(l.formatters, t7.format))
            throw new TypeError("Unknown format option provided.");
          n3 = t7.format;
        }
        var e4 = l.formatters[n3], o3 = R.filter;
        return ("function" == typeof t7.filter || m(t7.filter)) && (o3 = t7.filter), { addQueryPrefix: "boolean" == typeof t7.addQueryPrefix ? t7.addQueryPrefix : R.addQueryPrefix, allowDots: void 0 === t7.allowDots ? R.allowDots : !!t7.allowDots, charset: r4, charsetSentinel: "boolean" == typeof t7.charsetSentinel ? t7.charsetSentinel : R.charsetSentinel, delimiter: void 0 === t7.delimiter ? R.delimiter : t7.delimiter, encode: "boolean" == typeof t7.encode ? t7.encode : R.encode, encoder: "function" == typeof t7.encoder ? t7.encoder : R.encoder, encodeValuesOnly: "boolean" == typeof t7.encodeValuesOnly ? t7.encodeValuesOnly : R.encodeValuesOnly, filter: o3, format: n3, formatter: e4, serializeDate: "function" == typeof t7.serializeDate ? t7.serializeDate : R.serializeDate, skipNulls: "boolean" == typeof t7.skipNulls ? t7.skipNulls : R.skipNulls, sort: "function" == typeof t7.sort ? t7.sort : null, strictNullHandling: "boolean" == typeof t7.strictNullHandling ? t7.strictNullHandling : R.strictNullHandling };
      }(r3);
      "function" == typeof o2.filter ? e3 = (0, o2.filter)("", e3) : m(o2.filter) && (n2 = o2.filter);
      var i3 = [];
      if ("object" != typeof e3 || null === e3)
        return "";
      var u3 = h[r3 && r3.arrayFormat in h ? r3.arrayFormat : r3 && "indices" in r3 ? r3.indices ? "indices" : "repeat" : "indices"];
      n2 || (n2 = Object.keys(e3)), o2.sort && n2.sort(o2.sort);
      for (var f3 = 0; f3 < n2.length; ++f3) {
        var a2 = n2[f3];
        o2.skipNulls && null === e3[a2] || w(i3, S(e3[a2], a2, u3, o2.strictNullHandling, o2.skipNulls, o2.encode ? o2.encoder : null, o2.filter, o2.sort, o2.allowDots, o2.serializeDate, o2.format, o2.formatter, o2.encodeValuesOnly, o2.charset));
      }
      var c2 = i3.join(o2.delimiter), s2 = true === o2.addQueryPrefix ? "?" : "";
      return o2.charsetSentinel && (s2 += "iso-8859-1" === o2.charset ? "utf8=%26%2310003%3B&" : "utf8=%E2%9C%93&"), c2.length > 0 ? s2 + c2 : "";
    }(n({}, r2, this.u._query), { addQueryPrefix: true, arrayFormat: "indices", encodeValuesOnly: true, skipNulls: true, encoder: function(t6, r3) {
      return "boolean" == typeof t6 ? Number(t6) : r3(t6);
    } });
  }, f2.v = function(t5) {
    var r2 = this;
    t5 ? this.t.absolute && t5.startsWith("/") && (t5 = this.p().host + t5) : t5 = this.h();
    var e3 = {}, o2 = Object.entries(this.t.routes).find(function(n2) {
      return e3 = new $(n2[0], n2[1], r2.t).matchesUrl(t5);
    }) || [void 0, void 0];
    return n({ name: o2[0] }, e3, { route: o2[1] });
  }, f2.h = function() {
    var t5 = this.p(), r2 = t5.pathname, n2 = t5.search;
    return (this.t.absolute ? t5.host + r2 : r2.replace(this.t.url.replace(/^\w*:\/\/[^/]+/, ""), "").replace(/^\/+/, "/")) + n2;
  }, f2.current = function(t5, r2) {
    var e3 = this.v(), o2 = e3.name, i3 = e3.params, u3 = e3.query, f3 = e3.route;
    if (!t5)
      return o2;
    var a2 = new RegExp("^" + t5.replace(/\./g, "\\.").replace(/\*/g, ".*") + "$").test(o2);
    if ([null, void 0].includes(r2) || !a2)
      return a2;
    var c2 = new $(o2, f3, this.t);
    r2 = this.l(r2, c2);
    var l2 = n({}, i3, u3);
    return !(!Object.values(r2).every(function(t6) {
      return !t6;
    }) || Object.values(l2).some(function(t6) {
      return void 0 !== t6;
    })) || Object.entries(r2).every(function(t6) {
      return l2[t6[0]] == t6[1];
    });
  }, f2.p = function() {
    var t5, r2, n2, e3, o2, i3, u3 = "undefined" != typeof window ? window.location : {}, f3 = u3.host, a2 = u3.pathname, c2 = u3.search;
    return { host: null != (t5 = null == (r2 = this.t.location) ? void 0 : r2.host) ? t5 : void 0 === f3 ? "" : f3, pathname: null != (n2 = null == (e3 = this.t.location) ? void 0 : e3.pathname) ? n2 : void 0 === a2 ? "" : a2, search: null != (o2 = null == (i3 = this.t.location) ? void 0 : i3.search) ? o2 : void 0 === c2 ? "" : c2 };
  }, f2.has = function(t5) {
    return Object.keys(this.t.routes).includes(t5);
  }, f2.l = function(t5, r2) {
    var e3 = this;
    void 0 === t5 && (t5 = {}), void 0 === r2 && (r2 = this.i), t5 = ["string", "number"].includes(typeof t5) ? [t5] : t5;
    var o2 = r2.parameterSegments.filter(function(t6) {
      return !e3.t.defaults[t6.name];
    });
    if (Array.isArray(t5))
      t5 = t5.reduce(function(t6, r3, e4) {
        var i4, u3;
        return n({}, t6, o2[e4] ? ((i4 = {})[o2[e4].name] = r3, i4) : "object" == typeof r3 ? r3 : ((u3 = {})[r3] = "", u3));
      }, {});
    else if (1 === o2.length && !t5[o2[0].name] && (t5.hasOwnProperty(Object.values(r2.bindings)[0]) || t5.hasOwnProperty("id"))) {
      var i3;
      (i3 = {})[o2[0].name] = t5, t5 = i3;
    }
    return n({}, this.m(r2), this.g(t5, r2));
  }, f2.m = function(t5) {
    var r2 = this;
    return t5.parameterSegments.filter(function(t6) {
      return r2.t.defaults[t6.name];
    }).reduce(function(t6, e3, o2) {
      var i3, u3 = e3.name;
      return n({}, t6, ((i3 = {})[u3] = r2.t.defaults[u3], i3));
    }, {});
  }, f2.g = function(t5, r2) {
    var e3 = r2.bindings, o2 = r2.parameterSegments;
    return Object.entries(t5).reduce(function(t6, r3) {
      var i3, u3, f3 = r3[0], a2 = r3[1];
      if (!a2 || "object" != typeof a2 || Array.isArray(a2) || !o2.some(function(t7) {
        return t7.name === f3;
      }))
        return n({}, t6, ((u3 = {})[f3] = a2, u3));
      if (!a2.hasOwnProperty(e3[f3])) {
        if (!a2.hasOwnProperty("id"))
          throw new Error("Ziggy error: object passed as '" + f3 + "' parameter is missing route model binding key '" + e3[f3] + "'.");
        e3[f3] = "id";
      }
      return n({}, t6, ((i3 = {})[f3] = a2[e3[f3]], i3));
    }, {});
  }, f2.valueOf = function() {
    return this.toString();
  }, f2.check = function(t5) {
    return this.has(t5);
  }, r(u2, [{ key: "params", get: function() {
    var t5 = this.v();
    return n({}, t5.params, t5.query);
  } }]), u2;
}(/* @__PURE__ */ f(String)), I = { install: function(t4, r2) {
  var n2 = function(t5, n3, e2, o2) {
    return void 0 === o2 && (o2 = r2), function(t6, r3, n4, e3) {
      var o3 = new A(t6, r3, n4, e3);
      return t6 ? o3.toString() : o3;
    }(t5, n3, e2, o2);
  };
  t4.mixin({ methods: { route: n2 } }), parseInt(t4.version) > 2 && t4.provide("route", n2);
} };
const appName = ((_a = window.document.getElementsByTagName("title")[0]) == null ? void 0 : _a.innerText) || "~ xPanel ";
const icons$1 = fontawesomeSvgCore.library.add(
  freeBrandsSvgIcons.faFacebookSquare,
  freeBrandsSvgIcons.faDiscord,
  freeBrandsSvgIcons.faInstagram,
  freeSolidSvgIcons.faArrowRightFromBracket,
  freeSolidSvgIcons.faGear,
  freeSolidSvgIcons.faTrophy,
  freeSolidSvgIcons.faHouseUser,
  freeSolidSvgIcons.faEye,
  freeSolidSvgIcons.faPenToSquare,
  freeSolidSvgIcons.faTrash,
  freeSolidSvgIcons.faBoxArchive,
  freeSolidSvgIcons.faCartShopping
);
inertiaVue3.createInertiaApp({
  title: (title) => `${title} - ${appName}`,
  resolve: (name) => resolvePageComponent(
    `./Pages/${name}.vue`,
    { "./Pages/Admin/Dashboard.vue": () => Promise.resolve().then(function() {
      return Dashboard;
    }), "./Pages/API/Index.vue": () => Promise.resolve().then(function() {
      return Index$h;
    }), "./Pages/Auth/ConfirmPassword.vue": () => Promise.resolve().then(function() {
      return ConfirmPassword$1;
    }), "./Pages/Auth/ForgotPassword.vue": () => Promise.resolve().then(function() {
      return ForgotPassword$1;
    }), "./Pages/Auth/Login.vue": () => Promise.resolve().then(function() {
      return Login$1;
    }), "./Pages/Auth/Register.vue": () => Promise.resolve().then(function() {
      return Register$1;
    }), "./Pages/Auth/ResetPassword.vue": () => Promise.resolve().then(function() {
      return ResetPassword$1;
    }), "./Pages/Auth/TwoFactorChallenge.vue": () => Promise.resolve().then(function() {
      return TwoFactorChallenge$1;
    }), "./Pages/Auth/VerifyEmail.vue": () => Promise.resolve().then(function() {
      return VerifyEmail$1;
    }), "./Pages/Donations/Index.vue": () => Promise.resolve().then(function() {
      return Index$f;
    }), "./Pages/Home/Downloads.vue": () => Promise.resolve().then(function() {
      return Downloads$1;
    }), "./Pages/Home/Index.vue": () => Promise.resolve().then(function() {
      return Index$e;
    }), "./Pages/Home/Information.vue": () => Promise.resolve().then(function() {
      return Information;
    }), "./Pages/Information/MvpCards.vue": () => Promise.resolve().then(function() {
      return MvpCards;
    }), "./Pages/Information/WhoSell.vue": () => Promise.resolve().then(function() {
      return WhoSell;
    }), "./Pages/MasterAccount/Create.vue": () => Promise.resolve().then(function() {
      return Create$2;
    }), "./Pages/MasterAccount/Index.vue": () => Promise.resolve().then(function() {
      return Index$c;
    }), "./Pages/PreRegister/Index.vue": () => Promise.resolve().then(function() {
      return Index$a;
    }), "./Pages/Profile/Show.vue": () => Promise.resolve().then(function() {
      return Show$2;
    }), "./Pages/Rankings/Alchimist.vue": () => Promise.resolve().then(function() {
      return Alchimist;
    }), "./Pages/Rankings/Battleground.vue": () => Promise.resolve().then(function() {
      return Battleground;
    }), "./Pages/Rankings/Blacksmith.vue": () => Promise.resolve().then(function() {
      return Blacksmith;
    }), "./Pages/Rankings/CashPoints.vue": () => Promise.resolve().then(function() {
      return CashPoints$2;
    }), "./Pages/Rankings/Deaths.vue": () => Promise.resolve().then(function() {
      return Deaths;
    }), "./Pages/Rankings/Guild.vue": () => Promise.resolve().then(function() {
      return Guild;
    }), "./Pages/Rankings/Homunculus.vue": () => Promise.resolve().then(function() {
      return Homunculus;
    }), "./Pages/Rankings/MonsterHunter.vue": () => Promise.resolve().then(function() {
      return MonsterHunter;
    }), "./Pages/Rankings/Mvps.vue": () => Promise.resolve().then(function() {
      return Mvps;
    }), "./Pages/Rankings/Playtime.vue": () => Promise.resolve().then(function() {
      return Playtime;
    }), "./Pages/Rankings/Pvp.vue": () => Promise.resolve().then(function() {
      return Pvp;
    }), "./Pages/Rankings/Resumen.vue": () => Promise.resolve().then(function() {
      return Resumen;
    }), "./Pages/Rankings/Woe.vue": () => Promise.resolve().then(function() {
      return Woe$3;
    }), "./Pages/Rankings/WoeDamage.vue": () => Promise.resolve().then(function() {
      return WoeDamage;
    }), "./Pages/Rankings/Zeny.vue": () => Promise.resolve().then(function() {
      return Zeny;
    }), "./Pages/Transfer/Index.vue": () => Promise.resolve().then(function() {
      return Index$8;
    }), "./Pages/UserProfile/Bg.vue": () => Promise.resolve().then(function() {
      return Bg$1;
    }), "./Pages/UserProfile/Woe.vue": () => Promise.resolve().then(function() {
      return Woe$1;
    }), "./Pages/Vote4Points/Index.vue": () => Promise.resolve().then(function() {
      return Index$7;
    }), "./Pages/Wiki/Index.vue": () => Promise.resolve().then(function() {
      return Index$5;
    }), "./Pages/Wiki/Show.vue": () => Promise.resolve().then(function() {
      return Show;
    }), "./Pages/Admin/Donations/Index.vue": () => Promise.resolve().then(function() {
      return Index$4;
    }), "./Pages/Admin/GameAccounts/Index.vue": () => Promise.resolve().then(function() {
      return Index$3;
    }), "./Pages/Admin/MasterAccounts/Index.vue": () => Promise.resolve().then(function() {
      return Index$2;
    }), "./Pages/Admin/Rankings/CashPoints.vue": () => Promise.resolve().then(function() {
      return CashPoints$1;
    }), "./Pages/Admin/Wiki/Create.vue": () => Promise.resolve().then(function() {
      return Create;
    }), "./Pages/Admin/Wiki/Edit.vue": () => Promise.resolve().then(function() {
      return Edit;
    }), "./Pages/Admin/Wiki/Index.vue": () => Promise.resolve().then(function() {
      return Index;
    }), "./Pages/API/Partials/ApiTokenManager.vue": () => Promise.resolve().then(function() {
      return ApiTokenManager$1;
    }), "./Pages/Profile/Partials/DeleteUserForm.vue": () => Promise.resolve().then(function() {
      return DeleteUserForm$1;
    }), "./Pages/Profile/Partials/LogoutOtherBrowserSessionsForm.vue": () => Promise.resolve().then(function() {
      return LogoutOtherBrowserSessionsForm$1;
    }), "./Pages/Profile/Partials/TwoFactorAuthenticationForm.vue": () => Promise.resolve().then(function() {
      return TwoFactorAuthenticationForm$1;
    }), "./Pages/Profile/Partials/UpdatePasswordForm.vue": () => Promise.resolve().then(function() {
      return UpdatePasswordForm$1;
    }), "./Pages/Profile/Partials/UpdateProfileInformationForm.vue": () => Promise.resolve().then(function() {
      return UpdateProfileInformationForm$1;
    }) }
  ),
  setup({ el, app: app2, props, plugin }) {
    return vue.createApp({ render: () => vue.h(app2, props) }).use(plugin).use(icons$1).use(I, Ziggy).use(Notifications__default["default"]).component(VueCountdown__default["default"].name, VueCountdown__default["default"]).component("font-awesome-icon", vueFontawesome.FontAwesomeIcon).component("ck-editor", CKEditor__default["default"].component).use(CountryFlag__default["default"]).mount(el);
  }
});
progress.InertiaProgress.init({ color: "#20c5d4" });
var _export_sfc = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};
const _sfc_main$1G = vue.defineComponent({
  props: {
    align: {
      default: "right"
    },
    width: {
      default: "48"
    },
    contentClasses: {
      default: () => ["py-1", "bg-white"]
    }
  },
  setup() {
    let open = vue.ref(false);
    const closeOnEscape = (e2) => {
      if (open.value && e2.key === "Escape") {
        open.value = false;
      }
    };
    vue.onMounted(() => document.addEventListener("keydown", closeOnEscape));
    vue.onUnmounted(() => document.removeEventListener("keydown", closeOnEscape));
    return {
      open
    };
  },
  computed: {
    widthClass() {
      return {
        "48": "w-48"
      }[this.width.toString()];
    },
    alignmentClasses() {
      if (this.align === "left") {
        return "origin-top-left left-0";
      } else if (this.align === "right") {
        return "origin-top-right right-0";
      } else {
        return "origin-top";
      }
    }
  }
});
function _sfc_ssrRender$U(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "relative" }, _attrs))}><div>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "trigger", {}, null, _push, _parent);
  _push(`</div><div style="${serverRenderer.ssrRenderStyle(_ctx.open ? null : { display: "none" })}" class="fixed inset-0 z-40"></div><div style="${serverRenderer.ssrRenderStyle([
    _ctx.open ? null : { display: "none" },
    { "display": "none" }
  ])}" class="${serverRenderer.ssrRenderClass([[_ctx.widthClass, _ctx.alignmentClasses], "absolute z-50 mt-2 rounded-md shadow-lg"])}"><div class="${serverRenderer.ssrRenderClass([_ctx.contentClasses, "rounded-md ring-1 ring-black ring-opacity-5"])}">`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "content", {}, null, _push, _parent);
  _push(`</div></div></div>`);
}
const _sfc_setup$1G = _sfc_main$1G.setup;
_sfc_main$1G.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/Dropdown.vue");
  return _sfc_setup$1G ? _sfc_setup$1G(props, ctx) : void 0;
};
var JetDropdown = /* @__PURE__ */ _export_sfc(_sfc_main$1G, [["ssrRender", _sfc_ssrRender$U]]);
const _sfc_main$1F = vue.defineComponent({
  components: {
    Link: inertiaVue3.Link
  },
  props: ["href", "as"]
});
function _sfc_ssrRender$T(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Link = vue.resolveComponent("Link");
  _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)}>`);
  if (_ctx.as == "button") {
    _push(`<button type="submit" class="block w-full px-4 py-2 text-sm leading-5 text-gray-700 text-left hover:bg-gray-100 focus:outline-none focus:bg-gray-100 transition">`);
    serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
    _push(`</button>`);
  } else if (_ctx.as == "a") {
    _push(`<a${serverRenderer.ssrRenderAttr("href", _ctx.href)} class="block px-4 py-2 text-sm leading-5 text-gray-700 hover:bg-gray-100 focus:outline-none focus:bg-gray-100 transition">`);
    serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
    _push(`</a>`);
  } else {
    _push(serverRenderer.ssrRenderComponent(_component_Link, {
      href: _ctx.href,
      class: "block px-4 py-2 text-sm leading-5 text-gray-700 hover:bg-gray-100 focus:outline-none focus:bg-gray-100 transition"
    }, {
      default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
        if (_push2) {
          serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
        } else {
          return [
            vue.renderSlot(_ctx.$slots, "default")
          ];
        }
      }),
      _: 3
    }, _parent));
  }
  _push(`</div>`);
}
const _sfc_setup$1F = _sfc_main$1F.setup;
_sfc_main$1F.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/DropdownLink.vue");
  return _sfc_setup$1F ? _sfc_setup$1F(props, ctx) : void 0;
};
var JetDropdownLink = /* @__PURE__ */ _export_sfc(_sfc_main$1F, [["ssrRender", _sfc_ssrRender$T]]);
const _sfc_main$1E = vue.defineComponent({
  emits: ["close"],
  props: {
    show: {
      default: false
    },
    maxWidth: {
      default: "2xl"
    },
    closeable: {
      default: true
    }
  },
  watch: {
    show: {
      immediate: true,
      handler: (show) => {
        if (show) {
          document.body.style.overflow = "hidden";
        } else {
          document.body.style.overflow = null;
        }
      }
    }
  },
  setup(props, { emit }) {
    const close = () => {
      if (props.closeable) {
        emit("close");
      }
    };
    const closeOnEscape = (e2) => {
      if (e2.key === "Escape" && props.show) {
        close();
      }
    };
    vue.onMounted(() => document.addEventListener("keydown", closeOnEscape));
    vue.onUnmounted(() => {
      document.removeEventListener("keydown", closeOnEscape);
      document.body.style.overflow = null;
    });
    return {
      close
    };
  },
  computed: {
    maxWidthClass() {
      return {
        "sm": "sm:max-w-sm",
        "md": "sm:max-w-md",
        "lg": "sm:max-w-lg",
        "xl": "sm:max-w-xl",
        "2xl": "sm:max-w-2xl",
        "3xl": "sm:max-w-3xl",
        "4xl": "sm:max-w-4xl"
      }[this.maxWidth];
    }
  }
});
function _sfc_ssrRender$S(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  serverRenderer.ssrRenderTeleport(_push, (_push2) => {
    _push2(`<div style="${serverRenderer.ssrRenderStyle(_ctx.show ? null : { display: "none" })}" class="fixed inset-0 overflow-y-auto px-4 py-6 sm:px-0 z-50" scroll-region><div style="${serverRenderer.ssrRenderStyle(_ctx.show ? null : { display: "none" })}" class="fixed inset-0 transform transition-all"><div class="absolute inset-0 bg-gray-500 opacity-75"></div></div><div style="${serverRenderer.ssrRenderStyle(_ctx.show ? null : { display: "none" })}" class="${serverRenderer.ssrRenderClass([_ctx.maxWidthClass, "mb-6 bg-white rounded-lg overflow-hidden shadow-xl transform transition-all sm:w-full sm:mx-auto"])}">`);
    if (_ctx.show) {
      serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent);
    } else {
      _push2(`<!---->`);
    }
    _push2(`</div></div>`);
  }, "body", false, _parent);
}
const _sfc_setup$1E = _sfc_main$1E.setup;
_sfc_main$1E.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/Modal.vue");
  return _sfc_setup$1E ? _sfc_setup$1E(props, ctx) : void 0;
};
var Modal = /* @__PURE__ */ _export_sfc(_sfc_main$1E, [["ssrRender", _sfc_ssrRender$S]]);
const _sfc_main$1D = vue.defineComponent({
  computed: {
    errors() {
      return this.$page.props.errors;
    },
    hasErrors() {
      return Object.keys(this.errors).length > 0;
    }
  }
});
function _sfc_ssrRender$R(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  if (_ctx.hasErrors) {
    _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)}><ul class="mt-3 list-disc list-inside text-sm text-red-600"><!--[-->`);
    serverRenderer.ssrRenderList(_ctx.errors, (error, key) => {
      _push(`<li>${serverRenderer.ssrInterpolate(error)}</li>`);
    });
    _push(`<!--]--></ul></div>`);
  } else {
    _push(`<!---->`);
  }
}
const _sfc_setup$1D = _sfc_main$1D.setup;
_sfc_main$1D.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/ValidationErrors.vue");
  return _sfc_setup$1D ? _sfc_setup$1D(props, ctx) : void 0;
};
var JetValidationErrors = /* @__PURE__ */ _export_sfc(_sfc_main$1D, [["ssrRender", _sfc_ssrRender$R]]);
const _sfc_main$1C = vue.defineComponent({
  emits: ["close"],
  components: {
    Modal,
    JetValidationErrors
  },
  props: {
    show: {
      default: false
    },
    maxWidth: {
      default: "2xl"
    },
    closeable: {
      default: true
    }
  },
  methods: {
    close() {
      this.$emit("close");
    }
  }
});
function _sfc_ssrRender$Q(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_modal = vue.resolveComponent("modal");
  const _component_jet_validation_errors = vue.resolveComponent("jet-validation-errors");
  _push(serverRenderer.ssrRenderComponent(_component_modal, vue.mergeProps({
    show: _ctx.show,
    "max-width": _ctx.maxWidth,
    closeable: _ctx.closeable,
    onClose: _ctx.close
  }, _attrs), {
    default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="px-6 py-4"${_scopeId}><div class="text-lg text-black"${_scopeId}>`);
        serverRenderer.ssrRenderSlot(_ctx.$slots, "title", {}, null, _push2, _parent2, _scopeId);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_validation_errors, { class: "mb-4" }, null, _parent2, _scopeId));
        _push2(`</div><div class="mt-4 text-black"${_scopeId}>`);
        serverRenderer.ssrRenderSlot(_ctx.$slots, "content", {}, null, _push2, _parent2, _scopeId);
        _push2(`</div></div><div class="flex flex-row justify-end px-6 py-4 bg-gray-100 text-right"${_scopeId}>`);
        serverRenderer.ssrRenderSlot(_ctx.$slots, "footer", {}, null, _push2, _parent2, _scopeId);
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "px-6 py-4" }, [
            vue.createVNode("div", { class: "text-lg text-black" }, [
              vue.renderSlot(_ctx.$slots, "title"),
              vue.createVNode(_component_jet_validation_errors, { class: "mb-4" })
            ]),
            vue.createVNode("div", { class: "mt-4 text-black" }, [
              vue.renderSlot(_ctx.$slots, "content")
            ])
          ]),
          vue.createVNode("div", { class: "flex flex-row justify-end px-6 py-4 bg-gray-100 text-right" }, [
            vue.renderSlot(_ctx.$slots, "footer")
          ])
        ];
      }
    }),
    _: 3
  }, _parent));
}
const _sfc_setup$1C = _sfc_main$1C.setup;
_sfc_main$1C.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/DialogModal.vue");
  return _sfc_setup$1C ? _sfc_setup$1C(props, ctx) : void 0;
};
var JetModalDialog = /* @__PURE__ */ _export_sfc(_sfc_main$1C, [["ssrRender", _sfc_ssrRender$Q]]);
const _sfc_main$1B = vue.defineComponent({
  props: {
    type: {
      type: String,
      default: "button"
    }
  }
});
function _sfc_ssrRender$P(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<button${serverRenderer.ssrRenderAttrs(vue.mergeProps({
    type: _ctx.type,
    class: "inline-flex items-center px-4 py-2 bg-white border border-gray-300 rounded-md font-semibold text-xs text-gray-700 uppercase tracking-widest shadow-sm hover:text-gray-500 focus:outline-none focus:border-blue-300 focus:ring focus:ring-blue-200 active:text-gray-800 active:bg-gray-50 disabled:opacity-25 transition"
  }, _attrs))}>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</button>`);
}
const _sfc_setup$1B = _sfc_main$1B.setup;
_sfc_main$1B.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/SecondaryButton.vue");
  return _sfc_setup$1B ? _sfc_setup$1B(props, ctx) : void 0;
};
var JetSecondaryButton = /* @__PURE__ */ _export_sfc(_sfc_main$1B, [["ssrRender", _sfc_ssrRender$P]]);
const _sfc_main$1A = vue.defineComponent({
  props: ["value"]
});
function _sfc_ssrRender$O(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<label${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "block font-medium text-sm text-gray-700" }, _attrs))}>`);
  if (_ctx.value) {
    _push(`<span>${serverRenderer.ssrInterpolate(_ctx.value)}</span>`);
  } else {
    _push(`<span>`);
    serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
    _push(`</span>`);
  }
  _push(`</label>`);
}
const _sfc_setup$1A = _sfc_main$1A.setup;
_sfc_main$1A.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/Label.vue");
  return _sfc_setup$1A ? _sfc_setup$1A(props, ctx) : void 0;
};
var JetLabel = /* @__PURE__ */ _export_sfc(_sfc_main$1A, [["ssrRender", _sfc_ssrRender$O]]);
const _sfc_main$1z = vue.defineComponent({
  props: ["modelValue"],
  emits: ["update:modelValue"],
  methods: {
    focus() {
      this.$refs.input.focus();
    }
  }
});
function _sfc_ssrRender$N(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<input${serverRenderer.ssrRenderAttrs(vue.mergeProps({
    class: "border-gray-300 bg-gray-200 p-3 rounded-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50",
    value: _ctx.modelValue,
    ref: "input"
  }, _attrs))}>`);
}
const _sfc_setup$1z = _sfc_main$1z.setup;
_sfc_main$1z.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/Input.vue");
  return _sfc_setup$1z ? _sfc_setup$1z(props, ctx) : void 0;
};
var JetInput = /* @__PURE__ */ _export_sfc(_sfc_main$1z, [["ssrRender", _sfc_ssrRender$N]]);
const _sfc_main$1y = vue.defineComponent({
  props: {
    type: {
      type: String,
      default: "submit"
    }
  }
});
function _sfc_ssrRender$M(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<button${serverRenderer.ssrRenderAttrs(vue.mergeProps({
    type: _ctx.type,
    class: "inline-flex items-center px-4 py-2 bg-gray-800 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-gray-700 active:bg-gray-900 focus:outline-none focus:border-gray-900 focus:ring focus:ring-gray-300 disabled:opacity-25 transition"
  }, _attrs))}>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</button>`);
}
const _sfc_setup$1y = _sfc_main$1y.setup;
_sfc_main$1y.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/Button.vue");
  return _sfc_setup$1y ? _sfc_setup$1y(props, ctx) : void 0;
};
var JetButton = /* @__PURE__ */ _export_sfc(_sfc_main$1y, [["ssrRender", _sfc_ssrRender$M]]);
const _sfc_main$1x = {
  __name: "Pagination",
  __ssrInlineRender: true,
  props: {
    links: Array
  },
  setup(__props) {
    const url = (page) => {
      const queryString = window.location.search;
      const urlParams = new URLSearchParams(queryString);
      urlParams.set("page", page);
      return `${window.location.pathname}?${urlParams.toString()}`;
    };
    return (_ctx, _push, _parent, _attrs) => {
      if (__props.links.length > 3) {
        _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "text-gray-600" }, _attrs))}><div class="flex justify-center flex-wrap -mb-1 text-gray-600"><!--[-->`);
        serverRenderer.ssrRenderList(__props.links, (link, key) => {
          _push(`<!--[-->`);
          if (link.url === null) {
            _push(`<div class="mb-1 mr-1 px-4 py-3 text-gray-400 text-sm leading-4 border rounded">${link.label}</div>`);
          } else {
            _push(serverRenderer.ssrRenderComponent(vue.unref(inertiaVue3.Link), {
              key: `link-${key}`,
              class: ["mb-1 mr-1 px-4 py-3 focus:text-indigo-500 text-sm leading-4 hover:bg-gray-300 text-gray-900 border focus:border-indigo-500 rounded", { "bg-gray-300": link.active }],
              href: url(link.label)
            }, null, _parent));
          }
          _push(`<!--]-->`);
        });
        _push(`<!--]--></div></div>`);
      } else {
        _push(`<!---->`);
      }
    };
  }
};
const _sfc_setup$1x = _sfc_main$1x.setup;
_sfc_main$1x.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Pagination.vue");
  return _sfc_setup$1x ? _sfc_setup$1x(props, ctx) : void 0;
};
chart_js.Chart.register(
  chart_js.CategoryScale,
  chart_js.LinearScale,
  chart_js.PointElement,
  chart_js.LineElement,
  chart_js.Title,
  chart_js.Tooltip,
  chart_js.Legend
);
const _sfc_main$1w = {
  name: "BarChart",
  components: { Line: vueChartjs.Line },
  data() {
    return {
      chartData: {
        labels: ["January", "February", "March"],
        datasets: [{ data: [40, 20, 12] }]
      },
      chartOptions: {
        responsive: true
      }
    };
  }
};
const _sfc_setup$1w = _sfc_main$1w.setup;
_sfc_main$1w.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Chart.vue");
  return _sfc_setup$1w ? _sfc_setup$1w(props, ctx) : void 0;
};
const _sfc_main$1v = {
  __name: "Alert",
  __ssrInlineRender: true,
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<!--[-->`);
      _push(serverRenderer.ssrRenderComponent(vue.unref(Notifications.NotificationGroup), { group: "success" }, {
        default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="fixed inset-0 flex items-start justify-end p-6 px-4 py-6 pointer-events-none"${_scopeId}><div class="w-full max-w-sm"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(vue.unref(Notifications.Notification), {
              enter: "ease-out duration-300 transition",
              "enter-from": "translate-y-2 opacity-0 sm:translate-y-0 sm:translate-x-4",
              "enter-to": "translate-y-0 opacity-100 sm:translate-x-0",
              leave: "transition ease-in duration-500",
              "leave-from": "opacity-100",
              "leave-to": "opacity-0",
              move: "transition duration-500",
              "move-delay": "delay-300"
            }, {
              default: vue.withCtx(({ notifications, close }, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<!--[-->`);
                  serverRenderer.ssrRenderList(notifications, (notification) => {
                    _push3(`<div class="w-full max-w-sm mt-4 overflow-hidden bg-white rounded-lg shadow-lg pointer-events-auto ring-1 ring-black ring-opacity-5"${_scopeId2}><div class="p-4"${_scopeId2}><div class="flex items-start"${_scopeId2}><div class="shrink-0"${_scopeId2}><svg class="w-6 h-6 text-green-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true"${_scopeId2}><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"${_scopeId2}></path></svg></div><div class="ml-3 w-0 flex-1 pt-0.5"${_scopeId2}><p class="font-semibold text-gray-800"${_scopeId2}>${serverRenderer.ssrInterpolate(notification.title)}</p><p class="text-sm font-semibold text-gray-500"${_scopeId2}>${serverRenderer.ssrInterpolate(notification.text)}</p></div><div class="flex ml-4 shrink-0"${_scopeId2}><button class="inline-flex text-gray-400 bg-white rounded-md hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400"${_scopeId2}><span class="sr-only"${_scopeId2}>Close</span><svg class="w-5 h-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true"${_scopeId2}><path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"${_scopeId2}></path></svg></button></div></div></div></div>`);
                  });
                  _push3(`<!--]-->`);
                } else {
                  return [
                    (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(notifications, (notification) => {
                      return vue.openBlock(), vue.createBlock("div", {
                        key: notification.id,
                        class: "w-full max-w-sm mt-4 overflow-hidden bg-white rounded-lg shadow-lg pointer-events-auto ring-1 ring-black ring-opacity-5"
                      }, [
                        vue.createVNode("div", { class: "p-4" }, [
                          vue.createVNode("div", { class: "flex items-start" }, [
                            vue.createVNode("div", { class: "shrink-0" }, [
                              (vue.openBlock(), vue.createBlock("svg", {
                                class: "w-6 h-6 text-green-400",
                                xmlns: "http://www.w3.org/2000/svg",
                                fill: "none",
                                viewBox: "0 0 24 24",
                                stroke: "currentColor",
                                "aria-hidden": "true"
                              }, [
                                vue.createVNode("path", {
                                  "stroke-linecap": "round",
                                  "stroke-linejoin": "round",
                                  "stroke-width": "2",
                                  d: "M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"
                                })
                              ]))
                            ]),
                            vue.createVNode("div", { class: "ml-3 w-0 flex-1 pt-0.5" }, [
                              vue.createVNode("p", { class: "font-semibold text-gray-800" }, vue.toDisplayString(notification.title), 1),
                              vue.createVNode("p", { class: "text-sm font-semibold text-gray-500" }, vue.toDisplayString(notification.text), 1)
                            ]),
                            vue.createVNode("div", { class: "flex ml-4 shrink-0" }, [
                              vue.createVNode("button", {
                                class: "inline-flex text-gray-400 bg-white rounded-md hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400",
                                onClick: ($event) => close(notification.id)
                              }, [
                                vue.createVNode("span", { class: "sr-only" }, "Close"),
                                (vue.openBlock(), vue.createBlock("svg", {
                                  class: "w-5 h-5",
                                  xmlns: "http://www.w3.org/2000/svg",
                                  viewBox: "0 0 20 20",
                                  fill: "currentColor",
                                  "aria-hidden": "true"
                                }, [
                                  vue.createVNode("path", {
                                    "fill-rule": "evenodd",
                                    d: "M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z",
                                    "clip-rule": "evenodd"
                                  })
                                ]))
                              ], 8, ["onClick"])
                            ])
                          ])
                        ])
                      ]);
                    }), 128))
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div></div>`);
          } else {
            return [
              vue.createVNode("div", { class: "fixed inset-0 flex items-start justify-end p-6 px-4 py-6 pointer-events-none" }, [
                vue.createVNode("div", { class: "w-full max-w-sm" }, [
                  vue.createVNode(vue.unref(Notifications.Notification), {
                    enter: "ease-out duration-300 transition",
                    "enter-from": "translate-y-2 opacity-0 sm:translate-y-0 sm:translate-x-4",
                    "enter-to": "translate-y-0 opacity-100 sm:translate-x-0",
                    leave: "transition ease-in duration-500",
                    "leave-from": "opacity-100",
                    "leave-to": "opacity-0",
                    move: "transition duration-500",
                    "move-delay": "delay-300"
                  }, {
                    default: vue.withCtx(({ notifications, close }) => [
                      (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(notifications, (notification) => {
                        return vue.openBlock(), vue.createBlock("div", {
                          key: notification.id,
                          class: "w-full max-w-sm mt-4 overflow-hidden bg-white rounded-lg shadow-lg pointer-events-auto ring-1 ring-black ring-opacity-5"
                        }, [
                          vue.createVNode("div", { class: "p-4" }, [
                            vue.createVNode("div", { class: "flex items-start" }, [
                              vue.createVNode("div", { class: "shrink-0" }, [
                                (vue.openBlock(), vue.createBlock("svg", {
                                  class: "w-6 h-6 text-green-400",
                                  xmlns: "http://www.w3.org/2000/svg",
                                  fill: "none",
                                  viewBox: "0 0 24 24",
                                  stroke: "currentColor",
                                  "aria-hidden": "true"
                                }, [
                                  vue.createVNode("path", {
                                    "stroke-linecap": "round",
                                    "stroke-linejoin": "round",
                                    "stroke-width": "2",
                                    d: "M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"
                                  })
                                ]))
                              ]),
                              vue.createVNode("div", { class: "ml-3 w-0 flex-1 pt-0.5" }, [
                                vue.createVNode("p", { class: "font-semibold text-gray-800" }, vue.toDisplayString(notification.title), 1),
                                vue.createVNode("p", { class: "text-sm font-semibold text-gray-500" }, vue.toDisplayString(notification.text), 1)
                              ]),
                              vue.createVNode("div", { class: "flex ml-4 shrink-0" }, [
                                vue.createVNode("button", {
                                  class: "inline-flex text-gray-400 bg-white rounded-md hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400",
                                  onClick: ($event) => close(notification.id)
                                }, [
                                  vue.createVNode("span", { class: "sr-only" }, "Close"),
                                  (vue.openBlock(), vue.createBlock("svg", {
                                    class: "w-5 h-5",
                                    xmlns: "http://www.w3.org/2000/svg",
                                    viewBox: "0 0 20 20",
                                    fill: "currentColor",
                                    "aria-hidden": "true"
                                  }, [
                                    vue.createVNode("path", {
                                      "fill-rule": "evenodd",
                                      d: "M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z",
                                      "clip-rule": "evenodd"
                                    })
                                  ]))
                                ], 8, ["onClick"])
                              ])
                            ])
                          ])
                        ]);
                      }), 128))
                    ]),
                    _: 1
                  })
                ])
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(serverRenderer.ssrRenderComponent(vue.unref(Notifications.NotificationGroup), {
        group: "error",
        position: "bottom"
      }, {
        default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="fixed inset-x-0 bottom-0 flex items-start justify-end p-6 px-4 py-6 pointer-events-none"${_scopeId}><div class="w-full max-w-sm"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(vue.unref(Notifications.Notification), {
              enter: "ease-out duration-300 transition",
              "enter-from": "translate-y-2 opacity-0 sm:translate-y-0 sm:translate-x-4",
              "enter-to": "translate-y-0 opacity-100 sm:translate-x-0",
              leave: "transition ease-in duration-500",
              "leave-from": "opacity-100",
              "leave-to": "opacity-0",
              move: "transition duration-500",
              "move-delay": "delay-300"
            }, {
              default: vue.withCtx(({ notifications }, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<!--[-->`);
                  serverRenderer.ssrRenderList(notifications, (notification) => {
                    _push3(`<div class="flex w-full max-w-sm mx-auto mt-4 overflow-hidden bg-white rounded-lg shadow-md"${_scopeId2}><div class="flex items-center justify-center w-12 bg-red-500"${_scopeId2}><svg class="w-6 h-6 text-white fill-current" viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg"${_scopeId2}><path d="M20 3.36667C10.8167 3.36667 3.3667 10.8167 3.3667 20C3.3667 29.1833 10.8167 36.6333 20 36.6333C29.1834 36.6333 36.6334 29.1833 36.6334 20C36.6334 10.8167 29.1834 3.36667 20 3.36667ZM19.1334 33.3333V22.9H13.3334L21.6667 6.66667V17.1H27.25L19.1334 33.3333Z"${_scopeId2}></path></svg></div><div class="px-4 py-2 -mx-3"${_scopeId2}><div class="mx-3"${_scopeId2}><span class="font-semibold text-red-500"${_scopeId2}>${serverRenderer.ssrInterpolate(notification.title)}</span><p class="text-sm text-gray-600"${_scopeId2}>${serverRenderer.ssrInterpolate(notification.text)}</p></div></div></div>`);
                  });
                  _push3(`<!--]-->`);
                } else {
                  return [
                    (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(notifications, (notification) => {
                      return vue.openBlock(), vue.createBlock("div", {
                        key: notification.id,
                        class: "flex w-full max-w-sm mx-auto mt-4 overflow-hidden bg-white rounded-lg shadow-md"
                      }, [
                        vue.createVNode("div", { class: "flex items-center justify-center w-12 bg-red-500" }, [
                          (vue.openBlock(), vue.createBlock("svg", {
                            class: "w-6 h-6 text-white fill-current",
                            viewBox: "0 0 40 40",
                            xmlns: "http://www.w3.org/2000/svg"
                          }, [
                            vue.createVNode("path", { d: "M20 3.36667C10.8167 3.36667 3.3667 10.8167 3.3667 20C3.3667 29.1833 10.8167 36.6333 20 36.6333C29.1834 36.6333 36.6334 29.1833 36.6334 20C36.6334 10.8167 29.1834 3.36667 20 3.36667ZM19.1334 33.3333V22.9H13.3334L21.6667 6.66667V17.1H27.25L19.1334 33.3333Z" })
                          ]))
                        ]),
                        vue.createVNode("div", { class: "px-4 py-2 -mx-3" }, [
                          vue.createVNode("div", { class: "mx-3" }, [
                            vue.createVNode("span", { class: "font-semibold text-red-500" }, vue.toDisplayString(notification.title), 1),
                            vue.createVNode("p", { class: "text-sm text-gray-600" }, vue.toDisplayString(notification.text), 1)
                          ])
                        ])
                      ]);
                    }), 128))
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div></div>`);
          } else {
            return [
              vue.createVNode("div", { class: "fixed inset-x-0 bottom-0 flex items-start justify-end p-6 px-4 py-6 pointer-events-none" }, [
                vue.createVNode("div", { class: "w-full max-w-sm" }, [
                  vue.createVNode(vue.unref(Notifications.Notification), {
                    enter: "ease-out duration-300 transition",
                    "enter-from": "translate-y-2 opacity-0 sm:translate-y-0 sm:translate-x-4",
                    "enter-to": "translate-y-0 opacity-100 sm:translate-x-0",
                    leave: "transition ease-in duration-500",
                    "leave-from": "opacity-100",
                    "leave-to": "opacity-0",
                    move: "transition duration-500",
                    "move-delay": "delay-300"
                  }, {
                    default: vue.withCtx(({ notifications }) => [
                      (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(notifications, (notification) => {
                        return vue.openBlock(), vue.createBlock("div", {
                          key: notification.id,
                          class: "flex w-full max-w-sm mx-auto mt-4 overflow-hidden bg-white rounded-lg shadow-md"
                        }, [
                          vue.createVNode("div", { class: "flex items-center justify-center w-12 bg-red-500" }, [
                            (vue.openBlock(), vue.createBlock("svg", {
                              class: "w-6 h-6 text-white fill-current",
                              viewBox: "0 0 40 40",
                              xmlns: "http://www.w3.org/2000/svg"
                            }, [
                              vue.createVNode("path", { d: "M20 3.36667C10.8167 3.36667 3.3667 10.8167 3.3667 20C3.3667 29.1833 10.8167 36.6333 20 36.6333C29.1834 36.6333 36.6334 29.1833 36.6334 20C36.6334 10.8167 29.1834 3.36667 20 3.36667ZM19.1334 33.3333V22.9H13.3334L21.6667 6.66667V17.1H27.25L19.1334 33.3333Z" })
                            ]))
                          ]),
                          vue.createVNode("div", { class: "px-4 py-2 -mx-3" }, [
                            vue.createVNode("div", { class: "mx-3" }, [
                              vue.createVNode("span", { class: "font-semibold text-red-500" }, vue.toDisplayString(notification.title), 1),
                              vue.createVNode("p", { class: "text-sm text-gray-600" }, vue.toDisplayString(notification.text), 1)
                            ])
                          ])
                        ]);
                      }), 128))
                    ]),
                    _: 1
                  })
                ])
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<!--]-->`);
    };
  }
};
const _sfc_setup$1v = _sfc_main$1v.setup;
_sfc_main$1v.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Alert.vue");
  return _sfc_setup$1v ? _sfc_setup$1v(props, ctx) : void 0;
};
const _sfc_main$1u = {
  __name: "AdminLayout",
  __ssrInlineRender: true,
  setup(__props) {
    vue.onMounted(() => {
      get_admin_data();
    });
    const general_info = vue.reactive({
      total_donations: 0,
      new_users: 0,
      total_users: 0,
      peak_online: 0
    });
    function get_admin_data() {
      axios.get("/api/admin_data").then((response) => {
        stats[0].stat = response.data.total_before_tax;
        stats[1].stat = response.data.new_users;
        stats[3].stat = response.data.peak_online;
      });
    }
    const navigation = [
      { name: "Dashboard", href: route("admin.dashboard"), icon: outline.HomeIcon, current: true },
      { name: "Donations", href: route("admin.donations"), icon: outline.BanknotesIcon, current: false },
      { name: "Game Accounts", href: route("admin.game_accounts"), icon: outline.UsersIcon, current: false },
      { name: "Master Accounts", href: "#", icon: outline.UserGroupIcon, current: false },
      { name: "Logs", href: "#", icon: outline.FolderOpenIcon, current: false },
      { name: "Reports", href: "#", icon: outline.ChartPieIcon, current: false },
      { name: "Wiki", href: route("admin.wiki.index"), icon: outline.ChartPieIcon, current: false }
    ];
    const teams = [
      { id: 1, name: "Send RODEX", href: "#", initial: "H", current: false },
      { id: 2, name: "Gepard Ban", href: "#", initial: "T", current: false },
      { id: 3, name: "Workcation", href: "#", initial: "W", current: false }
    ];
    const userNavigation = [
      { name: "Your profile", href: "#" },
      { name: "Sign out", href: route("logout") }
    ];
    const sidebarOpen = vue.ref(false);
    const stats = vue.reactive([
      {
        name: "Total Donations",
        stat: general_info.total_before_tax,
        previousStat: "70,946",
        change: "12%",
        changeType: "increase"
      },
      {
        name: "New Users",
        stat: "58.16%",
        previousStat: "56.14%",
        change: "2.02%",
        changeType: "increase"
      },
      {
        name: "Peak Online",
        stat: general_info.peak_online,
        previousStat: "28.62%",
        change: "4.05%",
        changeType: "decrease"
      }
    ]);
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)}>`);
      _push(serverRenderer.ssrRenderComponent(vue.unref(vue$1.TransitionRoot), {
        as: "template",
        show: sidebarOpen.value
      }, {
        default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(vue.unref(vue$1.Dialog), {
              as: "div",
              class: "relative z-50 lg:hidden",
              onClose: ($event) => sidebarOpen.value = false
            }, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(vue.unref(vue$1.TransitionChild), {
                    as: "template",
                    enter: "transition-opacity ease-linear duration-300",
                    "enter-from": "opacity-0",
                    "enter-to": "opacity-100",
                    leave: "transition-opacity ease-linear duration-300",
                    "leave-from": "opacity-100",
                    "leave-to": "opacity-0"
                  }, {
                    default: vue.withCtx((_4, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`<div class="fixed inset-0 bg-gray-900/80"${_scopeId3}></div>`);
                      } else {
                        return [
                          vue.createVNode("div", { class: "fixed inset-0 bg-gray-900/80" })
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(`<div class="fixed inset-0 flex"${_scopeId2}>`);
                  _push3(serverRenderer.ssrRenderComponent(vue.unref(vue$1.TransitionChild), {
                    as: "template",
                    enter: "transition ease-in-out duration-300 transform",
                    "enter-from": "-translate-x-full",
                    "enter-to": "translate-x-0",
                    leave: "transition ease-in-out duration-300 transform",
                    "leave-from": "translate-x-0",
                    "leave-to": "-translate-x-full"
                  }, {
                    default: vue.withCtx((_4, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(serverRenderer.ssrRenderComponent(vue.unref(vue$1.DialogPanel), { class: "relative mr-16 flex w-full max-w-xs flex-1" }, {
                          default: vue.withCtx((_5, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(serverRenderer.ssrRenderComponent(vue.unref(vue$1.TransitionChild), {
                                as: "template",
                                enter: "ease-in-out duration-300",
                                "enter-from": "opacity-0",
                                "enter-to": "opacity-100",
                                leave: "ease-in-out duration-300",
                                "leave-from": "opacity-100",
                                "leave-to": "opacity-0"
                              }, {
                                default: vue.withCtx((_6, _push6, _parent6, _scopeId5) => {
                                  if (_push6) {
                                    _push6(`<div class="absolute left-full top-0 flex w-16 justify-center pt-5"${_scopeId5}><button type="button" class="-m-2.5 p-2.5"${_scopeId5}><span class="sr-only"${_scopeId5}>Close sidebar</span>`);
                                    _push6(serverRenderer.ssrRenderComponent(vue.unref(outline.XMarkIcon), {
                                      class: "h-6 w-6 text-white",
                                      "aria-hidden": "true"
                                    }, null, _parent6, _scopeId5));
                                    _push6(`</button></div>`);
                                  } else {
                                    return [
                                      vue.createVNode("div", { class: "absolute left-full top-0 flex w-16 justify-center pt-5" }, [
                                        vue.createVNode("button", {
                                          type: "button",
                                          class: "-m-2.5 p-2.5",
                                          onClick: ($event) => sidebarOpen.value = false
                                        }, [
                                          vue.createVNode("span", { class: "sr-only" }, "Close sidebar"),
                                          vue.createVNode(vue.unref(outline.XMarkIcon), {
                                            class: "h-6 w-6 text-white",
                                            "aria-hidden": "true"
                                          })
                                        ], 8, ["onClick"])
                                      ])
                                    ];
                                  }
                                }),
                                _: 1
                              }, _parent5, _scopeId4));
                              _push5(`<div class="flex grow flex-col gap-y-5 overflow-y-auto bg-gray-900 px-6 pb-4 ring-1 ring-white/10"${_scopeId4}><div class="flex h-16 shrink-0 items-center"${_scopeId4}><img class="h-8 w-auto" src="https://tailwindui.com/img/logos/mark.svg?color=indigo&amp;shade=500" alt="Your Company"${_scopeId4}></div><nav class="flex flex-1 flex-col"${_scopeId4}><ul role="list" class="flex flex-1 flex-col gap-y-7"${_scopeId4}><li${_scopeId4}><ul role="list" class="-mx-2 space-y-1"${_scopeId4}><!--[-->`);
                              serverRenderer.ssrRenderList(navigation, (item) => {
                                _push5(`<li${_scopeId4}><a${serverRenderer.ssrRenderAttr("href", item.href)} class="${serverRenderer.ssrRenderClass([
                                  item.current ? "bg-gray-800 text-white" : "text-gray-400 hover:text-white hover:bg-gray-800",
                                  "group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold"
                                ])}"${_scopeId4}>`);
                                serverRenderer.ssrRenderVNode(_push5, vue.createVNode(vue.resolveDynamicComponent(item.icon), {
                                  class: "h-6 w-6 shrink-0",
                                  "aria-hidden": "true"
                                }, null), _parent5, _scopeId4);
                                _push5(` ${serverRenderer.ssrInterpolate(item.name)}</a></li>`);
                              });
                              _push5(`<!--]--></ul></li><li${_scopeId4}><div class="text-xs font-semibold leading-6 text-gray-400"${_scopeId4}> Actions </div><ul role="list" class="-mx-2 mt-2 space-y-1"${_scopeId4}><!--[-->`);
                              serverRenderer.ssrRenderList(teams, (team) => {
                                _push5(`<li${_scopeId4}><a${serverRenderer.ssrRenderAttr("href", team.href)} class="${serverRenderer.ssrRenderClass([
                                  team.current ? "bg-gray-800 text-white" : "text-gray-400 hover:text-white hover:bg-gray-800",
                                  "group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold"
                                ])}"${_scopeId4}><span class="flex h-6 w-6 shrink-0 items-center justify-center rounded-lg border border-gray-700 bg-gray-800 text-[0.625rem] font-medium text-gray-400 group-hover:text-white"${_scopeId4}>${serverRenderer.ssrInterpolate(team.initial)}</span><span class="truncate"${_scopeId4}>${serverRenderer.ssrInterpolate(team.name)}</span></a></li>`);
                              });
                              _push5(`<!--]--></ul></li><li class="mt-auto"${_scopeId4}><a href="#" class="group -mx-2 flex gap-x-3 rounded-md p-2 text-sm font-semibold leading-6 text-gray-400 hover:bg-gray-800 hover:text-white"${_scopeId4}>`);
                              _push5(serverRenderer.ssrRenderComponent(vue.unref(outline.Cog6ToothIcon), {
                                class: "h-6 w-6 shrink-0",
                                "aria-hidden": "true"
                              }, null, _parent5, _scopeId4));
                              _push5(` Settings </a></li></ul></nav></div>`);
                            } else {
                              return [
                                vue.createVNode(vue.unref(vue$1.TransitionChild), {
                                  as: "template",
                                  enter: "ease-in-out duration-300",
                                  "enter-from": "opacity-0",
                                  "enter-to": "opacity-100",
                                  leave: "ease-in-out duration-300",
                                  "leave-from": "opacity-100",
                                  "leave-to": "opacity-0"
                                }, {
                                  default: vue.withCtx(() => [
                                    vue.createVNode("div", { class: "absolute left-full top-0 flex w-16 justify-center pt-5" }, [
                                      vue.createVNode("button", {
                                        type: "button",
                                        class: "-m-2.5 p-2.5",
                                        onClick: ($event) => sidebarOpen.value = false
                                      }, [
                                        vue.createVNode("span", { class: "sr-only" }, "Close sidebar"),
                                        vue.createVNode(vue.unref(outline.XMarkIcon), {
                                          class: "h-6 w-6 text-white",
                                          "aria-hidden": "true"
                                        })
                                      ], 8, ["onClick"])
                                    ])
                                  ]),
                                  _: 1
                                }),
                                vue.createVNode("div", { class: "flex grow flex-col gap-y-5 overflow-y-auto bg-gray-900 px-6 pb-4 ring-1 ring-white/10" }, [
                                  vue.createVNode("div", { class: "flex h-16 shrink-0 items-center" }, [
                                    vue.createVNode("img", {
                                      class: "h-8 w-auto",
                                      src: "https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=500",
                                      alt: "Your Company"
                                    })
                                  ]),
                                  vue.createVNode("nav", { class: "flex flex-1 flex-col" }, [
                                    vue.createVNode("ul", {
                                      role: "list",
                                      class: "flex flex-1 flex-col gap-y-7"
                                    }, [
                                      vue.createVNode("li", null, [
                                        vue.createVNode("ul", {
                                          role: "list",
                                          class: "-mx-2 space-y-1"
                                        }, [
                                          (vue.openBlock(), vue.createBlock(vue.Fragment, null, vue.renderList(navigation, (item) => {
                                            return vue.createVNode("li", {
                                              key: item.name
                                            }, [
                                              vue.createVNode("a", {
                                                href: item.href,
                                                class: [
                                                  item.current ? "bg-gray-800 text-white" : "text-gray-400 hover:text-white hover:bg-gray-800",
                                                  "group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold"
                                                ]
                                              }, [
                                                (vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(item.icon), {
                                                  class: "h-6 w-6 shrink-0",
                                                  "aria-hidden": "true"
                                                })),
                                                vue.createTextVNode(" " + vue.toDisplayString(item.name), 1)
                                              ], 10, ["href"])
                                            ]);
                                          }), 64))
                                        ])
                                      ]),
                                      vue.createVNode("li", null, [
                                        vue.createVNode("div", { class: "text-xs font-semibold leading-6 text-gray-400" }, " Actions "),
                                        vue.createVNode("ul", {
                                          role: "list",
                                          class: "-mx-2 mt-2 space-y-1"
                                        }, [
                                          (vue.openBlock(), vue.createBlock(vue.Fragment, null, vue.renderList(teams, (team) => {
                                            return vue.createVNode("li", {
                                              key: team.name
                                            }, [
                                              vue.createVNode("a", {
                                                href: team.href,
                                                class: [
                                                  team.current ? "bg-gray-800 text-white" : "text-gray-400 hover:text-white hover:bg-gray-800",
                                                  "group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold"
                                                ]
                                              }, [
                                                vue.createVNode("span", { class: "flex h-6 w-6 shrink-0 items-center justify-center rounded-lg border border-gray-700 bg-gray-800 text-[0.625rem] font-medium text-gray-400 group-hover:text-white" }, vue.toDisplayString(team.initial), 1),
                                                vue.createVNode("span", { class: "truncate" }, vue.toDisplayString(team.name), 1)
                                              ], 10, ["href"])
                                            ]);
                                          }), 64))
                                        ])
                                      ]),
                                      vue.createVNode("li", { class: "mt-auto" }, [
                                        vue.createVNode("a", {
                                          href: "#",
                                          class: "group -mx-2 flex gap-x-3 rounded-md p-2 text-sm font-semibold leading-6 text-gray-400 hover:bg-gray-800 hover:text-white"
                                        }, [
                                          vue.createVNode(vue.unref(outline.Cog6ToothIcon), {
                                            class: "h-6 w-6 shrink-0",
                                            "aria-hidden": "true"
                                          }),
                                          vue.createTextVNode(" Settings ")
                                        ])
                                      ])
                                    ])
                                  ])
                                ])
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                      } else {
                        return [
                          vue.createVNode(vue.unref(vue$1.DialogPanel), { class: "relative mr-16 flex w-full max-w-xs flex-1" }, {
                            default: vue.withCtx(() => [
                              vue.createVNode(vue.unref(vue$1.TransitionChild), {
                                as: "template",
                                enter: "ease-in-out duration-300",
                                "enter-from": "opacity-0",
                                "enter-to": "opacity-100",
                                leave: "ease-in-out duration-300",
                                "leave-from": "opacity-100",
                                "leave-to": "opacity-0"
                              }, {
                                default: vue.withCtx(() => [
                                  vue.createVNode("div", { class: "absolute left-full top-0 flex w-16 justify-center pt-5" }, [
                                    vue.createVNode("button", {
                                      type: "button",
                                      class: "-m-2.5 p-2.5",
                                      onClick: ($event) => sidebarOpen.value = false
                                    }, [
                                      vue.createVNode("span", { class: "sr-only" }, "Close sidebar"),
                                      vue.createVNode(vue.unref(outline.XMarkIcon), {
                                        class: "h-6 w-6 text-white",
                                        "aria-hidden": "true"
                                      })
                                    ], 8, ["onClick"])
                                  ])
                                ]),
                                _: 1
                              }),
                              vue.createVNode("div", { class: "flex grow flex-col gap-y-5 overflow-y-auto bg-gray-900 px-6 pb-4 ring-1 ring-white/10" }, [
                                vue.createVNode("div", { class: "flex h-16 shrink-0 items-center" }, [
                                  vue.createVNode("img", {
                                    class: "h-8 w-auto",
                                    src: "https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=500",
                                    alt: "Your Company"
                                  })
                                ]),
                                vue.createVNode("nav", { class: "flex flex-1 flex-col" }, [
                                  vue.createVNode("ul", {
                                    role: "list",
                                    class: "flex flex-1 flex-col gap-y-7"
                                  }, [
                                    vue.createVNode("li", null, [
                                      vue.createVNode("ul", {
                                        role: "list",
                                        class: "-mx-2 space-y-1"
                                      }, [
                                        (vue.openBlock(), vue.createBlock(vue.Fragment, null, vue.renderList(navigation, (item) => {
                                          return vue.createVNode("li", {
                                            key: item.name
                                          }, [
                                            vue.createVNode("a", {
                                              href: item.href,
                                              class: [
                                                item.current ? "bg-gray-800 text-white" : "text-gray-400 hover:text-white hover:bg-gray-800",
                                                "group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold"
                                              ]
                                            }, [
                                              (vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(item.icon), {
                                                class: "h-6 w-6 shrink-0",
                                                "aria-hidden": "true"
                                              })),
                                              vue.createTextVNode(" " + vue.toDisplayString(item.name), 1)
                                            ], 10, ["href"])
                                          ]);
                                        }), 64))
                                      ])
                                    ]),
                                    vue.createVNode("li", null, [
                                      vue.createVNode("div", { class: "text-xs font-semibold leading-6 text-gray-400" }, " Actions "),
                                      vue.createVNode("ul", {
                                        role: "list",
                                        class: "-mx-2 mt-2 space-y-1"
                                      }, [
                                        (vue.openBlock(), vue.createBlock(vue.Fragment, null, vue.renderList(teams, (team) => {
                                          return vue.createVNode("li", {
                                            key: team.name
                                          }, [
                                            vue.createVNode("a", {
                                              href: team.href,
                                              class: [
                                                team.current ? "bg-gray-800 text-white" : "text-gray-400 hover:text-white hover:bg-gray-800",
                                                "group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold"
                                              ]
                                            }, [
                                              vue.createVNode("span", { class: "flex h-6 w-6 shrink-0 items-center justify-center rounded-lg border border-gray-700 bg-gray-800 text-[0.625rem] font-medium text-gray-400 group-hover:text-white" }, vue.toDisplayString(team.initial), 1),
                                              vue.createVNode("span", { class: "truncate" }, vue.toDisplayString(team.name), 1)
                                            ], 10, ["href"])
                                          ]);
                                        }), 64))
                                      ])
                                    ]),
                                    vue.createVNode("li", { class: "mt-auto" }, [
                                      vue.createVNode("a", {
                                        href: "#",
                                        class: "group -mx-2 flex gap-x-3 rounded-md p-2 text-sm font-semibold leading-6 text-gray-400 hover:bg-gray-800 hover:text-white"
                                      }, [
                                        vue.createVNode(vue.unref(outline.Cog6ToothIcon), {
                                          class: "h-6 w-6 shrink-0",
                                          "aria-hidden": "true"
                                        }),
                                        vue.createTextVNode(" Settings ")
                                      ])
                                    ])
                                  ])
                                ])
                              ])
                            ]),
                            _: 1
                          })
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(`</div>`);
                } else {
                  return [
                    vue.createVNode(vue.unref(vue$1.TransitionChild), {
                      as: "template",
                      enter: "transition-opacity ease-linear duration-300",
                      "enter-from": "opacity-0",
                      "enter-to": "opacity-100",
                      leave: "transition-opacity ease-linear duration-300",
                      "leave-from": "opacity-100",
                      "leave-to": "opacity-0"
                    }, {
                      default: vue.withCtx(() => [
                        vue.createVNode("div", { class: "fixed inset-0 bg-gray-900/80" })
                      ]),
                      _: 1
                    }),
                    vue.createVNode("div", { class: "fixed inset-0 flex" }, [
                      vue.createVNode(vue.unref(vue$1.TransitionChild), {
                        as: "template",
                        enter: "transition ease-in-out duration-300 transform",
                        "enter-from": "-translate-x-full",
                        "enter-to": "translate-x-0",
                        leave: "transition ease-in-out duration-300 transform",
                        "leave-from": "translate-x-0",
                        "leave-to": "-translate-x-full"
                      }, {
                        default: vue.withCtx(() => [
                          vue.createVNode(vue.unref(vue$1.DialogPanel), { class: "relative mr-16 flex w-full max-w-xs flex-1" }, {
                            default: vue.withCtx(() => [
                              vue.createVNode(vue.unref(vue$1.TransitionChild), {
                                as: "template",
                                enter: "ease-in-out duration-300",
                                "enter-from": "opacity-0",
                                "enter-to": "opacity-100",
                                leave: "ease-in-out duration-300",
                                "leave-from": "opacity-100",
                                "leave-to": "opacity-0"
                              }, {
                                default: vue.withCtx(() => [
                                  vue.createVNode("div", { class: "absolute left-full top-0 flex w-16 justify-center pt-5" }, [
                                    vue.createVNode("button", {
                                      type: "button",
                                      class: "-m-2.5 p-2.5",
                                      onClick: ($event) => sidebarOpen.value = false
                                    }, [
                                      vue.createVNode("span", { class: "sr-only" }, "Close sidebar"),
                                      vue.createVNode(vue.unref(outline.XMarkIcon), {
                                        class: "h-6 w-6 text-white",
                                        "aria-hidden": "true"
                                      })
                                    ], 8, ["onClick"])
                                  ])
                                ]),
                                _: 1
                              }),
                              vue.createVNode("div", { class: "flex grow flex-col gap-y-5 overflow-y-auto bg-gray-900 px-6 pb-4 ring-1 ring-white/10" }, [
                                vue.createVNode("div", { class: "flex h-16 shrink-0 items-center" }, [
                                  vue.createVNode("img", {
                                    class: "h-8 w-auto",
                                    src: "https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=500",
                                    alt: "Your Company"
                                  })
                                ]),
                                vue.createVNode("nav", { class: "flex flex-1 flex-col" }, [
                                  vue.createVNode("ul", {
                                    role: "list",
                                    class: "flex flex-1 flex-col gap-y-7"
                                  }, [
                                    vue.createVNode("li", null, [
                                      vue.createVNode("ul", {
                                        role: "list",
                                        class: "-mx-2 space-y-1"
                                      }, [
                                        (vue.openBlock(), vue.createBlock(vue.Fragment, null, vue.renderList(navigation, (item) => {
                                          return vue.createVNode("li", {
                                            key: item.name
                                          }, [
                                            vue.createVNode("a", {
                                              href: item.href,
                                              class: [
                                                item.current ? "bg-gray-800 text-white" : "text-gray-400 hover:text-white hover:bg-gray-800",
                                                "group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold"
                                              ]
                                            }, [
                                              (vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(item.icon), {
                                                class: "h-6 w-6 shrink-0",
                                                "aria-hidden": "true"
                                              })),
                                              vue.createTextVNode(" " + vue.toDisplayString(item.name), 1)
                                            ], 10, ["href"])
                                          ]);
                                        }), 64))
                                      ])
                                    ]),
                                    vue.createVNode("li", null, [
                                      vue.createVNode("div", { class: "text-xs font-semibold leading-6 text-gray-400" }, " Actions "),
                                      vue.createVNode("ul", {
                                        role: "list",
                                        class: "-mx-2 mt-2 space-y-1"
                                      }, [
                                        (vue.openBlock(), vue.createBlock(vue.Fragment, null, vue.renderList(teams, (team) => {
                                          return vue.createVNode("li", {
                                            key: team.name
                                          }, [
                                            vue.createVNode("a", {
                                              href: team.href,
                                              class: [
                                                team.current ? "bg-gray-800 text-white" : "text-gray-400 hover:text-white hover:bg-gray-800",
                                                "group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold"
                                              ]
                                            }, [
                                              vue.createVNode("span", { class: "flex h-6 w-6 shrink-0 items-center justify-center rounded-lg border border-gray-700 bg-gray-800 text-[0.625rem] font-medium text-gray-400 group-hover:text-white" }, vue.toDisplayString(team.initial), 1),
                                              vue.createVNode("span", { class: "truncate" }, vue.toDisplayString(team.name), 1)
                                            ], 10, ["href"])
                                          ]);
                                        }), 64))
                                      ])
                                    ]),
                                    vue.createVNode("li", { class: "mt-auto" }, [
                                      vue.createVNode("a", {
                                        href: "#",
                                        class: "group -mx-2 flex gap-x-3 rounded-md p-2 text-sm font-semibold leading-6 text-gray-400 hover:bg-gray-800 hover:text-white"
                                      }, [
                                        vue.createVNode(vue.unref(outline.Cog6ToothIcon), {
                                          class: "h-6 w-6 shrink-0",
                                          "aria-hidden": "true"
                                        }),
                                        vue.createTextVNode(" Settings ")
                                      ])
                                    ])
                                  ])
                                ])
                              ])
                            ]),
                            _: 1
                          })
                        ]),
                        _: 1
                      })
                    ])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(vue.unref(vue$1.Dialog), {
                as: "div",
                class: "relative z-50 lg:hidden",
                onClose: ($event) => sidebarOpen.value = false
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode(vue.unref(vue$1.TransitionChild), {
                    as: "template",
                    enter: "transition-opacity ease-linear duration-300",
                    "enter-from": "opacity-0",
                    "enter-to": "opacity-100",
                    leave: "transition-opacity ease-linear duration-300",
                    "leave-from": "opacity-100",
                    "leave-to": "opacity-0"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createVNode("div", { class: "fixed inset-0 bg-gray-900/80" })
                    ]),
                    _: 1
                  }),
                  vue.createVNode("div", { class: "fixed inset-0 flex" }, [
                    vue.createVNode(vue.unref(vue$1.TransitionChild), {
                      as: "template",
                      enter: "transition ease-in-out duration-300 transform",
                      "enter-from": "-translate-x-full",
                      "enter-to": "translate-x-0",
                      leave: "transition ease-in-out duration-300 transform",
                      "leave-from": "translate-x-0",
                      "leave-to": "-translate-x-full"
                    }, {
                      default: vue.withCtx(() => [
                        vue.createVNode(vue.unref(vue$1.DialogPanel), { class: "relative mr-16 flex w-full max-w-xs flex-1" }, {
                          default: vue.withCtx(() => [
                            vue.createVNode(vue.unref(vue$1.TransitionChild), {
                              as: "template",
                              enter: "ease-in-out duration-300",
                              "enter-from": "opacity-0",
                              "enter-to": "opacity-100",
                              leave: "ease-in-out duration-300",
                              "leave-from": "opacity-100",
                              "leave-to": "opacity-0"
                            }, {
                              default: vue.withCtx(() => [
                                vue.createVNode("div", { class: "absolute left-full top-0 flex w-16 justify-center pt-5" }, [
                                  vue.createVNode("button", {
                                    type: "button",
                                    class: "-m-2.5 p-2.5",
                                    onClick: ($event) => sidebarOpen.value = false
                                  }, [
                                    vue.createVNode("span", { class: "sr-only" }, "Close sidebar"),
                                    vue.createVNode(vue.unref(outline.XMarkIcon), {
                                      class: "h-6 w-6 text-white",
                                      "aria-hidden": "true"
                                    })
                                  ], 8, ["onClick"])
                                ])
                              ]),
                              _: 1
                            }),
                            vue.createVNode("div", { class: "flex grow flex-col gap-y-5 overflow-y-auto bg-gray-900 px-6 pb-4 ring-1 ring-white/10" }, [
                              vue.createVNode("div", { class: "flex h-16 shrink-0 items-center" }, [
                                vue.createVNode("img", {
                                  class: "h-8 w-auto",
                                  src: "https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=500",
                                  alt: "Your Company"
                                })
                              ]),
                              vue.createVNode("nav", { class: "flex flex-1 flex-col" }, [
                                vue.createVNode("ul", {
                                  role: "list",
                                  class: "flex flex-1 flex-col gap-y-7"
                                }, [
                                  vue.createVNode("li", null, [
                                    vue.createVNode("ul", {
                                      role: "list",
                                      class: "-mx-2 space-y-1"
                                    }, [
                                      (vue.openBlock(), vue.createBlock(vue.Fragment, null, vue.renderList(navigation, (item) => {
                                        return vue.createVNode("li", {
                                          key: item.name
                                        }, [
                                          vue.createVNode("a", {
                                            href: item.href,
                                            class: [
                                              item.current ? "bg-gray-800 text-white" : "text-gray-400 hover:text-white hover:bg-gray-800",
                                              "group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold"
                                            ]
                                          }, [
                                            (vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(item.icon), {
                                              class: "h-6 w-6 shrink-0",
                                              "aria-hidden": "true"
                                            })),
                                            vue.createTextVNode(" " + vue.toDisplayString(item.name), 1)
                                          ], 10, ["href"])
                                        ]);
                                      }), 64))
                                    ])
                                  ]),
                                  vue.createVNode("li", null, [
                                    vue.createVNode("div", { class: "text-xs font-semibold leading-6 text-gray-400" }, " Actions "),
                                    vue.createVNode("ul", {
                                      role: "list",
                                      class: "-mx-2 mt-2 space-y-1"
                                    }, [
                                      (vue.openBlock(), vue.createBlock(vue.Fragment, null, vue.renderList(teams, (team) => {
                                        return vue.createVNode("li", {
                                          key: team.name
                                        }, [
                                          vue.createVNode("a", {
                                            href: team.href,
                                            class: [
                                              team.current ? "bg-gray-800 text-white" : "text-gray-400 hover:text-white hover:bg-gray-800",
                                              "group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold"
                                            ]
                                          }, [
                                            vue.createVNode("span", { class: "flex h-6 w-6 shrink-0 items-center justify-center rounded-lg border border-gray-700 bg-gray-800 text-[0.625rem] font-medium text-gray-400 group-hover:text-white" }, vue.toDisplayString(team.initial), 1),
                                            vue.createVNode("span", { class: "truncate" }, vue.toDisplayString(team.name), 1)
                                          ], 10, ["href"])
                                        ]);
                                      }), 64))
                                    ])
                                  ]),
                                  vue.createVNode("li", { class: "mt-auto" }, [
                                    vue.createVNode("a", {
                                      href: "#",
                                      class: "group -mx-2 flex gap-x-3 rounded-md p-2 text-sm font-semibold leading-6 text-gray-400 hover:bg-gray-800 hover:text-white"
                                    }, [
                                      vue.createVNode(vue.unref(outline.Cog6ToothIcon), {
                                        class: "h-6 w-6 shrink-0",
                                        "aria-hidden": "true"
                                      }),
                                      vue.createTextVNode(" Settings ")
                                    ])
                                  ])
                                ])
                              ])
                            ])
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    })
                  ])
                ]),
                _: 1
              }, 8, ["onClose"])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<div class="hidden lg:fixed lg:inset-y-0 lg:z-50 lg:flex lg:w-72 lg:flex-col"><div class="flex grow flex-col gap-y-5 overflow-y-auto bg-gray-900 px-6 pb-4"><div class="flex h-16 shrink-0 items-center"><img class="h-8 w-auto" src="https://tailwindui.com/img/logos/mark.svg?color=indigo&amp;shade=500" alt="Your Company"></div><nav class="flex flex-1 flex-col"><ul role="list" class="flex flex-1 flex-col gap-y-7"><li><ul role="list" class="-mx-2 space-y-1"><!--[-->`);
      serverRenderer.ssrRenderList(navigation, (item) => {
        _push(`<li>`);
        _push(serverRenderer.ssrRenderComponent(vue.unref(inertiaVue3.Link), {
          href: item.href,
          onClick: ($event) => navigation.map((i2) => i2.current = i2.name === item.name),
          class: [
            item.current ? "bg-gray-800 text-white" : "text-gray-400 hover:text-white hover:bg-gray-800",
            "group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold"
          ]
        }, {
          default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
            if (_push2) {
              serverRenderer.ssrRenderVNode(_push2, vue.createVNode(vue.resolveDynamicComponent(item.icon), {
                class: "h-6 w-6 shrink-0",
                "aria-hidden": "true"
              }, null), _parent2, _scopeId);
              _push2(` ${serverRenderer.ssrInterpolate(item.name)}`);
            } else {
              return [
                (vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(item.icon), {
                  class: "h-6 w-6 shrink-0",
                  "aria-hidden": "true"
                })),
                vue.createTextVNode(" " + vue.toDisplayString(item.name), 1)
              ];
            }
          }),
          _: 2
        }, _parent));
        _push(`</li>`);
      });
      _push(`<!--]--></ul></li><li><div class="text-xs font-semibold leading-6 text-gray-400"> Your teams </div><ul role="list" class="-mx-2 mt-2 space-y-1"><!--[-->`);
      serverRenderer.ssrRenderList(teams, (team) => {
        _push(`<li>`);
        _push(serverRenderer.ssrRenderComponent(vue.unref(inertiaVue3.Link), {
          href: team.href,
          class: [
            team.current ? "bg-gray-800 text-white" : "text-gray-400 hover:text-white hover:bg-gray-800",
            "group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold"
          ]
        }, {
          default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`<span class="flex h-6 w-6 shrink-0 items-center justify-center rounded-lg border border-gray-700 bg-gray-800 text-[0.625rem] font-medium text-gray-400 group-hover:text-white"${_scopeId}>${serverRenderer.ssrInterpolate(team.initial)}</span><span class="truncate"${_scopeId}>${serverRenderer.ssrInterpolate(team.name)}</span>`);
            } else {
              return [
                vue.createVNode("span", { class: "flex h-6 w-6 shrink-0 items-center justify-center rounded-lg border border-gray-700 bg-gray-800 text-[0.625rem] font-medium text-gray-400 group-hover:text-white" }, vue.toDisplayString(team.initial), 1),
                vue.createVNode("span", { class: "truncate" }, vue.toDisplayString(team.name), 1)
              ];
            }
          }),
          _: 2
        }, _parent));
        _push(`</li>`);
      });
      _push(`<!--]--></ul></li><li class="mt-auto"><a href="#" class="group -mx-2 flex gap-x-3 rounded-md p-2 text-sm font-semibold leading-6 text-gray-400 hover:bg-gray-800 hover:text-white">`);
      _push(serverRenderer.ssrRenderComponent(vue.unref(outline.Cog6ToothIcon), {
        class: "h-6 w-6 shrink-0",
        "aria-hidden": "true"
      }, null, _parent));
      _push(` Settings </a></li></ul></nav></div></div><div class="lg:pl-72"><div class="sticky top-0 z-40 flex h-16 shrink-0 items-center gap-x-4 border-b border-gray-200 bg-white px-4 shadow-sm sm:gap-x-6 sm:px-6 lg:px-8"><button type="button" class="-m-2.5 p-2.5 text-gray-700 lg:hidden"><span class="sr-only">Open sidebar</span>`);
      _push(serverRenderer.ssrRenderComponent(vue.unref(outline.Bars3Icon), {
        class: "h-6 w-6",
        "aria-hidden": "true"
      }, null, _parent));
      _push(`</button><div class="h-6 w-px bg-gray-900/10 lg:hidden" aria-hidden="true"></div><div class="flex flex-1 gap-x-4 self-stretch lg:gap-x-6"><form class="relative flex flex-1" action="#" method="GET"><label for="search-field" class="sr-only">Search</label>`);
      _push(serverRenderer.ssrRenderComponent(vue.unref(solid.MagnifyingGlassIcon), {
        class: "pointer-events-none absolute inset-y-0 left-0 h-full w-5 text-gray-400",
        "aria-hidden": "true"
      }, null, _parent));
      _push(`<input id="search-field" class="block h-full w-full border-0 py-0 pl-8 pr-0 text-gray-900 placeholder:text-gray-400 focus:ring-0 sm:text-sm" placeholder="Search..." type="search" name="search"></form><div class="flex items-center gap-x-4 lg:gap-x-6"><button type="button" class="-m-2.5 p-2.5 text-gray-400 hover:text-gray-500"><span class="sr-only">View notifications</span>`);
      _push(serverRenderer.ssrRenderComponent(vue.unref(outline.BellIcon), {
        class: "h-6 w-6",
        "aria-hidden": "true"
      }, null, _parent));
      _push(`</button><div class="hidden lg:block lg:h-6 lg:w-px lg:bg-gray-900/10" aria-hidden="true"></div>`);
      _push(serverRenderer.ssrRenderComponent(vue.unref(vue$1.Menu), {
        as: "div",
        class: "relative"
      }, {
        default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(vue.unref(vue$1.MenuButton), { class: "-m-1.5 flex items-center p-1.5" }, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<span class="sr-only"${_scopeId2}>Open user menu</span><img class="h-8 w-8 rounded-full bg-gray-50" src="https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=facearea&amp;facepad=2&amp;w=256&amp;h=256&amp;q=80" alt=""${_scopeId2}><span class="hidden lg:flex lg:items-center"${_scopeId2}><span class="ml-4 text-sm font-semibold leading-6 text-gray-900" aria-hidden="true"${_scopeId2}>${serverRenderer.ssrInterpolate(_ctx.$page.props.user.email)}</span>`);
                  _push3(serverRenderer.ssrRenderComponent(vue.unref(solid.ChevronDownIcon), {
                    class: "ml-2 h-5 w-5 text-gray-400",
                    "aria-hidden": "true"
                  }, null, _parent3, _scopeId2));
                  _push3(`</span>`);
                } else {
                  return [
                    vue.createVNode("span", { class: "sr-only" }, "Open user menu"),
                    vue.createVNode("img", {
                      class: "h-8 w-8 rounded-full bg-gray-50",
                      src: "https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80",
                      alt: ""
                    }),
                    vue.createVNode("span", { class: "hidden lg:flex lg:items-center" }, [
                      vue.createVNode("span", {
                        class: "ml-4 text-sm font-semibold leading-6 text-gray-900",
                        "aria-hidden": "true"
                      }, vue.toDisplayString(_ctx.$page.props.user.email), 1),
                      vue.createVNode(vue.unref(solid.ChevronDownIcon), {
                        class: "ml-2 h-5 w-5 text-gray-400",
                        "aria-hidden": "true"
                      })
                    ])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(``);
            _push2(serverRenderer.ssrRenderComponent(vue.unref(vue$1.MenuItems), { class: "absolute right-0 z-10 mt-2.5 w-32 origin-top-right rounded-md bg-white py-2 shadow-lg ring-1 ring-gray-900/5 focus:outline-none" }, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<!--[-->`);
                  serverRenderer.ssrRenderList(userNavigation, (item) => {
                    _push3(serverRenderer.ssrRenderComponent(vue.unref(vue$1.MenuItem), {
                      key: item.name
                    }, {
                      default: vue.withCtx(({ active }, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(serverRenderer.ssrRenderComponent(vue.unref(inertiaVue3.Link), {
                            href: item.href,
                            class: [
                              active ? "bg-gray-50" : "",
                              "block px-3 py-1 text-sm leading-6 text-gray-900"
                            ]
                          }, {
                            default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                              if (_push5) {
                                _push5(`${serverRenderer.ssrInterpolate(item.name)}`);
                              } else {
                                return [
                                  vue.createTextVNode(vue.toDisplayString(item.name), 1)
                                ];
                              }
                            }),
                            _: 2
                          }, _parent4, _scopeId3));
                        } else {
                          return [
                            vue.createVNode(vue.unref(inertiaVue3.Link), {
                              href: item.href,
                              class: [
                                active ? "bg-gray-50" : "",
                                "block px-3 py-1 text-sm leading-6 text-gray-900"
                              ]
                            }, {
                              default: vue.withCtx(() => [
                                vue.createTextVNode(vue.toDisplayString(item.name), 1)
                              ]),
                              _: 2
                            }, 1032, ["href", "class"])
                          ];
                        }
                      }),
                      _: 2
                    }, _parent3, _scopeId2));
                  });
                  _push3(`<!--]-->`);
                } else {
                  return [
                    (vue.openBlock(), vue.createBlock(vue.Fragment, null, vue.renderList(userNavigation, (item) => {
                      return vue.createVNode(vue.unref(vue$1.MenuItem), {
                        key: item.name
                      }, {
                        default: vue.withCtx(({ active }) => [
                          vue.createVNode(vue.unref(inertiaVue3.Link), {
                            href: item.href,
                            class: [
                              active ? "bg-gray-50" : "",
                              "block px-3 py-1 text-sm leading-6 text-gray-900"
                            ]
                          }, {
                            default: vue.withCtx(() => [
                              vue.createTextVNode(vue.toDisplayString(item.name), 1)
                            ]),
                            _: 2
                          }, 1032, ["href", "class"])
                        ]),
                        _: 2
                      }, 1024);
                    }), 64))
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(vue.unref(vue$1.MenuButton), { class: "-m-1.5 flex items-center p-1.5" }, {
                default: vue.withCtx(() => [
                  vue.createVNode("span", { class: "sr-only" }, "Open user menu"),
                  vue.createVNode("img", {
                    class: "h-8 w-8 rounded-full bg-gray-50",
                    src: "https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80",
                    alt: ""
                  }),
                  vue.createVNode("span", { class: "hidden lg:flex lg:items-center" }, [
                    vue.createVNode("span", {
                      class: "ml-4 text-sm font-semibold leading-6 text-gray-900",
                      "aria-hidden": "true"
                    }, vue.toDisplayString(_ctx.$page.props.user.email), 1),
                    vue.createVNode(vue.unref(solid.ChevronDownIcon), {
                      class: "ml-2 h-5 w-5 text-gray-400",
                      "aria-hidden": "true"
                    })
                  ])
                ]),
                _: 1
              }),
              vue.createVNode(vue.Transition, {
                "enter-active-class": "transition ease-out duration-100",
                "enter-from-class": "transform opacity-0 scale-95",
                "enter-to-class": "transform opacity-100 scale-100",
                "leave-active-class": "transition ease-in duration-75",
                "leave-from-class": "transform opacity-100 scale-100",
                "leave-to-class": "transform opacity-0 scale-95"
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode(vue.unref(vue$1.MenuItems), { class: "absolute right-0 z-10 mt-2.5 w-32 origin-top-right rounded-md bg-white py-2 shadow-lg ring-1 ring-gray-900/5 focus:outline-none" }, {
                    default: vue.withCtx(() => [
                      (vue.openBlock(), vue.createBlock(vue.Fragment, null, vue.renderList(userNavigation, (item) => {
                        return vue.createVNode(vue.unref(vue$1.MenuItem), {
                          key: item.name
                        }, {
                          default: vue.withCtx(({ active }) => [
                            vue.createVNode(vue.unref(inertiaVue3.Link), {
                              href: item.href,
                              class: [
                                active ? "bg-gray-50" : "",
                                "block px-3 py-1 text-sm leading-6 text-gray-900"
                              ]
                            }, {
                              default: vue.withCtx(() => [
                                vue.createTextVNode(vue.toDisplayString(item.name), 1)
                              ]),
                              _: 2
                            }, 1032, ["href", "class"])
                          ]),
                          _: 2
                        }, 1024);
                      }), 64))
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div></div></div><main class="py-10"><div class="px-4 sm:px-6 lg:px-8 space-y-4"><div><h3 class="text-base font-semibold leading-6 text-gray-900"> Last 30 days </h3><dl class="mt-5 grid grid-cols-1 divide-y divide-gray-200 overflow-hidden rounded-lg bg-white shadow md:grid-cols-3 md:divide-x md:divide-y-0"><!--[-->`);
      serverRenderer.ssrRenderList(stats, (item) => {
        _push(`<div class="px-4 py-5 sm:p-6"><dt class="text-base font-normal text-gray-900">${serverRenderer.ssrInterpolate(item.name)}</dt><dd class="mt-1 flex items-baseline justify-between md:block lg:flex"><div class="flex items-baseline text-2xl font-semibold text-indigo-600">${serverRenderer.ssrInterpolate(item.stat)} <span class="ml-2 text-sm font-medium text-gray-500">from ${serverRenderer.ssrInterpolate(item.previousStat)}</span></div><div class="${serverRenderer.ssrRenderClass([
          item.changeType === "increase" ? "bg-green-100 text-green-800" : "bg-red-100 text-red-800",
          "inline-flex items-baseline rounded-full px-2.5 py-0.5 text-sm font-medium md:mt-2 lg:mt-0"
        ])}">`);
        if (item.changeType === "increase") {
          _push(serverRenderer.ssrRenderComponent(vue.unref(solid.ArrowUpIcon), {
            class: "-ml-1 mr-0.5 h-5 w-5 flex-shrink-0 self-center text-green-500",
            "aria-hidden": "true"
          }, null, _parent));
        } else {
          _push(serverRenderer.ssrRenderComponent(vue.unref(solid.ArrowDownIcon), {
            class: "-ml-1 mr-0.5 h-5 w-5 flex-shrink-0 self-center text-red-500",
            "aria-hidden": "true"
          }, null, _parent));
        }
        _push(`<span class="sr-only">${serverRenderer.ssrInterpolate(item.changeType === "increase" ? "Increased" : "Decreased")} by </span> ${serverRenderer.ssrInterpolate(item.change)}</div></dd></div>`);
      });
      _push(`<!--]--></dl></div>`);
      serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</div></main></div></div>`);
    };
  }
};
const _sfc_setup$1u = _sfc_main$1u.setup;
_sfc_main$1u.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Layouts/AdminLayout.vue");
  return _sfc_setup$1u ? _sfc_setup$1u(props, ctx) : void 0;
};
const __default__$m = {
  layout: _sfc_main$1u
};
const _sfc_main$1t = /* @__PURE__ */ Object.assign(__default__$m, {
  __name: "Dashboard",
  __ssrInlineRender: true,
  setup(__props) {
    chart_js.Chart.register(
      chart_js.CategoryScale,
      chart_js.LinearScale,
      chart_js.BarElement,
      chart_js.Title,
      chart_js.Tooltip,
      chart_js.Legend
    );
    const donation = vue.ref({});
    const dona_preformance = inertiaVue3.usePage().props.value.dona_preformance;
    const dona_summary = inertiaVue3.usePage().props.value.dona_summary;
    const gepard_banned = inertiaVue3.usePage().props.value.gepard_banned;
    const logins_per_day = inertiaVue3.usePage().props.value.logins_per_day;
    const dona_preformance_values = vue.reactive({
      months: [],
      total: 0
    });
    const modal = vue.reactive({
      showDonation: false
    });
    const logins_data = vue.reactive({
      days: [],
      counts: []
    });
    vue.onMounted(() => {
      load_charts_data();
    });
    function load_charts_data() {
      dona_preformance_values.months = dona_preformance.map((dona) => dona.month);
      dona_preformance_values.total = dona_preformance.map((dona) => dona.total);
      logins_data.days = Object.keys(logins_per_day);
      logins_data.counts = Object.values(logins_per_day);
    }
    const chartData = vue.computed(() => {
      return {
        labels: dona_preformance_values.months,
        datasets: [
          {
            label: "Data One",
            backgroundColor: "#f87979",
            data: dona_preformance_values.total
          }
        ]
      };
    });
    const chartLogin = vue.computed(() => {
      return {
        labels: logins_data.days,
        datasets: [
          {
            label: "Data One",
            backgroundColor: "#f87979",
            data: logins_data.counts
          }
        ]
      };
    });
    function notifyMe() {
      Notifications.notify(
        {
          group: state.group,
          title: state.title.toUpperCase(),
          text: state.message + " "
        },
        state.duration
      );
    }
    function showDonation(id) {
      axios.get(route("admin.donations.show", id)).then((response) => {
        donation.value = response.data.donation;
        modal.showDonation = true;
      }).catch((error) => {
        console.log(error);
      });
    }
    function closeDonation() {
      modal.showDonation = false;
    }
    function donationUpdate(id) {
      axios.put(route("admin.donations.update", id), donation.value).then((response) => {
        state.title = "Success";
        state.message = response.data.message;
        state.group = "success";
        notifyMe();
        Inertia.reload();
      });
    }
    return (_ctx, _push, _parent, _attrs) => {
      const _component_font_awesome_icon = vue.resolveComponent("font-awesome-icon");
      _push(`<!--[--><div class="mt-5"><div class="flex flex-wrap"><div class="w-full xl:w-8/12 mb-12 xl:mb-0"><div class="flex flex-col min-w-0 break-words w-full shadow-md rounded bg-blueGray-700"><div class="rounded-t mb-0 px-4 py-3 bg-white"><div class="flex flex-wrap items-center"><div class="relative w-full max-w-full flex-grow flex-1"><h6 class="uppercase text-blueGray-100 mb-1 text-xs font-semibold"> Overview </h6><h2 class="text-black text-xl font-semibold mb-5"> Current Donations </h2><div><div class="block w-full"><table class="items-center w-full bg-transparent border-collapse"><thead><tr><th class="px-6 bg-blueGray-50 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left"> Master Email </th><th class="px-6 bg-blueGray-50 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left"> Gross </th><th class="px-6 bg-blueGray-50 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left"> Transaction ID </th><th class="px-6 bg-blueGray-50 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left"> Payment Status </th><th class="px-6 bg-blueGray-50 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left"> Payment Date </th><th class="px-6 bg-blueGray-50 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left"></th></tr></thead><tbody><!--[-->`);
      serverRenderer.ssrRenderList(vue.unref(dona_summary).data, (dona, index) => {
        _push(`<tr><th class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-left">${serverRenderer.ssrInterpolate(dona.email)}</th><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4">${serverRenderer.ssrInterpolate(dona.mc_gross)}</td><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4">${serverRenderer.ssrInterpolate(dona.txn_id)}</td><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4">`);
        if (dona.payment_status === "Completed") {
          _push(`<span class="inline-flex items-center gap-x-1.5 rounded-md bg-green-100 px-1.5 py-0.5 text-xs font-medium text-green-700"><svg class="h-1.5 w-1.5 fill-green-500" viewBox="0 0 6 6" aria-hidden="true"><circle cx="3" cy="3" r="3"></circle></svg> Completed </span>`);
        } else if (dona.payment_status === "Pending") {
          _push(`<span class="inline-flex items-center gap-x-1.5 rounded-md bg-yellow-100 px-1.5 py-0.5 text-xs font-medium text-yellow-800"><svg class="h-1.5 w-1.5 fill-yellow-500" viewBox="0 0 6 6" aria-hidden="true"><circle cx="3" cy="3" r="3"></circle></svg> Badge </span>`);
        } else {
          _push(`<!---->`);
        }
        _push(`</td><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4">${serverRenderer.ssrInterpolate(dona.payment_date)}</td><td class="px-5 py-5 bg-white text-sm text-right">`);
        _push(serverRenderer.ssrRenderComponent(JetDropdown, null, {
          trigger: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`<button type="button" class="inline-block text-gray-500 hover:text-gray-700 z-10"${_scopeId}><svg class="inline-block h-6 w-6 fill-current" viewBox="0 0 24 24"${_scopeId}><path d="M12 6a2 2 0 110-4 2 2 0 010 4zm0 8a2 2 0 110-4 2 2 0 010 4zm-2 6a2 2 0 104 0 2 2 0 00-4 0z"${_scopeId}></path></svg></button>`);
            } else {
              return [
                vue.createVNode("button", {
                  type: "button",
                  class: "inline-block text-gray-500 hover:text-gray-700 z-10"
                }, [
                  (vue.openBlock(), vue.createBlock("svg", {
                    class: "inline-block h-6 w-6 fill-current",
                    viewBox: "0 0 24 24"
                  }, [
                    vue.createVNode("path", { d: "M12 6a2 2 0 110-4 2 2 0 010 4zm0 8a2 2 0 110-4 2 2 0 010 4zm-2 6a2 2 0 104 0 2 2 0 00-4 0z" })
                  ]))
                ])
              ];
            }
          }),
          content: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`<div class="py-1" role="menu" aria-orientation="vertical" aria-labelledby="options-menu"${_scopeId}>`);
              _push2(serverRenderer.ssrRenderComponent(JetDropdownLink, {
                as: "button",
                onClick: ($event) => showDonation(
                  dona.id
                ),
                class: "flex justify-start w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900"
              }, {
                default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                      icon: "edit",
                      class: "mr-2"
                    }, null, _parent3, _scopeId2));
                    _push3(` Edit `);
                  } else {
                    return [
                      vue.createVNode(_component_font_awesome_icon, {
                        icon: "edit",
                        class: "mr-2"
                      }),
                      vue.createTextVNode(" Edit ")
                    ];
                  }
                }),
                _: 2
              }, _parent2, _scopeId));
              _push2(serverRenderer.ssrRenderComponent(JetDropdownLink, {
                as: "button",
                onClick: ($event) => _ctx.destroyDonation(
                  dona.id
                ),
                class: "flex justify-start w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900"
              }, {
                default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                      icon: "trash",
                      class: "mr-2"
                    }, null, _parent3, _scopeId2));
                    _push3(` Destroy `);
                  } else {
                    return [
                      vue.createVNode(_component_font_awesome_icon, {
                        icon: "trash",
                        class: "mr-2"
                      }),
                      vue.createTextVNode(" Destroy ")
                    ];
                  }
                }),
                _: 2
              }, _parent2, _scopeId));
              _push2(`</div>`);
            } else {
              return [
                vue.createVNode("div", {
                  class: "py-1",
                  role: "menu",
                  "aria-orientation": "vertical",
                  "aria-labelledby": "options-menu"
                }, [
                  vue.createVNode(JetDropdownLink, {
                    as: "button",
                    onClick: ($event) => showDonation(
                      dona.id
                    ),
                    class: "flex justify-start w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createVNode(_component_font_awesome_icon, {
                        icon: "edit",
                        class: "mr-2"
                      }),
                      vue.createTextVNode(" Edit ")
                    ]),
                    _: 2
                  }, 1032, ["onClick"]),
                  vue.createVNode(JetDropdownLink, {
                    as: "button",
                    onClick: ($event) => _ctx.destroyDonation(
                      dona.id
                    ),
                    class: "flex justify-start w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createVNode(_component_font_awesome_icon, {
                        icon: "trash",
                        class: "mr-2"
                      }),
                      vue.createTextVNode(" Destroy ")
                    ]),
                    _: 2
                  }, 1032, ["onClick"])
                ])
              ];
            }
          }),
          _: 2
        }, _parent));
        _push(`</td></tr>`);
      });
      _push(`<!--]--></tbody></table>`);
      _push(serverRenderer.ssrRenderComponent(_sfc_main$1x, {
        links: vue.unref(dona_summary).links
      }, null, _parent));
      _push(`</div></div></div></div></div></div></div><div class="w-full xl:w-4/12 px-4"><div class="relative flex flex-col min-w-0 break-words bg-white w-full mb-6 shadow-md rounded h-full"><div class="rounded-t mb-0 px-4 py-3 bg-transparent"><div class="flex flex-wrap items-center"><div class="relative w-full max-w-full flex-grow flex-1"><h6 class="uppercase text-blueGray-400 mb-1 text-xs font-semibold"> Performance </h6><h2 class="text-blueGray-700 text-xl font-semibold"> Total orders </h2></div></div></div><div class="p-4 flex-auto max-h-[22rem]"><div class="h-[20rem]">`);
      _push(serverRenderer.ssrRenderComponent(vue.unref(vueChartjs.Bar), {
        data: vue.unref(chartData),
        height: "100%"
      }, null, _parent));
      _push(`</div></div></div></div></div><div class="flex flex-wrap mt-4"><div class="w-full xl:w-8/12 xl:mb-0"><div class="relative flex flex-col min-w-0 break-words bg-white w-full mb-6 shadow-lg rounded"><div class="rounded-t mb-0 px-4 py-3 border-0"><div class="flex flex-wrap items-center"><div class="relative w-full px-4 max-w-full flex-grow flex-1"><h3 class="font-semibold text-base text-blueGray-700"> Gepard Banned </h3></div></div></div><div class="block w-full overflow-x-auto"><table class="items-center w-full bg-transparent border-collapse"><thead><tr><th class="px-6 bg-blueGray-50 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left"> User </th><th class="px-6 bg-blueGray-50 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left"> Reason </th><th class="px-6 bg-blueGray-50 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left"> Unique Id </th><th class="px-6 bg-blueGray-50 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left"> Ban Finish </th><th class="px-6 bg-blueGray-50 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left"> Banned By </th></tr></thead><tbody><!--[-->`);
      serverRenderer.ssrRenderList(vue.unref(gepard_banned).data, (gepard) => {
        _push(`<tr><th class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-left">${serverRenderer.ssrInterpolate(gepard.violator)}</th><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4">${serverRenderer.ssrInterpolate(gepard.reason)}</td><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4">${serverRenderer.ssrInterpolate(gepard.unique_id)}</td><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4"><i class="fas fa-arrow-up text-emerald-500 mr-4"></i> ${serverRenderer.ssrInterpolate(gepard.unban_time)}</td><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4">${serverRenderer.ssrInterpolate(gepard.initiator)}</td></tr>`);
      });
      _push(`<!--]--></tbody></table></div></div></div><div class="w-full xl:w-4/12 px-4"><div class="relative flex flex-col min-w-0 break-words bg-white w-full mb-6 shadow-lg rounded"><div class="rounded-t mb-0 px-4 py-3 border-0"><div class="flex flex-wrap items-center"><div class="relative w-full px-4 max-w-full flex-grow flex-1"><h3 class="font-semibold text-base text-blueGray-700"> Top Logins per day </h3></div><div class="relative w-full px-4 max-w-full flex-grow flex-1 text-right"><button class="bg-indigo-500 text-white active:bg-indigo-600 text-xs font-bold uppercase px-3 py-1 rounded outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150" type="button"> See all </button></div></div></div><div class="block w-full overflow-x-auto"><div class="h-[20rem]">`);
      _push(serverRenderer.ssrRenderComponent(vue.unref(vueChartjs.Line), {
        data: vue.unref(chartLogin),
        height: "100%"
      }, null, _parent));
      _push(`</div></div></div></div></div></div>`);
      _push(serverRenderer.ssrRenderComponent(JetModalDialog, {
        maxWidth: "4xl",
        show: modal.showDonation,
        onClose: closeDonation,
        class: "text-black"
      }, {
        title: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`Transaction ID: ${serverRenderer.ssrInterpolate(donation.value.txn_id)}`);
          } else {
            return [
              vue.createTextVNode("Transaction ID: " + vue.toDisplayString(donation.value.txn_id), 1)
            ];
          }
        }),
        content: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="flex flex-cols space-x-4"${_scopeId}><div class="w-1/2"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(JetLabel, null, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Email (Master Account)`);
                } else {
                  return [
                    vue.createTextVNode("Email (Master Account)")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(JetInput, {
              modelValue: donation.value.email,
              "onUpdate:modelValue": ($event) => donation.value.email = $event,
              class: "w-full"
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="w-1/2"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(JetLabel, null, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Transaction ID`);
                } else {
                  return [
                    vue.createTextVNode("Transaction ID")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(JetInput, {
              modelValue: donation.value.txn_id,
              "onUpdate:modelValue": ($event) => donation.value.txn_id = $event,
              class: "w-full"
            }, null, _parent2, _scopeId));
            _push2(`</div></div><div class="flex flex-cols space-x-4"${_scopeId}><div class="w-full"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(JetLabel, null, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Item`);
                } else {
                  return [
                    vue.createTextVNode("Item")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(JetInput, {
              modelValue: donation.value.item_name,
              "onUpdate:modelValue": ($event) => donation.value.item_name = $event,
              class: "w-full"
            }, null, _parent2, _scopeId));
            _push2(`</div></div><div class="flex flex-cols space-x-4"${_scopeId}><div class="w-1/2"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(JetLabel, null, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Quantity`);
                } else {
                  return [
                    vue.createTextVNode("Quantity")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(JetInput, {
              modelValue: donation.value.quantity,
              "onUpdate:modelValue": ($event) => donation.value.quantity = $event,
              class: "w-full"
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="w-1/2"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(JetLabel, null, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Payment Status`);
                } else {
                  return [
                    vue.createTextVNode("Payment Status")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<select class="w-full"${_scopeId}><option value="Completed"${_scopeId}>Completed</option><option value="Pending"${_scopeId}>Pending</option><option value="Canceled"${_scopeId}>Canceled</option></select></div></div><div class="flex flex-cols space-x-4"${_scopeId}><div class="w-1/2"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(JetLabel, null, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Payment Date`);
                } else {
                  return [
                    vue.createTextVNode("Payment Date")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(JetInput, {
              modelValue: donation.value.payment_date,
              "onUpdate:modelValue": ($event) => donation.value.payment_date = $event,
              class: "w-full"
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="w-1/2"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(JetLabel, null, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Mc gross`);
                } else {
                  return [
                    vue.createTextVNode("Mc gross")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(JetInput, {
              modelValue: donation.value.mc_gross,
              "onUpdate:modelValue": ($event) => donation.value.mc_gross = $event,
              class: "w-full"
            }, null, _parent2, _scopeId));
            _push2(`</div></div><div class="flex flex-cols space-x-4"${_scopeId}><div class="w-full"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(JetLabel, null, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Payer Email`);
                } else {
                  return [
                    vue.createTextVNode("Payer Email")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(JetInput, {
              modelValue: donation.value.payer_email,
              "onUpdate:modelValue": ($event) => donation.value.payer_email = $event,
              class: "w-full"
            }, null, _parent2, _scopeId));
            _push2(`</div></div><div class="flex flex-cols space-x-4"${_scopeId}><div class="w-1/2"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(JetLabel, null, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`First Name`);
                } else {
                  return [
                    vue.createTextVNode("First Name")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(JetInput, {
              modelValue: donation.value.first_name,
              "onUpdate:modelValue": ($event) => donation.value.first_name = $event,
              class: "w-full"
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="w-1/2"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(JetLabel, null, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Last Name`);
                } else {
                  return [
                    vue.createTextVNode("Last Name")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(JetInput, {
              modelValue: donation.value.last_name,
              "onUpdate:modelValue": ($event) => donation.value.last_name = $event,
              class: "w-full"
            }, null, _parent2, _scopeId));
            _push2(`</div></div>`);
          } else {
            return [
              vue.createVNode("div", { class: "flex flex-cols space-x-4" }, [
                vue.createVNode("div", { class: "w-1/2" }, [
                  vue.createVNode(JetLabel, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Email (Master Account)")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(JetInput, {
                    modelValue: donation.value.email,
                    "onUpdate:modelValue": ($event) => donation.value.email = $event,
                    class: "w-full"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"])
                ]),
                vue.createVNode("div", { class: "w-1/2" }, [
                  vue.createVNode(JetLabel, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Transaction ID")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(JetInput, {
                    modelValue: donation.value.txn_id,
                    "onUpdate:modelValue": ($event) => donation.value.txn_id = $event,
                    class: "w-full"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"])
                ])
              ]),
              vue.createVNode("div", { class: "flex flex-cols space-x-4" }, [
                vue.createVNode("div", { class: "w-full" }, [
                  vue.createVNode(JetLabel, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Item")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(JetInput, {
                    modelValue: donation.value.item_name,
                    "onUpdate:modelValue": ($event) => donation.value.item_name = $event,
                    class: "w-full"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"])
                ])
              ]),
              vue.createVNode("div", { class: "flex flex-cols space-x-4" }, [
                vue.createVNode("div", { class: "w-1/2" }, [
                  vue.createVNode(JetLabel, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Quantity")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(JetInput, {
                    modelValue: donation.value.quantity,
                    "onUpdate:modelValue": ($event) => donation.value.quantity = $event,
                    class: "w-full"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"])
                ]),
                vue.createVNode("div", { class: "w-1/2" }, [
                  vue.createVNode(JetLabel, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Payment Status")
                    ]),
                    _: 1
                  }),
                  vue.withDirectives(vue.createVNode("select", {
                    "onUpdate:modelValue": ($event) => donation.value.payment_status = $event,
                    class: "w-full"
                  }, [
                    vue.createVNode("option", { value: "Completed" }, "Completed"),
                    vue.createVNode("option", { value: "Pending" }, "Pending"),
                    vue.createVNode("option", { value: "Canceled" }, "Canceled")
                  ], 8, ["onUpdate:modelValue"]), [
                    [vue.vModelSelect, donation.value.payment_status]
                  ])
                ])
              ]),
              vue.createVNode("div", { class: "flex flex-cols space-x-4" }, [
                vue.createVNode("div", { class: "w-1/2" }, [
                  vue.createVNode(JetLabel, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Payment Date")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(JetInput, {
                    modelValue: donation.value.payment_date,
                    "onUpdate:modelValue": ($event) => donation.value.payment_date = $event,
                    class: "w-full"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"])
                ]),
                vue.createVNode("div", { class: "w-1/2" }, [
                  vue.createVNode(JetLabel, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Mc gross")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(JetInput, {
                    modelValue: donation.value.mc_gross,
                    "onUpdate:modelValue": ($event) => donation.value.mc_gross = $event,
                    class: "w-full"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"])
                ])
              ]),
              vue.createVNode("div", { class: "flex flex-cols space-x-4" }, [
                vue.createVNode("div", { class: "w-full" }, [
                  vue.createVNode(JetLabel, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Payer Email")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(JetInput, {
                    modelValue: donation.value.payer_email,
                    "onUpdate:modelValue": ($event) => donation.value.payer_email = $event,
                    class: "w-full"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"])
                ])
              ]),
              vue.createVNode("div", { class: "flex flex-cols space-x-4" }, [
                vue.createVNode("div", { class: "w-1/2" }, [
                  vue.createVNode(JetLabel, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("First Name")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(JetInput, {
                    modelValue: donation.value.first_name,
                    "onUpdate:modelValue": ($event) => donation.value.first_name = $event,
                    class: "w-full"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"])
                ]),
                vue.createVNode("div", { class: "w-1/2" }, [
                  vue.createVNode(JetLabel, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Last Name")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(JetInput, {
                    modelValue: donation.value.last_name,
                    "onUpdate:modelValue": ($event) => donation.value.last_name = $event,
                    class: "w-full"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"])
                ])
              ])
            ];
          }
        }),
        footer: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(JetButton, {
              class: "mr-2",
              onClick: ($event) => donationUpdate(donation.value.id)
            }, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Edit`);
                } else {
                  return [
                    vue.createTextVNode("Edit")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(JetSecondaryButton, { onClick: closeDonation }, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Close `);
                } else {
                  return [
                    vue.createTextVNode(" Close ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(JetButton, {
                class: "mr-2",
                onClick: ($event) => donationUpdate(donation.value.id)
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Edit")
                ]),
                _: 1
              }, 8, ["onClick"]),
              vue.createVNode(JetSecondaryButton, { onClick: closeDonation }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Close ")
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<!--]-->`);
    };
  }
});
const _sfc_setup$1t = _sfc_main$1t.setup;
_sfc_main$1t.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Admin/Dashboard.vue");
  return _sfc_setup$1t ? _sfc_setup$1t(props, ctx) : void 0;
};
var Dashboard = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": _sfc_main$1t
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1s = vue.defineComponent({
  props: ["on"]
});
function _sfc_ssrRender$L(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)}><div style="${serverRenderer.ssrRenderStyle(_ctx.on ? null : { display: "none" })}" class="text-sm text-gray-600">`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</div></div>`);
}
const _sfc_setup$1s = _sfc_main$1s.setup;
_sfc_main$1s.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/ActionMessage.vue");
  return _sfc_setup$1s ? _sfc_setup$1s(props, ctx) : void 0;
};
var JetActionMessage = /* @__PURE__ */ _export_sfc(_sfc_main$1s, [["ssrRender", _sfc_ssrRender$L]]);
const _sfc_main$1r = {};
function _sfc_ssrRender$K(_ctx, _push, _parent, _attrs) {
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "md:col-span-1 flex justify-between" }, _attrs))}><div class="px-4 sm:px-0"><h3 class="text-lg font-medium text-gray-900">`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "title", {}, null, _push, _parent);
  _push(`</h3><p class="mt-1 text-sm text-gray-600">`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "description", {}, null, _push, _parent);
  _push(`</p></div><div class="px-4 sm:px-0">`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "aside", {}, null, _push, _parent);
  _push(`</div></div>`);
}
const _sfc_setup$1r = _sfc_main$1r.setup;
_sfc_main$1r.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/SectionTitle.vue");
  return _sfc_setup$1r ? _sfc_setup$1r(props, ctx) : void 0;
};
var JetSectionTitle = /* @__PURE__ */ _export_sfc(_sfc_main$1r, [["ssrRender", _sfc_ssrRender$K]]);
const _sfc_main$1q = vue.defineComponent({
  components: {
    JetSectionTitle
  }
});
function _sfc_ssrRender$J(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_section_title = vue.resolveComponent("jet-section-title");
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "md:grid md:grid-cols-3 md:gap-6" }, _attrs))}>`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_section_title, null, {
    title: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "title", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "title")
        ];
      }
    }),
    description: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "description", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "description")
        ];
      }
    }),
    _: 3
  }, _parent));
  _push(`<div class="mt-5 md:mt-0 md:col-span-2"><div class="px-4 py-5 sm:p-6 bg-white shadow sm:rounded-lg">`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "content", {}, null, _push, _parent);
  _push(`</div></div></div>`);
}
const _sfc_setup$1q = _sfc_main$1q.setup;
_sfc_main$1q.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/ActionSection.vue");
  return _sfc_setup$1q ? _sfc_setup$1q(props, ctx) : void 0;
};
var JetActionSection = /* @__PURE__ */ _export_sfc(_sfc_main$1q, [["ssrRender", _sfc_ssrRender$J]]);
const _sfc_main$1p = vue.defineComponent({
  emits: ["close"],
  components: {
    Modal
  },
  props: {
    show: {
      default: false
    },
    maxWidth: {
      default: "2xl"
    },
    closeable: {
      default: true
    }
  },
  methods: {
    close() {
      this.$emit("close");
    }
  }
});
function _sfc_ssrRender$I(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_modal = vue.resolveComponent("modal");
  _push(serverRenderer.ssrRenderComponent(_component_modal, vue.mergeProps({
    show: _ctx.show,
    "max-width": _ctx.maxWidth,
    closeable: _ctx.closeable,
    onClose: _ctx.close
  }, _attrs), {
    default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4"${_scopeId}><div class="sm:flex sm:items-start"${_scopeId}><div class="mx-auto shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10"${_scopeId}><svg class="h-6 w-6 text-red-600" stroke="currentColor" fill="none" viewBox="0 0 24 24"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"${_scopeId}></path></svg></div><div class="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left"${_scopeId}><h3 class="text-lg"${_scopeId}>`);
        serverRenderer.ssrRenderSlot(_ctx.$slots, "title", {}, null, _push2, _parent2, _scopeId);
        _push2(`</h3><div class="mt-2"${_scopeId}>`);
        serverRenderer.ssrRenderSlot(_ctx.$slots, "content", {}, null, _push2, _parent2, _scopeId);
        _push2(`</div></div></div></div><div class="flex flex-row justify-end px-6 py-4 bg-gray-100 text-right"${_scopeId}>`);
        serverRenderer.ssrRenderSlot(_ctx.$slots, "footer", {}, null, _push2, _parent2, _scopeId);
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4" }, [
            vue.createVNode("div", { class: "sm:flex sm:items-start" }, [
              vue.createVNode("div", { class: "mx-auto shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10" }, [
                (vue.openBlock(), vue.createBlock("svg", {
                  class: "h-6 w-6 text-red-600",
                  stroke: "currentColor",
                  fill: "none",
                  viewBox: "0 0 24 24"
                }, [
                  vue.createVNode("path", {
                    "stroke-linecap": "round",
                    "stroke-linejoin": "round",
                    "stroke-width": "2",
                    d: "M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"
                  })
                ]))
              ]),
              vue.createVNode("div", { class: "mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left" }, [
                vue.createVNode("h3", { class: "text-lg" }, [
                  vue.renderSlot(_ctx.$slots, "title")
                ]),
                vue.createVNode("div", { class: "mt-2" }, [
                  vue.renderSlot(_ctx.$slots, "content")
                ])
              ])
            ])
          ]),
          vue.createVNode("div", { class: "flex flex-row justify-end px-6 py-4 bg-gray-100 text-right" }, [
            vue.renderSlot(_ctx.$slots, "footer")
          ])
        ];
      }
    }),
    _: 3
  }, _parent));
}
const _sfc_setup$1p = _sfc_main$1p.setup;
_sfc_main$1p.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/ConfirmationModal.vue");
  return _sfc_setup$1p ? _sfc_setup$1p(props, ctx) : void 0;
};
var JetConfirmationModal = /* @__PURE__ */ _export_sfc(_sfc_main$1p, [["ssrRender", _sfc_ssrRender$I]]);
const _sfc_main$1o = vue.defineComponent({
  props: {
    type: {
      type: String,
      default: "button"
    }
  }
});
function _sfc_ssrRender$H(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<button${serverRenderer.ssrRenderAttrs(vue.mergeProps({
    type: _ctx.type,
    class: "inline-flex items-center justify-center px-4 py-2 bg-red-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-red-500 focus:outline-none focus:border-red-700 focus:ring focus:ring-red-200 active:bg-red-600 disabled:opacity-25 transition"
  }, _attrs))}>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</button>`);
}
const _sfc_setup$1o = _sfc_main$1o.setup;
_sfc_main$1o.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/DangerButton.vue");
  return _sfc_setup$1o ? _sfc_setup$1o(props, ctx) : void 0;
};
var JetDangerButton = /* @__PURE__ */ _export_sfc(_sfc_main$1o, [["ssrRender", _sfc_ssrRender$H]]);
const _sfc_main$1n = vue.defineComponent({
  emits: ["submitted"],
  components: {
    JetSectionTitle
  },
  computed: {
    hasActions() {
      return !!this.$slots.actions;
    }
  }
});
function _sfc_ssrRender$G(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_section_title = vue.resolveComponent("jet-section-title");
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "md:grid md:grid-cols-3 md:gap-6" }, _attrs))}>`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_section_title, null, {
    title: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "title", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "title")
        ];
      }
    }),
    description: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "description", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "description")
        ];
      }
    }),
    _: 3
  }, _parent));
  _push(`<div class="mt-5 md:mt-0 md:col-span-2"><form><div class="${serverRenderer.ssrRenderClass([
    _ctx.hasActions ? "sm:rounded-tl-md sm:rounded-tr-md" : "sm:rounded-md",
    "px-4 py-5 bg-white sm:p-6 shadow"
  ])}"><div>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "form", {}, null, _push, _parent);
  _push(`</div></div>`);
  if (_ctx.hasActions) {
    _push(`<div class="flex items-center justify-end px-4 py-3 bg-gray-50 text-right sm:px-6 shadow sm:rounded-bl-md sm:rounded-br-md">`);
    serverRenderer.ssrRenderSlot(_ctx.$slots, "actions", {}, null, _push, _parent);
    _push(`</div>`);
  } else {
    _push(`<!---->`);
  }
  _push(`</form></div></div>`);
}
const _sfc_setup$1n = _sfc_main$1n.setup;
_sfc_main$1n.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/FormSection.vue");
  return _sfc_setup$1n ? _sfc_setup$1n(props, ctx) : void 0;
};
var JetFormSection = /* @__PURE__ */ _export_sfc(_sfc_main$1n, [["ssrRender", _sfc_ssrRender$G]]);
const _sfc_main$1m = vue.defineComponent({
  emits: ["update:checked"],
  props: {
    checked: {
      type: [Array, Boolean],
      default: false
    },
    value: {
      default: null
    }
  },
  computed: {
    proxyChecked: {
      get() {
        return this.checked;
      },
      set(val) {
        this.$emit("update:checked", val);
      }
    }
  }
});
function _sfc_ssrRender$F(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  let _temp0;
  _push(`<input${serverRenderer.ssrRenderAttrs((_temp0 = vue.mergeProps({
    type: "checkbox",
    value: _ctx.value,
    checked: Array.isArray(_ctx.proxyChecked) ? serverRenderer.ssrLooseContain(_ctx.proxyChecked, _ctx.value) : _ctx.proxyChecked,
    class: "rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50"
  }, _attrs), vue.mergeProps(_temp0, serverRenderer.ssrGetDynamicModelProps(_temp0, _ctx.proxyChecked))))}>`);
}
const _sfc_setup$1m = _sfc_main$1m.setup;
_sfc_main$1m.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/Checkbox.vue");
  return _sfc_setup$1m ? _sfc_setup$1m(props, ctx) : void 0;
};
var JetCheckbox = /* @__PURE__ */ _export_sfc(_sfc_main$1m, [["ssrRender", _sfc_ssrRender$F]]);
const _sfc_main$1l = vue.defineComponent({
  props: ["message"]
});
function _sfc_ssrRender$E(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({
    style: _ctx.message ? null : { display: "none" }
  }, _attrs))}><p class="text-sm text-red-600">${serverRenderer.ssrInterpolate(_ctx.message)}</p></div>`);
}
const _sfc_setup$1l = _sfc_main$1l.setup;
_sfc_main$1l.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/InputError.vue");
  return _sfc_setup$1l ? _sfc_setup$1l(props, ctx) : void 0;
};
var JetInputError = /* @__PURE__ */ _export_sfc(_sfc_main$1l, [["ssrRender", _sfc_ssrRender$E]]);
const _sfc_main$1k = {};
function _sfc_ssrRender$D(_ctx, _push, _parent, _attrs) {
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "hidden sm:block" }, _attrs))}><div class="py-8"><div class="border-t border-gray-200"></div></div></div>`);
}
const _sfc_setup$1k = _sfc_main$1k.setup;
_sfc_main$1k.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/SectionBorder.vue");
  return _sfc_setup$1k ? _sfc_setup$1k(props, ctx) : void 0;
};
var JetSectionBorder = /* @__PURE__ */ _export_sfc(_sfc_main$1k, [["ssrRender", _sfc_ssrRender$D]]);
const _sfc_main$1j = vue.defineComponent({
  components: {
    JetActionMessage,
    JetActionSection,
    JetButton,
    JetConfirmationModal,
    JetDangerButton,
    JetDialogModal: JetModalDialog,
    JetFormSection,
    JetInput,
    JetCheckbox,
    JetInputError,
    JetLabel,
    JetSecondaryButton,
    JetSectionBorder
  },
  props: [
    "tokens",
    "availablePermissions",
    "defaultPermissions"
  ],
  data() {
    return {
      createApiTokenForm: this.$inertia.form({
        name: "",
        permissions: this.defaultPermissions
      }),
      updateApiTokenForm: this.$inertia.form({
        permissions: []
      }),
      deleteApiTokenForm: this.$inertia.form(),
      displayingToken: false,
      managingPermissionsFor: null,
      apiTokenBeingDeleted: null
    };
  },
  methods: {
    createApiToken() {
      this.createApiTokenForm.post(route("api-tokens.store"), {
        preserveScroll: true,
        onSuccess: () => {
          this.displayingToken = true;
          this.createApiTokenForm.reset();
        }
      });
    },
    manageApiTokenPermissions(token) {
      this.updateApiTokenForm.permissions = token.abilities;
      this.managingPermissionsFor = token;
    },
    updateApiToken() {
      this.updateApiTokenForm.put(route("api-tokens.update", this.managingPermissionsFor), {
        preserveScroll: true,
        preserveState: true,
        onSuccess: () => this.managingPermissionsFor = null
      });
    },
    confirmApiTokenDeletion(token) {
      this.apiTokenBeingDeleted = token;
    },
    deleteApiToken() {
      this.deleteApiTokenForm.delete(route("api-tokens.destroy", this.apiTokenBeingDeleted), {
        preserveScroll: true,
        preserveState: true,
        onSuccess: () => this.apiTokenBeingDeleted = null
      });
    }
  }
});
function _sfc_ssrRender$C(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_form_section = vue.resolveComponent("jet-form-section");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_jet_checkbox = vue.resolveComponent("jet-checkbox");
  const _component_jet_action_message = vue.resolveComponent("jet-action-message");
  const _component_jet_button = vue.resolveComponent("jet-button");
  const _component_jet_section_border = vue.resolveComponent("jet-section-border");
  const _component_jet_action_section = vue.resolveComponent("jet-action-section");
  const _component_jet_dialog_modal = vue.resolveComponent("jet-dialog-modal");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  const _component_jet_confirmation_modal = vue.resolveComponent("jet-confirmation-modal");
  const _component_jet_danger_button = vue.resolveComponent("jet-danger-button");
  _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)}>`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_form_section, { onSubmitted: _ctx.createApiToken }, {
    title: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Create API Token `);
      } else {
        return [
          vue.createTextVNode(" Create API Token ")
        ];
      }
    }),
    description: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` API tokens allow third-party services to authenticate with our application on your behalf. `);
      } else {
        return [
          vue.createTextVNode(" API tokens allow third-party services to authenticate with our application on your behalf. ")
        ];
      }
    }),
    form: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="col-span-6 sm:col-span-4"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "name",
          value: "Name"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "name",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: _ctx.createApiTokenForm.name,
          "onUpdate:modelValue": ($event) => _ctx.createApiTokenForm.name = $event,
          autofocus: ""
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: _ctx.createApiTokenForm.errors.name,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div>`);
        if (_ctx.availablePermissions.length > 0) {
          _push2(`<div class="col-span-6"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
            for: "permissions",
            value: "Permissions"
          }, null, _parent2, _scopeId));
          _push2(`<div class="mt-2 grid grid-cols-1 md:grid-cols-2 gap-4"${_scopeId}><!--[-->`);
          serverRenderer.ssrRenderList(_ctx.availablePermissions, (permission) => {
            _push2(`<div${_scopeId}><label class="flex items-center"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(_component_jet_checkbox, {
              value: permission,
              checked: _ctx.createApiTokenForm.permissions,
              "onUpdate:checked": ($event) => _ctx.createApiTokenForm.permissions = $event
            }, null, _parent2, _scopeId));
            _push2(`<span class="ml-2 text-sm text-gray-600"${_scopeId}>${serverRenderer.ssrInterpolate(permission)}</span></label></div>`);
          });
          _push2(`<!--]--></div></div>`);
        } else {
          _push2(`<!---->`);
        }
      } else {
        return [
          vue.createVNode("div", { class: "col-span-6 sm:col-span-4" }, [
            vue.createVNode(_component_jet_label, {
              for: "name",
              value: "Name"
            }),
            vue.createVNode(_component_jet_input, {
              id: "name",
              type: "text",
              class: "mt-1 block w-full",
              modelValue: _ctx.createApiTokenForm.name,
              "onUpdate:modelValue": ($event) => _ctx.createApiTokenForm.name = $event,
              autofocus: ""
            }, null, 8, ["modelValue", "onUpdate:modelValue"]),
            vue.createVNode(_component_jet_input_error, {
              message: _ctx.createApiTokenForm.errors.name,
              class: "mt-2"
            }, null, 8, ["message"])
          ]),
          _ctx.availablePermissions.length > 0 ? (vue.openBlock(), vue.createBlock("div", {
            key: 0,
            class: "col-span-6"
          }, [
            vue.createVNode(_component_jet_label, {
              for: "permissions",
              value: "Permissions"
            }),
            vue.createVNode("div", { class: "mt-2 grid grid-cols-1 md:grid-cols-2 gap-4" }, [
              (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(_ctx.availablePermissions, (permission) => {
                return vue.openBlock(), vue.createBlock("div", { key: permission }, [
                  vue.createVNode("label", { class: "flex items-center" }, [
                    vue.createVNode(_component_jet_checkbox, {
                      value: permission,
                      checked: _ctx.createApiTokenForm.permissions,
                      "onUpdate:checked": ($event) => _ctx.createApiTokenForm.permissions = $event
                    }, null, 8, ["value", "checked", "onUpdate:checked"]),
                    vue.createVNode("span", { class: "ml-2 text-sm text-gray-600" }, vue.toDisplayString(permission), 1)
                  ])
                ]);
              }), 128))
            ])
          ])) : vue.createCommentVNode("", true)
        ];
      }
    }),
    actions: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_action_message, {
          on: _ctx.createApiTokenForm.recentlySuccessful,
          class: "mr-3"
        }, {
          default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Created. `);
            } else {
              return [
                vue.createTextVNode(" Created. ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          class: { "opacity-25": _ctx.createApiTokenForm.processing },
          disabled: _ctx.createApiTokenForm.processing
        }, {
          default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Create `);
            } else {
              return [
                vue.createTextVNode(" Create ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_action_message, {
            on: _ctx.createApiTokenForm.recentlySuccessful,
            class: "mr-3"
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Created. ")
            ]),
            _: 1
          }, 8, ["on"]),
          vue.createVNode(_component_jet_button, {
            class: { "opacity-25": _ctx.createApiTokenForm.processing },
            disabled: _ctx.createApiTokenForm.processing
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Create ")
            ]),
            _: 1
          }, 8, ["class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
  if (_ctx.tokens.length > 0) {
    _push(`<div>`);
    _push(serverRenderer.ssrRenderComponent(_component_jet_section_border, null, null, _parent));
    _push(`<div class="mt-10 sm:mt-0">`);
    _push(serverRenderer.ssrRenderComponent(_component_jet_action_section, null, {
      title: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(` Manage API Tokens `);
        } else {
          return [
            vue.createTextVNode(" Manage API Tokens ")
          ];
        }
      }),
      description: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(` You may delete any of your existing tokens if they are no longer needed. `);
        } else {
          return [
            vue.createTextVNode(" You may delete any of your existing tokens if they are no longer needed. ")
          ];
        }
      }),
      content: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(`<div class="space-y-6"${_scopeId}><!--[-->`);
          serverRenderer.ssrRenderList(_ctx.tokens, (token) => {
            _push2(`<div class="flex items-center justify-between"${_scopeId}><div${_scopeId}>${serverRenderer.ssrInterpolate(token.name)}</div><div class="flex items-center"${_scopeId}>`);
            if (token.last_used_ago) {
              _push2(`<div class="text-sm text-gray-400"${_scopeId}> Last used ${serverRenderer.ssrInterpolate(token.last_used_ago)}</div>`);
            } else {
              _push2(`<!---->`);
            }
            if (_ctx.availablePermissions.length > 0) {
              _push2(`<button class="cursor-pointer ml-6 text-sm text-gray-400 underline"${_scopeId}> Permissions </button>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`<button class="cursor-pointer ml-6 text-sm text-red-500"${_scopeId}> Delete </button></div></div>`);
          });
          _push2(`<!--]--></div>`);
        } else {
          return [
            vue.createVNode("div", { class: "space-y-6" }, [
              (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(_ctx.tokens, (token) => {
                return vue.openBlock(), vue.createBlock("div", {
                  class: "flex items-center justify-between",
                  key: token.id
                }, [
                  vue.createVNode("div", null, vue.toDisplayString(token.name), 1),
                  vue.createVNode("div", { class: "flex items-center" }, [
                    token.last_used_ago ? (vue.openBlock(), vue.createBlock("div", {
                      key: 0,
                      class: "text-sm text-gray-400"
                    }, " Last used " + vue.toDisplayString(token.last_used_ago), 1)) : vue.createCommentVNode("", true),
                    _ctx.availablePermissions.length > 0 ? (vue.openBlock(), vue.createBlock("button", {
                      key: 1,
                      class: "cursor-pointer ml-6 text-sm text-gray-400 underline",
                      onClick: ($event) => _ctx.manageApiTokenPermissions(token)
                    }, " Permissions ", 8, ["onClick"])) : vue.createCommentVNode("", true),
                    vue.createVNode("button", {
                      class: "cursor-pointer ml-6 text-sm text-red-500",
                      onClick: ($event) => _ctx.confirmApiTokenDeletion(token)
                    }, " Delete ", 8, ["onClick"])
                  ])
                ]);
              }), 128))
            ])
          ];
        }
      }),
      _: 1
    }, _parent));
    _push(`</div></div>`);
  } else {
    _push(`<!---->`);
  }
  _push(serverRenderer.ssrRenderComponent(_component_jet_dialog_modal, {
    show: _ctx.displayingToken,
    onClose: ($event) => _ctx.displayingToken = false
  }, {
    title: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` API Token `);
      } else {
        return [
          vue.createTextVNode(" API Token ")
        ];
      }
    }),
    content: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div${_scopeId}> Please copy your new API token. For your security, it won&#39;t be shown again. </div>`);
        if (_ctx.$page.props.jetstream.flash.token) {
          _push2(`<div class="mt-4 bg-gray-100 px-4 py-2 rounded font-mono text-sm text-gray-500"${_scopeId}>${serverRenderer.ssrInterpolate(_ctx.$page.props.jetstream.flash.token)}</div>`);
        } else {
          _push2(`<!---->`);
        }
      } else {
        return [
          vue.createVNode("div", null, " Please copy your new API token. For your security, it won't be shown again. "),
          _ctx.$page.props.jetstream.flash.token ? (vue.openBlock(), vue.createBlock("div", {
            key: 0,
            class: "mt-4 bg-gray-100 px-4 py-2 rounded font-mono text-sm text-gray-500"
          }, vue.toDisplayString(_ctx.$page.props.jetstream.flash.token), 1)) : vue.createCommentVNode("", true)
        ];
      }
    }),
    footer: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
          onClick: ($event) => _ctx.displayingToken = false
        }, {
          default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Close `);
            } else {
              return [
                vue.createTextVNode(" Close ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_secondary_button, {
            onClick: ($event) => _ctx.displayingToken = false
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Close ")
            ]),
            _: 1
          }, 8, ["onClick"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_jet_dialog_modal, {
    show: _ctx.managingPermissionsFor,
    onClose: ($event) => _ctx.managingPermissionsFor = null
  }, {
    title: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` API Token Permissions `);
      } else {
        return [
          vue.createTextVNode(" API Token Permissions ")
        ];
      }
    }),
    content: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="grid grid-cols-1 md:grid-cols-2 gap-4"${_scopeId}><!--[-->`);
        serverRenderer.ssrRenderList(_ctx.availablePermissions, (permission) => {
          _push2(`<div${_scopeId}><label class="flex items-center"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_checkbox, {
            value: permission,
            checked: _ctx.updateApiTokenForm.permissions,
            "onUpdate:checked": ($event) => _ctx.updateApiTokenForm.permissions = $event
          }, null, _parent2, _scopeId));
          _push2(`<span class="ml-2 text-sm text-gray-600"${_scopeId}>${serverRenderer.ssrInterpolate(permission)}</span></label></div>`);
        });
        _push2(`<!--]--></div>`);
      } else {
        return [
          vue.createVNode("div", { class: "grid grid-cols-1 md:grid-cols-2 gap-4" }, [
            (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(_ctx.availablePermissions, (permission) => {
              return vue.openBlock(), vue.createBlock("div", { key: permission }, [
                vue.createVNode("label", { class: "flex items-center" }, [
                  vue.createVNode(_component_jet_checkbox, {
                    value: permission,
                    checked: _ctx.updateApiTokenForm.permissions,
                    "onUpdate:checked": ($event) => _ctx.updateApiTokenForm.permissions = $event
                  }, null, 8, ["value", "checked", "onUpdate:checked"]),
                  vue.createVNode("span", { class: "ml-2 text-sm text-gray-600" }, vue.toDisplayString(permission), 1)
                ])
              ]);
            }), 128))
          ])
        ];
      }
    }),
    footer: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
          onClick: ($event) => _ctx.managingPermissionsFor = null
        }, {
          default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Cancel `);
            } else {
              return [
                vue.createTextVNode(" Cancel ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          class: ["ml-3", { "opacity-25": _ctx.updateApiTokenForm.processing }],
          onClick: _ctx.updateApiToken,
          disabled: _ctx.updateApiTokenForm.processing
        }, {
          default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Save `);
            } else {
              return [
                vue.createTextVNode(" Save ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_secondary_button, {
            onClick: ($event) => _ctx.managingPermissionsFor = null
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Cancel ")
            ]),
            _: 1
          }, 8, ["onClick"]),
          vue.createVNode(_component_jet_button, {
            class: ["ml-3", { "opacity-25": _ctx.updateApiTokenForm.processing }],
            onClick: _ctx.updateApiToken,
            disabled: _ctx.updateApiTokenForm.processing
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Save ")
            ]),
            _: 1
          }, 8, ["onClick", "class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_jet_confirmation_modal, {
    show: _ctx.apiTokenBeingDeleted,
    onClose: ($event) => _ctx.apiTokenBeingDeleted = null
  }, {
    title: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Delete API Token `);
      } else {
        return [
          vue.createTextVNode(" Delete API Token ")
        ];
      }
    }),
    content: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Are you sure you would like to delete this API token? `);
      } else {
        return [
          vue.createTextVNode(" Are you sure you would like to delete this API token? ")
        ];
      }
    }),
    footer: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
          onClick: ($event) => _ctx.apiTokenBeingDeleted = null
        }, {
          default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Cancel `);
            } else {
              return [
                vue.createTextVNode(" Cancel ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_danger_button, {
          class: ["ml-3", { "opacity-25": _ctx.deleteApiTokenForm.processing }],
          onClick: _ctx.deleteApiToken,
          disabled: _ctx.deleteApiTokenForm.processing
        }, {
          default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Delete `);
            } else {
              return [
                vue.createTextVNode(" Delete ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_secondary_button, {
            onClick: ($event) => _ctx.apiTokenBeingDeleted = null
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Cancel ")
            ]),
            _: 1
          }, 8, ["onClick"]),
          vue.createVNode(_component_jet_danger_button, {
            class: ["ml-3", { "opacity-25": _ctx.deleteApiTokenForm.processing }],
            onClick: _ctx.deleteApiToken,
            disabled: _ctx.deleteApiTokenForm.processing
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Delete ")
            ]),
            _: 1
          }, 8, ["onClick", "class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div>`);
}
const _sfc_setup$1j = _sfc_main$1j.setup;
_sfc_main$1j.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/API/Partials/ApiTokenManager.vue");
  return _sfc_setup$1j ? _sfc_setup$1j(props, ctx) : void 0;
};
var ApiTokenManager = /* @__PURE__ */ _export_sfc(_sfc_main$1j, [["ssrRender", _sfc_ssrRender$C]]);
var ApiTokenManager$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": ApiTokenManager
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1i = vue.defineComponent({
  data() {
    return {
      show: true
    };
  },
  computed: {
    style() {
      var _a2;
      return ((_a2 = this.$page.props.jetstream.flash) == null ? void 0 : _a2.bannerStyle) || "success";
    },
    message() {
      var _a2;
      return ((_a2 = this.$page.props.jetstream.flash) == null ? void 0 : _a2.banner) || "";
    }
  }
});
function _sfc_ssrRender$B(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)}>`);
  if (_ctx.show && _ctx.message) {
    _push(`<div class="${serverRenderer.ssrRenderClass({ "bg-indigo-500": _ctx.style == "success", "bg-red-700": _ctx.style == "danger" })}"><div class="max-w-screen-xl mx-auto py-2 px-3 sm:px-6 lg:px-8"><div class="flex items-center justify-between flex-wrap"><div class="w-0 flex-1 flex items-center min-w-0"><span class="${serverRenderer.ssrRenderClass([{ "bg-indigo-600": _ctx.style == "success", "bg-red-600": _ctx.style == "danger" }, "flex p-2 rounded-lg"])}">`);
    if (_ctx.style == "success") {
      _push(`<svg class="h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>`);
    } else {
      _push(`<!---->`);
    }
    if (_ctx.style == "danger") {
      _push(`<svg class="h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"></path></svg>`);
    } else {
      _push(`<!---->`);
    }
    _push(`</span><p class="ml-3 font-medium text-sm text-white truncate">${serverRenderer.ssrInterpolate(_ctx.message)}</p></div><div class="shrink-0 sm:ml-3"><button type="button" class="${serverRenderer.ssrRenderClass([{ "hover:bg-indigo-600 focus:bg-indigo-600": _ctx.style == "success", "hover:bg-red-600 focus:bg-red-600": _ctx.style == "danger" }, "-mr-1 flex p-2 rounded-md focus:outline-none sm:-mr-2 transition"])}" aria-label="Dismiss"><svg class="h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path></svg></button></div></div></div></div>`);
  } else {
    _push(`<!---->`);
  }
  _push(`</div>`);
}
const _sfc_setup$1i = _sfc_main$1i.setup;
_sfc_main$1i.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/Banner.vue");
  return _sfc_setup$1i ? _sfc_setup$1i(props, ctx) : void 0;
};
var JetBanner = /* @__PURE__ */ _export_sfc(_sfc_main$1i, [["ssrRender", _sfc_ssrRender$B]]);
var Footer_vue_vue_type_style_index_0_scoped_true_lang = "";
const _sfc_main$1h = {};
function _sfc_ssrRender$A(_ctx, _push, _parent, _attrs) {
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ id: "footer" }, _attrs))} data-v-69f5d2cd><div class="container mx-auto" data-v-69f5d2cd><div class="flex justify-center py-5" data-v-69f5d2cd><div class="col-md-12" data-v-69f5d2cd><div class="flex brands" data-v-69f5d2cd><div class="col-md-4 mr-5" data-v-69f5d2cd><a href="https://discord.gg/3tFCxgm27X" target="\u201D_blank\u201D" data-v-69f5d2cd><img src="/img/discord.png" class="img-fluid" data-v-69f5d2cd></a></div><div class="col-md-4 mr-5" data-v-69f5d2cd><a href="https://facebook.com/revenggero" target="\u201D_blank\u201D" data-v-69f5d2cd><img src="/img/fb.png" class="img-fluid" data-v-69f5d2cd></a></div><div class="col-md-4" data-v-69f5d2cd><a href="https://instagram.com/revenge_ro/" target="\u201D_blank\u201D" data-v-69f5d2cd><img src="/img/ig.png" class="img-fluid" data-v-69f5d2cd></a></div></div></div></div><div class="text-center" data-v-69f5d2cd><div class="col-md-12" data-v-69f5d2cd><p id="copyright" data-v-69f5d2cd>\xA9 RevengeRO <span id="year" data-v-69f5d2cd></span> - We made it with <span class="text-red-500" data-v-69f5d2cd>\u2764</span> <br data-v-69f5d2cd>Powered by <span class="text-sky-500" data-v-69f5d2cd>xPanel</span></p></div></div></div></div>`);
}
const _sfc_setup$1h = _sfc_main$1h.setup;
_sfc_main$1h.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Footer.vue");
  return _sfc_setup$1h ? _sfc_setup$1h(props, ctx) : void 0;
};
var xFooter = /* @__PURE__ */ _export_sfc(_sfc_main$1h, [["ssrRender", _sfc_ssrRender$A], ["__scopeId", "data-v-69f5d2cd"]]);
var Header_vue_vue_type_style_index_0_scoped_true_lang = "";
const _sfc_main$1g = {
  __name: "Header",
  __ssrInlineRender: true,
  props: {
    title: String,
    user: Object
  },
  setup(__props) {
    const header_data = vue.reactive({
      online_users: 0,
      online_peak: 0
    });
    vue.onMounted(() => {
      get_online_players();
      const burger = document.querySelectorAll(".navbar-burger");
      const menu = document.querySelectorAll(".navbar-menu");
      if (burger.length && menu.length) {
        for (var i2 = 0; i2 < burger.length; i2++) {
          burger[i2].addEventListener("click", function() {
            for (var j2 = 0; j2 < menu.length; j2++) {
              menu[j2].classList.toggle("hidden");
            }
          });
        }
      }
      const close = document.querySelectorAll(".navbar-close");
      const backdrop = document.querySelectorAll(".navbar-backdrop");
      if (close.length) {
        for (var i2 = 0; i2 < close.length; i2++) {
          close[i2].addEventListener("click", function() {
            for (var j2 = 0; j2 < menu.length; j2++) {
              menu[j2].classList.toggle("hidden");
            }
          });
        }
      }
      if (backdrop.length) {
        for (var i2 = 0; i2 < backdrop.length; i2++) {
          backdrop[i2].addEventListener("click", function() {
            for (var j2 = 0; j2 < menu.length; j2++) {
              menu[j2].classList.toggle("hidden");
            }
          });
        }
      }
    });
    const user = inertiaVue3.usePage().props.value.user;
    const isAuth = vue.computed(() => {
      return user !== null;
    });
    async function get_online_players() {
      await axios.get("/api/online").then((response) => {
        header_data.online_users = response.data.online_users;
        header_data.online_peak = response.data.online_peak;
      }).catch((error) => {
        console.log(error);
      });
    }
    function logout() {
      inertia.Inertia.post("/logout");
    }
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<!--[--><nav class="absolute w-full px-4 flex justify-between items-center bg-black/80" data-v-b93d21d6>`);
      _push(serverRenderer.ssrRenderComponent(vue.unref(inertiaVue3.Link), {
        class: "relative text-3xl font-bold leading-none py-2",
        href: _ctx.route("home")
      }, {
        default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<img src="/img/revenge-logo.png" alt="" data-v-b93d21d6${_scopeId}>`);
          } else {
            return [
              vue.createVNode("img", {
                src: "/img/revenge-logo.png",
                alt: ""
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<div class="xl:hidden" data-v-b93d21d6><button class="navbar-burger flex items-center text-white p-3" data-v-b93d21d6><svg class="block h-10 w-4 fill-current" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg" data-v-b93d21d6><path d="M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z" data-v-b93d21d6></path></svg></button></div><ul class="hidden xl:flex xl:mx-auto xl:flex xl:items-center xl:space-x-6 absolute left-[15rem]" data-v-b93d21d6><li data-v-b93d21d6>`);
      _push(serverRenderer.ssrRenderComponent(vue.unref(inertiaVue3.Link), {
        class: "text-sm uppercase text-white hover:text-sky-500",
        href: _ctx.route("home")
      }, {
        default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`Home`);
          } else {
            return [
              vue.createTextVNode("Home")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</li><li class="text-gray-300" data-v-b93d21d6><svg xmlns="http://www.w3.org/2000/svg" fill="none" stroke="currentColor" class="w-4 h-4 current-fill" viewBox="0 0 24 24" data-v-b93d21d6><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 5v0m0 7v0m0 7v0m0-13a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z" data-v-b93d21d6></path></svg></li><li data-v-b93d21d6>`);
      _push(serverRenderer.ssrRenderComponent(JetDropdown, {
        align: "right",
        width: "48"
      }, {
        trigger: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<span class="inline-flex rounded-md flex items-center cursor-pointer" data-v-b93d21d6${_scopeId}><button class="text-sm uppercase text-white hover:text-sky-500 mr-1" data-v-b93d21d6${_scopeId}> Information </button><span class="caret" data-v-b93d21d6${_scopeId}></span></span>`);
          } else {
            return [
              vue.createVNode("span", { class: "inline-flex rounded-md flex items-center cursor-pointer" }, [
                vue.createVNode("button", { class: "text-sm uppercase text-white hover:text-sky-500 mr-1" }, " Information "),
                vue.createVNode("span", { class: "caret" })
              ])
            ];
          }
        }),
        content: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="block px-4 py-2 text-xs text-gray-400" data-v-b93d21d6${_scopeId}> Server Information </div>`);
            _push2(serverRenderer.ssrRenderComponent(JetDropdownLink, {
              href: _ctx.route("information.mvp_cards")
            }, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` MvP Cards `);
                } else {
                  return [
                    vue.createTextVNode(" MvP Cards ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<div class="border-t border-gray-100" data-v-b93d21d6${_scopeId}></div><div class="border-t border-gray-100" data-v-b93d21d6${_scopeId}></div>`);
          } else {
            return [
              vue.createVNode("div", { class: "block px-4 py-2 text-xs text-gray-400" }, " Server Information "),
              vue.createVNode(JetDropdownLink, {
                href: _ctx.route("information.mvp_cards")
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" MvP Cards ")
                ]),
                _: 1
              }, 8, ["href"]),
              vue.createVNode("div", { class: "border-t border-gray-100" }),
              vue.createVNode("div", { class: "border-t border-gray-100" })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</li><li class="text-gray-300" data-v-b93d21d6><svg xmlns="http://www.w3.org/2000/svg" fill="none" stroke="currentColor" class="w-4 h-4 current-fill" viewBox="0 0 24 24" data-v-b93d21d6><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 5v0m0 7v0m0 7v0m0-13a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z" data-v-b93d21d6></path></svg></li><li data-v-b93d21d6>`);
      _push(serverRenderer.ssrRenderComponent(vue.unref(inertiaVue3.Link), {
        class: "text-sm uppercase text-white hover:text-sky-500",
        href: _ctx.route("downloads")
      }, {
        default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`Downloads`);
          } else {
            return [
              vue.createTextVNode("Downloads")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</li><li class="text-gray-300" data-v-b93d21d6><svg xmlns="http://www.w3.org/2000/svg" fill="none" stroke="currentColor" class="w-4 h-4 current-fill" viewBox="0 0 24 24" data-v-b93d21d6><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 5v0m0 7v0m0 7v0m0-13a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z" data-v-b93d21d6></path></svg></li><li data-v-b93d21d6>`);
      _push(serverRenderer.ssrRenderComponent(JetDropdown, {
        align: "right",
        width: "48"
      }, {
        trigger: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<span class="inline-flex rounded-md flex items-center cursor-pointer" data-v-b93d21d6${_scopeId}><button class="text-sm uppercase text-white hover:text-sky-500 mr-1" data-v-b93d21d6${_scopeId}> Rankings </button><span class="caret" data-v-b93d21d6${_scopeId}></span></span>`);
          } else {
            return [
              vue.createVNode("span", { class: "inline-flex rounded-md flex items-center cursor-pointer" }, [
                vue.createVNode("button", { class: "text-sm uppercase text-white hover:text-sky-500 mr-1" }, " Rankings "),
                vue.createVNode("span", { class: "caret" })
              ])
            ];
          }
        }),
        content: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="block px-4 py-2 text-xs text-gray-400" data-v-b93d21d6${_scopeId}> Revenge RO ~ Rankings </div>`);
            _push2(serverRenderer.ssrRenderComponent(JetDropdownLink, {
              href: _ctx.route("rank.resumen")
            }, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Resumen `);
                } else {
                  return [
                    vue.createTextVNode(" Resumen ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<div class="border-t border-gray-100" data-v-b93d21d6${_scopeId}></div>`);
            _push2(serverRenderer.ssrRenderComponent(JetDropdownLink, {
              href: _ctx.route("rank.bg")
            }, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Battleground `);
                } else {
                  return [
                    vue.createTextVNode(" Battleground ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<div class="border-t border-gray-100" data-v-b93d21d6${_scopeId}></div>`);
            _push2(serverRenderer.ssrRenderComponent(JetDropdownLink, {
              href: _ctx.route("rank.woe-damage")
            }, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Guild vs Guild `);
                } else {
                  return [
                    vue.createTextVNode(" Guild vs Guild ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<div class="border-t border-gray-100" data-v-b93d21d6${_scopeId}></div>`);
            _push2(serverRenderer.ssrRenderComponent(JetDropdownLink, {
              href: _ctx.route("rank.woe")
            }, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` WoE `);
                } else {
                  return [
                    vue.createTextVNode(" WoE ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<div class="border-t border-gray-100" data-v-b93d21d6${_scopeId}></div>`);
            _push2(serverRenderer.ssrRenderComponent(JetDropdownLink, {
              href: _ctx.route("rank.monster-hunter")
            }, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Monster Hunter `);
                } else {
                  return [
                    vue.createTextVNode(" Monster Hunter ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<div class="border-t border-gray-100" data-v-b93d21d6${_scopeId}></div>`);
            _push2(serverRenderer.ssrRenderComponent(JetDropdownLink, {
              href: _ctx.route("rank.mvps")
            }, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` MvP&#39;s `);
                } else {
                  return [
                    vue.createTextVNode(" MvP's ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<div class="border-t border-gray-100" data-v-b93d21d6${_scopeId}></div>`);
            _push2(serverRenderer.ssrRenderComponent(JetDropdownLink, {
              href: _ctx.route("rank.pvp")
            }, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` PvP `);
                } else {
                  return [
                    vue.createTextVNode(" PvP ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<div class="border-t border-gray-100" data-v-b93d21d6${_scopeId}></div>`);
            _push2(serverRenderer.ssrRenderComponent(JetDropdownLink, {
              href: _ctx.route("rank.cashpoints")
            }, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Cash Points `);
                } else {
                  return [
                    vue.createTextVNode(" Cash Points ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<div class="border-t border-gray-100" data-v-b93d21d6${_scopeId}></div>`);
            _push2(serverRenderer.ssrRenderComponent(JetDropdownLink, {
              href: _ctx.route("rank.playtime")
            }, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Playtime `);
                } else {
                  return [
                    vue.createTextVNode(" Playtime ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<div class="border-t border-gray-100" data-v-b93d21d6${_scopeId}></div>`);
            _push2(serverRenderer.ssrRenderComponent(JetDropdownLink, {
              href: _ctx.route("rank.deaths")
            }, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Deaths `);
                } else {
                  return [
                    vue.createTextVNode(" Deaths ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode("div", { class: "block px-4 py-2 text-xs text-gray-400" }, " Revenge RO ~ Rankings "),
              vue.createVNode(JetDropdownLink, {
                href: _ctx.route("rank.resumen")
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Resumen ")
                ]),
                _: 1
              }, 8, ["href"]),
              vue.createVNode("div", { class: "border-t border-gray-100" }),
              vue.createVNode(JetDropdownLink, {
                href: _ctx.route("rank.bg")
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Battleground ")
                ]),
                _: 1
              }, 8, ["href"]),
              vue.createVNode("div", { class: "border-t border-gray-100" }),
              vue.createVNode(JetDropdownLink, {
                href: _ctx.route("rank.woe-damage")
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Guild vs Guild ")
                ]),
                _: 1
              }, 8, ["href"]),
              vue.createVNode("div", { class: "border-t border-gray-100" }),
              vue.createVNode(JetDropdownLink, {
                href: _ctx.route("rank.woe")
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" WoE ")
                ]),
                _: 1
              }, 8, ["href"]),
              vue.createVNode("div", { class: "border-t border-gray-100" }),
              vue.createVNode(JetDropdownLink, {
                href: _ctx.route("rank.monster-hunter")
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Monster Hunter ")
                ]),
                _: 1
              }, 8, ["href"]),
              vue.createVNode("div", { class: "border-t border-gray-100" }),
              vue.createVNode(JetDropdownLink, {
                href: _ctx.route("rank.mvps")
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" MvP's ")
                ]),
                _: 1
              }, 8, ["href"]),
              vue.createVNode("div", { class: "border-t border-gray-100" }),
              vue.createVNode(JetDropdownLink, {
                href: _ctx.route("rank.pvp")
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" PvP ")
                ]),
                _: 1
              }, 8, ["href"]),
              vue.createVNode("div", { class: "border-t border-gray-100" }),
              vue.createVNode(JetDropdownLink, {
                href: _ctx.route("rank.cashpoints")
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Cash Points ")
                ]),
                _: 1
              }, 8, ["href"]),
              vue.createVNode("div", { class: "border-t border-gray-100" }),
              vue.createVNode(JetDropdownLink, {
                href: _ctx.route("rank.playtime")
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Playtime ")
                ]),
                _: 1
              }, 8, ["href"]),
              vue.createVNode("div", { class: "border-t border-gray-100" }),
              vue.createVNode(JetDropdownLink, {
                href: _ctx.route("rank.deaths")
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Deaths ")
                ]),
                _: 1
              }, 8, ["href"])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</li><li class="text-gray-300" data-v-b93d21d6><svg xmlns="http://www.w3.org/2000/svg" fill="none" stroke="currentColor" class="w-4 h-4 current-fill" viewBox="0 0 24 24" data-v-b93d21d6><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 5v0m0 7v0m0 7v0m0-13a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z" data-v-b93d21d6></path></svg></li><li data-v-b93d21d6>`);
      _push(serverRenderer.ssrRenderComponent(vue.unref(inertiaVue3.Link), {
        href: _ctx.route("donations"),
        class: "text-sm text-white uppercase hover:text-sky-500"
      }, {
        default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`Donations`);
          } else {
            return [
              vue.createTextVNode("Donations")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</li>`);
      if (vue.unref(isAuth)) {
        _push(`<!--[--><li class="text-gray-300" data-v-b93d21d6><svg xmlns="http://www.w3.org/2000/svg" fill="none" stroke="currentColor" class="w-4 h-4 current-fill" viewBox="0 0 24 24" data-v-b93d21d6><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 5v0m0 7v0m0 7v0m0-13a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z" data-v-b93d21d6></path></svg></li><li data-v-b93d21d6>`);
        _push(serverRenderer.ssrRenderComponent(vue.unref(inertiaVue3.Link), {
          href: _ctx.route("vote4points"),
          class: "text-sm text-white uppercase hover:text-sky-500"
        }, {
          default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`Vote 4 Points`);
            } else {
              return [
                vue.createTextVNode("Vote 4 Points")
              ];
            }
          }),
          _: 1
        }, _parent));
        _push(`</li><li class="text-gray-300" data-v-b93d21d6><svg xmlns="http://www.w3.org/2000/svg" fill="none" stroke="currentColor" class="w-4 h-4 current-fill" viewBox="0 0 24 24" data-v-b93d21d6><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 5v0m0 7v0m0 7v0m0-13a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z" data-v-b93d21d6></path></svg></li><li data-v-b93d21d6>`);
        _push(serverRenderer.ssrRenderComponent(vue.unref(inertiaVue3.Link), {
          href: _ctx.route("transfer.index"),
          class: "text-sm text-white uppercase hover:text-sky-500"
        }, {
          default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`Transfer`);
            } else {
              return [
                vue.createTextVNode("Transfer")
              ];
            }
          }),
          _: 1
        }, _parent));
        _push(`</li><!--]-->`);
      } else {
        _push(`<!---->`);
      }
      _push(`</ul>`);
      if (vue.unref(isAuth)) {
        _push(`<div class="ml-3 flex my-auto" data-v-b93d21d6><p class="lg:mr-4 lg:inline-block py-2 px-6 border border-2 text-sm text-white font-bold rounded-xl transition duration-200"${serverRenderer.ssrRenderAttr("href", _ctx.route("register"))} data-v-b93d21d6> Online <span class="text-green-500" data-v-b93d21d6>${serverRenderer.ssrInterpolate(header_data.online_users)}</span> | Peak <span class="text-green-500" data-v-b93d21d6>${serverRenderer.ssrInterpolate(header_data.online_peak)}</span></p>`);
        _push(serverRenderer.ssrRenderComponent(JetDropdown, {
          align: "right",
          width: "48"
        }, {
          trigger: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`<span class="inline-flex rounded-md" data-v-b93d21d6${_scopeId}><button type="button" class="inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 bg-white hover:text-gray-700 focus:outline-none transition" data-v-b93d21d6${_scopeId}>${serverRenderer.ssrInterpolate(_ctx.$page.props.user.email)} <svg class="ml-2 -mr-0.5 h-4 w-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" data-v-b93d21d6${_scopeId}><path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" data-v-b93d21d6${_scopeId}></path></svg></button></span>`);
            } else {
              return [
                vue.createVNode("span", { class: "inline-flex rounded-md" }, [
                  vue.createVNode("button", {
                    type: "button",
                    class: "inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 bg-white hover:text-gray-700 focus:outline-none transition"
                  }, [
                    vue.createTextVNode(vue.toDisplayString(_ctx.$page.props.user.email) + " ", 1),
                    (vue.openBlock(), vue.createBlock("svg", {
                      class: "ml-2 -mr-0.5 h-4 w-4",
                      xmlns: "http://www.w3.org/2000/svg",
                      viewBox: "0 0 20 20",
                      fill: "currentColor"
                    }, [
                      vue.createVNode("path", {
                        "fill-rule": "evenodd",
                        d: "M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z",
                        "clip-rule": "evenodd"
                      })
                    ]))
                  ])
                ])
              ];
            }
          }),
          content: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`<div class="block px-4 py-2 text-xs text-gray-400" data-v-b93d21d6${_scopeId}> Manage Account </div>`);
              if (vue.unref(isAuth) && _ctx.$page.props.user.role == "Admin") {
                _push2(serverRenderer.ssrRenderComponent(JetDropdownLink, {
                  href: _ctx.route("admin.dashboard")
                }, {
                  default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                    if (_push3) {
                      _push3(` Admin Panel `);
                    } else {
                      return [
                        vue.createTextVNode(" Admin Panel ")
                      ];
                    }
                  }),
                  _: 1
                }, _parent2, _scopeId));
              } else {
                _push2(`<!---->`);
              }
              if (vue.unref(isAuth) && _ctx.$page.props.user.role == "Admin") {
                _push2(serverRenderer.ssrRenderComponent(JetDropdownLink, {
                  href: _ctx.route("master-account")
                }, {
                  default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                    if (_push3) {
                      _push3(` Master Account `);
                    } else {
                      return [
                        vue.createTextVNode(" Master Account ")
                      ];
                    }
                  }),
                  _: 1
                }, _parent2, _scopeId));
              } else {
                _push2(`<!---->`);
              }
              _push2(`<div class="border-t border-gray-100" data-v-b93d21d6${_scopeId}></div>`);
              _push2(serverRenderer.ssrRenderComponent(JetDropdownLink, {
                href: _ctx.route("profile.show")
              }, {
                default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(` Profile `);
                  } else {
                    return [
                      vue.createTextVNode(" Profile ")
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(`<div class="border-t border-gray-100" data-v-b93d21d6${_scopeId}></div><form data-v-b93d21d6${_scopeId}>`);
              _push2(serverRenderer.ssrRenderComponent(JetDropdownLink, { as: "button" }, {
                default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(` Log Out `);
                  } else {
                    return [
                      vue.createTextVNode(" Log Out ")
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(`</form>`);
            } else {
              return [
                vue.createVNode("div", { class: "block px-4 py-2 text-xs text-gray-400" }, " Manage Account "),
                vue.unref(isAuth) && _ctx.$page.props.user.role == "Admin" ? (vue.openBlock(), vue.createBlock(JetDropdownLink, {
                  key: 0,
                  href: _ctx.route("admin.dashboard")
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Admin Panel ")
                  ]),
                  _: 1
                }, 8, ["href"])) : vue.createCommentVNode("", true),
                vue.unref(isAuth) && _ctx.$page.props.user.role == "Admin" ? (vue.openBlock(), vue.createBlock(JetDropdownLink, {
                  key: 1,
                  href: _ctx.route("master-account")
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Master Account ")
                  ]),
                  _: 1
                }, 8, ["href"])) : vue.createCommentVNode("", true),
                vue.createVNode("div", { class: "border-t border-gray-100" }),
                vue.createVNode(JetDropdownLink, {
                  href: _ctx.route("profile.show")
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Profile ")
                  ]),
                  _: 1
                }, 8, ["href"]),
                vue.createVNode("div", { class: "border-t border-gray-100" }),
                vue.createVNode("form", {
                  onSubmit: vue.withModifiers(logout, ["prevent"])
                }, [
                  vue.createVNode(JetDropdownLink, { as: "button" }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(" Log Out ")
                    ]),
                    _: 1
                  })
                ], 40, ["onSubmit"])
              ];
            }
          }),
          _: 1
        }, _parent));
        _push(`</div>`);
      } else {
        _push(`<div class="hidden xl:flex xl:w-auto xl:justify-between" data-v-b93d21d6><p class="hidden lg:mr-4 lg:inline-block py-2 px-6 border border-2 text-sm text-white font-bold rounded-xl transition duration-200"${serverRenderer.ssrRenderAttr("href", _ctx.route("register"))} data-v-b93d21d6> Online <span class="text-green-500" data-v-b93d21d6>${serverRenderer.ssrInterpolate(header_data.online_users)}</span> | Peak <span class="text-green-500" data-v-b93d21d6>${serverRenderer.ssrInterpolate(header_data.online_peak)}</span></p>`);
        _push(serverRenderer.ssrRenderComponent(vue.unref(inertiaVue3.Link), {
          class: "bg-gradient-to-b lg:mr-4 from-yellow-500 to-orange-500 animate-gradient hidden lg:inline-block py-2 px-6 bg-gray-50 hover:bg-gray-100 text-sm text-white font-bold rounded-xl transition duration-200",
          href: _ctx.route("login")
        }, {
          default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`Login`);
            } else {
              return [
                vue.createTextVNode("Login")
              ];
            }
          }),
          _: 1
        }, _parent));
        _push(serverRenderer.ssrRenderComponent(vue.unref(inertiaVue3.Link), {
          class: "hidden lg:inline-block py-2 px-6 bg-gradient-to-r from-sky-400 to-blue-500 text-sm text-white font-bold rounded-xl transition duration-200",
          href: _ctx.route("register")
        }, {
          default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`Register`);
            } else {
              return [
                vue.createTextVNode("Register")
              ];
            }
          }),
          _: 1
        }, _parent));
        _push(`</div>`);
      }
      _push(`</nav><div class="navbar-menu relative z-50 hidden" data-v-b93d21d6><div class="navbar-backdrop fixed inset-0 bg-gray-800 opacity-25" data-v-b93d21d6></div><nav class="fixed top-0 left-0 bottom-0 flex flex-col w-5/6 max-w-sm py-6 px-6 bg-black overflow-y-auto" data-v-b93d21d6><div class="flex items-center mb-8" data-v-b93d21d6><a class="mr-auto text-3xl font-bold leading-none" href="#" data-v-b93d21d6><img src="/img/revenge-logo.png" alt="" data-v-b93d21d6></a><button class="navbar-close" data-v-b93d21d6><svg class="h-6 w-6 text-gray-400 cursor-pointer hover:text-gray-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" data-v-b93d21d6><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" data-v-b93d21d6></path></svg></button></div><div data-v-b93d21d6><ul data-v-b93d21d6><li class="mb-1 border-b border-gray-700" data-v-b93d21d6>`);
      _push(serverRenderer.ssrRenderComponent(vue.unref(inertiaVue3.Link), {
        class: "block p-4 text-sm font-semibold text-gray-400 hover:bg-blue-50 hover:text-blue-600 rounded",
        href: _ctx.route("home")
      }, {
        default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`Home`);
          } else {
            return [
              vue.createTextVNode("Home")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</li><li class="mb-1 border-b border-gray-700" data-v-b93d21d6>`);
      _push(serverRenderer.ssrRenderComponent(vue.unref(inertiaVue3.Link), {
        class: "block p-4 text-sm font-semibold text-gray-400 hover:bg-blue-50 hover:text-blue-600 rounded",
        href: _ctx.route("rank.resumen")
      }, {
        default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`Rankings`);
          } else {
            return [
              vue.createTextVNode("Rankings")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</li>`);
      if (vue.unref(isAuth)) {
        _push(`<!--[--><li class="mb-1 border-b border-gray-700" data-v-b93d21d6>`);
        _push(serverRenderer.ssrRenderComponent(vue.unref(inertiaVue3.Link), {
          class: "block p-4 text-sm font-semibold text-gray-400 hover:bg-blue-50 hover:text-blue-600 rounded",
          href: _ctx.route("vote4points")
        }, {
          default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`Vote 4 Points`);
            } else {
              return [
                vue.createTextVNode("Vote 4 Points")
              ];
            }
          }),
          _: 1
        }, _parent));
        _push(`</li><li class="mb-1 border-b border-gray-700" data-v-b93d21d6>`);
        _push(serverRenderer.ssrRenderComponent(vue.unref(inertiaVue3.Link), {
          class: "block p-4 text-sm font-semibold text-gray-400 hover:bg-blue-50 hover:text-blue-600 rounded",
          href: _ctx.route("transfer.index")
        }, {
          default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`Transfer`);
            } else {
              return [
                vue.createTextVNode("Transfer")
              ];
            }
          }),
          _: 1
        }, _parent));
        _push(`</li><li class="mb-1 border-b border-gray-700" data-v-b93d21d6>`);
        _push(serverRenderer.ssrRenderComponent(vue.unref(inertiaVue3.Link), {
          class: "block p-4 text-sm font-semibold text-gray-400 hover:bg-blue-50 hover:text-blue-600 rounded",
          href: _ctx.route("master-account")
        }, {
          default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`Master Account`);
            } else {
              return [
                vue.createTextVNode("Master Account")
              ];
            }
          }),
          _: 1
        }, _parent));
        _push(`</li><li class="mb-1 border-b border-gray-700" data-v-b93d21d6><form data-v-b93d21d6><button class="block p-4 text-sm font-semibold text-gray-400 hover:bg-blue-50 hover:text-blue-600 rounded" data-v-b93d21d6> Log Out </button></form></li><!--]-->`);
      } else {
        _push(`<!---->`);
      }
      _push(`<div class="h-full lg:flex items-center" data-v-b93d21d6><div class="flex justify-center p-3" data-v-b93d21d6><p class="text-light text-white inline" data-v-b93d21d6> Online: <span class="text-green-500 ml-1" data-v-b93d21d6>${serverRenderer.ssrInterpolate(header_data.online_users)}</span></p><span class="px-3 text-gray-600/80" data-v-b93d21d6>|</span><p class="text-light text-white inline" data-v-b93d21d6> Peak: <span class="text-green-500 ml-1" data-v-b93d21d6>${serverRenderer.ssrInterpolate(header_data.online_peak)}</span></p></div></div></ul></div><div class="mt-auto" data-v-b93d21d6>`);
      if (!vue.unref(isAuth)) {
        _push(`<div class="pt-6" data-v-b93d21d6>`);
        _push(serverRenderer.ssrRenderComponent(vue.unref(inertiaVue3.Link), {
          class: "block px-4 py-3 mb-3 leading-loose text-md text-center font-bold leading-none bg-gradient-to-b from-yellow-500 to-orange-500 animate-gradient text-white hover:bg-gray-100 rounded-xl",
          href: _ctx.route("login")
        }, {
          default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`Login`);
            } else {
              return [
                vue.createTextVNode("Login")
              ];
            }
          }),
          _: 1
        }, _parent));
        _push(serverRenderer.ssrRenderComponent(vue.unref(inertiaVue3.Link), {
          class: "block px-4 py-3 mb-2 leading-loose text-md text-white text-center text-white font-bold bg-gradient-to-r from-sky-400 to-blue-500 text-sm text-white hover:bg-blue-700 rounded-xl",
          href: _ctx.route("register")
        }, {
          default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`Register`);
            } else {
              return [
                vue.createTextVNode("Register")
              ];
            }
          }),
          _: 1
        }, _parent));
        _push(`</div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`<p class="my-4 text-xs text-center text-gray-400" data-v-b93d21d6> Powered by <span class="text-sky-500" data-v-b93d21d6> xPanel</span></p></div></nav></div><!--]-->`);
    };
  }
};
const _sfc_setup$1g = _sfc_main$1g.setup;
_sfc_main$1g.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Header.vue");
  return _sfc_setup$1g ? _sfc_setup$1g(props, ctx) : void 0;
};
var xHeader = /* @__PURE__ */ _export_sfc(_sfc_main$1g, [["__scopeId", "data-v-b93d21d6"]]);
const _sfc_main$1f = vue.defineComponent({
  components: {
    Link: inertiaVue3.Link
  },
  props: ["active", "href", "as"],
  computed: {
    classes() {
      return this.active ? "block pl-3 pr-4 py-2 border-l-4 border-indigo-400 text-base font-medium text-indigo-700 bg-indigo-50 focus:outline-none focus:text-indigo-800 focus:bg-indigo-100 focus:border-indigo-700 transition" : "block pl-3 pr-4 py-2 border-l-4 border-transparent text-base font-medium text-gray-600 hover:text-gray-800 hover:bg-gray-50 hover:border-gray-300 focus:outline-none focus:text-gray-800 focus:bg-gray-50 focus:border-gray-300 transition";
    }
  }
});
const _sfc_setup$1f = _sfc_main$1f.setup;
_sfc_main$1f.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/ResponsiveNavLink.vue");
  return _sfc_setup$1f ? _sfc_setup$1f(props, ctx) : void 0;
};
var carousel = "";
var AppLayout_vue_vue_type_style_index_0_scoped_true_lang = "";
const _sfc_main$1e = {
  __name: "AppLayout",
  __ssrInlineRender: true,
  props: {
    title: {
      type: String,
      required: true
    }
  },
  setup(__props) {
    vue.ref(false);
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)} data-v-58628662>`);
      _push(serverRenderer.ssrRenderComponent(vue.unref(inertiaVue3.Head), { title: __props.title }, null, _parent));
      _push(serverRenderer.ssrRenderComponent(JetBanner, null, null, _parent));
      _push(`<div class="" data-v-58628662>`);
      _push(serverRenderer.ssrRenderComponent(xHeader, null, null, _parent));
      _push(`<main class="mx-auto" data-v-58628662><div class="w-full text-white" data-v-58628662>`);
      serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</div></main>`);
      _push(serverRenderer.ssrRenderComponent(xFooter, null, null, _parent));
      _push(serverRenderer.ssrRenderComponent(_sfc_main$1v, null, null, _parent));
      _push(`</div></div>`);
    };
  }
};
const _sfc_setup$1e = _sfc_main$1e.setup;
_sfc_main$1e.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Layouts/AppLayout.vue");
  return _sfc_setup$1e ? _sfc_setup$1e(props, ctx) : void 0;
};
var AppLayout = /* @__PURE__ */ _export_sfc(_sfc_main$1e, [["__scopeId", "data-v-58628662"]]);
const _sfc_main$1d = vue.defineComponent({
  props: [
    "tokens",
    "availablePermissions",
    "defaultPermissions"
  ],
  components: {
    ApiTokenManager,
    AppLayout
  }
});
function _sfc_ssrRender$z(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = vue.resolveComponent("app-layout");
  const _component_api_token_manager = vue.resolveComponent("api-token-manager");
  _push(serverRenderer.ssrRenderComponent(_component_app_layout, vue.mergeProps({ title: "API Tokens" }, _attrs), {
    header: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<h2 class="font-semibold text-xl text-gray-800 leading-tight"${_scopeId}> API Tokens </h2>`);
      } else {
        return [
          vue.createVNode("h2", { class: "font-semibold text-xl text-gray-800 leading-tight" }, " API Tokens ")
        ];
      }
    }),
    default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div${_scopeId}><div class="max-w-7xl mx-auto py-10 sm:px-6 lg:px-8"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_api_token_manager, {
          tokens: _ctx.tokens,
          "available-permissions": _ctx.availablePermissions,
          "default-permissions": _ctx.defaultPermissions
        }, null, _parent2, _scopeId));
        _push2(`</div></div>`);
      } else {
        return [
          vue.createVNode("div", null, [
            vue.createVNode("div", { class: "max-w-7xl mx-auto py-10 sm:px-6 lg:px-8" }, [
              vue.createVNode(_component_api_token_manager, {
                tokens: _ctx.tokens,
                "available-permissions": _ctx.availablePermissions,
                "default-permissions": _ctx.defaultPermissions
              }, null, 8, ["tokens", "available-permissions", "default-permissions"])
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1d = _sfc_main$1d.setup;
_sfc_main$1d.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/API/Index.vue");
  return _sfc_setup$1d ? _sfc_setup$1d(props, ctx) : void 0;
};
var Index$g = /* @__PURE__ */ _export_sfc(_sfc_main$1d, [["ssrRender", _sfc_ssrRender$z]]);
var Index$h = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Index$g
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1c = {};
function _sfc_ssrRender$y(_ctx, _push, _parent, _attrs) {
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "min-h-screen flex flex-col justify-center items-center pt-6 sm:pt-0" }, _attrs))}><div class="w-full sm:max-w-md mt-6 px-6 py-4 bg-gray-100 shadow-md overflow-hidden rounded-md h-[35rem] flex flex-col justify-around"><div class="mx-auto w-60">`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "logo", {}, null, _push, _parent);
  _push(`</div>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</div></div>`);
}
const _sfc_setup$1c = _sfc_main$1c.setup;
_sfc_main$1c.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/AuthenticationCard.vue");
  return _sfc_setup$1c ? _sfc_setup$1c(props, ctx) : void 0;
};
var JetAuthenticationCard = /* @__PURE__ */ _export_sfc(_sfc_main$1c, [["ssrRender", _sfc_ssrRender$y]]);
const _sfc_main$1b = vue.defineComponent({
  components: {
    Link: inertiaVue3.Link
  }
});
function _sfc_ssrRender$x(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Link = vue.resolveComponent("Link");
  _push(serverRenderer.ssrRenderComponent(_component_Link, vue.mergeProps({ href: "/" }, _attrs), {
    default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<img src="/img/revenge-logo-yellow.png" alt="" srcset=""${_scopeId}>`);
      } else {
        return [
          vue.createVNode("img", {
            src: "/img/revenge-logo-yellow.png",
            alt: "",
            srcset: ""
          })
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1b = _sfc_main$1b.setup;
_sfc_main$1b.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/AuthenticationCardLogo.vue");
  return _sfc_setup$1b ? _sfc_setup$1b(props, ctx) : void 0;
};
var JetAuthenticationCardLogo = /* @__PURE__ */ _export_sfc(_sfc_main$1b, [["ssrRender", _sfc_ssrRender$x]]);
const _sfc_main$1a = vue.defineComponent({
  components: {
    Head: inertiaVue3.Head,
    JetAuthenticationCard,
    JetAuthenticationCardLogo,
    JetButton,
    JetInput,
    JetLabel,
    JetValidationErrors
  },
  data() {
    return {
      form: this.$inertia.form({
        password: ""
      })
    };
  },
  methods: {
    submit() {
      this.form.post(this.route("password.confirm"), {
        onFinish: () => this.form.reset()
      });
    }
  }
});
function _sfc_ssrRender$w(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Head = vue.resolveComponent("Head");
  const _component_jet_authentication_card = vue.resolveComponent("jet-authentication-card");
  const _component_jet_authentication_card_logo = vue.resolveComponent("jet-authentication-card-logo");
  const _component_jet_validation_errors = vue.resolveComponent("jet-validation-errors");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(`<!--[-->`);
  _push(serverRenderer.ssrRenderComponent(_component_Head, { title: "Secure Area" }, null, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_jet_authentication_card, null, {
    logo: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_authentication_card_logo, null, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_authentication_card_logo)
        ];
      }
    }),
    default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="mb-4 text-sm text-gray-600"${_scopeId}> This is a secure area of the application. Please confirm your password before continuing. </div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_validation_errors, { class: "mb-4" }, null, _parent2, _scopeId));
        _push2(`<form${_scopeId}><div${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "password",
          value: "Password"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "password",
          type: "password",
          class: "mt-1 block w-full",
          modelValue: _ctx.form.password,
          "onUpdate:modelValue": ($event) => _ctx.form.password = $event,
          required: "",
          autocomplete: "current-password",
          autofocus: ""
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="flex justify-end mt-4"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          class: ["ml-4", { "opacity-25": _ctx.form.processing }],
          disabled: _ctx.form.processing
        }, {
          default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Confirm `);
            } else {
              return [
                vue.createTextVNode(" Confirm ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div></form>`);
      } else {
        return [
          vue.createVNode("div", { class: "mb-4 text-sm text-gray-600" }, " This is a secure area of the application. Please confirm your password before continuing. "),
          vue.createVNode(_component_jet_validation_errors, { class: "mb-4" }),
          vue.createVNode("form", {
            onSubmit: vue.withModifiers(_ctx.submit, ["prevent"])
          }, [
            vue.createVNode("div", null, [
              vue.createVNode(_component_jet_label, {
                for: "password",
                value: "Password"
              }),
              vue.createVNode(_component_jet_input, {
                id: "password",
                type: "password",
                class: "mt-1 block w-full",
                modelValue: _ctx.form.password,
                "onUpdate:modelValue": ($event) => _ctx.form.password = $event,
                required: "",
                autocomplete: "current-password",
                autofocus: ""
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ]),
            vue.createVNode("div", { class: "flex justify-end mt-4" }, [
              vue.createVNode(_component_jet_button, {
                class: ["ml-4", { "opacity-25": _ctx.form.processing }],
                disabled: _ctx.form.processing
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Confirm ")
                ]),
                _: 1
              }, 8, ["class", "disabled"])
            ])
          ], 40, ["onSubmit"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<!--]-->`);
}
const _sfc_setup$1a = _sfc_main$1a.setup;
_sfc_main$1a.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Auth/ConfirmPassword.vue");
  return _sfc_setup$1a ? _sfc_setup$1a(props, ctx) : void 0;
};
var ConfirmPassword = /* @__PURE__ */ _export_sfc(_sfc_main$1a, [["ssrRender", _sfc_ssrRender$w]]);
var ConfirmPassword$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": ConfirmPassword
}, Symbol.toStringTag, { value: "Module" }));
var GuestLayout_vue_vue_type_style_index_0_scoped_true_lang = "";
const _sfc_main$19 = {
  __name: "GuestLayout",
  __ssrInlineRender: true,
  props: {
    title: String
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)} data-v-9fce9dd2>`);
      _push(serverRenderer.ssrRenderComponent(vue.unref(inertiaVue3.Head), { title: __props.title }, null, _parent));
      _push(serverRenderer.ssrRenderComponent(JetBanner, null, null, _parent));
      _push(`<div class="" data-v-9fce9dd2>`);
      _push(serverRenderer.ssrRenderComponent(xHeader, null, null, _parent));
      _push(`<main class="mx-auto" data-v-9fce9dd2><div class="w-full text-white" id="wrap" data-v-9fce9dd2>`);
      serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</div></main>`);
      _push(serverRenderer.ssrRenderComponent(xFooter, null, null, _parent));
      _push(`</div></div>`);
    };
  }
};
const _sfc_setup$19 = _sfc_main$19.setup;
_sfc_main$19.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Layouts/GuestLayout.vue");
  return _sfc_setup$19 ? _sfc_setup$19(props, ctx) : void 0;
};
var GuestLayout = /* @__PURE__ */ _export_sfc(_sfc_main$19, [["__scopeId", "data-v-9fce9dd2"]]);
const _sfc_main$18 = vue.defineComponent({
  components: {
    Head: inertiaVue3.Head,
    JetAuthenticationCard,
    JetAuthenticationCardLogo,
    JetButton,
    JetInput,
    JetLabel,
    JetValidationErrors
  },
  props: {
    status: String
  },
  layout: GuestLayout,
  data() {
    return {
      form: this.$inertia.form({
        email: ""
      })
    };
  },
  methods: {
    submit() {
      this.form.post(this.route("password.email"));
    }
  }
});
function _sfc_ssrRender$v(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Head = vue.resolveComponent("Head");
  const _component_jet_authentication_card = vue.resolveComponent("jet-authentication-card");
  const _component_jet_authentication_card_logo = vue.resolveComponent("jet-authentication-card-logo");
  const _component_jet_validation_errors = vue.resolveComponent("jet-validation-errors");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(`<!--[-->`);
  _push(serverRenderer.ssrRenderComponent(_component_Head, { title: "Forgot Password" }, null, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_jet_authentication_card, { class: "bg-login" }, {
    logo: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex flex-col items-center"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_authentication_card_logo, null, null, _parent2, _scopeId));
        _push2(`<h1 class="text-center text-4xl font-bold text-gray-800 mt-5"${_scopeId}>Reset Password</h1></div>`);
      } else {
        return [
          vue.createVNode("div", { class: "flex flex-col items-center" }, [
            vue.createVNode(_component_jet_authentication_card_logo),
            vue.createVNode("h1", { class: "text-center text-4xl font-bold text-gray-800 mt-5" }, "Reset Password")
          ])
        ];
      }
    }),
    default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="mb-4 text-sm text-black"${_scopeId}> Forgot your password? No problem. Just let us know your email address and we will email you a password reset link that will allow you to choose a new one. </div>`);
        if (_ctx.status) {
          _push2(`<div class="mb-4 font-medium text-sm text-green-600"${_scopeId}>${serverRenderer.ssrInterpolate(_ctx.status)}</div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(serverRenderer.ssrRenderComponent(_component_jet_validation_errors, { class: "mb-4" }, null, _parent2, _scopeId));
        _push2(`<form${_scopeId}><div${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "email",
          value: "Email",
          class: "text-black"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "email",
          type: "email",
          class: "mt-1 block w-full text-black",
          modelValue: _ctx.form.email,
          "onUpdate:modelValue": ($event) => _ctx.form.email = $event,
          required: "",
          autofocus: ""
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="flex items-center justify-center mt-4"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          class: [{ "opacity-25": _ctx.form.processing }, "bg-sky-500 hover:bg-sky-700"],
          disabled: _ctx.form.processing
        }, {
          default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Email Password Reset Link `);
            } else {
              return [
                vue.createTextVNode(" Email Password Reset Link ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div></form>`);
      } else {
        return [
          vue.createVNode("div", { class: "mb-4 text-sm text-black" }, " Forgot your password? No problem. Just let us know your email address and we will email you a password reset link that will allow you to choose a new one. "),
          _ctx.status ? (vue.openBlock(), vue.createBlock("div", {
            key: 0,
            class: "mb-4 font-medium text-sm text-green-600"
          }, vue.toDisplayString(_ctx.status), 1)) : vue.createCommentVNode("", true),
          vue.createVNode(_component_jet_validation_errors, { class: "mb-4" }),
          vue.createVNode("form", {
            onSubmit: vue.withModifiers(_ctx.submit, ["prevent"])
          }, [
            vue.createVNode("div", null, [
              vue.createVNode(_component_jet_label, {
                for: "email",
                value: "Email",
                class: "text-black"
              }),
              vue.createVNode(_component_jet_input, {
                id: "email",
                type: "email",
                class: "mt-1 block w-full text-black",
                modelValue: _ctx.form.email,
                "onUpdate:modelValue": ($event) => _ctx.form.email = $event,
                required: "",
                autofocus: ""
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ]),
            vue.createVNode("div", { class: "flex items-center justify-center mt-4" }, [
              vue.createVNode(_component_jet_button, {
                class: [{ "opacity-25": _ctx.form.processing }, "bg-sky-500 hover:bg-sky-700"],
                disabled: _ctx.form.processing
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Email Password Reset Link ")
                ]),
                _: 1
              }, 8, ["class", "disabled"])
            ])
          ], 40, ["onSubmit"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<!--]-->`);
}
const _sfc_setup$18 = _sfc_main$18.setup;
_sfc_main$18.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Auth/ForgotPassword.vue");
  return _sfc_setup$18 ? _sfc_setup$18(props, ctx) : void 0;
};
var ForgotPassword = /* @__PURE__ */ _export_sfc(_sfc_main$18, [["ssrRender", _sfc_ssrRender$v]]);
var ForgotPassword$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": ForgotPassword
}, Symbol.toStringTag, { value: "Module" }));
var Login_vue_vue_type_style_index_0_scoped_true_lang = "";
const _sfc_main$17 = vue.defineComponent({
  components: {
    Head: inertiaVue3.Head,
    JetAuthenticationCard,
    JetAuthenticationCardLogo,
    JetButton,
    JetInput,
    JetCheckbox,
    JetLabel,
    JetValidationErrors,
    Link: inertiaVue3.Link
  },
  props: {
    canResetPassword: Boolean,
    status: String
  },
  layout: GuestLayout,
  data() {
    return {
      form: this.$inertia.form({
        email: "",
        password: "",
        remember: false
      })
    };
  },
  methods: {
    submit() {
      this.form.transform((data) => ({
        ...data,
        remember: this.form.remember ? "on" : ""
      })).post(this.route("login"), {
        onFinish: () => this.form.reset("password")
      });
    }
  }
});
function _sfc_ssrRender$u(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Head = vue.resolveComponent("Head");
  const _component_jet_authentication_card = vue.resolveComponent("jet-authentication-card");
  const _component_jet_authentication_card_logo = vue.resolveComponent("jet-authentication-card-logo");
  const _component_jet_validation_errors = vue.resolveComponent("jet-validation-errors");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_checkbox = vue.resolveComponent("jet-checkbox");
  const _component_jet_button = vue.resolveComponent("jet-button");
  const _component_Link = vue.resolveComponent("Link");
  _push(`<!--[-->`);
  _push(serverRenderer.ssrRenderComponent(_component_Head, { title: "Log in" }, null, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_jet_authentication_card, { class: "bg-login" }, {
    logo: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex flex-col items-center" data-v-d1b40f92${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_authentication_card_logo, null, null, _parent2, _scopeId));
        _push2(`<h1 class="text-center text-4xl font-bold text-gray-600 mt-10" data-v-d1b40f92${_scopeId}>Sign In</h1></div>`);
      } else {
        return [
          vue.createVNode("div", { class: "flex flex-col items-center" }, [
            vue.createVNode(_component_jet_authentication_card_logo),
            vue.createVNode("h1", { class: "text-center text-4xl font-bold text-gray-600 mt-10" }, "Sign In")
          ])
        ];
      }
    }),
    default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_validation_errors, { class: "mb-4" }, null, _parent2, _scopeId));
        if (_ctx.status) {
          _push2(`<div class="mb-4 font-medium text-sm text-green-600" data-v-d1b40f92${_scopeId}>${serverRenderer.ssrInterpolate(_ctx.status)}</div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`<form class="p-5 rounded-md" data-v-d1b40f92${_scopeId}><div data-v-d1b40f92${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "email",
          type: "email",
          placeholder: "Email",
          class: "mt-1 block w-full text-sm text-black",
          modelValue: _ctx.form.email,
          "onUpdate:modelValue": ($event) => _ctx.form.email = $event,
          required: "",
          autofocus: ""
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="mt-4" data-v-d1b40f92${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "password",
          type: "password",
          class: "mt-1 block w-full text-sm text-black",
          placeholder: "Password",
          modelValue: _ctx.form.password,
          "onUpdate:modelValue": ($event) => _ctx.form.password = $event,
          required: "",
          autocomplete: "current-password"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="block mt-4" data-v-d1b40f92${_scopeId}><label class="flex items-center" data-v-d1b40f92${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_checkbox, {
          name: "remember",
          class: "bg-gray-200",
          checked: _ctx.form.remember,
          "onUpdate:checked": ($event) => _ctx.form.remember = $event
        }, null, _parent2, _scopeId));
        _push2(`<span class="ml-2 text-sm text-black" data-v-d1b40f92${_scopeId}>Remember me</span></label></div><div class="flex items-center flex-col justify-center mt-4" data-v-d1b40f92${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          class: ["ml-4 bg-gradient-to-r from-sky-400 to-blue-500 border-0 font-semibold hover:bg-gray-500", { "opacity-25": _ctx.form.processing }],
          disabled: _ctx.form.processing
        }, {
          default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Log in `);
            } else {
              return [
                vue.createTextVNode(" Log in ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_Link, {
          href: _ctx.route("password.request"),
          class: "text-sm text-black hover:text-blue-500 mt-7"
        }, {
          default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Forgot your password? `);
            } else {
              return [
                vue.createTextVNode(" Forgot your password? ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_Link, {
          href: _ctx.route("register"),
          class: "text-sm text-black hover:text-blue-500 mt-2"
        }, {
          default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Create Account! `);
            } else {
              return [
                vue.createTextVNode(" Create Account! ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div></form>`);
      } else {
        return [
          vue.createVNode(_component_jet_validation_errors, { class: "mb-4" }),
          _ctx.status ? (vue.openBlock(), vue.createBlock("div", {
            key: 0,
            class: "mb-4 font-medium text-sm text-green-600"
          }, vue.toDisplayString(_ctx.status), 1)) : vue.createCommentVNode("", true),
          vue.createVNode("form", {
            onSubmit: vue.withModifiers(_ctx.submit, ["prevent"]),
            class: "p-5 rounded-md"
          }, [
            vue.createVNode("div", null, [
              vue.createVNode(_component_jet_input, {
                id: "email",
                type: "email",
                placeholder: "Email",
                class: "mt-1 block w-full text-sm text-black",
                modelValue: _ctx.form.email,
                "onUpdate:modelValue": ($event) => _ctx.form.email = $event,
                required: "",
                autofocus: ""
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ]),
            vue.createVNode("div", { class: "mt-4" }, [
              vue.createVNode(_component_jet_input, {
                id: "password",
                type: "password",
                class: "mt-1 block w-full text-sm text-black",
                placeholder: "Password",
                modelValue: _ctx.form.password,
                "onUpdate:modelValue": ($event) => _ctx.form.password = $event,
                required: "",
                autocomplete: "current-password"
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ]),
            vue.createVNode("div", { class: "block mt-4" }, [
              vue.createVNode("label", { class: "flex items-center" }, [
                vue.createVNode(_component_jet_checkbox, {
                  name: "remember",
                  class: "bg-gray-200",
                  checked: _ctx.form.remember,
                  "onUpdate:checked": ($event) => _ctx.form.remember = $event
                }, null, 8, ["checked", "onUpdate:checked"]),
                vue.createVNode("span", { class: "ml-2 text-sm text-black" }, "Remember me")
              ])
            ]),
            vue.createVNode("div", { class: "flex items-center flex-col justify-center mt-4" }, [
              vue.createVNode(_component_jet_button, {
                class: ["ml-4 bg-gradient-to-r from-sky-400 to-blue-500 border-0 font-semibold hover:bg-gray-500", { "opacity-25": _ctx.form.processing }],
                disabled: _ctx.form.processing
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Log in ")
                ]),
                _: 1
              }, 8, ["class", "disabled"]),
              vue.createVNode(_component_Link, {
                href: _ctx.route("password.request"),
                class: "text-sm text-black hover:text-blue-500 mt-7"
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Forgot your password? ")
                ]),
                _: 1
              }, 8, ["href"]),
              vue.createVNode(_component_Link, {
                href: _ctx.route("register"),
                class: "text-sm text-black hover:text-blue-500 mt-2"
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Create Account! ")
                ]),
                _: 1
              }, 8, ["href"])
            ])
          ], 40, ["onSubmit"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<!--]-->`);
}
const _sfc_setup$17 = _sfc_main$17.setup;
_sfc_main$17.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Auth/Login.vue");
  return _sfc_setup$17 ? _sfc_setup$17(props, ctx) : void 0;
};
var Login = /* @__PURE__ */ _export_sfc(_sfc_main$17, [["ssrRender", _sfc_ssrRender$u], ["__scopeId", "data-v-d1b40f92"]]);
var Login$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Login
}, Symbol.toStringTag, { value: "Module" }));
const country_data = [
  { code: "AF", code3: "AFG", name: "Afghanistan", number: "004" },
  { code: "AL", code3: "ALB", name: "Albania", number: "008" },
  { code: "DZ", code3: "DZA", name: "Algeria", number: "012" },
  { code: "AS", code3: "ASM", name: "American Samoa", number: "016" },
  { code: "AD", code3: "AND", name: "Andorra", number: "020" },
  { code: "AO", code3: "AGO", name: "Angola", number: "024" },
  { code: "AI", code3: "AIA", name: "Anguilla", number: "660" },
  { code: "AQ", code3: "ATA", name: "Antarctica", number: "010" },
  { code: "AG", code3: "ATG", name: "Antigua and Barbuda", number: "028" },
  { code: "AR", code3: "ARG", name: "Argentina", number: "032" },
  { code: "AM", code3: "ARM", name: "Armenia", number: "051" },
  { code: "AW", code3: "ABW", name: "Aruba", number: "533" },
  { code: "AU", code3: "AUS", name: "Australia", number: "036" },
  { code: "AT", code3: "AUT", name: "Austria", number: "040" },
  { code: "AZ", code3: "AZE", name: "Azerbaijan", number: "031" },
  { code: "BS", code3: "BHS", name: "Bahamas (the)", number: "044" },
  { code: "BH", code3: "BHR", name: "Bahrain", number: "048" },
  { code: "BD", code3: "BGD", name: "Bangladesh", number: "050" },
  { code: "BB", code3: "BRB", name: "Barbados", number: "052" },
  { code: "BY", code3: "BLR", name: "Belarus", number: "112" },
  { code: "BE", code3: "BEL", name: "Belgium", number: "056" },
  { code: "BZ", code3: "BLZ", name: "Belize", number: "084" },
  { code: "BJ", code3: "BEN", name: "Benin", number: "204" },
  { code: "BM", code3: "BMU", name: "Bermuda", number: "060" },
  { code: "BT", code3: "BTN", name: "Bhutan", number: "064" },
  {
    code: "BO",
    code3: "BOL",
    name: "Bolivia (Plurinational State of)",
    number: "068"
  },
  {
    code: "BQ",
    code3: "BES",
    name: "Bonaire, Sint Eustatius and Saba",
    number: "535"
  },
  { code: "BA", code3: "BIH", name: "Bosnia and Herzegovina", number: "070" },
  { code: "BW", code3: "BWA", name: "Botswana", number: "072" },
  { code: "BV", code3: "BVT", name: "Bouvet Island", number: "074" },
  { code: "BR", code3: "BRA", name: "Brazil", number: "076" },
  {
    code: "IO",
    code3: "IOT",
    name: "British Indian Ocean Territory (the)",
    number: "086"
  },
  { code: "BN", code3: "BRN", name: "Brunei Darussalam", number: "096" },
  { code: "BG", code3: "BGR", name: "Bulgaria", number: "100" },
  { code: "BF", code3: "BFA", name: "Burkina Faso", number: "854" },
  { code: "BI", code3: "BDI", name: "Burundi", number: "108" },
  { code: "CV", code3: "CPV", name: "Cabo Verde", number: "132" },
  { code: "KH", code3: "KHM", name: "Cambodia", number: "116" },
  { code: "CM", code3: "CMR", name: "Cameroon", number: "120" },
  { code: "CA", code3: "CAN", name: "Canada", number: "124" },
  { code: "KY", code3: "CYM", name: "Cayman Islands (the)", number: "136" },
  {
    code: "CF",
    code3: "CAF",
    name: "Central African Republic (the)",
    number: "140"
  },
  { code: "TD", code3: "TCD", name: "Chad", number: "148" },
  { code: "CL", code3: "CHL", name: "Chile", number: "152" },
  { code: "CN", code3: "CHN", name: "China", number: "156" },
  { code: "CX", code3: "CXR", name: "Christmas Island", number: "162" },
  {
    code: "CC",
    code3: "CCK",
    name: "Cocos (Keeling) Islands (the)",
    number: "166"
  },
  { code: "CO", code3: "COL", name: "Colombia", number: "170" },
  { code: "KM", code3: "COM", name: "Comoros (the)", number: "174" },
  {
    code: "CD",
    code3: "COD",
    name: "Congo (the Democratic Republic of the)",
    number: "180"
  },
  { code: "CG", code3: "COG", name: "Congo (the)", number: "178" },
  { code: "CK", code3: "COK", name: "Cook Islands (the)", number: "184" },
  { code: "CR", code3: "CRI", name: "Costa Rica", number: "188" },
  { code: "HR", code3: "HRV", name: "Croatia", number: "191" },
  { code: "CU", code3: "CUB", name: "Cuba", number: "192" },
  { code: "CW", code3: "CUW", name: "Cura\xE7ao", number: "531" },
  { code: "CY", code3: "CYP", name: "Cyprus", number: "196" },
  { code: "CZ", code3: "CZE", name: "Czechia", number: "203" },
  { code: "CI", code3: "CIV", name: "C\xF4te d'Ivoire", number: "384" },
  { code: "DK", code3: "DNK", name: "Denmark", number: "208" },
  { code: "DJ", code3: "DJI", name: "Djibouti", number: "262" },
  { code: "DM", code3: "DMA", name: "Dominica", number: "212" },
  {
    code: "DO",
    code3: "DOM",
    name: "Dominican Republic (the)",
    number: "214"
  },
  { code: "EC", code3: "ECU", name: "Ecuador", number: "218" },
  { code: "EG", code3: "EGY", name: "Egypt", number: "818" },
  { code: "SV", code3: "SLV", name: "El Salvador", number: "222" },
  { code: "GQ", code3: "GNQ", name: "Equatorial Guinea", number: "226" },
  { code: "ER", code3: "ERI", name: "Eritrea", number: "232" },
  { code: "EE", code3: "EST", name: "Estonia", number: "233" },
  { code: "SZ", code3: "SWZ", name: "Eswatini", number: "748" },
  { code: "ET", code3: "ETH", name: "Ethiopia", number: "231" },
  {
    code: "FK",
    code3: "FLK",
    name: "Falkland Islands (the) [Malvinas]",
    number: "238"
  },
  { code: "FO", code3: "FRO", name: "Faroe Islands (the)", number: "234" },
  { code: "FJ", code3: "FJI", name: "Fiji", number: "242" },
  { code: "FI", code3: "FIN", name: "Finland", number: "246" },
  { code: "FR", code3: "FRA", name: "France", number: "250" },
  { code: "GF", code3: "GUF", name: "French Guiana", number: "254" },
  { code: "PF", code3: "PYF", name: "French Polynesia", number: "258" },
  {
    code: "TF",
    code3: "ATF",
    name: "French Southern Territories (the)",
    number: "260"
  },
  { code: "GA", code3: "GAB", name: "Gabon", number: "266" },
  { code: "GM", code3: "GMB", name: "Gambia (the)", number: "270" },
  { code: "GE", code3: "GEO", name: "Georgia", number: "268" },
  { code: "DE", code3: "DEU", name: "Germany", number: "276" },
  { code: "GH", code3: "GHA", name: "Ghana", number: "288" },
  { code: "GI", code3: "GIB", name: "Gibraltar", number: "292" },
  { code: "GR", code3: "GRC", name: "Greece", number: "300" },
  { code: "GL", code3: "GRL", name: "Greenland", number: "304" },
  { code: "GD", code3: "GRD", name: "Grenada", number: "308" },
  { code: "GP", code3: "GLP", name: "Guadeloupe", number: "312" },
  { code: "GU", code3: "GUM", name: "Guam", number: "316" },
  { code: "GT", code3: "GTM", name: "Guatemala", number: "320" },
  { code: "GG", code3: "GGY", name: "Guernsey", number: "831" },
  { code: "GN", code3: "GIN", name: "Guinea", number: "324" },
  { code: "GW", code3: "GNB", name: "Guinea-Bissau", number: "624" },
  { code: "GY", code3: "GUY", name: "Guyana", number: "328" },
  { code: "HT", code3: "HTI", name: "Haiti", number: "332" },
  {
    code: "HM",
    code3: "HMD",
    name: "Heard Island and McDonald Islands",
    number: "334"
  },
  { code: "VA", code3: "VAT", name: "Holy See (the)", number: "336" },
  { code: "HN", code3: "HND", name: "Honduras", number: "340" },
  { code: "HK", code3: "HKG", name: "Hong Kong", number: "344" },
  { code: "HU", code3: "HUN", name: "Hungary", number: "348" },
  { code: "IS", code3: "ISL", name: "Iceland", number: "352" },
  { code: "IN", code3: "IND", name: "India", number: "356" },
  { code: "ID", code3: "IDN", name: "Indonesia", number: "360" },
  {
    code: "IR",
    code3: "IRN",
    name: "Iran (Islamic Republic of)",
    number: "364"
  },
  { code: "IQ", code3: "IRQ", name: "Iraq", number: "368" },
  { code: "IE", code3: "IRL", name: "Ireland", number: "372" },
  { code: "IM", code3: "IMN", name: "Isle of Man", number: "833" },
  { code: "IL", code3: "ISR", name: "Israel", number: "376" },
  { code: "IT", code3: "ITA", name: "Italy", number: "380" },
  { code: "JM", code3: "JAM", name: "Jamaica", number: "388" },
  { code: "JP", code3: "JPN", name: "Japan", number: "392" },
  { code: "JE", code3: "JEY", name: "Jersey", number: "832" },
  { code: "JO", code3: "JOR", name: "Jordan", number: "400" },
  { code: "KZ", code3: "KAZ", name: "Kazakhstan", number: "398" },
  { code: "KE", code3: "KEN", name: "Kenya", number: "404" },
  { code: "KI", code3: "KIR", name: "Kiribati", number: "296" },
  {
    code: "KP",
    code3: "PRK",
    name: "Korea (the Democratic People's Republic of)",
    number: "408"
  },
  {
    code: "KR",
    code3: "KOR",
    name: "Korea (the Republic of)",
    number: "410"
  },
  { code: "KW", code3: "KWT", name: "Kuwait", number: "414" },
  { code: "KG", code3: "KGZ", name: "Kyrgyzstan", number: "417" },
  {
    code: "LA",
    code3: "LAO",
    name: "Lao People's Democratic Republic (the)",
    number: "418"
  },
  { code: "LV", code3: "LVA", name: "Latvia", number: "428" },
  { code: "LB", code3: "LBN", name: "Lebanon", number: "422" },
  { code: "LS", code3: "LSO", name: "Lesotho", number: "426" },
  { code: "LR", code3: "LBR", name: "Liberia", number: "430" },
  { code: "LY", code3: "LBY", name: "Libya", number: "434" },
  { code: "LI", code3: "LIE", name: "Liechtenstein", number: "438" },
  { code: "LT", code3: "LTU", name: "Lithuania", number: "440" },
  { code: "LU", code3: "LUX", name: "Luxembourg", number: "442" },
  { code: "MO", code3: "MAC", name: "Macao", number: "446" },
  { code: "MG", code3: "MDG", name: "Madagascar", number: "450" },
  { code: "MW", code3: "MWI", name: "Malawi", number: "454" },
  { code: "MY", code3: "MYS", name: "Malaysia", number: "458" },
  { code: "MV", code3: "MDV", name: "Maldives", number: "462" },
  { code: "ML", code3: "MLI", name: "Mali", number: "466" },
  { code: "MT", code3: "MLT", name: "Malta", number: "470" },
  { code: "MH", code3: "MHL", name: "Marshall Islands (the)", number: "584" },
  { code: "MQ", code3: "MTQ", name: "Martinique", number: "474" },
  { code: "MR", code3: "MRT", name: "Mauritania", number: "478" },
  { code: "MU", code3: "MUS", name: "Mauritius", number: "480" },
  { code: "YT", code3: "MYT", name: "Mayotte", number: "175" },
  { code: "MX", code3: "MEX", name: "Mexico", number: "484" },
  {
    code: "FM",
    code3: "FSM",
    name: "Micronesia (Federated States of)",
    number: "583"
  },
  {
    code: "MD",
    code3: "MDA",
    name: "Moldova (the Republic of)",
    number: "498"
  },
  { code: "MC", code3: "MCO", name: "Monaco", number: "492" },
  { code: "MN", code3: "MNG", name: "Mongolia", number: "496" },
  { code: "ME", code3: "MNE", name: "Montenegro", number: "499" },
  { code: "MS", code3: "MSR", name: "Montserrat", number: "500" },
  { code: "MA", code3: "MAR", name: "Morocco", number: "504" },
  { code: "MZ", code3: "MOZ", name: "Mozambique", number: "508" },
  { code: "MM", code3: "MMR", name: "Myanmar", number: "104" },
  { code: "NA", code3: "NAM", name: "Namibia", number: "516" },
  { code: "NR", code3: "NRU", name: "Nauru", number: "520" },
  { code: "NP", code3: "NPL", name: "Nepal", number: "524" },
  { code: "NL", code3: "NLD", name: "Netherlands (the)", number: "528" },
  { code: "NC", code3: "NCL", name: "New Caledonia", number: "540" },
  { code: "NZ", code3: "NZL", name: "New Zealand", number: "554" },
  { code: "NI", code3: "NIC", name: "Nicaragua", number: "558" },
  { code: "NE", code3: "NER", name: "Niger (the)", number: "562" },
  { code: "NG", code3: "NGA", name: "Nigeria", number: "566" },
  { code: "NU", code3: "NIU", name: "Niue", number: "570" },
  { code: "NF", code3: "NFK", name: "Norfolk Island", number: "574" },
  {
    code: "MP",
    code3: "MNP",
    name: "Northern Mariana Islands (the)",
    number: "580"
  },
  { code: "NO", code3: "NOR", name: "Norway", number: "578" },
  { code: "OM", code3: "OMN", name: "Oman", number: "512" },
  { code: "PK", code3: "PAK", name: "Pakistan", number: "586" },
  { code: "PW", code3: "PLW", name: "Palau", number: "585" },
  { code: "PS", code3: "PSE", name: "Palestine, State of", number: "275" },
  { code: "PA", code3: "PAN", name: "Panama", number: "591" },
  { code: "PG", code3: "PNG", name: "Papua New Guinea", number: "598" },
  { code: "PY", code3: "PRY", name: "Paraguay", number: "600" },
  { code: "PE", code3: "PER", name: "Peru", number: "604" },
  { code: "PH", code3: "PHL", name: "Philippines (the)", number: "608" },
  { code: "PN", code3: "PCN", name: "Pitcairn", number: "612" },
  { code: "PL", code3: "POL", name: "Poland", number: "616" },
  { code: "PT", code3: "PRT", name: "Portugal", number: "620" },
  { code: "PR", code3: "PRI", name: "Puerto Rico", number: "630" },
  { code: "QA", code3: "QAT", name: "Qatar", number: "634" },
  {
    code: "MK",
    code3: "MKD",
    name: "Republic of North Macedonia",
    number: "807"
  },
  { code: "RO", code3: "ROU", name: "Romania", number: "642" },
  {
    code: "RU",
    code3: "RUS",
    name: "Russian Federation (the)",
    number: "643"
  },
  { code: "RW", code3: "RWA", name: "Rwanda", number: "646" },
  { code: "RE", code3: "REU", name: "R\xE9union", number: "638" },
  { code: "BL", code3: "BLM", name: "Saint Barth\xE9lemy", number: "652" },
  {
    code: "SH",
    code3: "SHN",
    name: "Saint Helena, Ascension and Tristan da Cunha",
    number: "654"
  },
  { code: "KN", code3: "KNA", name: "Saint Kitts and Nevis", number: "659" },
  { code: "LC", code3: "LCA", name: "Saint Lucia", number: "662" },
  {
    code: "MF",
    code3: "MAF",
    name: "Saint Martin (French part)",
    number: "663"
  },
  {
    code: "PM",
    code3: "SPM",
    name: "Saint Pierre and Miquelon",
    number: "666"
  },
  {
    code: "VC",
    code3: "VCT",
    name: "Saint Vincent and the Grenadines",
    number: "670"
  },
  { code: "WS", code3: "WSM", name: "Samoa", number: "882" },
  { code: "SM", code3: "SMR", name: "San Marino", number: "674" },
  { code: "ST", code3: "STP", name: "Sao Tome and Principe", number: "678" },
  { code: "SA", code3: "SAU", name: "Saudi Arabia", number: "682" },
  { code: "SN", code3: "SEN", name: "Senegal", number: "686" },
  { code: "RS", code3: "SRB", name: "Serbia", number: "688" },
  { code: "SC", code3: "SYC", name: "Seychelles", number: "690" },
  { code: "SL", code3: "SLE", name: "Sierra Leone", number: "694" },
  { code: "SG", code3: "SGP", name: "Singapore", number: "702" },
  {
    code: "SX",
    code3: "SXM",
    name: "Sint Maarten (Dutch part)",
    number: "534"
  },
  { code: "SK", code3: "SVK", name: "Slovakia", number: "703" },
  { code: "SI", code3: "SVN", name: "Slovenia", number: "705" },
  { code: "SB", code3: "SLB", name: "Solomon Islands", number: "090" },
  { code: "SO", code3: "SOM", name: "Somalia", number: "706" },
  { code: "ZA", code3: "ZAF", name: "South Africa", number: "710" },
  {
    code: "GS",
    code3: "SGS",
    name: "South Georgia and the South Sandwich Islands",
    number: "239"
  },
  { code: "SS", code3: "SSD", name: "South Sudan", number: "728" },
  { code: "ES", code3: "ESP", name: "Spain", number: "724" },
  { code: "LK", code3: "LKA", name: "Sri Lanka", number: "144" },
  { code: "SD", code3: "SDN", name: "Sudan (the)", number: "729" },
  { code: "SR", code3: "SUR", name: "Suriname", number: "740" },
  { code: "SJ", code3: "SJM", name: "Svalbard and Jan Mayen", number: "744" },
  { code: "SE", code3: "SWE", name: "Sweden", number: "752" },
  { code: "CH", code3: "CHE", name: "Switzerland", number: "756" },
  { code: "SY", code3: "SYR", name: "Syrian Arab Republic", number: "760" },
  { code: "TW", code3: "TWN", name: "Taiwan", number: "158" },
  { code: "TJ", code3: "TJK", name: "Tajikistan", number: "762" },
  {
    code: "TZ",
    code3: "TZA",
    name: "Tanzania, United Republic of",
    number: "834"
  },
  { code: "TH", code3: "THA", name: "Thailand", number: "764" },
  { code: "TL", code3: "TLS", name: "Timor-Leste", number: "626" },
  { code: "TG", code3: "TGO", name: "Togo", number: "768" },
  { code: "TK", code3: "TKL", name: "Tokelau", number: "772" },
  { code: "TO", code3: "TON", name: "Tonga", number: "776" },
  { code: "TT", code3: "TTO", name: "Trinidad and Tobago", number: "780" },
  { code: "TN", code3: "TUN", name: "Tunisia", number: "788" },
  { code: "TR", code3: "TUR", name: "Turkey", number: "792" },
  { code: "TM", code3: "TKM", name: "Turkmenistan", number: "795" },
  {
    code: "TC",
    code3: "TCA",
    name: "Turks and Caicos Islands (the)",
    number: "796"
  },
  { code: "TV", code3: "TUV", name: "Tuvalu", number: "798" },
  { code: "UG", code3: "UGA", name: "Uganda", number: "800" },
  { code: "UA", code3: "UKR", name: "Ukraine", number: "804" },
  {
    code: "AE",
    code3: "ARE",
    name: "United Arab Emirates (the)",
    number: "784"
  },
  {
    code: "GB",
    code3: "GBR",
    name: "United Kingdom of Great Britain and Northern Ireland (the)",
    number: "826"
  },
  {
    code: "UM",
    code3: "UMI",
    name: "United States Minor Outlying Islands (the)",
    number: "581"
  },
  {
    code: "US",
    code3: "USA",
    name: "United States of America (the)",
    number: "840"
  },
  { code: "UY", code3: "URY", name: "Uruguay", number: "858" },
  { code: "UZ", code3: "UZB", name: "Uzbekistan", number: "860" },
  { code: "VU", code3: "VUT", name: "Vanuatu", number: "548" },
  {
    code: "VE",
    code3: "VEN",
    name: "Venezuela (Bolivarian Republic of)",
    number: "862"
  },
  { code: "VN", code3: "VNM", name: "Viet Nam", number: "704" },
  {
    code: "VG",
    code3: "VGB",
    name: "Virgin Islands (British)",
    number: "092"
  },
  { code: "VI", code3: "VIR", name: "Virgin Islands (U.S.)", number: "850" },
  { code: "WF", code3: "WLF", name: "Wallis and Futuna", number: "876" },
  { code: "EH", code3: "ESH", name: "Western Sahara", number: "732" },
  { code: "YE", code3: "YEM", name: "Yemen", number: "887" },
  { code: "ZM", code3: "ZMB", name: "Zambia", number: "894" },
  { code: "ZW", code3: "ZWE", name: "Zimbabwe", number: "716" },
  { code: "AX", code3: "ALA", name: "\xC5land Islands", number: "248" }
];
const job_name = [
  { id: 0, name: "Novice" },
  { id: 1, name: "Swordman" },
  { id: 2, name: "Magician" },
  { id: 3, name: "Archer" },
  { id: 4, name: "Acolyte" },
  { id: 5, name: "Merchant" },
  { id: 6, name: "Thief" },
  { id: 7, name: "Knight" },
  { id: 8, name: "Priest" },
  { id: 9, name: "Wizard" },
  { id: 10, name: "Blacksmith" },
  { id: 11, name: "Hunter" },
  { id: 12, name: "Assassin" },
  { id: 13, name: "Knight" },
  { id: 15, name: "Monk" },
  { id: 16, name: "Sage" },
  { id: 17, name: "Rogue" },
  { id: 18, name: "Alchemist" },
  { id: 19, name: "Bard" },
  { id: 20, name: "Dancer" },
  { id: 21, name: "Crusader" },
  { id: 22, name: "Super Novice" },
  { id: 24, name: "Gunslinger" },
  { id: 25, name: "Ninja" },
  { id: 26, name: "Santa Costume" },
  { id: 4001, name: "Novice High" },
  { id: 4002, name: "Swordsman High" },
  { id: 4003, name: "Mage High" },
  { id: 4004, name: "Archer High" },
  { id: 4005, name: "Acolyte High" },
  { id: 4006, name: "Merchant High" },
  { id: 4007, name: "Thief High" },
  { id: 4008, name: "Lord Knight" },
  { id: 4009, name: "High Priest" },
  { id: 4010, name: "High Wizard" },
  { id: 4011, name: "Whitesmith" },
  { id: 4012, name: "Sniper" },
  { id: 4013, name: "Assassin Cross" },
  { id: 4014, name: "Lord Knight" },
  { id: 4015, name: "Paladin" },
  { id: 4016, name: "Champion" },
  { id: 4017, name: "Professor" },
  { id: 4018, name: "Stalker" },
  { id: 4019, name: "Creator" },
  { id: 4020, name: "Clown" },
  { id: 4021, name: "Gypsy" },
  { id: 4022, name: "Paladin" },
  { id: 4023, name: "Baby Novice" },
  { id: 4024, name: "Baby Swordman" },
  { id: 4025, name: "Baby Magician" },
  { id: 4026, name: "Baby Archer" },
  { id: 4027, name: "Baby Acolyte" },
  { id: 4028, name: "Baby Merchant" },
  { id: 4029, name: "Baby Thief" },
  { id: 4030, name: "Baby Knight" },
  { id: 4031, name: "Baby Priest" },
  { id: 4032, name: "Baby Wizard" },
  { id: 4033, name: "Baby Blacksmith" },
  { id: 4034, name: "Baby Hunter" },
  { id: 4035, name: "Baby Assassin" },
  { id: 4036, name: "Baby Knight" },
  { id: 4037, name: "Baby Crusader" },
  { id: 4038, name: "Baby Monk" },
  { id: 4039, name: "Baby Sage" },
  { id: 4040, name: "Baby Rogue" },
  { id: 4041, name: "Baby Alchemist" },
  { id: 4042, name: "Baby Bard" },
  { id: 4043, name: "Baby Dancer" },
  { id: 4044, name: "Baby Crusader" },
  { id: 4045, name: "Baby Super Novice" },
  { id: 4046, name: "Taekwon" },
  { id: 4047, name: "Star Gladiator" },
  { id: 4048, name: "Star Gladiator" },
  { id: 4049, name: "Soul Linker" }
];
const ranking_jobs = [
  { id: 0, name: "Super Novice" },
  { id: 4009, name: "High Priest" },
  { id: 4010, name: "High Wizard" },
  { id: 4011, name: "Whitesmith" },
  { id: 4012, name: "Sniper" },
  { id: 4013, name: "Assassin Cross" },
  { id: 4014, name: "Lord Knight" },
  { id: 4015, name: "Paladin" },
  { id: 4016, name: "Champion" },
  { id: 4017, name: "Professor" },
  { id: 4018, name: "Stalker" },
  { id: 4019, name: "Creator" },
  { id: 4020, name: "Clown" },
  { id: 4021, name: "Gypsy" },
  { id: 4046, name: "Taekwon" },
  { id: 4047, name: "Star Gladiator" },
  { id: 4049, name: "Soul Linker" },
  { id: 24, name: "Gunslinger" },
  { id: 25, name: "Ninja" }
];
const rank_woe_type = [
  { id: 1, name: "Ancient Woe" },
  { id: 2, name: "WoE 1.0" },
  { id: 3, name: "King of Emperium" },
  { id: 4, name: "WoE 2.0" },
  { id: 5, name: "Guilds War" }
];
const skill_name = [
  {
    id: 1,
    name: "Basic Skill"
  },
  {
    id: 2,
    name: "Sword Mastery"
  },
  {
    id: 3,
    name: "Two-Handed Sword Mastery "
  },
  {
    id: 4,
    name: "Increase HP Recovery"
  },
  {
    id: 5,
    name: "Bash"
  },
  {
    id: 6,
    name: "Provoke"
  },
  {
    id: 7,
    name: "Magnum Break "
  },
  {
    id: 8,
    name: "Endure"
  },
  {
    id: 9,
    name: "Increase SP Recovery"
  },
  {
    id: 10,
    name: "Sight"
  },
  {
    id: 11,
    name: "Napalm Beat"
  },
  {
    id: 12,
    name: "Safety Wall"
  },
  {
    id: 13,
    name: "Soul Strike"
  },
  {
    id: 14,
    name: "Cold Bolt  "
  },
  {
    id: 15,
    name: "Frost Diver"
  },
  {
    id: 16,
    name: "Stone Curse"
  },
  {
    id: 17,
    name: "Fire Ball  "
  },
  {
    id: 18,
    name: "Fire Wall  "
  },
  {
    id: 19,
    name: "Fire Bolt  "
  },
  {
    id: 20,
    name: "Lightning Bolt  "
  },
  {
    id: 21,
    name: "Thunderstorm "
  },
  {
    id: 22,
    name: "Divine Protection"
  },
  {
    id: 23,
    name: "Demon Bane "
  },
  {
    id: 24,
    name: "Ruwach"
  },
  {
    id: 25,
    name: "Pneuma"
  },
  {
    id: 26,
    name: "Teleport"
  },
  {
    id: 27,
    name: "Warp Portal"
  },
  {
    id: 28,
    name: "Heal"
  },
  {
    id: 29,
    name: "Increase AGI "
  },
  {
    id: 30,
    name: "Decrease AGI "
  },
  {
    id: 31,
    name: "Aqua Benedicta  "
  },
  {
    id: 32,
    name: "Signum Crucis"
  },
  {
    id: 33,
    name: "Angelus"
  },
  {
    id: 34,
    name: "Blessing"
  },
  {
    id: 35,
    name: "Cure"
  },
  {
    id: 36,
    name: "Enlarge Weight Limit"
  },
  {
    id: 37,
    name: "Discount"
  },
  {
    id: 38,
    name: "Overcharge "
  },
  {
    id: 39,
    name: "Pushcart"
  },
  {
    id: 40,
    name: "Item Appraisal  "
  },
  {
    id: 41,
    name: "Vending"
  },
  {
    id: 42,
    name: "Mammonite  "
  },
  {
    id: 43,
    name: "Owl's Eye  "
  },
  {
    id: 44,
    name: "Vulture's Eye"
  },
  {
    id: 45,
    name: "Improve Concentration  "
  },
  {
    id: 46,
    name: "Double Strafe"
  },
  {
    id: 47,
    name: "Arrow Shower "
  },
  {
    id: 48,
    name: "Double Attack"
  },
  {
    id: 49,
    name: "Improve Dodge"
  },
  {
    id: 50,
    name: "Steal"
  },
  {
    id: 51,
    name: "Hiding"
  },
  {
    id: 52,
    name: "Envenom"
  },
  {
    id: 53,
    name: "Detoxify"
  },
  {
    id: 54,
    name: "Resurrection "
  },
  {
    id: 55,
    name: "Spear Mastery"
  },
  {
    id: 56,
    name: "Pierce"
  },
  {
    id: 57,
    name: "Brandish Spear  "
  },
  {
    id: 58,
    name: "Spear Stab "
  },
  {
    id: 59,
    name: "Spear Boomerang "
  },
  {
    id: 60,
    name: "Twohand Quicken "
  },
  {
    id: 61,
    name: "Counter Attack  "
  },
  {
    id: 62,
    name: "Bowling Bash "
  },
  {
    id: 63,
    name: "Peco Peco Riding"
  },
  {
    id: 64,
    name: "Cavalier Mastery"
  },
  {
    id: 65,
    name: "Mace Mastery "
  },
  {
    id: 66,
    name: "Impositio Manus "
  },
  {
    id: 67,
    name: "Suffragium "
  },
  {
    id: 68,
    name: "Aspersio"
  },
  {
    id: 69,
    name: "B.S. Sacramenti "
  },
  {
    id: 70,
    name: "Sanctuary  "
  },
  {
    id: 71,
    name: "Slow Poison"
  },
  {
    id: 72,
    name: "Status Recovery "
  },
  {
    id: 73,
    name: "Kyrie Eleison"
  },
  {
    id: 74,
    name: "Magnificat "
  },
  {
    id: 75,
    name: "Gloria"
  },
  {
    id: 76,
    name: "Lex Divina "
  },
  {
    id: 77,
    name: "Turn Undead"
  },
  {
    id: 78,
    name: "Lex Aeterna"
  },
  {
    id: 79,
    name: "Magnus Exorcismus"
  },
  {
    id: 80,
    name: "Fire Pillar"
  },
  {
    id: 81,
    name: "Sightrasher"
  },
  {
    id: 82,
    name: "Fire Ivy"
  },
  {
    id: 83,
    name: "Meteor Storm "
  },
  {
    id: 84,
    name: "Jupitel Thunder "
  },
  {
    id: 85,
    name: "Lord of Vermilion"
  },
  {
    id: 86,
    name: "Water Ball "
  },
  {
    id: 87,
    name: "Ice Wall"
  },
  {
    id: 88,
    name: "Frost Nova "
  },
  {
    id: 89,
    name: "Storm Gust "
  },
  {
    id: 90,
    name: "Earth Spike"
  },
  {
    id: 91,
    name: "Heaven's Drive  "
  },
  {
    id: 92,
    name: "Quagmire"
  },
  {
    id: 93,
    name: "Sense"
  },
  {
    id: 94,
    name: "Iron Tempering  "
  },
  {
    id: 95,
    name: "Steel Tempering "
  },
  {
    id: 96,
    name: "Enchanted Stone Craft  "
  },
  {
    id: 97,
    name: "Oridecon Research"
  },
  {
    id: 98,
    name: "Smith Dagger "
  },
  {
    id: 99,
    name: "Smith Sword"
  },
  {
    id: 100,
    name: "Smith Two-handed Sword "
  },
  {
    id: 101,
    name: "Smith Axe  "
  },
  {
    id: 102,
    name: "Smith Mace "
  },
  {
    id: 103,
    name: "Smith Knucklebrace"
  },
  {
    id: 104,
    name: "Smith Spear"
  },
  {
    id: 105,
    name: "Hilt Binding "
  },
  {
    id: 106,
    name: "Ore Discovery"
  },
  {
    id: 107,
    name: "Weaponry Research"
  },
  {
    id: 108,
    name: "Weapon Repair"
  },
  {
    id: 109,
    name: "Skin Tempering  "
  },
  {
    id: 110,
    name: "Hammer Fall"
  },
  {
    id: 111,
    name: "Adrenaline Rush "
  },
  {
    id: 112,
    name: "Weapon Perfection"
  },
  {
    id: 113,
    name: "Power-Thrust "
  },
  {
    id: 114,
    name: "Maximize Power  "
  },
  {
    id: 115,
    name: "Skid Trap  "
  },
  {
    id: 116,
    name: "Land Mine  "
  },
  {
    id: 117,
    name: "Ankle Snare"
  },
  {
    id: 118,
    name: "Shockwave Trap  "
  },
  {
    id: 119,
    name: "Sandman"
  },
  {
    id: 120,
    name: "Flasher"
  },
  {
    id: 121,
    name: "Freezing Trap"
  },
  {
    id: 122,
    name: "Blast Mine "
  },
  {
    id: 123,
    name: "Claymore Trap"
  },
  {
    id: 124,
    name: "Remove Trap"
  },
  {
    id: 125,
    name: "Talkie Box "
  },
  {
    id: 126,
    name: "Beast Bane "
  },
  {
    id: 127,
    name: "Falconry Mastery"
  },
  {
    id: 128,
    name: "Steel Crow "
  },
  {
    id: 129,
    name: "Blitz Beat "
  },
  {
    id: 130,
    name: "Detect"
  },
  {
    id: 131,
    name: "Spring Trap"
  },
  {
    id: 132,
    name: "Righthand Mastery"
  },
  {
    id: 133,
    name: "Lefthand Mastery"
  },
  {
    id: 134,
    name: "Katar Mastery"
  },
  {
    id: 135,
    name: "Cloaking"
  },
  {
    id: 136,
    name: "Sonic Blow "
  },
  {
    id: 137,
    name: "Grimtooth  "
  },
  {
    id: 138,
    name: "Enchant Poison  "
  },
  {
    id: 139,
    name: "Poison React "
  },
  {
    id: 140,
    name: "Venom Dust "
  },
  {
    id: 141,
    name: "Venom Splasher  "
  },
  {
    id: 142,
    name: "First Aid  "
  },
  {
    id: 143,
    name: "Play Dead  "
  },
  {
    id: 144,
    name: "Moving HP-Recovery"
  },
  {
    id: 145,
    name: "Fatal Blow "
  },
  {
    id: 146,
    name: "Auto Berserk "
  },
  {
    id: 147,
    name: "Arrow Crafting  "
  },
  {
    id: 148,
    name: "Arrow Repel"
  },
  {
    id: 149,
    name: "Sand Attack"
  },
  {
    id: 150,
    name: "Back Slide "
  },
  {
    id: 151,
    name: "Find Stone "
  },
  {
    id: 152,
    name: "Stone Fling"
  },
  {
    id: 153,
    name: "Cart Revolution "
  },
  {
    id: 154,
    name: "Change Cart"
  },
  {
    id: 155,
    name: "Crazy Uproar "
  },
  {
    id: 156,
    name: "Holy Light "
  },
  {
    id: 157,
    name: "Energy Coat"
  },
  {
    id: 158,
    name: "Piercing Attack "
  },
  {
    id: 159,
    name: "Spirit Destruction"
  },
  {
    id: 160,
    name: "Stand off attack"
  },
  {
    id: 161,
    name: "Attribute Change"
  },
  {
    id: 162,
    name: "Water Attribute Change "
  },
  {
    id: 163,
    name: "Earth Attribute Change "
  },
  {
    id: 164,
    name: "Fire Attribute Change  "
  },
  {
    id: 165,
    name: "Wind Attribute Change  "
  },
  {
    id: 166,
    name: "Poison Attribute Change"
  },
  {
    id: 167,
    name: "Holy Attribute Change  "
  },
  {
    id: 168,
    name: "Shadow Attribute Change"
  },
  {
    id: 169,
    name: "Ghost Attribute Change "
  },
  {
    id: 170,
    name: "Defense disregard attack "
  },
  {
    id: 171,
    name: "Multi-stage Attack"
  },
  {
    id: 172,
    name: "Guided Attack"
  },
  {
    id: 173,
    name: "Suicide bombing "
  },
  {
    id: 174,
    name: "Splash attack"
  },
  {
    id: 175,
    name: "Suicide"
  },
  {
    id: 176,
    name: "Poison Attack"
  },
  {
    id: 177,
    name: "Blind Attack "
  },
  {
    id: 178,
    name: "Silence Attack  "
  },
  {
    id: 179,
    name: "Stun Attack"
  },
  {
    id: 180,
    name: "Petrify Attack  "
  },
  {
    id: 181,
    name: "Curse Attack "
  },
  {
    id: 182,
    name: "Sleep attack "
  },
  {
    id: 183,
    name: "Random Attack"
  },
  {
    id: 184,
    name: "Water Attribute Attack "
  },
  {
    id: 185,
    name: "Earth Attribute Attack "
  },
  {
    id: 186,
    name: "Fire Attribute Attack  "
  },
  {
    id: 187,
    name: "Wind Attribute Attack  "
  },
  {
    id: 188,
    name: "Poison Attribute Attack"
  },
  {
    id: 189,
    name: "Holy Attribute Attack  "
  },
  {
    id: 190,
    name: "Shadow Attribute Attack"
  },
  {
    id: 191,
    name: "Ghost Attribute Attack "
  },
  {
    id: 192,
    name: "Demon Shock Attack"
  },
  {
    id: 193,
    name: "Metamorphosis"
  },
  {
    id: 194,
    name: "Provocation"
  },
  {
    id: 195,
    name: "Smoking"
  },
  {
    id: 196,
    name: "Follower Summons"
  },
  {
    id: 197,
    name: "Emotion"
  },
  {
    id: 198,
    name: "Transformation  "
  },
  {
    id: 199,
    name: "Sucking Blood"
  },
  {
    id: 200,
    name: "Energy Drain "
  },
  {
    id: 201,
    name: "Keeping"
  },
  {
    id: 202,
    name: "Dark Breath"
  },
  {
    id: 203,
    name: "Dark Blessing"
  },
  {
    id: 204,
    name: "Barrier"
  },
  {
    id: 205,
    name: "Defender"
  },
  {
    id: 206,
    name: "Lick"
  },
  {
    id: 207,
    name: "Hallucination"
  },
  {
    id: 208,
    name: "Rebirth"
  },
  {
    id: 209,
    name: "Monster Summons "
  },
  {
    id: 210,
    name: "Gank"
  },
  {
    id: 211,
    name: "Mug "
  },
  {
    id: 212,
    name: "Back Stab  "
  },
  {
    id: 213,
    name: "Stalk"
  },
  {
    id: 214,
    name: "Sightless Mind  "
  },
  {
    id: 215,
    name: "Divest Weapon"
  },
  {
    id: 216,
    name: "Divest Shield"
  },
  {
    id: 217,
    name: "Divest Armor "
  },
  {
    id: 218,
    name: "Divest Helm"
  },
  {
    id: 219,
    name: "Snatch"
  },
  {
    id: 220,
    name: "Scribble"
  },
  {
    id: 221,
    name: "Piece"
  },
  {
    id: 222,
    name: "Remover"
  },
  {
    id: 223,
    name: "Slyness"
  },
  {
    id: 224,
    name: "Haggle"
  },
  {
    id: 225,
    name: "Intimidate "
  },
  {
    id: 226,
    name: "Axe Mastery"
  },
  {
    id: 227,
    name: "Potion Research "
  },
  {
    id: 228,
    name: "Prepare Potion  "
  },
  {
    id: 229,
    name: "Bomb"
  },
  {
    id: 230,
    name: "Acid Terror"
  },
  {
    id: 231,
    name: "Aid Potion "
  },
  {
    id: 232,
    name: "Summon Flora "
  },
  {
    id: 233,
    name: "Summon Marine Sphere"
  },
  {
    id: 234,
    name: "Alchemical Weapon"
  },
  {
    id: 235,
    name: "Synthesized Shield"
  },
  {
    id: 236,
    name: "Synthetic Armor "
  },
  {
    id: 237,
    name: "Biochemical Helm"
  },
  {
    id: 238,
    name: "Bioethics  "
  },
  {
    id: 239,
    name: "Biotechnology"
  },
  {
    id: 240,
    name: "Life Creation"
  },
  {
    id: 241,
    name: "Cultivation"
  },
  {
    id: 242,
    name: "Flame Control"
  },
  {
    id: 243,
    name: "Call Homunculus "
  },
  {
    id: 244,
    name: "Vaporize"
  },
  {
    id: 245,
    name: "Drillmaster"
  },
  {
    id: 246,
    name: "Heal Homunculus "
  },
  {
    id: 247,
    name: "Homunculus Resurrection"
  },
  {
    id: 248,
    name: "Faith"
  },
  {
    id: 249,
    name: "Guard"
  },
  {
    id: 250,
    name: "Smite"
  },
  {
    id: 251,
    name: "Shield Boomerang"
  },
  {
    id: 252,
    name: "Shield Reflect  "
  },
  {
    id: 253,
    name: "Holy Cross "
  },
  {
    id: 254,
    name: "Grand Cross"
  },
  {
    id: 255,
    name: "Sacrifice  "
  },
  {
    id: 256,
    name: "Resistant Souls "
  },
  {
    id: 257,
    name: "Defending Aura  "
  },
  {
    id: 258,
    name: "Spear Quicken"
  },
  {
    id: 259,
    name: "Iron Fists "
  },
  {
    id: 260,
    name: "Spiritual Cadence"
  },
  {
    id: 261,
    name: "Summon Spirit Sphere"
  },
  {
    id: 262,
    name: "Absorb Spirit Sphere"
  },
  {
    id: 263,
    name: "Raging Trifecta Blow"
  },
  {
    id: 264,
    name: "Snap"
  },
  {
    id: 265,
    name: "Dodge"
  },
  {
    id: 266,
    name: "Occult Impaction"
  },
  {
    id: 267,
    name: "Throw Spirit Sphere"
  },
  {
    id: 268,
    name: "Mental Strength "
  },
  {
    id: 269,
    name: "Root"
  },
  {
    id: 270,
    name: "Fury"
  },
  {
    id: 271,
    name: "Asura Strike "
  },
  {
    id: 272,
    name: "Raging Quadruple Blow  "
  },
  {
    id: 273,
    name: "Raging Thrust"
  },
  {
    id: 274,
    name: "Study"
  },
  {
    id: 275,
    name: "Cast Cancel"
  },
  {
    id: 276,
    name: "Magic Rod  "
  },
  {
    id: 277,
    name: "Spell Breaker"
  },
  {
    id: 278,
    name: "Free Cast  "
  },
  {
    id: 279,
    name: "Hindsight  "
  },
  {
    id: 280,
    name: "Endow Blaze"
  },
  {
    id: 281,
    name: "Endow Tsunami"
  },
  {
    id: 282,
    name: "Endow Tornado"
  },
  {
    id: 283,
    name: "Endow Quake"
  },
  {
    id: 284,
    name: "Dragonology"
  },
  {
    id: 285,
    name: "Volcano"
  },
  {
    id: 286,
    name: "Deluge"
  },
  {
    id: 287,
    name: "Whirlwind  "
  },
  {
    id: 288,
    name: "Magnetic Earth  "
  },
  {
    id: 289,
    name: "Dispell"
  },
  {
    id: 290,
    name: "Hocus-pocus"
  },
  {
    id: 291,
    name: "Monocell"
  },
  {
    id: 292,
    name: "Class Change "
  },
  {
    id: 293,
    name: "Monster Chant"
  },
  {
    id: 294,
    name: "Grampus Morph"
  },
  {
    id: 295,
    name: "Grim Reaper"
  },
  {
    id: 296,
    name: "Gold Digger"
  },
  {
    id: 297,
    name: "Beastly Hypnosis"
  },
  {
    id: 298,
    name: "Questioning"
  },
  {
    id: 299,
    name: "Gravity"
  },
  {
    id: 300,
    name: "Leveling"
  },
  {
    id: 301,
    name: "Suicide"
  },
  {
    id: 302,
    name: "Rejuvenation "
  },
  {
    id: 303,
    name: "Coma"
  },
  {
    id: 304,
    name: "Amp "
  },
  {
    id: 305,
    name: "Encore"
  },
  {
    id: 306,
    name: "Lullaby"
  },
  {
    id: 307,
    name: "Mental Sensing  "
  },
  {
    id: 308,
    name: "Down Tempo "
  },
  {
    id: 309,
    name: "Battle Theme "
  },
  {
    id: 310,
    name: "Harmonic Lick"
  },
  {
    id: 311,
    name: "Classical Pluck "
  },
  {
    id: 312,
    name: "Power Chord"
  },
  {
    id: 313,
    name: "Acoustic Rhythm "
  },
  {
    id: 314,
    name: "Ragnarok"
  },
  {
    id: 315,
    name: "Music Lessons"
  },
  {
    id: 316,
    name: "Melody Strike"
  },
  {
    id: 317,
    name: "Unchained Serenade"
  },
  {
    id: 318,
    name: "Unbarring Octave"
  },
  {
    id: 319,
    name: "Perfect Tablature"
  },
  {
    id: 320,
    name: "Impressive Riff "
  },
  {
    id: 321,
    name: "Magic Strings"
  },
  {
    id: 322,
    name: "Song of Lutie"
  },
  {
    id: 323,
    name: "Dance Lessons"
  },
  {
    id: 324,
    name: "Slinging Arrow  "
  },
  {
    id: 325,
    name: "Hip Shaker "
  },
  {
    id: 326,
    name: "Dazzler"
  },
  {
    id: 327,
    name: "Focus Ballet "
  },
  {
    id: 328,
    name: "Slow Grace "
  },
  {
    id: 329,
    name: "Lady Luck  "
  },
  {
    id: 330,
    name: "Gypsy's Kiss "
  },
  {
    id: 331,
    name: "Random Move"
  },
  {
    id: 332,
    name: "Speed UP"
  },
  {
    id: 333,
    name: "Revenge"
  },
  {
    id: 334,
    name: "I Will Protect You"
  },
  {
    id: 335,
    name: "I Look up to You"
  },
  {
    id: 336,
    name: "I miss You "
  },
  {
    id: 337,
    name: "Throw Tomahawk  "
  },
  {
    id: 338,
    name: "Cross of Darkness"
  },
  {
    id: 339,
    name: "Grand cross of Darkness"
  },
  {
    id: 340,
    name: "Soul Strike of Darkness"
  },
  {
    id: 341,
    name: "Darkness Jupitel"
  },
  {
    id: 342,
    name: "Stop"
  },
  {
    id: 343,
    name: "Break weapon "
  },
  {
    id: 344,
    name: "Break armor"
  },
  {
    id: 345,
    name: "Break helm "
  },
  {
    id: 346,
    name: "Break shield "
  },
  {
    id: 347,
    name: "Undead Element Attack  "
  },
  {
    id: 348,
    name: "Undead Attribute Change"
  },
  {
    id: 349,
    name: "Power Up"
  },
  {
    id: 350,
    name: "Agility UP "
  },
  {
    id: 351,
    name: "Siege Mode "
  },
  {
    id: 352,
    name: "Recall Slaves"
  },
  {
    id: 353,
    name: "Invisible  "
  },
  {
    id: 354,
    name: "Run "
  },
  {
    id: 355,
    name: "Aura Blade "
  },
  {
    id: 356,
    name: "Parrying"
  },
  {
    id: 357,
    name: "Concentration"
  },
  {
    id: 358,
    name: "Relax"
  },
  {
    id: 359,
    name: "Frenzy"
  },
  {
    id: 360,
    name: "Fury"
  },
  {
    id: 361,
    name: "Assumptio  "
  },
  {
    id: 362,
    name: "Basilica"
  },
  {
    id: 363,
    name: "Meditatio  "
  },
  {
    id: 364,
    name: "Soul Drain "
  },
  {
    id: 365,
    name: "Stave Crasher"
  },
  {
    id: 366,
    name: "Mystical Amplification "
  },
  {
    id: 367,
    name: "Gloria Domini	"
  },
  {
    id: 368,
    name: "Martyr's Reckoning"
  },
  {
    id: 369,
    name: "Battle Chant "
  },
  {
    id: 370,
    name: "Raging Palm Strike"
  },
  {
    id: 371,
    name: "Glacier Fist "
  },
  {
    id: 372,
    name: "Chain Crush Combo"
  },
  {
    id: 373,
    name: "Indulge"
  },
  {
    id: 374,
    name: "Soul Exhale"
  },
  {
    id: 375,
    name: "Soul Siphon"
  },
  {
    id: 376,
    name: "Advanced Katar Mastery "
  },
  {
    id: 377,
    name: "Hallucination Walk"
  },
  {
    id: 378,
    name: "Enchant Deadly Poison  "
  },
  {
    id: 379,
    name: "Soul Destroyer  "
  },
  {
    id: 380,
    name: "Falcon Eyes"
  },
  {
    id: 381,
    name: "Falcon Assault  "
  },
  {
    id: 382,
    name: "Focused Arrow Strike"
  },
  {
    id: 383,
    name: "Wind Walker"
  },
  {
    id: 384,
    name: "Shattering Strike"
  },
  {
    id: 385,
    name: "Create Coins "
  },
  {
    id: 386,
    name: "Create Nuggets  "
  },
  {
    id: 387,
    name: "Cart Boost "
  },
  {
    id: 388,
    name: "Auto Attack System"
  },
  {
    id: 389,
    name: "Stealth"
  },
  {
    id: 390,
    name: "Counter Instinct"
  },
  {
    id: 391,
    name: "Steal Backpack  "
  },
  {
    id: 392,
    name: "Alchemy"
  },
  {
    id: 393,
    name: "Potion Synthesis"
  },
  {
    id: 394,
    name: "Vulcan Arrow "
  },
  {
    id: 395,
    name: "Sheltering Bliss"
  },
  {
    id: 396,
    name: "Marionette Control"
  },
  {
    id: 397,
    name: "Spiral Pierce"
  },
  {
    id: 398,
    name: "Traumatic Blow  "
  },
  {
    id: 399,
    name: "Vital Strike "
  },
  {
    id: 400,
    name: "Napalm Vulcan"
  },
  {
    id: 401,
    name: "Zen "
  },
  {
    id: 402,
    name: "Mind Breaker "
  },
  {
    id: 403,
    name: "Foresight  "
  },
  {
    id: 404,
    name: "Blinding Mist"
  },
  {
    id: 405,
    name: "Fiber Lock "
  },
  {
    id: 406,
    name: "Meteor Assault  "
  },
  {
    id: 407,
    name: "Create Deadly Poison"
  },
  {
    id: 408,
    name: "Baby"
  },
  {
    id: 409,
    name: "Call Parent"
  },
  {
    id: 410,
    name: "Call Baby  "
  },
  {
    id: 411,
    name: "Running"
  },
  {
    id: 412,
    name: "Tornado Stance  "
  },
  {
    id: 413,
    name: "Tornado Kick "
  },
  {
    id: 414,
    name: "Heel Drop Stance"
  },
  {
    id: 415,
    name: "Heel Drop  "
  },
  {
    id: 416,
    name: "Roundhouse Stance"
  },
  {
    id: 417,
    name: "Roundhouse Kick "
  },
  {
    id: 418,
    name: "Counter Kick Stance"
  },
  {
    id: 419,
    name: "Counter Kick "
  },
  {
    id: 420,
    name: "Tumbling"
  },
  {
    id: 421,
    name: "Flying Kick"
  },
  {
    id: 422,
    name: "Peaceful Break  "
  },
  {
    id: 423,
    name: "Happy Break"
  },
  {
    id: 424,
    name: "Kihop"
  },
  {
    id: 425,
    name: "Mild Wind  "
  },
  {
    id: 426,
    name: "Taekwon Jump "
  },
  {
    id: 427,
    name: "Feeling the Sun Moon and Stars"
  },
  {
    id: 428,
    name: "Warmth of the Sun"
  },
  {
    id: 429,
    name: "Warmth of the Moon"
  },
  {
    id: 430,
    name: "Warmth of the Stars"
  },
  {
    id: 431,
    name: "Comfort of the Sun"
  },
  {
    id: 432,
    name: "Comfort of the Moon"
  },
  {
    id: 433,
    name: "Comfort of the Stars"
  },
  {
    id: 434,
    name: "Hatred of the Sun Moon and Stars"
  },
  {
    id: 435,
    name: "Anger of the Sun"
  },
  {
    id: 436,
    name: "Anger of the Moon"
  },
  {
    id: 437,
    name: "Anger of the Stars"
  },
  {
    id: 438,
    name: "Blessing of the Sun"
  },
  {
    id: 439,
    name: "Blessing of the Moon"
  },
  {
    id: 440,
    name: "Blessing of the Stars  "
  },
  {
    id: 441,
    name: "Demon of the Sun Moon and Stars"
  },
  {
    id: 442,
    name: "Friend of the Sun Moon and Stars"
  },
  {
    id: 443,
    name: "Knowledge of the Sun Moon and Stars  "
  },
  {
    id: 444,
    name: "Union of the Sun Moon and Stars"
  },
  {
    id: 445,
    name: "Spirit of the Alchemist"
  },
  {
    id: 446,
    name: "Aid Berserk Potion"
  },
  {
    id: 447,
    name: "Spirit of the Monk"
  },
  {
    id: 448,
    name: "Spirit of the Star Gladiator  "
  },
  {
    id: 449,
    name: "Spirit of the Sage"
  },
  {
    id: 450,
    name: "Spirit of the Crusader "
  },
  {
    id: 451,
    name: "Spirit of the Supernovice"
  },
  {
    id: 452,
    name: "Spirit of the Knight"
  },
  {
    id: 453,
    name: "Spirit of the Wizard"
  },
  {
    id: 454,
    name: "Spirit of the Priest"
  },
  {
    id: 455,
    name: "Spirit of the Artist"
  },
  {
    id: 456,
    name: "Spirit of the Rogue"
  },
  {
    id: 457,
    name: "Spirit of the Assasin  "
  },
  {
    id: 458,
    name: "Spirit of the Blacksmith "
  },
  {
    id: 459,
    name: "Advanced Adrenaline Rush "
  },
  {
    id: 460,
    name: "Spirit of the Hunter"
  },
  {
    id: 461,
    name: "Spirit of the Soul Linker"
  },
  {
    id: 462,
    name: "Kaizel"
  },
  {
    id: 463,
    name: "Kaahi"
  },
  {
    id: 464,
    name: "Kaupe"
  },
  {
    id: 465,
    name: "Kaite"
  },
  {
    id: 466,
    name: "Kaina"
  },
  {
    id: 467,
    name: "Estin"
  },
  {
    id: 468,
    name: "Estun"
  },
  {
    id: 469,
    name: "Esma"
  },
  {
    id: 470,
    name: "Eswoo"
  },
  {
    id: 471,
    name: "Eske"
  },
  {
    id: 472,
    name: "Eska"
  },
  {
    id: 473,
    name: "Provoke Self "
  },
  {
    id: 474,
    name: "Emotion ON "
  },
  {
    id: 475,
    name: "Preserve"
  },
  {
    id: 476,
    name: "Divest All "
  },
  {
    id: 477,
    name: "Upgrade Weapon  "
  },
  {
    id: 478,
    name: "Aid Condensed Potion"
  },
  {
    id: 479,
    name: "Full Protection "
  },
  {
    id: 480,
    name: "Shield Chain "
  },
  {
    id: 481,
    name: "Mana Recharge"
  },
  {
    id: 482,
    name: "Double Casting  "
  },
  {
    id: 483,
    name: "Ganbantein "
  },
  {
    id: 484,
    name: "Gravitation Field"
  },
  {
    id: 485,
    name: "Cart Termination"
  },
  {
    id: 486,
    name: "Maximum Power Thrust"
  },
  {
    id: 487,
    name: "Longing for Freedom"
  },
  {
    id: 488,
    name: "Wand of Hermode "
  },
  {
    id: 489,
    name: "Tarot Card of Fate"
  },
  {
    id: 490,
    name: "Acid Demonstration"
  },
  {
    id: 491,
    name: "Plant Cultivation"
  },
  {
    id: 492,
    name: "Weapon Enchantment"
  },
  {
    id: 493,
    name: "Taekwon Mission "
  },
  {
    id: 494,
    name: "Spirit of Rebirth"
  },
  {
    id: 495,
    name: "Onehand Quicken "
  },
  {
    id: 496,
    name: "Twilight Alchemy 1"
  },
  {
    id: 497,
    name: "Twilight Alchemy 2"
  },
  {
    id: 498,
    name: "Twilight Alchemy 3"
  },
  {
    id: 499,
    name: "Beast Strafing  "
  },
  {
    id: 500,
    name: "Flip the Coin"
  },
  {
    id: 501,
    name: "Fling"
  },
  {
    id: 502,
    name: "Triple Action"
  },
  {
    id: 503,
    name: "Bulls Eye  "
  },
  {
    id: 504,
    name: "Madness Canceller"
  },
  {
    id: 505,
    name: "AdJustment "
  },
  {
    id: 506,
    name: "Increasing Accuracy"
  },
  {
    id: 507,
    name: "Magical Bullet  "
  },
  {
    id: 508,
    name: "Cracker"
  },
  {
    id: 509,
    name: "Single Action"
  },
  {
    id: 510,
    name: "Snake Eye  "
  },
  {
    id: 511,
    name: "Chain Action "
  },
  {
    id: 512,
    name: "Tracking"
  },
  {
    id: 513,
    name: "Disarm"
  },
  {
    id: 514,
    name: "Piercing Shot"
  },
  {
    id: 515,
    name: "Rapid Shower "
  },
  {
    id: 516,
    name: "Desperado  "
  },
  {
    id: 517,
    name: "Gatling Fever"
  },
  {
    id: 518,
    name: "Dust"
  },
  {
    id: 519,
    name: "Full Buster"
  },
  {
    id: 520,
    name: "Spread Attack"
  },
  {
    id: 521,
    name: "Ground Drift "
  },
  {
    id: 522,
    name: "Shuriken Training"
  },
  {
    id: 523,
    name: "Throw Shuriken  "
  },
  {
    id: 524,
    name: "Throw Kunai"
  },
  {
    id: 525,
    name: "Throw Huuma Shuriken"
  },
  {
    id: 526,
    name: "Throw Zeny "
  },
  {
    id: 527,
    name: "Improvised Defense"
  },
  {
    id: 528,
    name: "Vanishing Slash "
  },
  {
    id: 529,
    name: "Shadow Leap"
  },
  {
    id: 530,
    name: "Shadow Slash "
  },
  {
    id: 531,
    name: "Cicada Skin Sheeding"
  },
  {
    id: 532,
    name: "Mirror Image "
  },
  {
    id: 533,
    name: "Spirit of the Blade"
  },
  {
    id: 534,
    name: "Crimson Fire Petal"
  },
  {
    id: 535,
    name: "Crimson Fire Formation "
  },
  {
    id: 536,
    name: "Raging Fire Dragon"
  },
  {
    id: 537,
    name: "Spear of Ice "
  },
  {
    id: 538,
    name: "Hidden Water "
  },
  {
    id: 539,
    name: "Ice Meteor "
  },
  {
    id: 540,
    name: "Wind Blade "
  },
  {
    id: 541,
    name: "Lightning Strike of Destruction"
  },
  {
    id: 542,
    name: "Kamaitachi "
  },
  {
    id: 543,
    name: "Soul"
  },
  {
    id: 544,
    name: "Final Strike "
  },
  {
    id: 653,
    name: "Earthquake "
  },
  {
    id: 654,
    name: "Fire Breath"
  },
  {
    id: 655,
    name: "Ice Breath "
  },
  {
    id: 656,
    name: "Thunder Breath  "
  },
  {
    id: 657,
    name: "Acid Breath"
  },
  {
    id: 658,
    name: "Darkness Breath "
  },
  {
    id: 659,
    name: "Dragon Fear"
  },
  {
    id: 660,
    name: "Bleeding"
  },
  {
    id: 661,
    name: "Pulse Strike "
  },
  {
    id: 662,
    name: "Hell's Judgement"
  },
  {
    id: 663,
    name: "Wide Silence "
  },
  {
    id: 664,
    name: "Wide Freeze"
  },
  {
    id: 665,
    name: "Wide Bleeding"
  },
  {
    id: 666,
    name: "Wide Petrify "
  },
  {
    id: 667,
    name: "Wide Confusion  "
  },
  {
    id: 668,
    name: "Wide Sleep "
  },
  {
    id: 669,
    name: "Wide Sight "
  },
  {
    id: 670,
    name: "Evil Land  "
  },
  {
    id: 671,
    name: "Magic Mirror "
  },
  {
    id: 672,
    name: "Slow Cast  "
  },
  {
    id: 673,
    name: "Critical Wounds "
  },
  {
    id: 674,
    name: "Expulsion  "
  },
  {
    id: 675,
    name: "Stone Skin "
  },
  {
    id: 676,
    name: "Anti Magic "
  },
  {
    id: 677,
    name: "Wide Curse "
  },
  {
    id: 678,
    name: "Wide Stun  "
  },
  {
    id: 679,
    name: "Vampire Gift "
  },
  {
    id: 680,
    name: "Wide Soul Drain "
  },
  {
    id: 681,
    name: "Increase Weight Limit R"
  },
  {
    id: 682,
    name: "Talk"
  },
  {
    id: 683,
    name: "Hell Power "
  },
  {
    id: 684,
    name: "Hell Dignity "
  },
  {
    id: 685,
    name: "Invincible "
  },
  {
    id: 686,
    name: "Invincible off  "
  },
  {
    id: 687,
    name: "Full Heal  "
  },
  {
    id: 688,
    name: "GM Sandman "
  },
  {
    id: 689,
    name: "Party Blessing  "
  },
  {
    id: 690,
    name: "Party Increase AGI"
  },
  {
    id: 691,
    name: "Party Assumptio "
  },
  {
    id: 692,
    name: "Cat Cry"
  },
  {
    id: 693,
    name: "Party Flee "
  },
  {
    id: 694,
    name: "Angel's Protection"
  },
  {
    id: 695,
    name: "Summer Night Dream"
  },
  {
    id: 696,
    name: "Change Undead"
  },
  {
    id: 697,
    name: "Reverse Orcish  "
  },
  {
    id: 698,
    name: "Christmas Carol "
  },
  {
    id: 699,
    name: "ALL SONKRAN"
  },
  {
    id: 1001,
    name: "Charge Attack"
  },
  {
    id: 1002,
    name: "Shrink"
  },
  {
    id: 1003,
    name: "Sonic Acceleration"
  },
  {
    id: 1004,
    name: "Throw Venom Knife"
  },
  {
    id: 1005,
    name: "Close Confine"
  },
  {
    id: 1006,
    name: "Sight Blaster"
  },
  {
    id: 1007,
    name: "Create Elemental Converter "
  },
  {
    id: 1008,
    name: "Elemental Change Water "
  },
  {
    id: 1009,
    name: "Phantasmic Arrow"
  },
  {
    id: 1010,
    name: "Pang Voice "
  },
  {
    id: 1011,
    name: "Wink of Charm"
  },
  {
    id: 1012,
    name: "Unfair Trick "
  },
  {
    id: 1013,
    name: "Greed"
  },
  {
    id: 1014,
    name: "Redemptio  "
  },
  {
    id: 1015,
    name: "Ki Translation  "
  },
  {
    id: 1016,
    name: "Ki Explosion "
  },
  {
    id: 1017,
    name: "Elemental Change Earth "
  },
  {
    id: 1018,
    name: "Elemental Change Fire  "
  },
  {
    id: 1019,
    name: "Elemental Change Wind  "
  },
  {
    id: 2001,
    name: "Enchant Blade"
  },
  {
    id: 2002,
    name: "Sonic Wave "
  },
  {
    id: 2003,
    name: "Death Bound"
  },
  {
    id: 2004,
    name: "Hundred Spear"
  },
  {
    id: 2005,
    name: "Wind Cutter"
  },
  {
    id: 2006,
    name: "Ignition Break  "
  },
  {
    id: 2007,
    name: "Dragon Training "
  },
  {
    id: 2008,
    name: "Dragon Breath"
  },
  {
    id: 2009,
    name: "Dragon Howling  "
  },
  {
    id: 2010,
    name: "Rune Mastery "
  },
  {
    id: 2011,
    name: "Millenium Shield"
  },
  {
    id: 2012,
    name: "Crush Strike "
  },
  {
    id: 2013,
    name: "Refresh"
  },
  {
    id: 2014,
    name: "Giant Growth "
  },
  {
    id: 2015,
    name: "Stone Hard Skin "
  },
  {
    id: 2016,
    name: "Vitality Activation"
  },
  {
    id: 2017,
    name: "Storm Blast"
  },
  {
    id: 2018,
    name: "Fighting Spirit "
  },
  {
    id: 2019,
    name: "Abundance  "
  },
  {
    id: 2020,
    name: "Phantom Thrust  "
  },
  {
    id: 2021,
    name: "Venom Impress"
  },
  {
    id: 2022,
    name: "Cross Impact "
  },
  {
    id: 2023,
    name: "Dark Illusion"
  },
  {
    id: 2024,
    name: "Research New Poison"
  },
  {
    id: 2025,
    name: "Create New Poison"
  },
  {
    id: 2026,
    name: "Antidote"
  },
  {
    id: 2027,
    name: "Poisoning Weapon"
  },
  {
    id: 2028,
    name: "Weapon Blocking "
  },
  {
    id: 2029,
    name: "Counter Slash"
  },
  {
    id: 2030,
    name: "Weapon Crush "
  },
  {
    id: 2031,
    name: "Venom Pressure  "
  },
  {
    id: 2032,
    name: "Poison Smoke "
  },
  {
    id: 2033,
    name: "Cloaking Exceed "
  },
  {
    id: 2034,
    name: "Phantom Menace  "
  },
  {
    id: 2035,
    name: "Hallucination Walk"
  },
  {
    id: 2036,
    name: "Rolling Cutter  "
  },
  {
    id: 2037,
    name: "Cross Ripper Slasher"
  },
  {
    id: 2038,
    name: "Judex"
  },
  {
    id: 2039,
    name: "Ancilla"
  },
  {
    id: 2040,
    name: "Adoramus"
  },
  {
    id: 2041,
    name: "Crementia  "
  },
  {
    id: 2042,
    name: "Canto Candidus  "
  },
  {
    id: 2043,
    name: "Coluceo Heal "
  },
  {
    id: 2044,
    name: "Epiclesis  "
  },
  {
    id: 2045,
    name: "Praefatio  "
  },
  {
    id: 2046,
    name: "Oratio"
  },
  {
    id: 2047,
    name: "Lauda Agnus"
  },
  {
    id: 2048,
    name: "Lauda Ramus"
  },
  {
    id: 2049,
    name: "Eucharistica "
  },
  {
    id: 2050,
    name: "Renovatio  "
  },
  {
    id: 2051,
    name: "Highness Heal"
  },
  {
    id: 2052,
    name: "Clearance  "
  },
  {
    id: 2053,
    name: "Expiatio"
  },
  {
    id: 2054,
    name: "Duple Light"
  },
  {
    id: 2055,
    name: "Duple Light Melee"
  },
  {
    id: 2056,
    name: "Duple Light Magic"
  },
  {
    id: 2057,
    name: "Silentium  "
  },
  {
    id: 2201,
    name: "White Imprison  "
  },
  {
    id: 2202,
    name: "Soul Expansion  "
  },
  {
    id: 2203,
    name: "Frosty Misty "
  },
  {
    id: 2204,
    name: "Jack Frost "
  },
  {
    id: 2205,
    name: "Marsh of Abyss  "
  },
  {
    id: 2206,
    name: "Recognized Spell"
  },
  {
    id: 2207,
    name: "Sienna Execrate "
  },
  {
    id: 2208,
    name: "Radius"
  },
  {
    id: 2209,
    name: "Stasis"
  },
  {
    id: 2210,
    name: "Drain Life "
  },
  {
    id: 2211,
    name: "Crimson Rock "
  },
  {
    id: 2212,
    name: "Hell Inferno "
  },
  {
    id: 2213,
    name: "Comet"
  },
  {
    id: 2214,
    name: "Chain Lightning "
  },
  {
    id: 2215,
    name: "Chain Lightning Attack "
  },
  {
    id: 2216,
    name: "Earth Strain "
  },
  {
    id: 2217,
    name: "Tetra Vortex "
  },
  {
    id: 2218,
    name: "Tetra Vortex Fire"
  },
  {
    id: 2219,
    name: "Tetra Vortex Water"
  },
  {
    id: 2220,
    name: "Tetra Vortex Wind"
  },
  {
    id: 2221,
    name: "Tetra Vortex Earth"
  },
  {
    id: 2222,
    name: "Summon Fire Ball"
  },
  {
    id: 2223,
    name: "Summon Lightning Ball  "
  },
  {
    id: 2224,
    name: "Summon Water Ball"
  },
  {
    id: 2225,
    name: "Summon Attack Fire"
  },
  {
    id: 2226,
    name: "Summon Attack Wind"
  },
  {
    id: 2227,
    name: "Summon Attack Water"
  },
  {
    id: 2228,
    name: "Summon Attack Earth"
  },
  {
    id: 2229,
    name: "Summon Stone "
  },
  {
    id: 2230,
    name: "Release"
  },
  {
    id: 2231,
    name: "Reading Spellbook"
  },
  {
    id: 2232,
    name: "Freeze Spell "
  },
  {
    id: 2233,
    name: "Arrow Storm"
  },
  {
    id: 2234,
    name: "Fear Breeze"
  },
  {
    id: 2235,
    name: "Ranger Main"
  },
  {
    id: 2236,
    name: "Aimed Bolt "
  },
  {
    id: 2237,
    name: "Detonator  "
  },
  {
    id: 2238,
    name: "Electric Shocker"
  },
  {
    id: 2239,
    name: "Cluster Bomb "
  },
  {
    id: 2240,
    name: "Warg Mastery "
  },
  {
    id: 2241,
    name: "Warg Rider "
  },
  {
    id: 2242,
    name: "Warg Dash  "
  },
  {
    id: 2243,
    name: "Warg Strike"
  },
  {
    id: 2244,
    name: "Warg Bite  "
  },
  {
    id: 2245,
    name: "Tooth of Warg"
  },
  {
    id: 2246,
    name: "Sensitive Keen  "
  },
  {
    id: 2247,
    name: "Camouflage "
  },
  {
    id: 2248,
    name: "Research Trap"
  },
  {
    id: 2249,
    name: "Magenta Trap "
  },
  {
    id: 2250,
    name: "Cobalt Trap"
  },
  {
    id: 2251,
    name: "Maize Trap "
  },
  {
    id: 2252,
    name: "Verdure Trap "
  },
  {
    id: 2253,
    name: "Firing Trap"
  },
  {
    id: 2254,
    name: "Icebound Trap"
  },
  {
    id: 2255,
    name: "Mado License "
  },
  {
    id: 2256,
    name: "Boost Knuckle"
  },
  {
    id: 2257,
    name: "Pile Bunker // Need official range.  "
  },
  {
    id: 2258,
    name: "Vulcan Arm "
  },
  {
    id: 2259,
    name: "Flame Launcher  "
  },
  {
    id: 2260,
    name: "Cold Slower"
  },
  {
    id: 2261,
    name: "Arm Cannon "
  },
  {
    id: 2262,
    name: "Acceleration "
  },
  {
    id: 2263,
    name: "Hovering"
  },
  {
    id: 2264,
    name: "Front-Side Slide"
  },
  {
    id: 2265,
    name: "Back-Side Slide "
  },
  {
    id: 2266,
    name: "Mainframe Restructure  "
  },
  {
    id: 2267,
    name: "Self Destruction"
  },
  {
    id: 2268,
    name: "Shape Shift"
  },
  {
    id: 2269,
    name: "Emergency Cool  "
  },
  {
    id: 2270,
    name: "Infrared Scan"
  },
  {
    id: 2271,
    name: "Analyze"
  },
  {
    id: 2272,
    name: "Magnetic Field  "
  },
  {
    id: 2273,
    name: "Neutral Barrier "
  },
  {
    id: 2274,
    name: "Stealth Field"
  },
  {
    id: 2275,
    name: "Repair"
  },
  {
    id: 2276,
    name: "Axe Training "
  },
  {
    id: 2277,
    name: "Research Fire/Earth"
  },
  {
    id: 2278,
    name: "Axe Boomerang"
  },
  {
    id: 2279,
    name: "Power Swing"
  },
  {
    id: 2280,
    name: "Axe Tornado"
  },
  {
    id: 2281,
    name: "FAW - Silver Sniper"
  },
  {
    id: 2282,
    name: "FAW - Magic Decoy"
  },
  {
    id: 2283,
    name: "FAW Removal"
  },
  {
    id: 2284,
    name: "Fatal Menace "
  },
  {
    id: 2285,
    name: "Reproduce  "
  },
  {
    id: 2286,
    name: "Auto Shadow Spell"
  },
  {
    id: 2287,
    name: "Shadow Form"
  },
  {
    id: 2288,
    name: "Triangle Shot"
  },
  {
    id: 2289,
    name: "Body Painting"
  },
  {
    id: 2290,
    name: "Invisibility "
  },
  {
    id: 2291,
    name: "Deadly Infect"
  },
  {
    id: 2292,
    name: "Masquerade - Enervation"
  },
  {
    id: 2293,
    name: "Masquerade - Gloomy"
  },
  {
    id: 2294,
    name: "Masquerade - Ignorance "
  },
  {
    id: 2295,
    name: "Masquerade - Laziness  "
  },
  {
    id: 2296,
    name: "Masquerade - Unlucky"
  },
  {
    id: 2297,
    name: "Masquerade - Weakness  "
  },
  {
    id: 2298,
    name: "Strip Accessory "
  },
  {
    id: 2299,
    name: "Man Hole"
  },
  {
    id: 2300,
    name: "Dimension Door  "
  },
  {
    id: 2301,
    name: "Chaos Panic"
  },
  {
    id: 2302,
    name: "Maelstrom  "
  },
  {
    id: 2303,
    name: "Bloody Lust"
  },
  {
    id: 2304,
    name: "Feint Bomb "
  },
  {
    id: 2307,
    name: "Cannon Spear "
  },
  {
    id: 2308,
    name: "Banishing Point "
  },
  {
    id: 2309,
    name: "Trample"
  },
  {
    id: 2310,
    name: "Shield Press "
  },
  {
    id: 2311,
    name: "Reflect Damage  "
  },
  {
    id: 2312,
    name: "Pinpoint Attack "
  },
  {
    id: 2313,
    name: "Force of Vanguard"
  },
  {
    id: 2314,
    name: "Rage Burst "
  },
  {
    id: 2315,
    name: "Shield Spell "
  },
  {
    id: 2316,
    name: "Exceed Break "
  },
  {
    id: 2317,
    name: "Over Brand "
  },
  {
    id: 2318,
    name: "Prestige"
  },
  {
    id: 2319,
    name: "Banding"
  },
  {
    id: 2320,
    name: "Moon Slasher "
  },
  {
    id: 2321,
    name: "Ray of Genesis  "
  },
  {
    id: 2322,
    name: "Piety"
  },
  {
    id: 2323,
    name: "Earth Drive"
  },
  {
    id: 2324,
    name: "Hesperus Lit "
  },
  {
    id: 2325,
    name: "Inspiration"
  },
  {
    id: 2326,
    name: "Dragon Combo "
  },
  {
    id: 2327,
    name: "Sky Net Blow "
  },
  {
    id: 2328,
    name: "Earth Shaker "
  },
  {
    id: 2329,
    name: "Fallen Empire"
  },
  {
    id: 2330,
    name: "Tiger Canon"
  },
  {
    id: 2331,
    name: "Hell Gate  "
  },
  {
    id: 2332,
    name: "Rampage Blaster "
  },
  {
    id: 2333,
    name: "Crescent Elbow  "
  },
  {
    id: 2334,
    name: "Cursed Circle"
  },
  {
    id: 2335,
    name: "Lightning Walk  "
  },
  {
    id: 2336,
    name: "Knuckle Arrow"
  },
  {
    id: 2337,
    name: "Windmill"
  },
  {
    id: 2338,
    name: "Raising Dragon  "
  },
  {
    id: 2339,
    name: "Gentle Touch// What is this for? o.O [LimitLine] "
  },
  {
    id: 2340,
    name: "Assimilate Power"
  },
  {
    id: 2341,
    name: "Power Velocity  "
  },
  {
    id: 2342,
    name: "Crescent Elbow Autospell "
  },
  {
    id: 2343,
    name: "Gate of Hell "
  },
  {
    id: 2344,
    name: "Gentle Touch - Quiet"
  },
  {
    id: 2345,
    name: "Gentle Touch - Cure"
  },
  {
    id: 2346,
    name: "Gentle Touch - Energy Drain"
  },
  {
    id: 2347,
    name: "Gentle Touch - Change  "
  },
  {
    id: 2348,
    name: "Gentle Touch - Revitalize"
  },
  {
    id: 2350,
    name: "Swing Dance"
  },
  {
    id: 2351,
    name: "Symphony of Lovers"
  },
  {
    id: 2352,
    name: "Moonlit Serenade"
  },
  {
    id: 2381,
    name: "Windmill Rush Attack"
  },
  {
    id: 2382,
    name: "Echo Song  "
  },
  {
    id: 2383,
    name: "Harmonize  "
  },
  {
    id: 2412,
    name: "Lesson"
  },
  {
    id: 2413,
    name: "Metallic Sound  "
  },
  {
    id: 2414,
    name: "Reverberation"
  },
  {
    id: 2415,
    name: "Reverberation Melee"
  },
  {
    id: 2416,
    name: "Reverberation Magic"
  },
  {
    id: 2417,
    name: "Dominion Impulse"
  },
  {
    id: 2418,
    name: "Severe Rainstorm"
  },
  {
    id: 2419,
    name: "Poem of The Netherworld"
  },
  {
    id: 2420,
    name: "Voice of Siren  "
  },
  {
    id: 2421,
    name: "Valley of Death "
  },
  {
    id: 2422,
    name: "Deep Sleep Lullaby"
  },
  {
    id: 2423,
    name: "Circle of Nature's Sound "
  },
  {
    id: 2424,
    name: "Improvised Song "
  },
  {
    id: 2425,
    name: "Gloomy Day "
  },
  {
    id: 2426,
    name: "Great Echo "
  },
  {
    id: 2427,
    name: "Song of Mana "
  },
  {
    id: 2428,
    name: "Dance With A Warg"
  },
  {
    id: 2429,
    name: "Sound of Destruction"
  },
  {
    id: 2430,
    name: "Saturday Night Fever"
  },
  {
    id: 2431,
    name: "Lerad's Dew"
  },
  {
    id: 2432,
    name: "Melody of Sink  "
  },
  {
    id: 2433,
    name: "Warcry of Beyond"
  },
  {
    id: 2434,
    name: "Unlimited Humming Voice"
  },
  {
    id: 2443,
    name: "Fire Walk  "
  },
  {
    id: 2444,
    name: "Electric Walk"
  },
  {
    id: 2445,
    name: "Spell Fist "
  },
  {
    id: 2446,
    name: "Earth Grave"
  },
  {
    id: 2447,
    name: "Diamond Dust "
  },
  {
    id: 2448,
    name: "Poison Buster"
  },
  {
    id: 2449,
    name: "Psychic Wave "
  },
  {
    id: 2450,
    name: "Cloud Kill "
  },
  {
    id: 2451,
    name: "Striking"
  },
  {
    id: 2452,
    name: "Warmer"
  },
  {
    id: 2453,
    name: "Vacuum Extreme  "
  },
  {
    id: 2454,
    name: "Varetyr Spear"
  },
  {
    id: 2455,
    name: "Arrullo"
  },
  {
    id: 2456,
    name: "Spirit Control  "
  },
  {
    id: 2457,
    name: "Summon Fire Spirit Agni"
  },
  {
    id: 2458,
    name: "Summon Water Spirit Aqua "
  },
  {
    id: 2459,
    name: "Summon Wind Spirit Ventus"
  },
  {
    id: 2460,
    name: "Summon Earth Spirit Tera "
  },
  {
    id: 2461,
    name: "Elemental Action"
  },
  {
    id: 2462,
    name: "Four Spirit Analysis"
  },
  {
    id: 2463,
    name: "Spirit Sympathy "
  },
  {
    id: 2464,
    name: "Spirit Recovery "
  },
  {
    id: 2465,
    name: "Fire Insignia"
  },
  {
    id: 2466,
    name: "Water Insignia  "
  },
  {
    id: 2467,
    name: "Wind Insignia"
  },
  {
    id: 2468,
    name: "Earth Insignia  "
  },
  {
    id: 2472,
    name: "End Mark"
  },
  {
    id: 2474,
    name: "Sword Training  "
  },
  {
    id: 2475,
    name: "Cart Remodeling "
  },
  {
    id: 2476,
    name: "Cart Tornado "
  },
  {
    id: 2477,
    name: "Cart Cannon"
  },
  {
    id: 2478,
    name: "Cart Boost "
  },
  {
    id: 2479,
    name: "Thorn Trap "
  },
  {
    id: 2480,
    name: "Blood Sucker "
  },
  {
    id: 2481,
    name: "Spore Explosion "
  },
  {
    id: 2482,
    name: "Wall of Thorns  "
  },
  {
    id: 2483,
    name: "Crazy Weed "
  },
  {
    id: 2484,
    name: "Crazy Weed Attack"
  },
  {
    id: 2485,
    name: "Demonic Fire "
  },
  {
    id: 2486,
    name: "Fire Expansion  "
  },
  {
    id: 2487,
    name: "Fire Expansion Smoke Powder"
  },
  {
    id: 2488,
    name: "Fire Expansion Tear Gas"
  },
  {
    id: 2489,
    name: "Fire Expansion Acid"
  },
  {
    id: 2490,
    name: "Hell's Plant "
  },
  {
    id: 2491,
    name: "Hell's Plant Attack"
  },
  {
    id: 2492,
    name: "Howling of Mandragora  "
  },
  {
    id: 2493,
    name: "Sling Item "
  },
  {
    id: 2494,
    name: "Change Material "
  },
  {
    id: 2495,
    name: "Mix Cooking"
  },
  {
    id: 2496,
    name: "Create Bomb"
  },
  {
    id: 2497,
    name: "Special Pharmacy"
  },
  {
    id: 2498,
    name: "Sling Item Attack"
  },
  {
    id: 2515,
    name: "Sacrament  "
  },
  {
    id: 2516,
    name: "Severe Rainstorm Melee "
  },
  {
    id: 2517,
    name: "Howling of Lion "
  },
  {
    id: 2518,
    name: "Ride In Lightening"
  },
  {
    id: 2519,
    name: "Overbrand Brandish"
  },
  {
    id: 2520,
    name: "Overbrand Plus Attack  "
  },
  {
    id: 2533,
    name: "Odin's Recall"
  },
  {
    id: 2534,
    name: "Return To Eldicastes"
  },
  {
    id: 2535,
    name: "Purchase Shop"
  },
  {
    id: 2536,
    name: "Guardian's Recall"
  },
  {
    id: 2537,
    name: "Odin's Power "
  },
  {
    id: 8001,
    name: "Healing Touch"
  },
  {
    id: 8002,
    name: "Avoid"
  },
  {
    id: 8003,
    name: "Brain Surgery"
  },
  {
    id: 8004,
    name: "Change"
  },
  {
    id: 8005,
    name: "Castling"
  },
  {
    id: 8006,
    name: "Defense"
  },
  {
    id: 8007,
    name: "Adamantium Skin "
  },
  {
    id: 8008,
    name: "Bloodlust  "
  },
  {
    id: 8009,
    name: "Moonlight  "
  },
  {
    id: 8010,
    name: "Fleeting Move"
  },
  {
    id: 8011,
    name: "Speed"
  },
  {
    id: 8012,
    name: "S.B.R.44"
  },
  {
    id: 8013,
    name: "Caprice"
  },
  {
    id: 8014,
    name: "Benediction of Chaos"
  },
  {
    id: 8015,
    name: "Instruct"
  },
  {
    id: 8016,
    name: "Bio Explosion"
  },
  {
    id: 8201,
    name: "Bash"
  },
  {
    id: 8202,
    name: "Magnum Break "
  },
  {
    id: 8203,
    name: "Bowling Bash "
  },
  {
    id: 8204,
    name: "Parry"
  },
  {
    id: 8205,
    name: "Shield Reflect  "
  },
  {
    id: 8206,
    name: "Frenzy"
  },
  {
    id: 8207,
    name: "Double Strafe"
  },
  {
    id: 8208,
    name: "Arrow Shower "
  },
  {
    id: 8209,
    name: "Skid Trap  "
  },
  {
    id: 8210,
    name: "Land Mine  "
  },
  {
    id: 8211,
    name: "Sandman"
  },
  {
    id: 8212,
    name: "Freezing Trap"
  },
  {
    id: 8213,
    name: "Remove Trap"
  },
  {
    id: 8214,
    name: "Arrow Repel"
  },
  {
    id: 8215,
    name: "Focused Arrow Strike"
  },
  {
    id: 8216,
    name: "Pierce"
  },
  {
    id: 8217,
    name: "Brandish Spear  "
  },
  {
    id: 8218,
    name: "Spiral Pierce"
  },
  {
    id: 8219,
    name: "Defending Aura  "
  },
  {
    id: 8220,
    name: "Guard"
  },
  {
    id: 8221,
    name: "Sacrifice  "
  },
  {
    id: 8222,
    name: "Magnificat "
  },
  {
    id: 8223,
    name: "Two-Hand Quicken"
  },
  {
    id: 8224,
    name: "Sight"
  },
  {
    id: 8225,
    name: "Crash"
  },
  {
    id: 8226,
    name: "Regain"
  },
  {
    id: 8227,
    name: "Tender"
  },
  {
    id: 8228,
    name: "Benediction"
  },
  {
    id: 8229,
    name: "Recuperate "
  },
  {
    id: 8230,
    name: "Mental Cure"
  },
  {
    id: 8231,
    name: "Compress"
  },
  {
    id: 8232,
    name: "Provoke"
  },
  {
    id: 8233,
    name: "Berserk"
  },
  {
    id: 8234,
    name: "Decrease AGI "
  },
  {
    id: 8235,
    name: "Scapegoat  "
  },
  {
    id: 8236,
    name: "Lex Divina "
  },
  {
    id: 8237,
    name: "Sense"
  },
  {
    id: 8238,
    name: "Kyrie Eleison"
  },
  {
    id: 8239,
    name: "Blessing"
  },
  {
    id: 8240,
    name: "Increase Agility"
  },
  {
    id: 8401,
    name: "Circle of Fire  "
  },
  {
    id: 8402,
    name: "Fire Cloak "
  },
  {
    id: 8403,
    name: "Fire Mantle"
  },
  {
    id: 8404,
    name: "Water Screen "
  },
  {
    id: 8405,
    name: "Water Drop "
  },
  {
    id: 8406,
    name: "Water Barrier"
  },
  {
    id: 8407,
    name: "Wind Step  "
  },
  {
    id: 8408,
    name: "Wind Curtain "
  },
  {
    id: 8409,
    name: "Zephyr"
  },
  {
    id: 8410,
    name: "Solid Skin "
  },
  {
    id: 8411,
    name: "Stone Shield "
  },
  {
    id: 8412,
    name: "Power of Gaia"
  },
  {
    id: 8413,
    name: "Pyrotechnic"
  },
  {
    id: 8414,
    name: "Heater"
  },
  {
    id: 8415,
    name: "Tropic"
  },
  {
    id: 8416,
    name: "Aqua Play  "
  },
  {
    id: 8417,
    name: "Cooler"
  },
  {
    id: 8418,
    name: "Cool Air"
  },
  {
    id: 8419,
    name: "Gust"
  },
  {
    id: 8420,
    name: "Blast"
  },
  {
    id: 8421,
    name: "Wild Storm "
  },
  {
    id: 8422,
    name: "Petrology  "
  },
  {
    id: 8423,
    name: "Cursed Soil"
  },
  {
    id: 8424,
    name: "Upheaval"
  },
  {
    id: 8425,
    name: "Fire Arrow "
  },
  {
    id: 8426,
    name: "Fire Bomb  "
  },
  {
    id: 8427,
    name: "Fire Bomb Attack"
  },
  {
    id: 8428,
    name: "Fire Wave  "
  },
  {
    id: 8429,
    name: "Fire Wave Attack"
  },
  {
    id: 8430,
    name: "Ice Needle "
  },
  {
    id: 8431,
    name: "Water Screw"
  },
  {
    id: 8432,
    name: "Water Screw Attack"
  },
  {
    id: 8433,
    name: "Tidal Weapon"
  },
  {
    id: 8434,
    name: "Wind Slasher"
  },
  {
    id: 8435,
    name: "Hurricane Rage"
  },
  {
    id: 8436,
    name: "Hurricane Rage Attack "
  },
  {
    id: 8437,
    name: "Typhoon Missile"
  },
  {
    id: 8438,
    name: "Typhoon Missile Attack"
  },
  {
    id: 8439,
    name: "Stone Hammer"
  },
  {
    id: 8440,
    name: "Rock Launcher"
  },
  {
    id: 8441,
    name: "Rock Launcher Attack"
  },
  {
    id: 8442,
    name: "Stone Rain "
  },
  {
    id: 1e4,
    name: "Official Guild Approval"
  },
  {
    id: 10001,
    name: "Kafra Contract"
  },
  {
    id: 10002,
    name: "Guardian Research"
  },
  {
    id: 10003,
    name: "Strengthen Guardians"
  },
  {
    id: 10004,
    name: "Guild Extension"
  },
  {
    id: 10005,
    name: "Guild's Glory "
  },
  {
    id: 10006,
    name: "Great Leadership"
  },
  {
    id: 10007,
    name: "Glorious Wounds"
  },
  {
    id: 10008,
    name: "Cold Heart"
  },
  {
    id: 10009,
    name: "Sharp Gaze"
  },
  {
    id: 10010,
    name: "Battle Orders"
  },
  {
    id: 10011,
    name: "Regeneration"
  },
  {
    id: 10012,
    name: "Restoration"
  },
  {
    id: 10013,
    name: "Urgent Call"
  },
  {
    id: 10014,
    name: "Permanent Development"
  }
];
function mapname2bgname(map_name) {
  var bg_name;
  switch (map_name) {
    case "gvg_cas01":
      bg_name = "Castle Siege";
      break;
    case "bg_king":
      bg_name = "Defend The Emperium";
      break;
    case "dragon_cas":
      bg_name = "Battle Zone";
      break;
    case "arena_01":
      bg_name = "TvT";
      break;
    case "arug_cas06":
    case "schg_cas07":
    case "schg_cas06":
      bg_name = "Conquest";
      break;
  }
  return bg_name;
}
function get_job_name(class_id) {
  const job = job_name.find((element) => element.id == class_id);
  if (job) {
    return job.name;
  }
}
function get_skill_name(skill_id) {
  const skill = skill_name.find((element) => element.id == skill_id);
  if (skill) {
    return skill.name;
  }
}
function getFormatNumber(number) {
  return new Intl.NumberFormat().format(number);
}
function isOnline(status) {
  return status == 1 ? "Online" : "Offline";
}
function padTo2Digits(num) {
  return num.toString().padStart(2, "0");
}
function formatDate(date) {
  return [
    date.getFullYear(),
    padTo2Digits(date.getMonth() + 1),
    padTo2Digits(date.getDate())
  ].join("-") + " " + [
    padTo2Digits(date.getHours()),
    padTo2Digits(date.getMinutes()),
    padTo2Digits(date.getSeconds())
  ].join(":");
}
function secondsToDh(d2) {
  var seconds = Number(d2);
  var d2 = Math.floor(seconds / (3600 * 24));
  var h2 = Math.floor(seconds % (3600 * 24) / 3600);
  var dDisplay = d2 > 0 ? d2 + (d2 == 1 ? " day, " : " days ") : "";
  var hDisplay = h2 > 0 ? h2 + (h2 == 1 ? " hour " : " hours ") : "";
  return dDisplay + hDisplay;
}
var Register_vue_vue_type_style_index_0_scoped_true_lang = "";
const _sfc_main$16 = vue.defineComponent({
  components: {
    Head: inertiaVue3.Head,
    JetAuthenticationCard,
    JetAuthenticationCardLogo,
    JetButton,
    JetInput,
    JetCheckbox,
    JetLabel,
    JetValidationErrors,
    Link: inertiaVue3.Link
  },
  layout: GuestLayout,
  data() {
    return {
      country_data,
      form: this.$inertia.form({
        email: "",
        password: "",
        country: "",
        password_confirmation: "",
        terms: false
      })
    };
  },
  methods: {
    submit() {
      this.form.post(this.route("register"), {
        onFinish: () => this.form.reset("password", "password_confirmation")
      });
    }
  }
});
function _sfc_ssrRender$t(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Head = vue.resolveComponent("Head");
  const _component_jet_validation_errors = vue.resolveComponent("jet-validation-errors");
  const _component_JetInput = vue.resolveComponent("JetInput");
  _push(`<!--[-->`);
  _push(serverRenderer.ssrRenderComponent(_component_Head, { title: "Register" }, null, _parent));
  _push(`<div class="min-w-screen min-h-screen bg-register flex items-center justify-center px-5 py-5" data-v-60f65391><div class="bg-gray-100 text-gray-500 rounded-md shadow-xl w-full overflow-hidden" style="${serverRenderer.ssrRenderStyle({ "max-width": "1000px" })}" data-v-60f65391><div class="md:flex w-full h-full" data-v-60f65391><div class="hidden bg-register2 md:block w-1/2 bg-black py-10 px-10" data-v-60f65391></div><div class="w-full md:w-1/2 py-10 px-5 md:px-10" data-v-60f65391><div class="text-center mb-10" data-v-60f65391><h1 class="font-bold text-3xl text-gray-900" data-v-60f65391> Create a Master Account </h1><p class="text-sm" data-v-60f65391> After creating your master account don&#39;t forget to create your game account. </p>`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_validation_errors, null, null, _parent));
  _push(`</div><div data-v-60f65391><div class="flex -mx-3" data-v-60f65391><div class="w-1/2 px-3 mb-5" data-v-60f65391><label for="" class="text-xs font-semibold px-1" data-v-60f65391>Email</label><div class="flex" data-v-60f65391><div class="w-10 z-10 pl-1 text-center pointer-events-none flex items-center justify-center" data-v-60f65391><i class="mdi mdi-account-outline text-gray-300 text-lg" data-v-60f65391></i></div>`);
  _push(serverRenderer.ssrRenderComponent(_component_JetInput, {
    type: "text",
    modelValue: _ctx.form.email,
    "onUpdate:modelValue": ($event) => _ctx.form.email = $event,
    class: "w-full -ml-10 pr-3 py-2 border-2 border-gray-200 outline-none focus:border-indigo-500 text-black"
  }, null, _parent));
  _push(`</div></div><div class="w-1/2 px-3 mb-5" data-v-60f65391><label for="" class="text-xs font-semibold px-1" data-v-60f65391>Country</label><div class="flex" data-v-60f65391><select name="countries" id="" class="w-full border-2 border-gray-200 outline-none focus:border-indigo-500 text-black" data-v-60f65391><!--[-->`);
  serverRenderer.ssrRenderList(_ctx.country_data, (country) => {
    _push(`<option${serverRenderer.ssrRenderAttr("value", country.code)} data-v-60f65391>${serverRenderer.ssrInterpolate(country.name)}</option>`);
  });
  _push(`<!--]--></select></div></div></div><div class="flex -mx-3" data-v-60f65391><div class="w-full px-3 mb-5" data-v-60f65391><label for="" class="text-xs font-semibold px-1" data-v-60f65391>Master Account Password</label><div class="flex" data-v-60f65391><div class="w-10 z-10 pl-1 text-center pointer-events-none flex items-center justify-center" data-v-60f65391><i class="mdi mdi-email-outline text-gray-300 text-lg" data-v-60f65391></i></div>`);
  _push(serverRenderer.ssrRenderComponent(_component_JetInput, {
    type: "password",
    modelValue: _ctx.form.password,
    "onUpdate:modelValue": ($event) => _ctx.form.password = $event,
    class: "w-full -ml-10 pr-3 py-2 border-2 border-gray-200 outline-none focus:border-indigo-500 text-black"
  }, null, _parent));
  _push(`</div></div></div><div class="flex -mx-3" data-v-60f65391><div class="w-full px-3 mb-12" data-v-60f65391><label for="" class="text-xs font-semibold px-1" data-v-60f65391>Repeat Master Account Password</label><div class="flex" data-v-60f65391><div class="w-10 z-10 pl-1 text-center pointer-events-none flex items-center justify-center" data-v-60f65391><i class="mdi mdi-lock-outline text-gray-300 text-lg" data-v-60f65391></i></div>`);
  _push(serverRenderer.ssrRenderComponent(_component_JetInput, {
    type: "password",
    modelValue: _ctx.form.password_confirmation,
    "onUpdate:modelValue": ($event) => _ctx.form.password_confirmation = $event,
    class: "w-full -ml-10 pr-3 py-2 border-2 border-gray-200 outline-none focus:border-indigo-500 text-black"
  }, null, _parent));
  _push(`</div><p class="text-sm italic mt-3 text-red-500" data-v-60f65391> Note: Your master account password is different from your game account password. </p></div></div><div class="flex -mx-3" data-v-60f65391><div class="w-full px-3 mb-5" data-v-60f65391><button class="bg-sky-500 border border-transparent rounded-md p-3 font-semibold text-md text-white uppercase tracking-widest hover:bg-sky-700 active:bg-gray-900 focus:outline-none focus:border-gray-900 focus:ring focus:ring-gray-300 disabled:opacity-25 transition block w-full" data-v-60f65391> REGISTER NOW </button></div></div></div></div></div></div></div><!--]-->`);
}
const _sfc_setup$16 = _sfc_main$16.setup;
_sfc_main$16.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Auth/Register.vue");
  return _sfc_setup$16 ? _sfc_setup$16(props, ctx) : void 0;
};
var Register = /* @__PURE__ */ _export_sfc(_sfc_main$16, [["ssrRender", _sfc_ssrRender$t], ["__scopeId", "data-v-60f65391"]]);
var Register$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Register
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$15 = vue.defineComponent({
  layout: GuestLayout,
  components: {
    Head: inertiaVue3.Head,
    JetAuthenticationCard,
    JetAuthenticationCardLogo,
    JetButton,
    JetInput,
    JetLabel,
    JetValidationErrors
  },
  props: {
    email: String,
    token: String
  },
  data() {
    return {
      form: this.$inertia.form({
        token: this.token,
        email: this.email,
        password: "",
        password_confirmation: ""
      })
    };
  },
  methods: {
    submit() {
      this.form.post(this.route("password.update"), {
        onFinish: () => this.form.reset("password", "password_confirmation")
      });
    }
  }
});
function _sfc_ssrRender$s(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Head = vue.resolveComponent("Head");
  const _component_jet_authentication_card = vue.resolveComponent("jet-authentication-card");
  const _component_jet_authentication_card_logo = vue.resolveComponent("jet-authentication-card-logo");
  const _component_jet_validation_errors = vue.resolveComponent("jet-validation-errors");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(`<!--[-->`);
  _push(serverRenderer.ssrRenderComponent(_component_Head, { title: "Reset Password" }, null, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_jet_authentication_card, { class: "bg-login" }, {
    logo: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_authentication_card_logo, null, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_authentication_card_logo)
        ];
      }
    }),
    default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_validation_errors, { class: "mb-4" }, null, _parent2, _scopeId));
        _push2(`<form${_scopeId}><div${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "email",
          value: "Email"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "email",
          type: "email",
          class: "mt-1 block w-full text-black",
          modelValue: _ctx.form.email,
          "onUpdate:modelValue": ($event) => _ctx.form.email = $event,
          required: "",
          autofocus: ""
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="mt-4"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "password",
          value: "Password"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "password",
          type: "password",
          class: "mt-1 block w-full text-black",
          modelValue: _ctx.form.password,
          "onUpdate:modelValue": ($event) => _ctx.form.password = $event,
          required: "",
          autocomplete: "new-password"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="mt-4"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "password_confirmation",
          value: "Confirm Password"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "password_confirmation",
          type: "password",
          class: "mt-1 block w-full text-black",
          modelValue: _ctx.form.password_confirmation,
          "onUpdate:modelValue": ($event) => _ctx.form.password_confirmation = $event,
          required: "",
          autocomplete: "new-password"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="flex items-center justify-end mt-4"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          class: { "opacity-25": _ctx.form.processing },
          disabled: _ctx.form.processing
        }, {
          default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Reset Password `);
            } else {
              return [
                vue.createTextVNode(" Reset Password ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div></form>`);
      } else {
        return [
          vue.createVNode(_component_jet_validation_errors, { class: "mb-4" }),
          vue.createVNode("form", {
            onSubmit: vue.withModifiers(_ctx.submit, ["prevent"])
          }, [
            vue.createVNode("div", null, [
              vue.createVNode(_component_jet_label, {
                for: "email",
                value: "Email"
              }),
              vue.createVNode(_component_jet_input, {
                id: "email",
                type: "email",
                class: "mt-1 block w-full text-black",
                modelValue: _ctx.form.email,
                "onUpdate:modelValue": ($event) => _ctx.form.email = $event,
                required: "",
                autofocus: ""
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ]),
            vue.createVNode("div", { class: "mt-4" }, [
              vue.createVNode(_component_jet_label, {
                for: "password",
                value: "Password"
              }),
              vue.createVNode(_component_jet_input, {
                id: "password",
                type: "password",
                class: "mt-1 block w-full text-black",
                modelValue: _ctx.form.password,
                "onUpdate:modelValue": ($event) => _ctx.form.password = $event,
                required: "",
                autocomplete: "new-password"
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ]),
            vue.createVNode("div", { class: "mt-4" }, [
              vue.createVNode(_component_jet_label, {
                for: "password_confirmation",
                value: "Confirm Password"
              }),
              vue.createVNode(_component_jet_input, {
                id: "password_confirmation",
                type: "password",
                class: "mt-1 block w-full text-black",
                modelValue: _ctx.form.password_confirmation,
                "onUpdate:modelValue": ($event) => _ctx.form.password_confirmation = $event,
                required: "",
                autocomplete: "new-password"
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ]),
            vue.createVNode("div", { class: "flex items-center justify-end mt-4" }, [
              vue.createVNode(_component_jet_button, {
                class: { "opacity-25": _ctx.form.processing },
                disabled: _ctx.form.processing
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Reset Password ")
                ]),
                _: 1
              }, 8, ["class", "disabled"])
            ])
          ], 40, ["onSubmit"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<!--]-->`);
}
const _sfc_setup$15 = _sfc_main$15.setup;
_sfc_main$15.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Auth/ResetPassword.vue");
  return _sfc_setup$15 ? _sfc_setup$15(props, ctx) : void 0;
};
var ResetPassword = /* @__PURE__ */ _export_sfc(_sfc_main$15, [["ssrRender", _sfc_ssrRender$s]]);
var ResetPassword$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": ResetPassword
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$14 = vue.defineComponent({
  components: {
    Head: inertiaVue3.Head,
    JetAuthenticationCard,
    JetAuthenticationCardLogo,
    JetButton,
    JetInput,
    JetLabel,
    JetValidationErrors
  },
  data() {
    return {
      recovery: false,
      form: this.$inertia.form({
        code: "",
        recovery_code: ""
      })
    };
  },
  methods: {
    toggleRecovery() {
      this.recovery ^= true;
      this.$nextTick(() => {
        if (this.recovery) {
          this.$refs.recovery_code.focus();
          this.form.code = "";
        } else {
          this.$refs.code.focus();
          this.form.recovery_code = "";
        }
      });
    },
    submit() {
      this.form.post(this.route("two-factor.login"));
    }
  }
});
function _sfc_ssrRender$r(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Head = vue.resolveComponent("Head");
  const _component_jet_authentication_card = vue.resolveComponent("jet-authentication-card");
  const _component_jet_authentication_card_logo = vue.resolveComponent("jet-authentication-card-logo");
  const _component_jet_validation_errors = vue.resolveComponent("jet-validation-errors");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(`<!--[-->`);
  _push(serverRenderer.ssrRenderComponent(_component_Head, { title: "Two-factor Confirmation" }, null, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_jet_authentication_card, null, {
    logo: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_authentication_card_logo, null, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_authentication_card_logo)
        ];
      }
    }),
    default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="mb-4 text-sm text-gray-600"${_scopeId}>`);
        if (!_ctx.recovery) {
          _push2(`<!--[--> Please confirm access to your account by entering the authentication code provided by your authenticator application. <!--]-->`);
        } else {
          _push2(`<!--[--> Please confirm access to your account by entering one of your emergency recovery codes. <!--]-->`);
        }
        _push2(`</div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_validation_errors, { class: "mb-4" }, null, _parent2, _scopeId));
        _push2(`<form${_scopeId}>`);
        if (!_ctx.recovery) {
          _push2(`<div${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
            for: "code",
            value: "Code"
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
            ref: "code",
            id: "code",
            type: "text",
            inputmode: "numeric",
            class: "mt-1 block w-full",
            modelValue: _ctx.form.code,
            "onUpdate:modelValue": ($event) => _ctx.form.code = $event,
            autofocus: "",
            autocomplete: "one-time-code"
          }, null, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<div${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
            for: "recovery_code",
            value: "Recovery Code"
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
            ref: "recovery_code",
            id: "recovery_code",
            type: "text",
            class: "mt-1 block w-full",
            modelValue: _ctx.form.recovery_code,
            "onUpdate:modelValue": ($event) => _ctx.form.recovery_code = $event,
            autocomplete: "one-time-code"
          }, null, _parent2, _scopeId));
          _push2(`</div>`);
        }
        _push2(`<div class="flex items-center justify-end mt-4"${_scopeId}><button type="button" class="text-sm text-gray-600 hover:text-gray-900 underline cursor-pointer"${_scopeId}>`);
        if (!_ctx.recovery) {
          _push2(`<!--[--> Use a recovery code <!--]-->`);
        } else {
          _push2(`<!--[--> Use an authentication code <!--]-->`);
        }
        _push2(`</button>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          class: ["ml-4", { "opacity-25": _ctx.form.processing }],
          disabled: _ctx.form.processing
        }, {
          default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Log in `);
            } else {
              return [
                vue.createTextVNode(" Log in ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div></form>`);
      } else {
        return [
          vue.createVNode("div", { class: "mb-4 text-sm text-gray-600" }, [
            !_ctx.recovery ? (vue.openBlock(), vue.createBlock(vue.Fragment, { key: 0 }, [
              vue.createTextVNode(" Please confirm access to your account by entering the authentication code provided by your authenticator application. ")
            ], 64)) : (vue.openBlock(), vue.createBlock(vue.Fragment, { key: 1 }, [
              vue.createTextVNode(" Please confirm access to your account by entering one of your emergency recovery codes. ")
            ], 64))
          ]),
          vue.createVNode(_component_jet_validation_errors, { class: "mb-4" }),
          vue.createVNode("form", {
            onSubmit: vue.withModifiers(_ctx.submit, ["prevent"])
          }, [
            !_ctx.recovery ? (vue.openBlock(), vue.createBlock("div", { key: 0 }, [
              vue.createVNode(_component_jet_label, {
                for: "code",
                value: "Code"
              }),
              vue.createVNode(_component_jet_input, {
                ref: "code",
                id: "code",
                type: "text",
                inputmode: "numeric",
                class: "mt-1 block w-full",
                modelValue: _ctx.form.code,
                "onUpdate:modelValue": ($event) => _ctx.form.code = $event,
                autofocus: "",
                autocomplete: "one-time-code"
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ])) : (vue.openBlock(), vue.createBlock("div", { key: 1 }, [
              vue.createVNode(_component_jet_label, {
                for: "recovery_code",
                value: "Recovery Code"
              }),
              vue.createVNode(_component_jet_input, {
                ref: "recovery_code",
                id: "recovery_code",
                type: "text",
                class: "mt-1 block w-full",
                modelValue: _ctx.form.recovery_code,
                "onUpdate:modelValue": ($event) => _ctx.form.recovery_code = $event,
                autocomplete: "one-time-code"
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ])),
            vue.createVNode("div", { class: "flex items-center justify-end mt-4" }, [
              vue.createVNode("button", {
                type: "button",
                class: "text-sm text-gray-600 hover:text-gray-900 underline cursor-pointer",
                onClick: vue.withModifiers(_ctx.toggleRecovery, ["prevent"])
              }, [
                !_ctx.recovery ? (vue.openBlock(), vue.createBlock(vue.Fragment, { key: 0 }, [
                  vue.createTextVNode(" Use a recovery code ")
                ], 64)) : (vue.openBlock(), vue.createBlock(vue.Fragment, { key: 1 }, [
                  vue.createTextVNode(" Use an authentication code ")
                ], 64))
              ], 8, ["onClick"]),
              vue.createVNode(_component_jet_button, {
                class: ["ml-4", { "opacity-25": _ctx.form.processing }],
                disabled: _ctx.form.processing
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Log in ")
                ]),
                _: 1
              }, 8, ["class", "disabled"])
            ])
          ], 40, ["onSubmit"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<!--]-->`);
}
const _sfc_setup$14 = _sfc_main$14.setup;
_sfc_main$14.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Auth/TwoFactorChallenge.vue");
  return _sfc_setup$14 ? _sfc_setup$14(props, ctx) : void 0;
};
var TwoFactorChallenge = /* @__PURE__ */ _export_sfc(_sfc_main$14, [["ssrRender", _sfc_ssrRender$r]]);
var TwoFactorChallenge$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": TwoFactorChallenge
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$13 = vue.defineComponent({
  components: {
    Head: inertiaVue3.Head,
    JetAuthenticationCard,
    JetAuthenticationCardLogo,
    JetButton,
    Link: inertiaVue3.Link
  },
  props: {
    status: String
  },
  data() {
    return {
      form: this.$inertia.form()
    };
  },
  methods: {
    submit() {
      this.form.post(this.route("verification.send"));
    }
  },
  computed: {
    verificationLinkSent() {
      return this.status === "verification-link-sent";
    }
  }
});
function _sfc_ssrRender$q(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Head = vue.resolveComponent("Head");
  const _component_jet_authentication_card = vue.resolveComponent("jet-authentication-card");
  const _component_jet_authentication_card_logo = vue.resolveComponent("jet-authentication-card-logo");
  const _component_jet_button = vue.resolveComponent("jet-button");
  const _component_Link = vue.resolveComponent("Link");
  _push(`<!--[-->`);
  _push(serverRenderer.ssrRenderComponent(_component_Head, { title: "Email Verification" }, null, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_jet_authentication_card, null, {
    logo: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_authentication_card_logo, null, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_authentication_card_logo)
        ];
      }
    }),
    default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="mb-4 text-sm text-gray-600"${_scopeId}> Thanks for signing up! Before getting started, could you verify your email address by clicking on the link we just emailed to you? If you didn&#39;t receive the email, we will gladly send you another. </div>`);
        if (_ctx.verificationLinkSent) {
          _push2(`<div class="mb-4 font-medium text-sm text-green-600"${_scopeId}> A new verification link has been sent to the email address you provided during registration. </div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`<form${_scopeId}><div class="mt-4 flex items-center justify-between"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          class: { "opacity-25": _ctx.form.processing },
          disabled: _ctx.form.processing
        }, {
          default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Resend Verification Email `);
            } else {
              return [
                vue.createTextVNode(" Resend Verification Email ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_Link, {
          href: _ctx.route("logout"),
          method: "post",
          as: "button",
          class: "underline text-sm text-gray-600 hover:text-gray-900"
        }, {
          default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Log Out`);
            } else {
              return [
                vue.createTextVNode("Log Out")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div></form>`);
      } else {
        return [
          vue.createVNode("div", { class: "mb-4 text-sm text-gray-600" }, " Thanks for signing up! Before getting started, could you verify your email address by clicking on the link we just emailed to you? If you didn't receive the email, we will gladly send you another. "),
          _ctx.verificationLinkSent ? (vue.openBlock(), vue.createBlock("div", {
            key: 0,
            class: "mb-4 font-medium text-sm text-green-600"
          }, " A new verification link has been sent to the email address you provided during registration. ")) : vue.createCommentVNode("", true),
          vue.createVNode("form", {
            onSubmit: vue.withModifiers(_ctx.submit, ["prevent"])
          }, [
            vue.createVNode("div", { class: "mt-4 flex items-center justify-between" }, [
              vue.createVNode(_component_jet_button, {
                class: { "opacity-25": _ctx.form.processing },
                disabled: _ctx.form.processing
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Resend Verification Email ")
                ]),
                _: 1
              }, 8, ["class", "disabled"]),
              vue.createVNode(_component_Link, {
                href: _ctx.route("logout"),
                method: "post",
                as: "button",
                class: "underline text-sm text-gray-600 hover:text-gray-900"
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Log Out")
                ]),
                _: 1
              }, 8, ["href"])
            ])
          ], 40, ["onSubmit"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<!--]-->`);
}
const _sfc_setup$13 = _sfc_main$13.setup;
_sfc_main$13.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Auth/VerifyEmail.vue");
  return _sfc_setup$13 ? _sfc_setup$13(props, ctx) : void 0;
};
var VerifyEmail = /* @__PURE__ */ _export_sfc(_sfc_main$13, [["ssrRender", _sfc_ssrRender$q]]);
var VerifyEmail$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": VerifyEmail
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$12 = {
  __name: "Index",
  __ssrInlineRender: true,
  setup(__props) {
    const paypal = inertiaVue3.usePage().props.value.donations;
    const master_acc = inertiaVue3.usePage().props.value.user;
    const paypal_url = inertiaVue3.usePage().props.value.paypal_url;
    vue.reactive({
      cmd: "_donations",
      business: paypal.email,
      custom: master_acc ? master_acc.id : "",
      item_name: " ~ RevengeRO. I agree that once the donation has been made, I understand and accept that I will not request any refund, since this service has been used in its entirety and no return of the funds invested is contemplated.",
      amount: 0,
      currency_code: paypal.currency,
      no_note: 0,
      no_shipping: 1,
      notify_url: paypal.notify_url,
      return: route("transfer.index"),
      rm: 0
    });
    const pricing = {
      frequencies: [{ value: "monthly", label: "Monthly", priceSuffix: "/ USD" }],
      tiers: [
        {
          name: paypal.donations[0].name,
          id: 0,
          href: "#",
          price: { monthly: paypal.donations[0].price },
          description: "Regular Pack containing the basics for your adventure in RevengeRO.",
          features: ["5 Donations Points"],
          mostPopular: false
        },
        {
          name: paypal.donations[1].name,
          id: 1,
          price: { monthly: paypal.donations[1].price },
          description: "Rare Pack containing the basics for your adventure in RevengeRO.",
          features: [
            `${paypal.donations[1].points} Donation Points`,
            `+ ${paypal.donations[1].extra_points} Bonus Donation Points`
          ],
          mostPopular: true
        },
        {
          name: `${paypal.donations[2].name}`,
          id: 2,
          price: { monthly: paypal.donations[2].price },
          description: "Rare Pack containing the basics for your adventure in RevengeRO.",
          features: [
            `${paypal.donations[2].points} Donation Points`,
            `+ ${paypal.donations[2].extra_points} Bonus Donation Points`
          ],
          mostPopular: false
        },
        {
          name: `${paypal.donations[3].name}`,
          id: 3,
          price: { monthly: paypal.donations[3].price },
          description: "Deluxe Pack containing the basics for your adventure in RevengeRO.",
          features: [
            `${paypal.donations[3].points} Donation Points`,
            `+ ${paypal.donations[3].extra_points} Bonus Donation Points`
          ],
          mostPopular: false
        },
        {
          name: `${paypal.donations[4].name}`,
          id: 4,
          price: { monthly: paypal.donations[4].price },
          description: "Epic Pack containing the basics for your adventure in RevengeRO.",
          features: [
            `${paypal.donations[4].points} Donation Points`,
            `+ ${paypal.donations[4].extra_points} Bonus Donation Points`
          ],
          mostPopular: true
        },
        {
          name: `${paypal.donations[5].name}`,
          id: 5,
          price: { monthly: paypal.donations[5].price },
          description: "Legendary Pack containing the basics for your adventure in RevengeRO.",
          features: [
            `${paypal.donations[5].points} Donation Points`,
            `+ ${paypal.donations[5].extra_points} Bonus Donation Points`
          ],
          mostPopular: false
        }
      ]
    };
    const frequency = vue.ref(pricing.frequencies[0]);
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<!--[-->`);
      _push(serverRenderer.ssrRenderComponent(vue.unref(inertiaVue3.Head), { title: "Donations" }, null, _parent));
      _push(serverRenderer.ssrRenderComponent(GuestLayout, null, {
        default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="py-20"${_scopeId}><div class="mx-auto mt-16 max-w-7xl px-6 sm:mt-32 lg:px-8"${_scopeId}><div class="isolate mx-auto mt-10 grid max-w-md grid-cols-1 gap-8 md:max-w-5xl md:grid-cols-2 lg:max-w-4xl xl:mx-0 xl:max-w-none xl:grid-cols-3"${_scopeId}><!--[-->`);
            serverRenderer.ssrRenderList(pricing.tiers, (tier) => {
              _push2(`<form data-aos-duration="1800" data-aos="zoom-out-up" method="POST"${serverRenderer.ssrRenderAttr("action", vue.unref(paypal_url))} class="${serverRenderer.ssrRenderClass([
                tier.mostPopular ? "ring-2 ring-orange-500" : "ring-1 ring-gray-200",
                "rounded-3xl p-8",
                "bg-white",
                "shadow-md",
                "w-4/5 mx-auto"
              ])}"${_scopeId}><input type="hidden" name="cmd" value="_donations"${_scopeId}><input type="hidden" name="business"${serverRenderer.ssrRenderAttr("value", vue.unref(paypal).email)}${_scopeId}><input type="hidden" name="custom"${serverRenderer.ssrRenderAttr("value", vue.unref(master_acc) ? vue.unref(master_acc).id : "")}${_scopeId}><input type="hidden" name="item_name" value=" ~ RevengeRO. I agree that once the donation has been made, I understand and accept that I will not request any refund, since this service has been used in its entirety and no return of the funds invested is contemplated."${_scopeId}><input type="hidden" name="amount"${serverRenderer.ssrRenderAttr("value", vue.unref(paypal).donations[tier.id].price)}${_scopeId}><input type="hidden" name="currency_code"${serverRenderer.ssrRenderAttr("value", vue.unref(paypal).currency)}${_scopeId}><input type="hidden" name="no_note" value="0"${_scopeId}><input type="hidden" name="no_shipping" value="1"${_scopeId}><input type="hidden" name="notify_url"${serverRenderer.ssrRenderAttr("value", vue.unref(paypal).notify_url)}${_scopeId}><input type="hidden" name="return"${serverRenderer.ssrRenderAttr("value", _ctx.route("transfer.index"))}${_scopeId}><input type="hidden" name="rm" value="0"${_scopeId}><h2${serverRenderer.ssrRenderAttr("id", tier.id)} class="${serverRenderer.ssrRenderClass([
                tier.mostPopular ? "text-orange-500" : "text-gray-900",
                "text-lg font-bold leading-8",
                "text-2xl"
              ])}"${_scopeId}>${serverRenderer.ssrInterpolate(tier.name)}</h2><p class="mt-4 text-sm leading-6 text-gray-600"${_scopeId}>${serverRenderer.ssrInterpolate(tier.description)}</p><p class="mt-6 flex items-baseline gap-x-1 justify-center"${_scopeId}><span class="text-4xl font-bold tracking-tight text-gray-900"${_scopeId}>$${serverRenderer.ssrInterpolate(tier.price[frequency.value.value])}</span><span class="text-sm font-semibold leading-6 text-gray-600"${_scopeId}>${serverRenderer.ssrInterpolate(frequency.value.priceSuffix)}</span></p><button${serverRenderer.ssrRenderAttr("aria-describedby", tier.id)}${serverRenderer.ssrIncludeBooleanAttr(_ctx.$page.props.user === null) ? " disabled" : ""} class="${serverRenderer.ssrRenderClass([
                tier.mostPopular ? "bg-orange-500 text-white shadow-sm hover:bg-orange-400" : "text-orange-500 ring-1 ring-inset ring-orange-200 hover:ring-orange-300",
                _ctx.$page.props.user === null ? "cursor-not-allowed" : "",
                "w-full cursor-pointer mt-6 block rounded-md py-2 px-3 text-center text-sm font-semibold leading-6 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
              ])}"${_scopeId}>`);
              if (_ctx.$page.props.user === null) {
                _push2(`<span${_scopeId}>Login to donate</span>`);
              } else {
                _push2(`<span${_scopeId}>Donate Now</span>`);
              }
              _push2(`</button><ul role="list" class="mt-8 space-y-3 text-sm leading-6 text-gray-600"${_scopeId}><!--[-->`);
              serverRenderer.ssrRenderList(tier.features, (feature) => {
                _push2(`<li class="flex gap-x-3"${_scopeId}>`);
                _push2(serverRenderer.ssrRenderComponent(vue.unref(solid.CheckIcon), {
                  class: "h-6 w-5 flex-none text-orange-500",
                  "aria-hidden": "true"
                }, null, _parent2, _scopeId));
                _push2(` ${serverRenderer.ssrInterpolate(feature)}</li>`);
              });
              _push2(`<!--]--></ul></form>`);
            });
            _push2(`<!--]--></div></div></div>`);
          } else {
            return [
              vue.createVNode("div", { class: "py-20" }, [
                vue.createVNode("div", { class: "mx-auto mt-16 max-w-7xl px-6 sm:mt-32 lg:px-8" }, [
                  vue.createVNode("div", { class: "isolate mx-auto mt-10 grid max-w-md grid-cols-1 gap-8 md:max-w-5xl md:grid-cols-2 lg:max-w-4xl xl:mx-0 xl:max-w-none xl:grid-cols-3" }, [
                    (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(pricing.tiers, (tier) => {
                      return vue.openBlock(), vue.createBlock("form", {
                        "data-aos-duration": "1800",
                        "data-aos": "zoom-out-up",
                        method: "POST",
                        action: vue.unref(paypal_url),
                        key: tier.id,
                        class: [
                          tier.mostPopular ? "ring-2 ring-orange-500" : "ring-1 ring-gray-200",
                          "rounded-3xl p-8",
                          "bg-white",
                          "shadow-md",
                          "w-4/5 mx-auto"
                        ]
                      }, [
                        vue.createVNode("input", {
                          type: "hidden",
                          name: "cmd",
                          value: "_donations"
                        }),
                        vue.createVNode("input", {
                          type: "hidden",
                          name: "business",
                          value: vue.unref(paypal).email
                        }, null, 8, ["value"]),
                        vue.createVNode("input", {
                          type: "hidden",
                          name: "custom",
                          value: vue.unref(master_acc) ? vue.unref(master_acc).id : ""
                        }, null, 8, ["value"]),
                        vue.createVNode("input", {
                          type: "hidden",
                          name: "item_name",
                          value: " ~ RevengeRO. I agree that once the donation has been made, I understand and accept that I will not request any refund, since this service has been used in its entirety and no return of the funds invested is contemplated."
                        }),
                        vue.createVNode("input", {
                          type: "hidden",
                          name: "amount",
                          value: vue.unref(paypal).donations[tier.id].price
                        }, null, 8, ["value"]),
                        vue.createVNode("input", {
                          type: "hidden",
                          name: "currency_code",
                          value: vue.unref(paypal).currency
                        }, null, 8, ["value"]),
                        vue.createVNode("input", {
                          type: "hidden",
                          name: "no_note",
                          value: "0"
                        }),
                        vue.createVNode("input", {
                          type: "hidden",
                          name: "no_shipping",
                          value: "1"
                        }),
                        vue.createVNode("input", {
                          type: "hidden",
                          name: "notify_url",
                          value: vue.unref(paypal).notify_url
                        }, null, 8, ["value"]),
                        vue.createVNode("input", {
                          type: "hidden",
                          name: "return",
                          value: _ctx.route("transfer.index")
                        }, null, 8, ["value"]),
                        vue.createVNode("input", {
                          type: "hidden",
                          name: "rm",
                          value: "0"
                        }),
                        vue.createVNode("h2", {
                          id: tier.id,
                          class: [
                            tier.mostPopular ? "text-orange-500" : "text-gray-900",
                            "text-lg font-bold leading-8",
                            "text-2xl"
                          ]
                        }, vue.toDisplayString(tier.name), 11, ["id"]),
                        vue.createVNode("p", { class: "mt-4 text-sm leading-6 text-gray-600" }, vue.toDisplayString(tier.description), 1),
                        vue.createVNode("p", { class: "mt-6 flex items-baseline gap-x-1 justify-center" }, [
                          vue.createVNode("span", { class: "text-4xl font-bold tracking-tight text-gray-900" }, "$" + vue.toDisplayString(tier.price[frequency.value.value]), 1),
                          vue.createVNode("span", { class: "text-sm font-semibold leading-6 text-gray-600" }, vue.toDisplayString(frequency.value.priceSuffix), 1)
                        ]),
                        vue.createVNode("button", {
                          "aria-describedby": tier.id,
                          disabled: _ctx.$page.props.user === null,
                          class: [
                            tier.mostPopular ? "bg-orange-500 text-white shadow-sm hover:bg-orange-400" : "text-orange-500 ring-1 ring-inset ring-orange-200 hover:ring-orange-300",
                            _ctx.$page.props.user === null ? "cursor-not-allowed" : "",
                            "w-full cursor-pointer mt-6 block rounded-md py-2 px-3 text-center text-sm font-semibold leading-6 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
                          ]
                        }, [
                          _ctx.$page.props.user === null ? (vue.openBlock(), vue.createBlock("span", { key: 0 }, "Login to donate")) : (vue.openBlock(), vue.createBlock("span", { key: 1 }, "Donate Now"))
                        ], 10, ["aria-describedby", "disabled"]),
                        vue.createVNode("ul", {
                          role: "list",
                          class: "mt-8 space-y-3 text-sm leading-6 text-gray-600"
                        }, [
                          (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(tier.features, (feature) => {
                            return vue.openBlock(), vue.createBlock("li", {
                              key: feature,
                              class: "flex gap-x-3"
                            }, [
                              vue.createVNode(vue.unref(solid.CheckIcon), {
                                class: "h-6 w-5 flex-none text-orange-500",
                                "aria-hidden": "true"
                              }),
                              vue.createTextVNode(" " + vue.toDisplayString(feature), 1)
                            ]);
                          }), 128))
                        ])
                      ], 10, ["action"]);
                    }), 128))
                  ])
                ])
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<!--]-->`);
    };
  }
};
const _sfc_setup$12 = _sfc_main$12.setup;
_sfc_main$12.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Donations/Index.vue");
  return _sfc_setup$12 ? _sfc_setup$12(props, ctx) : void 0;
};
var Index$f = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": _sfc_main$12
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$11 = vue.defineComponent({
  layout: GuestLayout,
  components: { Head: inertiaVue3.Head },
  setup() {
    function redirect_download(type) {
      var url = "";
      switch (type) {
        case "mega":
          url = "https://bit.ly/43TLizZ";
          break;
        case "mediafire":
          url = "https://bit.ly/43DWPTM";
          break;
        case "drive":
          url = "https://bit.ly/41hU1Ke";
          break;
      }
      window.open(url, "_blank");
    }
    return {
      redirect_download
    };
  }
});
function _sfc_ssrRender$p(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Head = vue.resolveComponent("Head");
  _push(`<!--[-->`);
  _push(serverRenderer.ssrRenderComponent(_component_Head, { title: "Downloads" }, null, _parent));
  _push(`<div class="antialiased w-full md:w-10/12 h-full text-gray-400 font-inter p-10 mx-auto h-[70rem]"><div class="container w-full p-6 mx-auto md:mt-36 text-gray-700 bg-gray-100 rounded md shadow-md"><div class="flex flex-col items-center"><div id="title" class="text-center my-10"><h1 class="font-bold text-4xl text-gray-700 mb-5"> Downloads links </h1><img src="/img/logo-light.png" alt="" class="mx-auto"><p class="page-text text-center px-5 py-4 mt-5" data-aos="fade-down" data-aos-duration="2700"> Steps to downloading <strong>RevengeRO</strong> is easy as one, two, three. The download links are made separately depending on the files that you currently have in your computer. To prevent patching problems and errors, we suggest that you download the full installer using the most convenient download mirror for you. </p></div><div class="w-full w-full"><div class="flex items-center justify-center h-[25rem] flex-wrap" data-aos="fade-down" data-aos-duration="2700"><div class="w-1/3 md:w-1/5 h-1/2 rounded-md text-center flex items-center justify-center text-2xl font-semibold hover:bg-red-500/80 bg-gray-100/70 hover:shadow-lg mr-5 cursor-pointer"><div class="class flex flex-col items-center"><img class="" src="/img/mega.png" alt=""> MEGA </div></div><div class="w-1/3 md:w-1/5 h-1/2 rounded-md text-center flex items-center justify-center text-2xl font-semibold hover:bg-sky-500/80 bg-gray-100/70 hover:shadow-lg mr-5 cursor-pointer"><div class="class flex flex-col items-center"><img class="" src="/img/mediafire.png" alt=""> MEDIAFIRE </div></div><div class="w-1/3 md:w-1/5 h-1/2 rounded-md text-center flex items-center justify-center text-2xl font-semibold hover:bg-yellow-400/80 bg-gray-100/70 hover:shadow-lg mr-5 cursor-pointer"><div class="class flex flex-col items-center"><img class="" src="/img/google_drive.png" alt=""> DRIVE </div></div><div class="flex flex-col items-center justify-center"><img src="" alt=""><div class="H-FULL"><i class="fas fa-exclamation-triangle" style="${serverRenderer.ssrRenderStyle({ "font-size": "1.5em", "padding-right": "0.5em" })}"></i><h2 class="underline text-2xl text-black mb-5 font-bold text-center"> Experiencing other problems? </h2><p class="page-text mb-5"> Join our <strong>Discord</strong> and seek help in our #support channel. We will be more than happy to help you, so that you can join us as soon as possible. </p></div><a href="https://discord.gg/3tFCxgm27X" target="\u201D_blank\u201D" data-v-3c0d6e26=""><img src="https://discordapp.com/api/guilds/1051301831764090932/widget.png?style=banner2
                                        " class="img-fluid rounded-md" data-v-3c0d6e26=""></a></div></div></div></div></div></div><!--]-->`);
}
const _sfc_setup$11 = _sfc_main$11.setup;
_sfc_main$11.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Home/Downloads.vue");
  return _sfc_setup$11 ? _sfc_setup$11(props, ctx) : void 0;
};
var Downloads = /* @__PURE__ */ _export_sfc(_sfc_main$11, [["ssrRender", _sfc_ssrRender$p]]);
var Downloads$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Downloads
}, Symbol.toStringTag, { value: "Module" }));
var Slider_vue_vue_type_style_index_0_scoped_true_lang = "";
const _sfc_main$10 = {
  components: {
    Swiper: vue$2.Swiper,
    SwiperSlide: vue$2.SwiperSlide
  },
  setup() {
    const onSwiper = (swiper2) => {
      console.log(swiper2);
    };
    const onSlideChange = () => {
      console.log("slide change");
    };
    return {
      onSwiper,
      onSlideChange,
      modules: [swiper.Navigation, swiper.Pagination, swiper.Scrollbar, swiper.A11y]
    };
  }
};
function _sfc_ssrRender$o(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_swiper = vue.resolveComponent("swiper");
  const _component_swiper_slide = vue.resolveComponent("swiper-slide");
  _push(serverRenderer.ssrRenderComponent(_component_swiper, vue.mergeProps({
    modules: $setup.modules,
    "slides-per-view": 1,
    "space-between": 0,
    navigation: "",
    onSwiper: $setup.onSwiper,
    onSlideChange: $setup.onSlideChange
  }, _attrs), {
    default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_swiper_slide, null, {
          default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<img src="/img/jackpot.png" alt="" data-v-45fcaa8e${_scopeId2}>`);
            } else {
              return [
                vue.createVNode("img", {
                  src: "/img/jackpot.png",
                  alt: ""
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_swiper_slide, null, {
          default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<img src="/img/battlegrounds.png" alt="" data-v-45fcaa8e${_scopeId2}>`);
            } else {
              return [
                vue.createVNode("img", {
                  src: "/img/battlegrounds.png",
                  alt: ""
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_swiper_slide, null, {
          default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<img src="/img/hunting-mission.png" alt="" data-v-45fcaa8e${_scopeId2}>`);
            } else {
              return [
                vue.createVNode("img", {
                  src: "/img/hunting-mission.png",
                  alt: ""
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_swiper_slide, null, {
          default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<img src="/img/costumes.png" alt="" data-v-45fcaa8e${_scopeId2}>`);
            } else {
              return [
                vue.createVNode("img", {
                  src: "/img/costumes.png",
                  alt: ""
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_swiper_slide, null, {
            default: vue.withCtx(() => [
              vue.createVNode("img", {
                src: "/img/jackpot.png",
                alt: ""
              })
            ]),
            _: 1
          }),
          vue.createVNode(_component_swiper_slide, null, {
            default: vue.withCtx(() => [
              vue.createVNode("img", {
                src: "/img/battlegrounds.png",
                alt: ""
              })
            ]),
            _: 1
          }),
          vue.createVNode(_component_swiper_slide, null, {
            default: vue.withCtx(() => [
              vue.createVNode("img", {
                src: "/img/hunting-mission.png",
                alt: ""
              })
            ]),
            _: 1
          }),
          vue.createVNode(_component_swiper_slide, null, {
            default: vue.withCtx(() => [
              vue.createVNode("img", {
                src: "/img/costumes.png",
                alt: ""
              })
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$10 = _sfc_main$10.setup;
_sfc_main$10.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Slider.vue");
  return _sfc_setup$10 ? _sfc_setup$10(props, ctx) : void 0;
};
var xSlider = /* @__PURE__ */ _export_sfc(_sfc_main$10, [["ssrRender", _sfc_ssrRender$o], ["__scopeId", "data-v-45fcaa8e"]]);
var Classes_vue_vue_type_style_index_0_scoped_true_lang = "";
const _sfc_main$$ = {
  __name: "Classes",
  __ssrInlineRender: true,
  setup(__props) {
    const sex_img = vue.ref("");
    const sex = vue.ref("male");
    const basic_classes = vue.ref([
      {
        name: "Swordman",
        sub_clases: [
          {
            name: "swordman",
            active: true,
            desc: "Swordsmen are the embodiment of courage. They specialize in melee combat and act as vanguards in their groups"
          },
          {
            name: "knight",
            active: false,
            desc: "Knights are skilled in the use of swords and lances. In addition, they have incredible mobility on the field thanks to their Peco Peco rides."
          },
          {
            name: "lord knight",
            active: false,
            desc: "Lord Knights are the ultimate form of Knights. They have formidable attack strength and can crush an enemy's defense in a flash"
          }
        ],
        active: true
      },
      {
        name: "Archer",
        sub_clases: [
          {
            name: "archer",
            active: true,
            desc: "Archers are specialized in ranged physical attacks. Their flexibility and mobility make them great initiators on the battlefield."
          },
          {
            name: "hunter",
            active: false,
            desc: "Hunters are experts in bows. With the help of their traps and falcon companions, they are capable of taking down any prey."
          },
          {
            name: "sniper",
            active: false,
            desc: "One shot, one kill! There's no better way to describe Snipers."
          }
        ],
        active: false
      },
      {
        name: "Merchant",
        sub_clases: [
          {
            name: "merchant",
            active: true,
            desc: "Merchants are wealthy... and when one's pocket is full of coins, possibilities could be much more spectacular"
          },
          {
            name: "blacksmith",
            active: false,
            desc: "Blacksmiths are skilled in weapon refining and forging. When it comes to the knowledge of equipment, they have no equal."
          },
          {
            name: "white smith",
            active: false,
            desc: "Mastersmiths can infuse life into any material existing in the world with their marvelous feat."
          }
        ],
        active: false
      },
      {
        name: "Acolyte",
        sub_clases: [
          {
            name: "acolyte",
            active: true,
            desc: "Acolytes are devout followers of the light. Healing and supporting are their forte. They are essential to every group"
          },
          {
            name: "priest",
            active: false,
            desc: "Priests bring miracles with the grace of the light. They are party-play oriented and specialize in healing and cleansing undead."
          },
          {
            name: "high priest",
            active: false,
            desc: "High Priests are the saviors of life. They can reduce the damage taken of all allies, and when the situation is dire, they can create a sanctuary to fully negate the incoming damage."
          }
        ],
        active: false
      },
      {
        name: "Thief",
        sub_clases: [
          {
            name: "thief",
            active: true,
            desc: "Thieves are masters of cloak and dagger. Surprise attacks and ambushes can always turn the tide of battle."
          },
          {
            name: "assa",
            active: false,
            desc: "Assassins are to be feared with their cunning arts, sneaky ways, and toxic blades.."
          },
          {
            name: "assasin cross",
            active: false,
            desc: "They are the phantom of the night and the poet of the shadow. Wherever they walk, death follows."
          }
        ],
        active: false
      },
      {
        name: "Mage",
        sub_clases: [
          {
            name: "mage",
            active: true,
            desc: "Mages possess the power of elements and are specialized in ranged magic attacks."
          },
          {
            name: "wizard",
            active: false,
            desc: "Wizards have devoted themselves to the study of powerful magic. They are efficient at eliminating groups of enemies with their AoE spells."
          },
          {
            name: "high wizard",
            active: false,
            desc: "High Wizards are the ultimate form of Wizards. They are capable of casting powerful spells that can turn the tide of battle."
          }
        ],
        active: false
      }
    ]);
    const get_sub_classes = () => {
      let sub_classes = [];
      basic_classes.value.forEach((basic_class) => {
        if (basic_class.active) {
          basic_class.sub_clases.forEach((sub_class) => {
            sub_classes.push(sub_class.name);
          });
        }
      });
      return sub_classes;
    };
    const get_active_sub_class = () => {
      let active_sub_class = "";
      basic_classes.value.forEach((basic_class) => {
        if (basic_class.active) {
          basic_class.sub_clases.forEach((sub_class) => {
            if (sub_class.active) {
              active_sub_class = sub_class.name;
            }
          });
        }
      });
      return active_sub_class;
    };
    const get_desc = () => {
      let desc = "";
      basic_classes.value.forEach((basic_class) => {
        if (basic_class.active) {
          basic_class.sub_clases.forEach((sub_class) => {
            if (sub_class.active) {
              desc = sub_class.desc;
            }
          });
        }
      });
      return desc;
    };
    const url_img = (img) => {
      switch (sex_img.value) {
        case "fem":
          return "/img/classes/" + img + " " + sex_img.value + ".png";
        default:
          return "/img/classes/" + img + ".png";
      }
    };
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<section${serverRenderer.ssrRenderAttrs(vue.mergeProps({
        id: "revenge_classes",
        class: "h-screen"
      }, _attrs))} data-v-1ce7ae5d><div class="container mx-auto h-full flex flex-col justify-end relative" data-v-1ce7ae5d><div class="p-5 text-center text-gray-900 flex items-center justify-center" data-v-1ce7ae5d><div class="mr-3 rotate-180" data-v-1ce7ae5d><img src="/img/title.png" alt="" data-v-1ce7ae5d></div><div data-v-1ce7ae5d><h1 class="text-3xl md:text-5xl font-bold font-serif text-[#0b6dab]" data-v-1ce7ae5d> Classes </h1></div><div class="ml-3" data-v-1ce7ae5d><img src="/img/title.png" alt="" data-v-1ce7ae5d></div></div><div class="flex h-full z-10 justify-between flex-row" data-v-1ce7ae5d><div class="ml-[10%] flex flex-row items-center justify-center" data-v-1ce7ae5d><div class="w-full flex flex-wrap justify-center lg:justify-between relative mb-[15rem] md:mb-[20rem]" data-v-1ce7ae5d><div class="flex flex-col md:w-1/2 md:mr-5 lg:w-1/4 lg:mr-0" data-v-1ce7ae5d><div class="" data-v-1ce7ae5d><h2 class="text-3xl md:text-5xl capitalize text-center font-bold text-[#315e80] font-serif mb-5" data-v-1ce7ae5d>${serverRenderer.ssrInterpolate(get_active_sub_class())}</h2></div><div class="switches-container mb-5" data-v-1ce7ae5d><input type="radio" id="switchMonthly" name="switchPlan" value="Monthly" checked="checked" data-v-1ce7ae5d><input type="radio" id="switchYearly" name="switchPlan" value="Yearly" data-v-1ce7ae5d><label data-v-1ce7ae5d>Male</label><label data-v-1ce7ae5d>Female</label><div class="switch-wrapper" data-v-1ce7ae5d><div class="switch" data-v-1ce7ae5d><div class="font-serif text-[1.5rem]" data-v-1ce7ae5d>Male</div><div class="font-serif text-[1.5rem]" data-v-1ce7ae5d> Female </div></div></div></div><div class="flex justify-around w-full" data-v-1ce7ae5d><!--[-->`);
      serverRenderer.ssrRenderList(get_sub_classes(), (sub_class) => {
        _push(`<div data-v-1ce7ae5d>`);
        if (get_active_sub_class() == sub_class) {
          _push(`<img${serverRenderer.ssrRenderAttr("src", `/img/classes/icons/${sex.value}/${sub_class} icon2.png`)} alt="" data-v-1ce7ae5d>`);
        } else {
          _push(`<img class="cursor-pointer"${serverRenderer.ssrRenderAttr("src", `/img/classes/icons/${sex.value}/${sub_class} icon.png`)} alt="" data-v-1ce7ae5d>`);
        }
        _push(`</div>`);
      });
      _push(`<!--]--></div></div><div class="flex flex-col justify-center pt-5 md:w-1/2 lg:w-1/3" data-v-1ce7ae5d><p class="lg: text-md md:text-xl lg:text-2xl text-[#70757f] font-serif font-semibold" data-v-1ce7ae5d>${serverRenderer.ssrInterpolate(get_desc())}</p></div></div></div></div><div class="absolute w-11/12 bottom-[9.7rem]" data-v-1ce7ae5d><img${serverRenderer.ssrRenderAttr("src", url_img(get_active_sub_class()))} alt="" class="cursor-pointer" data-v-1ce7ae5d></div><div class="divider mx-auto" data-v-1ce7ae5d></div><div class="mx-auto p-5 mb-10" data-v-1ce7ae5d><ul class="flex flex-row items-center w-full overflow-x-auto" data-v-1ce7ae5d><li class="hidden lg:block mr-7" data-v-1ce7ae5d><img src="/img/classes/arrow left.png" alt="" class="cursor-pointer" data-v-1ce7ae5d></li><!--[-->`);
      serverRenderer.ssrRenderList(basic_classes.value, (basic_class) => {
        _push(`<li class="mr-7" data-v-1ce7ae5d>`);
        if (!basic_class.active) {
          _push(`<img class="cursor-pointer"${serverRenderer.ssrRenderAttr("src", `/img/classes/${basic_class.name} class.png`)} alt="" data-v-1ce7ae5d>`);
        } else {
          _push(`<img${serverRenderer.ssrRenderAttr("src", `/img/classes/${basic_class.name} class_active.png`)} alt="" data-v-1ce7ae5d>`);
        }
        _push(`</li>`);
      });
      _push(`<!--]--><li class="mr-7 hidden lg:block" data-v-1ce7ae5d><img src="/img/classes/arrow right.png" alt="" class="cursor-pointer" data-v-1ce7ae5d></li></ul></div></div></section>`);
    };
  }
};
const _sfc_setup$$ = _sfc_main$$.setup;
_sfc_main$$.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Classes.vue");
  return _sfc_setup$$ ? _sfc_setup$$(props, ctx) : void 0;
};
var xClasses = /* @__PURE__ */ _export_sfc(_sfc_main$$, [["__scopeId", "data-v-1ce7ae5d"]]);
var Index_vue_vue_type_style_index_0_scoped_true_lang$1 = "";
const __default__$l = {
  layout: GuestLayout
};
const _sfc_main$_ = /* @__PURE__ */ Object.assign(__default__$l, {
  __name: "Index",
  __ssrInlineRender: true,
  setup(__props) {
    document.querySelectorAll("nav a").forEach((anchor) => {
      anchor.addEventListener("click", function(e2) {
        e2.preventDefault();
        document.querySelector(this.getAttribute("href")).scrollIntoView({
          behavior: "smooth"
        });
      });
    });
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<!--[-->`);
      _push(serverRenderer.ssrRenderComponent(vue.unref(inertiaVue3.Head), { title: "Home" }, null, _parent));
      _push(`<section id="main-section" data-v-6223632e><div class="h-screen" data-v-6223632e><div class="container mx-auto" data-v-6223632e><div class="h-screen flex items-center justify-center" data-v-6223632e><div class="w-full lg:ml-[20%] lg:w-1/3 mb-10" data-v-6223632e><h1 class="text-5xl lg:text-7xl font-bold text-center drop-shadow-md" data-v-6223632e>Welcome to RevengeRO</h1><div class="flex justify-center items-center mt-5" data-v-6223632e>`);
      _push(serverRenderer.ssrRenderComponent(vue.unref(inertiaVue3.Link), {
        href: _ctx.route("login"),
        class: "cursor-pointer flex items-center mr-7 uppercase rounded-md text-white h-[60px] bg-gradient-to-r from-sky-400 to-blue-500 py-1 px-16 font-bold text-lg"
      }, {
        default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`LOGIN`);
          } else {
            return [
              vue.createTextVNode("LOGIN")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(serverRenderer.ssrRenderComponent(vue.unref(inertiaVue3.Link), {
        href: _ctx.route("register"),
        class: "cursor-pointer flex items-center uppercase rounded-md text-white h-[60px] bg-gradient-to-b from-yellow-500 to-orange-500 animate-gradient py-1 px-4 font-bold text-lg"
      }, {
        default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`CREATE ACCOUNT`);
          } else {
            return [
              vue.createTextVNode("CREATE ACCOUNT")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div></div></div></div></div></section><section id="news-section" class="h-screen" data-v-6223632e><div class="container mx-auto h-full" data-v-6223632e><div class="h-full flex justify-center items-center flex-wrap lg:flex-nowrap" data-v-6223632e><div class="hidden md:block p-5" data-v-6223632e><iframe src="https://e.widgetbot.io/channels/1051301831764090932/1051841078002729100" class="shadow-lg rounded-xl md:w-[700px] md:h-[500px] lg:w-[800px] lg:h-[600px]" data-v-6223632e></iframe></div><div data-v-6223632e><div class="p-5" data-v-6223632e><h1 class="animate-text bg-gradient-to-r from-teal-500 via-purple-500 to-orange-500 bg-clip-text text-transparent text-5xl font-black" data-v-6223632e> ~ News </h1></div><div class="p-5" data-v-6223632e><h2 class="text-2xl uppercase font-bold text-gray-700" data-v-6223632e> About Us </h2><p class="text-xl mt-2 text-[#0b0b0c]" data-v-6223632e><span class="text-[#f98a00] text-2xl" data-v-6223632e>RevengeRO</span> aims to bring back the good old times! We have many custom additions that will get you thrilled and busy! In our community you will find infinity of surprises that you will not be able to see in the rest of the servers and Staff committed in providing the best support. </p></div><div class="p-5" data-v-6223632e><h3 class="text-2xl uppercase font-bold text-gray-700" data-v-6223632e> Stay Updated </h3><p class="text-xl mt-2 text-gray-700" data-v-6223632e> We see no reason to have dead forums, we communicate in real time using Discord. Do you have any questions, suggestions, or ideas? Feel free to ask us on our Discord channel </p></div><div class="hidden p-5" data-v-6223632e><div class="w-4/5 uppercase text-2xl font-bold flex justify-start mt-5" data-v-6223632e><button class="mr-5 uppercase rounded-lg text-white h-[60px] bg-gradient-to-r from-sky-400 to-blue-500 py-1 px-4 font-bold text-lg" data-v-6223632e> Download </button><button class="uppercase rounded-lg text-white h-[60px] bg-gradient-to-r from-sky-400 to-blue-500 py-1 px-4 font-bold text-lg" data-v-6223632e> Create Account </button></div></div></div></div></div></section><section id="classes-section" data-v-6223632e>`);
      _push(serverRenderer.ssrRenderComponent(xClasses, null, null, _parent));
      _push(`</section><section id="info-section" class="h-screen" data-v-6223632e><div class="container mx-auto h-full relative" data-v-6223632e><div class="h-full flex w-full justify-center" data-v-6223632e><img src="/img/content-bg-info.png" alt="" class="hidden absolute" data-v-6223632e><div class="p-1 md:h-[32rem] z-10 my-auto text-gray-700" data-v-6223632e><h3 class="text-center text-4xl font-bold mb-5" data-v-6223632e> ~ Server Information <img class="mx-auto mt-1" src="/img/logo-light.png" alt="" data-v-6223632e></h3><div class="lg:mt-10 w-full flex items-center justify-center" data-aos="fade-down" data-aos-duration="2700" data-v-6223632e><div class="grid grid-cols-3 w-full" data-v-6223632e><div class="col-span-3 md:col-span-1 flex items-center w-full flex-col" data-v-6223632e><h1 class="text-3xl mb-5 font-bold" data-v-6223632e> Server Rate </h1><div data-v-6223632e><ul class="text-xl text-center" data-v-6223632e><li class="mb-2" data-v-6223632e> 150x <span class="font-bold" data-v-6223632e> EXP</span> Rates </li><li class="mb-2" data-v-6223632e> 75x <span class="font-bold" data-v-6223632e>Drop </span>Rates </li><li class="mb-2" data-v-6223632e> 1.0% <span class="font-bold" data-v-6223632e>Card Drop</span> Rates </li><li class="mb-2" data-v-6223632e> 0.01%<span class="font-bold" data-v-6223632e> MVP Card</span> Rates </li></ul></div></div><div class="col-span-3 md:col-span-1 flex items-center w-full flex-col" data-v-6223632e><h1 class="text-3xl mb-5 font-bold" data-v-6223632e> Game Play </h1><div data-v-6223632e><ul class="text-xl text-center" data-v-6223632e><li class="mb-2 font-bold" data-v-6223632e> Pre-Renewal </li><li class="mb-2" data-v-6223632e> Episode <span class="font-bold" data-v-6223632e>13.3+</span></li><li class="mb-2" data-v-6223632e> Max level <span class="font-bold" data-v-6223632e>99/70</span></li><li class="mb-2" data-v-6223632e>No 3rd Job</li><li class="mb-2" data-v-6223632e><span class="font-bold" data-v-6223632e>xPanel Services</span></li></ul></div></div><div class="col-span-3 md:col-span-1 flex items-center w-full flex-col" data-v-6223632e><h1 class="text-3xl mb-5 font-bold" data-v-6223632e>Systems</h1><div data-v-6223632e><ul class="text-xl text-center" data-v-6223632e><li class="mb-2" data-v-6223632e> New Battleground <span class="font-bold" data-v-6223632e>Modes</span></li><li class="mb-2" data-v-6223632e>Renewall Instances Adapted</li><li class="mb-2" data-v-6223632e><span class="font-bold" data-v-6223632e>Champion </span> Mobs </li><li class="mb-2" data-v-6223632e> Multiple Hats <span class="font-bold" data-v-6223632e>Quests</span></li><li class="mb-2" data-v-6223632e>Jackpot Roullete</li><li class="mb-2" data-v-6223632e>Rental Houses</li></ul></div></div></div></div></div></div><img src="/img/character-left.png" alt="" class="hidden lg:inline-block absolute bottom-0 -left-20 z-20" data-v-6223632e><img src="/img/character-right.png" alt="" class="hidden lg:inline-block absolute bottom-0 z-20 right-[-10rem]" data-v-6223632e></div></section><section id="feature-section" class="feature-section h-screen w-full" data-v-6223632e><div class="mx-auto md:w-4/5 h-full" data-v-6223632e><div class="flex items-center justify-center h-full w-full" data-v-6223632e><div class="relative h-full" data-v-6223632e><div class="hidden absolute lg:inline-block w-[200px] top-[5%] right-[-45px] z-10" data-v-6223632e><img src="/img/chiby_poring.png" alt="" data-v-6223632e></div></div>`);
      _push(serverRenderer.ssrRenderComponent(xSlider, null, null, _parent));
      _push(`<div class="relative h-full" data-v-6223632e><div class="hidden lg:inline-block absolute w-[350px] right-[-10rem] bottom-0 z-10" data-v-6223632e><img src="/img/poring-feature.png" class="w-full" alt="" data-v-6223632e></div></div></div></div></section><!--]-->`);
    };
  }
});
const _sfc_setup$_ = _sfc_main$_.setup;
_sfc_main$_.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Home/Index.vue");
  return _sfc_setup$_ ? _sfc_setup$_(props, ctx) : void 0;
};
var Index$d = /* @__PURE__ */ _export_sfc(_sfc_main$_, [["__scopeId", "data-v-6223632e"]]);
var Index$e = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Index$d
}, Symbol.toStringTag, { value: "Module" }));
const __default__$k = {
  layout: GuestLayout
};
const _sfc_main$Z = /* @__PURE__ */ Object.assign(__default__$k, {
  __name: "Information",
  __ssrInlineRender: true,
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<!--[-->`);
      _push(serverRenderer.ssrRenderComponent(vue.unref(inertiaVue3.Head), { title: "Information" }, null, _parent));
      _push(`<section class="py-12"><div class="h-screen"><div class="mx-auto w-full md:w-1/2 flex flex-col items-center justify-center h-full"><div><h1 class="text-center mb-4 font-bold text-4xl"> xRO INFORMATION </h1><img src="/img/logo-light.png" alt=""></div><div class="mt-10 w-full flex items-center justify-center" data-aos="fade-down" data-aos-duration="2700"><div class="grid grid-cols-3 w-full"><div class="col-span-3 md:col-span-1 flex items-center w-full flex-col"><h1 class="text-3xl mb-5 font-bold">Server Rate</h1><div><ul class="text-xl text-center"><li class="mb-2"> 100x <span class="font-bold"> EXP</span> Rates </li><li class="mb-2"> 100x <span class="font-bold">Quest EXP</span> Rates </li><li class="mb-2"> 50x <span class="font-bold">Drop </span>Rates </li><li class="mb-2"> 1.0% <span class="font-bold">Card Drop</span> Rates </li><li class="mb-2"> 0.01%<span class="font-bold"> MVP Card</span> Rates </li></ul></div></div><div class="col-span-3 md:col-span-1 flex items-center w-full flex-col"><h1 class="text-3xl mb-5 font-bold">Game Play</h1><div><ul class="text-xl text-center"><li class="mb-2 font-bold">Pre-Renewal</li><li class="mb-2"> Episode <span class="font-bold">12.0</span></li><li class="mb-2"> Max level <span class="font-bold">99/70</span></li><li class="mb-2">No 3rd Job</li><li class="mb-2"><span class="font-bold">Frost Delays</span></li></ul></div></div><div class="col-span-3 md:col-span-1 flex items-center w-full flex-col"><h1 class="text-3xl mb-5 font-bold">Systems</h1><div><ul class="text-xl text-center"><li class="mb-2"> Quest <span class="font-bold">Repeteable</span></li><li class="mb-2">Race Stylist</li><li class="mb-2"><span class="font-bold">Hourly </span> Points </li><li class="mb-2"> Unique <span class="font-bold">Events</span></li><li class="mb-2">Guild Room</li></ul></div></div></div></div></div></div></section><section class="w-full bg-feature hidden md:block"><div class="h-screen"><div class="mx-auto flex flex-col items-center h-full justify-center container"><div class="w-5/6"><div class="w-full grid gap-4 grid-cols-2 mb-4"><div class="w-full game-feature feature-1 cursor-pointer" data-aos="flip-down" data-aos-easing="ease-out-cubic" data-aos-duration="2000"><div class="relative h-full"><div class="h-full flex w-full"><div class="h-full"></div><img src="/img/feature-crtOver-01.png" alt="" class="float relative w-1/2"><span class="my-auto"><h2 class="text-4xl font-bold text-right"> Battleground </h2></span></div></div></div><div class="w-full game-feature feature-2 cursor-pointer" data-aos="flip-down" data-aos-easing="ease-out-cubic" data-aos-duration="2000"><div class="relative h-full"><div class="h-full flex w-full justify-around"><div class="h-full flex items-center"><img src="/img/feature-crtOver-02.png" alt="" class="float relative mx-auto"></div><span class="my-auto"><h2 class="text-4xl font-bold text-right"> Monster Hunter </h2></span></div></div></div></div><div class="w-full grid gap-4 grid-cols-2 mb-12"><div class="w-full game-feature feature-3 cursor-pointer" data-aos="fade-up" data-aos-duration="3000"><div class="relative h-full"><div class="h-full flex w-full"><div class="h-full"></div><img src="/img/feature-crtOver-03.png" alt="" class="float relative w-1/2"><span class="my-auto"><h2 class="text-4xl font-bold text-right"> Instances </h2></span></div></div></div><div class="w-full game-feature feature-4 cursor-pointer" data-aos="fade-up" data-aos-duration="3000"><div class="relative h-full"><div class="h-full flex w-full"><div class="h-full"></div><img src="/img/feature-crtOver-04.png" alt="" class="float relative w-1/2"><span class="my-auto"><h2 class="text-4xl font-bold text-right"> Pet Evolution </h2></span></div></div></div></div></div></div></div></section><!--]-->`);
    };
  }
});
const _sfc_setup$Z = _sfc_main$Z.setup;
_sfc_main$Z.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Home/Information.vue");
  return _sfc_setup$Z ? _sfc_setup$Z(props, ctx) : void 0;
};
var Information = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": _sfc_main$Z
}, Symbol.toStringTag, { value: "Module" }));
var RankingLayout_vue_vue_type_style_index_0_scoped_true_lang = "";
const _sfc_main$Y = {
  __name: "RankingLayout",
  __ssrInlineRender: true,
  props: {
    title: {
      type: String,
      required: true
    }
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)} data-v-5a1c47a0>`);
      _push(serverRenderer.ssrRenderComponent(vue.unref(inertiaVue3.Head), { title: __props.title }, null, _parent));
      _push(serverRenderer.ssrRenderComponent(JetBanner, null, null, _parent));
      _push(`<div class="" data-v-5a1c47a0>`);
      _push(serverRenderer.ssrRenderComponent(xHeader, null, null, _parent));
      _push(`<main class="mx-auto min-h-screen" data-v-5a1c47a0><div class="w-full text-white" data-v-5a1c47a0>`);
      serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</div></main>`);
      _push(serverRenderer.ssrRenderComponent(xFooter, null, null, _parent));
      _push(`</div></div>`);
    };
  }
};
const _sfc_setup$Y = _sfc_main$Y.setup;
_sfc_main$Y.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Layouts/RankingLayout.vue");
  return _sfc_setup$Y ? _sfc_setup$Y(props, ctx) : void 0;
};
var RankingLayout = /* @__PURE__ */ _export_sfc(_sfc_main$Y, [["__scopeId", "data-v-5a1c47a0"]]);
const _sfc_main$X = {
  __name: "MvpCards",
  __ssrInlineRender: true,
  setup(__props) {
    const mvp_cards_id = [
      4047,
      4054,
      4121,
      4123,
      4128,
      4131,
      4132,
      4134,
      4135,
      4137,
      4142,
      4143,
      4144,
      4145,
      4146,
      4147,
      4148,
      4168,
      4174,
      4198,
      4236,
      4276,
      4302,
      4305,
      4318,
      4324,
      4330,
      4342,
      4352,
      4354,
      4357,
      4359,
      4361,
      4363,
      4365,
      4367,
      4372,
      4374,
      4376,
      4386,
      4399,
      4403,
      4407,
      4408,
      4419,
      4425,
      4430,
      4263,
      4441,
      4565,
      4563,
      4561,
      4562,
      4564,
      4560,
      4566
    ];
    const mvp_cards = inertiaVue3.usePage().props.value.mvp_cards;
    const find_mvp_card = (id) => {
      return mvp_cards.find((mvp_card) => mvp_card.nameid === id);
    };
    return (_ctx, _push, _parent, _attrs) => {
      _push(serverRenderer.ssrRenderComponent(RankingLayout, vue.mergeProps({ title: "MvP Cards" }, _attrs), {
        default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<section class="flex flex-wrap p-20"${_scopeId}><!--[-->`);
            serverRenderer.ssrRenderList(mvp_cards_id, (mvp_card) => {
              _push2(`<div class="text-center mt-[3rem]"${_scopeId}>`);
              if (find_mvp_card(mvp_card).total > 0) {
                _push2(`<div${_scopeId}><img${serverRenderer.ssrRenderAttr("src", `/img/mvpcards/${mvp_card}.jpg`)} alt="" class="p-5"${_scopeId}><p class="font-bold"${_scopeId}>Total: <span class="text-green-500"${_scopeId}>${serverRenderer.ssrInterpolate(find_mvp_card(mvp_card).total)}</span></p></div>`);
              } else {
                _push2(`<!---->`);
              }
              _push2(`</div>`);
            });
            _push2(`<!--]--></section>`);
          } else {
            return [
              vue.createVNode("section", { class: "flex flex-wrap p-20" }, [
                (vue.openBlock(), vue.createBlock(vue.Fragment, null, vue.renderList(mvp_cards_id, (mvp_card) => {
                  return vue.createVNode("div", { class: "text-center mt-[3rem]" }, [
                    find_mvp_card(mvp_card).total > 0 ? (vue.openBlock(), vue.createBlock("div", { key: 0 }, [
                      vue.createVNode("img", {
                        src: `/img/mvpcards/${mvp_card}.jpg`,
                        alt: "",
                        class: "p-5"
                      }, null, 8, ["src"]),
                      vue.createVNode("p", { class: "font-bold" }, [
                        vue.createTextVNode("Total: "),
                        vue.createVNode("span", { class: "text-green-500" }, vue.toDisplayString(find_mvp_card(mvp_card).total), 1)
                      ])
                    ])) : vue.createCommentVNode("", true)
                  ]);
                }), 64))
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$X = _sfc_main$X.setup;
_sfc_main$X.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Information/MvpCards.vue");
  return _sfc_setup$X ? _sfc_setup$X(props, ctx) : void 0;
};
var MvpCards = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": _sfc_main$X
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$W = {
  __name: "ShopUser",
  __ssrInlineRender: true,
  props: {
    user_shop: Object
  },
  setup(__props) {
    const props = __props;
    const modal = vue.reactive({
      confirmGameAccount: false
    });
    function showVending(account_id) {
      modal.confirmGameAccount = true;
    }
    function closeVending() {
      modal.confirmGameAccount = false;
    }
    return (_ctx, _push, _parent, _attrs) => {
      const _component_font_awesome_icon = vue.resolveComponent("font-awesome-icon");
      _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "mb-10 p-5 py-12 flex" }, _attrs))}><div class="card w-80 h-auto rounded-t-lg"><div class="rounded-t-lg p-3 relative pb-5 bg-woe-damage"><div class="flex flex-wrap"><div class="w-full flex justify-between"><p class="font-medium text-lg text-white p-1">${serverRenderer.ssrInterpolate(props.user_shop.name)}</p></div><div><a href="#" class=""><h2 class="text-white font-semibold text-xs bg-white/25 rounded-lg p-1 px-2"> Vending </h2></a></div></div></div><div class="relative bottom-3"><div class="w-full bg-gray-100 rounded-xl p-5 absolute"><div class="relative flex justify-end"><div class="absolute mr-3 translate-x-20 -translate-y-[10rem]"><a href="#"><div><div class="absolute"><img class="w-auto ml-3 translate-y-2 -translate-x-6" src="/storage/cache/tmp_emblem/110.png" alt="Guild Emblem Img"></div></div></a></div></div><div class="flex mt-12"><p class="text-black font-bold text-sm">${serverRenderer.ssrInterpolate(props.user_shop.title)}</p></div><div class=""><span id="price" class="flex justify-between items-center text-black mt-1 text-xs">${serverRenderer.ssrInterpolate(props.user_shop.map)} ${serverRenderer.ssrInterpolate(props.user_shop.x)},${serverRenderer.ssrInterpolate(props.user_shop.y)}</span></div><div class="flex text-sm items-center justify-end">`);
      _push(serverRenderer.ssrRenderComponent(JetSecondaryButton, {
        onClick: showVending,
        class: "inline-flex items-center px-4 py-2 bg-gray-800 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-gray-700 active:bg-gray-900 focus:outline-none focus:border-gray-900 focus:ring focus:ring-gray-300 disabled:opacity-25 transition"
      }, {
        default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
              icon: "cart-shopping",
              class: "text-white mr-3"
            }, null, _parent2, _scopeId));
            _push2(` Shop `);
          } else {
            return [
              vue.createVNode(_component_font_awesome_icon, {
                icon: "cart-shopping",
                class: "text-white mr-3"
              }),
              vue.createTextVNode(" Shop ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div>`);
      _push(serverRenderer.ssrRenderComponent(JetModalDialog, {
        show: modal.confirmGameAccount,
        onClose: closeVending,
        class: "text-black"
      }, {
        title: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${serverRenderer.ssrInterpolate(props.user_shop.title)} | ${serverRenderer.ssrInterpolate(props.user_shop.name)}`);
          } else {
            return [
              vue.createTextVNode(vue.toDisplayString(props.user_shop.title) + " | " + vue.toDisplayString(props.user_shop.name), 1)
            ];
          }
        }),
        content: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="container flex flex-col"${_scopeId}> as </div>`);
          } else {
            return [
              vue.createVNode("div", { class: "container flex flex-col" }, " as ")
            ];
          }
        }),
        footer: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(JetSecondaryButton, { onClick: closeVending }, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Close `);
                } else {
                  return [
                    vue.createTextVNode(" Close ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(JetSecondaryButton, { onClick: closeVending }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Close ")
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div></div></div></div>`);
    };
  }
};
const _sfc_setup$W = _sfc_main$W.setup;
_sfc_main$W.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/ShopUser.vue");
  return _sfc_setup$W ? _sfc_setup$W(props, ctx) : void 0;
};
const _sfc_main$V = {
  __name: "WhoSell",
  __ssrInlineRender: true,
  setup(__props) {
    const whosell = vue.ref({});
    vue.onMounted(() => {
      axios__default["default"].options("http://127.0.0.1:8888/merchants_vending").then(function(response) {
        console.log(response);
        whosell.value = response.data.merchants;
      }).catch(function(error) {
        console.log(error);
      });
    });
    return (_ctx, _push, _parent, _attrs) => {
      _push(serverRenderer.ssrRenderComponent(RankingLayout, vue.mergeProps({ title: "Who Sell" }, _attrs), {
        default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<section class="flex flex-wrap items-center justify-center pt-20"${_scopeId}><!--[-->`);
            serverRenderer.ssrRenderList(whosell.value, (user_shop) => {
              _push2(serverRenderer.ssrRenderComponent(_sfc_main$W, {
                class: "m-5",
                user_shop
              }, null, _parent2, _scopeId));
            });
            _push2(`<!--]--></section>`);
          } else {
            return [
              vue.createVNode("section", { class: "flex flex-wrap items-center justify-center pt-20" }, [
                (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(whosell.value, (user_shop) => {
                  return vue.openBlock(), vue.createBlock(_sfc_main$W, {
                    class: "m-5",
                    user_shop
                  }, null, 8, ["user_shop"]);
                }), 256))
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$V = _sfc_main$V.setup;
_sfc_main$V.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Information/WhoSell.vue");
  return _sfc_setup$V ? _sfc_setup$V(props, ctx) : void 0;
};
var WhoSell = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": _sfc_main$V
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$U = {
  inheritAttrs: false,
  props: {
    id: {
      type: String,
      default() {
        return `text-input-${uuid.v4()}`;
      }
    },
    type: {
      type: String,
      default: "text"
    },
    error: String,
    label: String,
    modelValue: String,
    placeholder: String
  },
  emits: ["update:modelValue"],
  methods: {
    focus() {
      this.$refs.input.focus();
    },
    select() {
      this.$refs.input.select();
    },
    setSelectionRange(start, end) {
      this.$refs.input.setSelectionRange(start, end);
    }
  }
};
function _sfc_ssrRender$n(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({
    class: _ctx.$attrs.class
  }, _attrs))}>`);
  if ($props.label) {
    _push(`<label class="form-label text-sm"${serverRenderer.ssrRenderAttr("for", $props.id)}>${serverRenderer.ssrInterpolate($props.label)}:</label>`);
  } else {
    _push(`<!---->`);
  }
  _push(`<br><input${serverRenderer.ssrRenderAttrs(vue.mergeProps({
    id: $props.id,
    ref: "input"
  }, { ..._ctx.$attrs, class: null }, {
    class: ["form-input w-full rounded-sm border border-gray-400 text-sm", { error: $props.error }],
    type: $props.type,
    placeholder: $props.placeholder,
    value: $props.modelValue
  }))}>`);
  if ($props.error) {
    _push(`<div class="form-error">${serverRenderer.ssrInterpolate($props.error)}</div>`);
  } else {
    _push(`<!---->`);
  }
  _push(`</div>`);
}
const _sfc_setup$U = _sfc_main$U.setup;
_sfc_main$U.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/TextInput.vue");
  return _sfc_setup$U ? _sfc_setup$U(props, ctx) : void 0;
};
var TextInput = /* @__PURE__ */ _export_sfc(_sfc_main$U, [["ssrRender", _sfc_ssrRender$n]]);
const _sfc_main$T = {
  __name: "SelectInput",
  __ssrInlineRender: true,
  props: {
    options: Object,
    label: String,
    required: Boolean,
    disabled: Boolean,
    placeholder: String
  },
  emits: ["getSelected"],
  setup(__props, { emit }) {
    const props = __props;
    vue.watch(() => props.options, () => {
      selected.value = props.options.length > 0 ? props.options[0].select : props.placeholder;
    });
    const selected = vue.ref(props.placeholder);
    vue.watchEffect(() => {
      emit("getSelected", selected.value);
    });
    return (_ctx, _push, _parent, _attrs) => {
      _push(serverRenderer.ssrRenderComponent(vue.unref(vue$1.Listbox), vue.mergeProps({
        as: "div",
        modelValue: selected.value,
        "onUpdate:modelValue": ($event) => selected.value = $event
      }, _attrs), {
        default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(vue.unref(vue$1.ListboxLabel), { class: "block text-sm font-medium leading-6 text-gray-900" }, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`${serverRenderer.ssrInterpolate(props.label)} `);
                  if (props.required) {
                    _push3(`<span class="text-red-500"${_scopeId2}>*</span>`);
                  } else {
                    _push3(`<!---->`);
                  }
                } else {
                  return [
                    vue.createTextVNode(vue.toDisplayString(props.label) + " ", 1),
                    props.required ? (vue.openBlock(), vue.createBlock("span", {
                      key: 0,
                      class: "text-red-500"
                    }, "*")) : vue.createCommentVNode("", true)
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<div class="relative"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(vue.unref(vue$1.ListboxButton), {
              disabled: __props.disabled,
              class: [{ "cursor-not-allowed": __props.disabled, "bg-gray-200": __props.disabled }, "relative w-full cursor-default rounded-md bg-white py-1.5 pl-3 pr-10 text-left text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:outline-none focus:ring-2 focus:ring-cyan-400 sm:text-sm sm:leading-6"]
            }, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<span class="block truncate"${_scopeId2}>${serverRenderer.ssrInterpolate(selected.value)}</span><span class="pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2"${_scopeId2}>`);
                  _push3(serverRenderer.ssrRenderComponent(vue.unref(solid.ChevronUpDownIcon), {
                    class: "h-5 w-5 text-gray-400",
                    "aria-hidden": "true"
                  }, null, _parent3, _scopeId2));
                  _push3(`</span>`);
                } else {
                  return [
                    vue.createVNode("span", { class: "block truncate" }, vue.toDisplayString(selected.value), 1),
                    vue.createVNode("span", { class: "pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2" }, [
                      vue.createVNode(vue.unref(solid.ChevronUpDownIcon), {
                        class: "h-5 w-5 text-gray-400",
                        "aria-hidden": "true"
                      })
                    ])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(vue.unref(vue$1.ListboxOptions), { class: "absolute z-10 mt-1 max-h-60 w-full overflow-auto rounded-md bg-white py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm" }, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<!--[-->`);
                  serverRenderer.ssrRenderList(props.options, (option) => {
                    _push3(serverRenderer.ssrRenderComponent(vue.unref(vue$1.ListboxOption), {
                      as: "template",
                      key: option.select,
                      value: option.select
                    }, {
                      default: vue.withCtx(({ active, selected: selected2 }, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(`<li class="${serverRenderer.ssrRenderClass([
                            active ? "bg-sky-500 text-white" : "text-gray-900",
                            "relative cursor-default select-none py-2 pl-3 pr-9"
                          ])}"${_scopeId3}><span class="${serverRenderer.ssrRenderClass([
                            selected2 ? "font-semibold" : "font-normal",
                            "block truncate"
                          ])}"${_scopeId3}>${serverRenderer.ssrInterpolate(option.select)}</span>`);
                          if (selected2) {
                            _push4(`<span class="${serverRenderer.ssrRenderClass([
                              active ? "text-white" : "text-indigo-600",
                              "absolute inset-y-0 right-0 flex items-center pr-4"
                            ])}"${_scopeId3}>`);
                            _push4(serverRenderer.ssrRenderComponent(vue.unref(solid.CheckIcon), {
                              class: "h-5 w-5",
                              "aria-hidden": "true"
                            }, null, _parent4, _scopeId3));
                            _push4(`</span>`);
                          } else {
                            _push4(`<!---->`);
                          }
                          _push4(`</li>`);
                        } else {
                          return [
                            vue.createVNode("li", {
                              class: [
                                active ? "bg-sky-500 text-white" : "text-gray-900",
                                "relative cursor-default select-none py-2 pl-3 pr-9"
                              ]
                            }, [
                              vue.createVNode("span", {
                                class: [
                                  selected2 ? "font-semibold" : "font-normal",
                                  "block truncate"
                                ]
                              }, vue.toDisplayString(option.select), 3),
                              selected2 ? (vue.openBlock(), vue.createBlock("span", {
                                key: 0,
                                class: [
                                  active ? "text-white" : "text-indigo-600",
                                  "absolute inset-y-0 right-0 flex items-center pr-4"
                                ]
                              }, [
                                vue.createVNode(vue.unref(solid.CheckIcon), {
                                  class: "h-5 w-5",
                                  "aria-hidden": "true"
                                })
                              ], 2)) : vue.createCommentVNode("", true)
                            ], 2)
                          ];
                        }
                      }),
                      _: 2
                    }, _parent3, _scopeId2));
                  });
                  _push3(`<!--]-->`);
                } else {
                  return [
                    (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(props.options, (option) => {
                      return vue.openBlock(), vue.createBlock(vue.unref(vue$1.ListboxOption), {
                        as: "template",
                        key: option.select,
                        value: option.select
                      }, {
                        default: vue.withCtx(({ active, selected: selected2 }) => [
                          vue.createVNode("li", {
                            class: [
                              active ? "bg-sky-500 text-white" : "text-gray-900",
                              "relative cursor-default select-none py-2 pl-3 pr-9"
                            ]
                          }, [
                            vue.createVNode("span", {
                              class: [
                                selected2 ? "font-semibold" : "font-normal",
                                "block truncate"
                              ]
                            }, vue.toDisplayString(option.select), 3),
                            selected2 ? (vue.openBlock(), vue.createBlock("span", {
                              key: 0,
                              class: [
                                active ? "text-white" : "text-indigo-600",
                                "absolute inset-y-0 right-0 flex items-center pr-4"
                              ]
                            }, [
                              vue.createVNode(vue.unref(solid.CheckIcon), {
                                class: "h-5 w-5",
                                "aria-hidden": "true"
                              })
                            ], 2)) : vue.createCommentVNode("", true)
                          ], 2)
                        ]),
                        _: 2
                      }, 1032, ["value"]);
                    }), 128))
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div>`);
          } else {
            return [
              vue.createVNode(vue.unref(vue$1.ListboxLabel), { class: "block text-sm font-medium leading-6 text-gray-900" }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(vue.toDisplayString(props.label) + " ", 1),
                  props.required ? (vue.openBlock(), vue.createBlock("span", {
                    key: 0,
                    class: "text-red-500"
                  }, "*")) : vue.createCommentVNode("", true)
                ]),
                _: 1
              }),
              vue.createVNode("div", { class: "relative" }, [
                vue.createVNode(vue.unref(vue$1.ListboxButton), {
                  disabled: __props.disabled,
                  class: [{ "cursor-not-allowed": __props.disabled, "bg-gray-200": __props.disabled }, "relative w-full cursor-default rounded-md bg-white py-1.5 pl-3 pr-10 text-left text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:outline-none focus:ring-2 focus:ring-cyan-400 sm:text-sm sm:leading-6"]
                }, {
                  default: vue.withCtx(() => [
                    vue.createVNode("span", { class: "block truncate" }, vue.toDisplayString(selected.value), 1),
                    vue.createVNode("span", { class: "pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2" }, [
                      vue.createVNode(vue.unref(solid.ChevronUpDownIcon), {
                        class: "h-5 w-5 text-gray-400",
                        "aria-hidden": "true"
                      })
                    ])
                  ]),
                  _: 1
                }, 8, ["disabled", "class"]),
                vue.createVNode(vue.Transition, {
                  "leave-active-class": "transition ease-in duration-100",
                  "leave-from-class": "opacity-100",
                  "leave-to-class": "opacity-0"
                }, {
                  default: vue.withCtx(() => [
                    vue.createVNode(vue.unref(vue$1.ListboxOptions), { class: "absolute z-10 mt-1 max-h-60 w-full overflow-auto rounded-md bg-white py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm" }, {
                      default: vue.withCtx(() => [
                        (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(props.options, (option) => {
                          return vue.openBlock(), vue.createBlock(vue.unref(vue$1.ListboxOption), {
                            as: "template",
                            key: option.select,
                            value: option.select
                          }, {
                            default: vue.withCtx(({ active, selected: selected2 }) => [
                              vue.createVNode("li", {
                                class: [
                                  active ? "bg-sky-500 text-white" : "text-gray-900",
                                  "relative cursor-default select-none py-2 pl-3 pr-9"
                                ]
                              }, [
                                vue.createVNode("span", {
                                  class: [
                                    selected2 ? "font-semibold" : "font-normal",
                                    "block truncate"
                                  ]
                                }, vue.toDisplayString(option.select), 3),
                                selected2 ? (vue.openBlock(), vue.createBlock("span", {
                                  key: 0,
                                  class: [
                                    active ? "text-white" : "text-indigo-600",
                                    "absolute inset-y-0 right-0 flex items-center pr-4"
                                  ]
                                }, [
                                  vue.createVNode(vue.unref(solid.CheckIcon), {
                                    class: "h-5 w-5",
                                    "aria-hidden": "true"
                                  })
                                ], 2)) : vue.createCommentVNode("", true)
                              ], 2)
                            ]),
                            _: 2
                          }, 1032, ["value"]);
                        }), 128))
                      ]),
                      _: 1
                    })
                  ]),
                  _: 1
                })
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$T = _sfc_main$T.setup;
_sfc_main$T.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/SelectInput.vue");
  return _sfc_setup$T ? _sfc_setup$T(props, ctx) : void 0;
};
var LoadingButton_vue_vue_type_style_index_0_scoped_true_lang = "";
const _sfc_main$S = {
  props: {
    loading: Boolean
  }
};
function _sfc_ssrRender$m(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<button${serverRenderer.ssrRenderAttrs(vue.mergeProps({
    class: "button-64",
    role: "button"
  }, _attrs))} data-v-6cbda683><span class="text" data-v-6cbda683>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</span></button>`);
}
const _sfc_setup$S = _sfc_main$S.setup;
_sfc_main$S.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/LoadingButton.vue");
  return _sfc_setup$S ? _sfc_setup$S(props, ctx) : void 0;
};
var LoadingButton = /* @__PURE__ */ _export_sfc(_sfc_main$S, [["ssrRender", _sfc_ssrRender$m], ["__scopeId", "data-v-6cbda683"]]);
var FormWizard_vue_vue_type_style_index_0_scoped_true_lang = "";
const _sfc_main$R = {
  props: {
    modelValue: {
      type: [String, Number]
    }
  },
  emits: ["update:modelValue"],
  setup(props, { slots, emit }) {
    const active = vue.computed(() => props.modelValue);
    const tabs = vue.ref([]);
    function selectTab(tab) {
      emit("update:modelValue", tab);
    }
    vue.provide("tabsState", {
      active,
      tabs
    });
    return {
      tabs,
      active,
      selectTab
    };
  }
};
function _sfc_ssrRender$l(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<!--[--><div data-v-50981918>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</div><ul class="flex space-x-4 justify-center" data-v-50981918><!--[-->`);
  serverRenderer.ssrRenderList($setup.tabs, (tab, i2) => {
    _push(`<li class="flex flex-col mt-10 items-center px-6 py-3 rounded-tl-md rounded-tr-md overflow-hidden cursor-pointer hover:text-gray-800" data-v-50981918><div class="${serverRenderer.ssrRenderClass([
      $setup.active === i2 ? "border-b-4 border-green-500 box-content text-gray-800" : "border-b-2 border-white text-gray-500",
      "step rounded-full bg-blue-300"
    ])}" data-v-50981918></div> ${serverRenderer.ssrInterpolate(tab.props.title)}</li>`);
  });
  _push(`<!--]--></ul><!--]-->`);
}
const _sfc_setup$R = _sfc_main$R.setup;
_sfc_main$R.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/FormWizard.vue");
  return _sfc_setup$R ? _sfc_setup$R(props, ctx) : void 0;
};
var FormWizard = /* @__PURE__ */ _export_sfc(_sfc_main$R, [["ssrRender", _sfc_ssrRender$l], ["__scopeId", "data-v-50981918"]]);
const _sfc_main$Q = {
  name: "Tab",
  props: {
    title: String
  },
  setup(props) {
    const instance = vue.getCurrentInstance();
    const { tabs, active } = vue.inject("tabsState");
    const index = vue.computed(
      () => tabs.value.findIndex((target) => target.uid === instance.uid)
    );
    const isActive = vue.computed(() => index.value === active.value);
    vue.watchEffect(() => {
      if (index.value === -1) {
        tabs.value.push(instance);
      }
    });
    return {
      isActive
    };
  }
};
function _sfc_ssrRender$k(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  if ($setup.isActive) {
    _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)}>`);
    serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
    _push(`</div>`);
  } else {
    _push(`<!---->`);
  }
}
const _sfc_setup$Q = _sfc_main$Q.setup;
_sfc_main$Q.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Tab.vue");
  return _sfc_setup$Q ? _sfc_setup$Q(props, ctx) : void 0;
};
var Tab = /* @__PURE__ */ _export_sfc(_sfc_main$Q, [["ssrRender", _sfc_ssrRender$k]]);
const _sfc_main$P = {
  setup() {
    const active = vue.ref(0);
    return { active };
  },
  components: {
    Head: inertiaVue3.Head,
    TextInput,
    SelectInput: _sfc_main$T,
    LoadingButton,
    FormWizard,
    Tab,
    JetInput,
    JetLabel,
    JetButton
  },
  layout: GuestLayout,
  remember: "form"
};
function _sfc_ssrRender$j(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_form_wizard = vue.resolveComponent("form-wizard");
  const _component_tab = vue.resolveComponent("tab");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(`<section${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "h-screen" }, _attrs))}><div class="container mx-auto flex justify-center items-center h-screen"><div class="container h-2/3 w-11/12 my-auto p-4"><article class="h-full flex items-center flex-col justify-between"><form action="">`);
  _push(serverRenderer.ssrRenderComponent(_component_form_wizard, {
    modelValue: $setup.active,
    "onUpdate:modelValue": ($event) => $setup.active = $event
  }, {
    default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_tab, {
          title: "Step 1",
          class: "text-center"
        }, {
          default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<h1 class="text-5xl uppercase font-bold"${_scopeId2}> Aqu\xED comienza tu aventura en xRO </h1><span class="mt-3"${_scopeId2}>Ingresa tu correo electr\xF3nico</span><div class="flex flex-col items-center mt-16"${_scopeId2}>`);
              _push3(serverRenderer.ssrRenderComponent(_component_jet_input, {
                id: "email",
                type: "text",
                class: "mt-1 block w-1/3",
                required: "",
                placeholder: "Email",
                autofocus: "",
                autocomplete: "name"
              }, null, _parent3, _scopeId2));
              _push3(`</div>`);
              _push3(serverRenderer.ssrRenderComponent(_component_jet_button, { class: "mt-10" }, {
                default: vue.withCtx((_4, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Iniciar `);
                  } else {
                    return [
                      vue.createTextVNode(" Iniciar ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode("h1", { class: "text-5xl uppercase font-bold" }, " Aqu\xED comienza tu aventura en xRO "),
                vue.createVNode("span", { class: "mt-3" }, "Ingresa tu correo electr\xF3nico"),
                vue.createVNode("div", { class: "flex flex-col items-center mt-16" }, [
                  vue.createVNode(_component_jet_input, {
                    id: "email",
                    type: "text",
                    class: "mt-1 block w-1/3",
                    required: "",
                    placeholder: "Email",
                    autofocus: "",
                    autocomplete: "name"
                  })
                ]),
                vue.createVNode(_component_jet_button, { class: "mt-10" }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Iniciar ")
                  ]),
                  _: 1
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_tab, {
          title: "Step 2",
          class: "text-center"
        }, {
          default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<h1 class="text-5xl uppercase font-bold"${_scopeId2}> Demuestrale a todos el poder de tu naci\xF3n </h1><span${_scopeId2}>Escoge tu pa\xEDs</span><div class="flex flex-col items-center mt-16"${_scopeId2}>`);
              _push3(serverRenderer.ssrRenderComponent(_component_jet_input, {
                id: "email",
                type: "text",
                class: "mt-1 block w-1/3",
                required: "",
                placeholder: "Email",
                autofocus: "",
                autocomplete: "name"
              }, null, _parent3, _scopeId2));
              _push3(`</div>`);
              _push3(serverRenderer.ssrRenderComponent(_component_jet_button, { class: "mt-10" }, {
                default: vue.withCtx((_4, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Continuar `);
                  } else {
                    return [
                      vue.createTextVNode(" Continuar ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode("h1", { class: "text-5xl uppercase font-bold" }, " Demuestrale a todos el poder de tu naci\xF3n "),
                vue.createVNode("span", null, "Escoge tu pa\xEDs"),
                vue.createVNode("div", { class: "flex flex-col items-center mt-16" }, [
                  vue.createVNode(_component_jet_input, {
                    id: "email",
                    type: "text",
                    class: "mt-1 block w-1/3",
                    required: "",
                    placeholder: "Email",
                    autofocus: "",
                    autocomplete: "name"
                  })
                ]),
                vue.createVNode(_component_jet_button, { class: "mt-10" }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Continuar ")
                  ]),
                  _: 1
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_tab, {
          title: "Step 3",
          class: "text-center"
        }, {
          default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<h1 class="text-5xl uppercase font-bold"${_scopeId2}> Escoge una contrase\xF1a para tu cuenta maestra </h1><span${_scopeId2}>Escribir contrase\xF1a</span><div class="flex flex-col items-center mt-16"${_scopeId2}>`);
              _push3(serverRenderer.ssrRenderComponent(_component_jet_input, {
                id: "password",
                type: "password",
                class: "mt-1 block w-1/3",
                required: "",
                placeholder: "Password",
                autofocus: "",
                autocomplete: "name"
              }, null, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_jet_input, {
                id: "password",
                type: "password",
                class: "mt-1 block w-1/3",
                required: "",
                placeholder: "Repeat Password",
                autofocus: "",
                autocomplete: "name"
              }, null, _parent3, _scopeId2));
              _push3(`</div>`);
              _push3(serverRenderer.ssrRenderComponent(_component_jet_button, { class: "mt-10" }, {
                default: vue.withCtx((_4, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Register `);
                  } else {
                    return [
                      vue.createTextVNode(" Register ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode("h1", { class: "text-5xl uppercase font-bold" }, " Escoge una contrase\xF1a para tu cuenta maestra "),
                vue.createVNode("span", null, "Escribir contrase\xF1a"),
                vue.createVNode("div", { class: "flex flex-col items-center mt-16" }, [
                  vue.createVNode(_component_jet_input, {
                    id: "password",
                    type: "password",
                    class: "mt-1 block w-1/3",
                    required: "",
                    placeholder: "Password",
                    autofocus: "",
                    autocomplete: "name"
                  }),
                  vue.createVNode(_component_jet_input, {
                    id: "password",
                    type: "password",
                    class: "mt-1 block w-1/3",
                    required: "",
                    placeholder: "Repeat Password",
                    autofocus: "",
                    autocomplete: "name"
                  })
                ]),
                vue.createVNode(_component_jet_button, { class: "mt-10" }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Register ")
                  ]),
                  _: 1
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_tab, {
            title: "Step 1",
            class: "text-center"
          }, {
            default: vue.withCtx(() => [
              vue.createVNode("h1", { class: "text-5xl uppercase font-bold" }, " Aqu\xED comienza tu aventura en xRO "),
              vue.createVNode("span", { class: "mt-3" }, "Ingresa tu correo electr\xF3nico"),
              vue.createVNode("div", { class: "flex flex-col items-center mt-16" }, [
                vue.createVNode(_component_jet_input, {
                  id: "email",
                  type: "text",
                  class: "mt-1 block w-1/3",
                  required: "",
                  placeholder: "Email",
                  autofocus: "",
                  autocomplete: "name"
                })
              ]),
              vue.createVNode(_component_jet_button, { class: "mt-10" }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Iniciar ")
                ]),
                _: 1
              })
            ]),
            _: 1
          }),
          vue.createVNode(_component_tab, {
            title: "Step 2",
            class: "text-center"
          }, {
            default: vue.withCtx(() => [
              vue.createVNode("h1", { class: "text-5xl uppercase font-bold" }, " Demuestrale a todos el poder de tu naci\xF3n "),
              vue.createVNode("span", null, "Escoge tu pa\xEDs"),
              vue.createVNode("div", { class: "flex flex-col items-center mt-16" }, [
                vue.createVNode(_component_jet_input, {
                  id: "email",
                  type: "text",
                  class: "mt-1 block w-1/3",
                  required: "",
                  placeholder: "Email",
                  autofocus: "",
                  autocomplete: "name"
                })
              ]),
              vue.createVNode(_component_jet_button, { class: "mt-10" }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Continuar ")
                ]),
                _: 1
              })
            ]),
            _: 1
          }),
          vue.createVNode(_component_tab, {
            title: "Step 3",
            class: "text-center"
          }, {
            default: vue.withCtx(() => [
              vue.createVNode("h1", { class: "text-5xl uppercase font-bold" }, " Escoge una contrase\xF1a para tu cuenta maestra "),
              vue.createVNode("span", null, "Escribir contrase\xF1a"),
              vue.createVNode("div", { class: "flex flex-col items-center mt-16" }, [
                vue.createVNode(_component_jet_input, {
                  id: "password",
                  type: "password",
                  class: "mt-1 block w-1/3",
                  required: "",
                  placeholder: "Password",
                  autofocus: "",
                  autocomplete: "name"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "password",
                  type: "password",
                  class: "mt-1 block w-1/3",
                  required: "",
                  placeholder: "Repeat Password",
                  autofocus: "",
                  autocomplete: "name"
                })
              ]),
              vue.createVNode(_component_jet_button, { class: "mt-10" }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Register ")
                ]),
                _: 1
              })
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</form></article></div></div></section>`);
}
const _sfc_setup$P = _sfc_main$P.setup;
_sfc_main$P.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/MasterAccount/Create.vue");
  return _sfc_setup$P ? _sfc_setup$P(props, ctx) : void 0;
};
var Create$1 = /* @__PURE__ */ _export_sfc(_sfc_main$P, [["ssrRender", _sfc_ssrRender$j]]);
var Create$2 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Create$1
}, Symbol.toStringTag, { value: "Module" }));
var Tabs_vue_vue_type_style_index_0_scoped_true_lang = "";
const _sfc_main$O = {
  data() {
    return {
      activeTab: 1
    };
  },
  props: {
    tabList: {
      type: Array,
      required: true
    }
  }
};
function _sfc_ssrRender$i(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)} data-v-02222262><ul class="list-none flex flex-row bg_black bg-opacity-30 p-1.5 rounded-sm text-center overflow-auto whitespace-nowrap" data-v-02222262><!--[-->`);
  serverRenderer.ssrRenderList($props.tabList, (tab, index) => {
    _push(`<li class="${serverRenderer.ssrRenderClass([{
      "text_gray bg-gray-500 shadow-xl": index + 1 === $data.activeTab,
      "text-white": index + 1 !== $data.activeTab
    }, "w-full px-4 py-1.5 rounded-md"])}" data-v-02222262><label${serverRenderer.ssrRenderAttr("for", `${index}`)} class="cursor-pointer block" data-v-02222262>${serverRenderer.ssrInterpolate(tab)}</label><input${serverRenderer.ssrRenderAttr("id", `${index}`)} type="radio"${serverRenderer.ssrRenderAttr("name", `${index}-tab`)}${serverRenderer.ssrRenderAttr("value", index + 1)}${serverRenderer.ssrIncludeBooleanAttr(serverRenderer.ssrLooseEqual($data.activeTab, index + 1)) ? " checked" : ""} class="hidden" data-v-02222262></li>`);
  });
  _push(`<!--]--></ul><!--[-->`);
  serverRenderer.ssrRenderList($props.tabList, (tab, index) => {
    _push(`<!--[-->`);
    if (index + 1 === $data.activeTab) {
      _push(`<div class="p-2 mt-1 overflow-hidden" data-v-02222262>`);
      serverRenderer.ssrRenderSlot(_ctx.$slots, `tabPanel-${index + 1}`, {}, null, _push, _parent);
      _push(`</div>`);
    } else {
      _push(`<!---->`);
    }
    _push(`<!--]-->`);
  });
  _push(`<!--]--></div>`);
}
const _sfc_setup$O = _sfc_main$O.setup;
_sfc_main$O.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Tabs.vue");
  return _sfc_setup$O ? _sfc_setup$O(props, ctx) : void 0;
};
var Tabs = /* @__PURE__ */ _export_sfc(_sfc_main$O, [["ssrRender", _sfc_ssrRender$i], ["__scopeId", "data-v-02222262"]]);
var CharCard_vue_vue_type_style_index_0_scoped_true_lang = "";
const _sfc_main$N = {
  components: {
    JetButton,
    JetDangerButton,
    Link: inertiaVue3.Link
  },
  props: {
    char_account: Object
  },
  setup() {
    const form = vue.reactive({
      resetType: ""
    });
    function reset(resetType, char_id) {
      if (confirm(
        "Are you sure you want to reset " + resetType + " this character?"
      )) {
        form.resetType = resetType;
        inertia.Inertia.post(`game-accounts/reset/${char_id}`, form);
      }
    }
    return {
      reset,
      get_job_name,
      JetButton,
      JetDangerButton
    };
  }
};
function _sfc_ssrRender$h(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_button = vue.resolveComponent("jet-button");
  const _component_Link = vue.resolveComponent("Link");
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "relative bg-gray-700 white_text rounded shadow-sm rounded-b text-center py-3" }, _attrs))} data-v-a4ec6bc0>`);
  if ($props.char_account.online != 1) {
    _push(`<span class="flex absolute h-3 w-3 top-0 right-0 -mt-1 -mr-1" data-v-a4ec6bc0><span class="animate-ping absolute inline-flex h-full w-full rounded-full opacity-75 bg-red-500" data-v-a4ec6bc0></span><span class="relative inline-flex rounded-full h-3 w-3 bg-red-500" data-v-a4ec6bc0></span></span>`);
  } else {
    _push(`<span class="flex absolute h-3 w-3 top-0 right-0 -mt-1 -mr-1" data-v-a4ec6bc0><span class="animate-ping absolute inline-flex h-full w-full rounded-full opacity-75 bg-green-500" data-v-a4ec6bc0></span><span class="relative inline-flex rounded-full h-3 w-3 bg-green-500" data-v-a4ec6bc0></span></span>`);
  }
  _push(`<div class="block overflow-ellipsis overflow-hidden" data-v-a4ec6bc0><strong data-v-a4ec6bc0>${serverRenderer.ssrInterpolate($props.char_account.name)}</strong></div><div class="block text-xs" data-v-a4ec6bc0> Class: <strong data-v-a4ec6bc0>${serverRenderer.ssrInterpolate($setup.get_job_name($props.char_account.class))}</strong></div><div class="block text-xs" data-v-a4ec6bc0> Level: <strong data-v-a4ec6bc0>${serverRenderer.ssrInterpolate($props.char_account.base_level)}/${serverRenderer.ssrInterpolate($props.char_account.job_level)}</strong></div><div class="block text-xs" data-v-a4ec6bc0> Map: <strong data-v-a4ec6bc0>${serverRenderer.ssrInterpolate($props.char_account.last_map)},${serverRenderer.ssrInterpolate($props.char_account.last_x)},${serverRenderer.ssrInterpolate($props.char_account.last_y)}</strong></div><div class="flex flex-col items-center justify-center mt-3 text-sm rounded-b" data-v-a4ec6bc0>`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_button, { class: "rounded-sm justify-center w-1/2 mb-1 bg-black hover:bg-sky-400 transition duration-0 hover:duration-150" }, {
    default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_Link, {
          href: _ctx.route("bg.profile", $props.char_account.char_id)
        }, {
          default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Player Profile`);
            } else {
              return [
                vue.createTextVNode("Player Profile")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_Link, {
            href: _ctx.route("bg.profile", $props.char_account.char_id)
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Player Profile")
            ]),
            _: 1
          }, 8, ["href"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_jet_button, {
    onClick: ($event) => $setup.reset("position", $props.char_account.char_id),
    class: "rounded-sm justify-center w-1/2 mb-1 bg-black hover:bg-sky-400",
    disabled: $props.char_account.online == 1
  }, {
    default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Reset Position`);
      } else {
        return [
          vue.createTextVNode(" Reset Position")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_jet_button, {
    onClick: ($event) => $setup.reset("equipment", $props.char_account.char_id),
    class: "rounded-sm justify-center w-1/2 mb-1 bg-black hover:bg-sky-400",
    disabled: $props.char_account.online == 1
  }, {
    default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Reset Equipment`);
      } else {
        return [
          vue.createTextVNode(" Reset Equipment")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_jet_button, {
    onClick: ($event) => $setup.reset("appearence", $props.char_account.char_id),
    class: "rounded-sm justify-center w-1/2 bg-black hover:bg-sky-400",
    disabled: $props.char_account.online == 1
  }, {
    default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Reset Appearance`);
      } else {
        return [
          vue.createTextVNode(" Reset Appearance")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div></div>`);
}
const _sfc_setup$N = _sfc_main$N.setup;
_sfc_main$N.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/CharCard.vue");
  return _sfc_setup$N ? _sfc_setup$N(props, ctx) : void 0;
};
var CharCard = /* @__PURE__ */ _export_sfc(_sfc_main$N, [["ssrRender", _sfc_ssrRender$h], ["__scopeId", "data-v-a4ec6bc0"]]);
var AccountProfile_vue_vue_type_style_index_0_scoped_true_lang = "";
const _sfc_main$M = {
  components: {
    JetButton,
    JetInput,
    JetLabel,
    JetInputError,
    JetSecondaryButton,
    JetDialogModal: JetModalDialog,
    JetDangerButton,
    CharCard
  },
  props: ["game_account", "type"],
  emits: ["deleteGameAccountProfile"],
  setup(props, context) {
    const char_accounts = inertiaVue3.usePage().props.value.char_accounts;
    const modal = vue.reactive({
      confirmingAccountDeletion: false,
      confirmingEditAccount: false
    });
    const type = vue.ref(props.type);
    const form = inertiaVue3.useForm({
      masterAccountPassword: "",
      password_confirmation: "",
      password: "",
      errors: {}
    });
    function deleteGameAccountProfile() {
      context.emit(
        "deleteGameAccountProfile",
        props.game_account.account_id
      );
    }
    function confirmAccountDeletion() {
      modal.confirmingAccountDeletion = true;
    }
    function confirmAccountEdit() {
      modal.confirmingEditAccount = true;
    }
    function update(account_id) {
      form.post(`game-accounts/update/${account_id}`, {
        preserveScroll: true,
        onSuccess: () => closeModalEditAccount(),
        onError: () => $refs.password.focus(),
        onFinish: () => form.reset()
      });
    }
    function deleteGameAccount(account_id) {
      if (confirm(
        "Are you sure you want to delete " + account_id + " account?"
      )) {
        form.delete(`game-accounts/destroy/${account_id}`, {
          preserveScroll: true,
          onSuccess: () => {
            closeModal(), deleteGameAccountProfile();
          },
          onError: () => $refs.password.focus(),
          onFinish: () => form.reset()
        });
      }
    }
    function closeModalEditAccount() {
      modal.confirmingEditAccount = false;
    }
    function closeModal() {
      modal.confirmingAccountDeletion = false;
    }
    return {
      ...vue.toRefs(modal),
      closeModal,
      deleteGameAccount,
      closeModalEditAccount,
      confirmAccountDeletion,
      confirmAccountEdit,
      update,
      char_accounts,
      form,
      type
    };
  }
};
function _sfc_ssrRender$g(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_button = vue.resolveComponent("jet-button");
  const _component_jet_dialog_modal = vue.resolveComponent("jet-dialog-modal");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  const _component_char_card = vue.resolveComponent("char-card");
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({
    class: "block w-full rounded-md mt-4",
    id: `profile_id-${$props.game_account.account_id}`
  }, _attrs))} data-v-d0ed1bb6><div class="block p-4 text-left relative bg_black white_text mt-4" data-v-d0ed1bb6><span class="px-2 py-1 text-sm" data-v-d0ed1bb6>${serverRenderer.ssrInterpolate($props.game_account.userid)} (id: <span data-v-d0ed1bb6>${serverRenderer.ssrInterpolate($props.game_account.account_id)}</span>) </span><div class="grid md:grid-cols-4 grid-cols-1 mx-2 my-2 top-0 right-0" data-v-d0ed1bb6><span class="flex justify-center py-2 px-2 mx-2 my-2 text-md font-semibold rounded-sm col-span-2" data-v-d0ed1bb6>`);
  if ($props.game_account.state != 0) {
    _push(`<div data-v-d0ed1bb6> Account Status: <strong data-v-d0ed1bb6>Banned</strong></div>`);
  } else {
    _push(`<div data-v-d0ed1bb6>Account Status: <strong data-v-d0ed1bb6>Active</strong></div>`);
  }
  _push(`</span>`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_button, {
    class: "py-2 justify-center font-bold px-2 mx-2 my-2 text-md rounded-sm bg-sky-500",
    onClick: $setup.confirmAccountEdit
  }, {
    default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Change Password`);
      } else {
        return [
          vue.createTextVNode(" Change Password")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_jet_dialog_modal, {
    show: _ctx.confirmingEditAccount,
    onClose: $setup.closeModalEditAccount
  }, {
    title: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Change Password `);
      } else {
        return [
          vue.createTextVNode(" Change Password ")
        ];
      }
    }),
    content: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Type your current password and your new password to change the password for account <b data-v-d0ed1bb6${_scopeId}>${serverRenderer.ssrInterpolate($props.game_account.account_id)}</b><div class="mt-4" data-v-d0ed1bb6${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          type: "password",
          class: "mt-1 block w-3/4",
          placeholder: "New Account Password",
          modelValue: $setup.form.password,
          "onUpdate:modelValue": ($event) => $setup.form.password = $event
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          type: "password",
          class: "mt-1 block w-3/4",
          placeholder: "Confirm Account Password",
          modelValue: $setup.form.password_confirmation,
          "onUpdate:modelValue": ($event) => $setup.form.password_confirmation = $event
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          type: "password",
          class: "mt-1 block w-3/4",
          placeholder: "Master Account Password",
          modelValue: $setup.form.masterAccountPassword,
          "onUpdate:modelValue": ($event) => $setup.form.masterAccountPassword = $event,
          onKeyup: ($event) => $setup.update(`${$props.game_account.account_id}`)
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $setup.form.errors.password,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createTextVNode(" Type your current password and your new password to change the password for account "),
          vue.createVNode("b", null, vue.toDisplayString($props.game_account.account_id), 1),
          vue.createVNode("div", { class: "mt-4" }, [
            vue.createVNode(_component_jet_input, {
              type: "password",
              class: "mt-1 block w-3/4",
              placeholder: "New Account Password",
              modelValue: $setup.form.password,
              "onUpdate:modelValue": ($event) => $setup.form.password = $event
            }, null, 8, ["modelValue", "onUpdate:modelValue"]),
            vue.createVNode(_component_jet_input, {
              type: "password",
              class: "mt-1 block w-3/4",
              placeholder: "Confirm Account Password",
              modelValue: $setup.form.password_confirmation,
              "onUpdate:modelValue": ($event) => $setup.form.password_confirmation = $event
            }, null, 8, ["modelValue", "onUpdate:modelValue"]),
            vue.createVNode(_component_jet_input, {
              type: "password",
              class: "mt-1 block w-3/4",
              placeholder: "Master Account Password",
              modelValue: $setup.form.masterAccountPassword,
              "onUpdate:modelValue": ($event) => $setup.form.masterAccountPassword = $event,
              onKeyup: vue.withKeys(($event) => $setup.update(`${$props.game_account.account_id}`), ["enter"])
            }, null, 8, ["modelValue", "onUpdate:modelValue", "onKeyup"]),
            vue.createVNode(_component_jet_input_error, {
              message: $setup.form.errors.password,
              class: "mt-2"
            }, null, 8, ["message"])
          ])
        ];
      }
    }),
    footer: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, { onClick: $setup.closeModalEditAccount }, {
          default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Cancel `);
            } else {
              return [
                vue.createTextVNode(" Cancel ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          class: ["ml-3", { "opacity-25": $setup.form.processing }],
          disabled: $setup.form.processing,
          onClick: ($event) => $setup.update(`${$props.game_account.account_id}`)
        }, {
          default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Change Password `);
            } else {
              return [
                vue.createTextVNode(" Change Password ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_secondary_button, { onClick: $setup.closeModalEditAccount }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Cancel ")
            ]),
            _: 1
          }, 8, ["onClick"]),
          vue.createVNode(_component_jet_button, {
            class: ["ml-3", { "opacity-25": $setup.form.processing }],
            disabled: $setup.form.processing,
            onClick: ($event) => $setup.update(`${$props.game_account.account_id}`)
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Change Password ")
            ]),
            _: 1
          }, 8, ["class", "disabled", "onClick"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div></div><div class="bg-gray-100 grid md:grid-cols-3 grid-cols-1 gap-4 p-4 rounded-b" data-v-d0ed1bb6><!--[-->`);
  serverRenderer.ssrRenderList($setup.char_accounts, (char_account, index) => {
    _push(`<!--[-->`);
    if (char_account.account_id === $props.game_account.account_id) {
      _push(`<div data-v-d0ed1bb6>`);
      _push(serverRenderer.ssrRenderComponent(_component_char_card, { char_account }, null, _parent));
      _push(`</div>`);
    } else {
      _push(`<!---->`);
    }
    _push(`<!--]-->`);
  });
  _push(`<!--]--></div></div>`);
}
const _sfc_setup$M = _sfc_main$M.setup;
_sfc_main$M.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/AccountProfile.vue");
  return _sfc_setup$M ? _sfc_setup$M(props, ctx) : void 0;
};
var AccountProfile = /* @__PURE__ */ _export_sfc(_sfc_main$M, [["ssrRender", _sfc_ssrRender$g], ["__scopeId", "data-v-d0ed1bb6"]]);
const _sfc_main$L = {
  props: {
    columnItems: Array,
    logs: Object
  },
  setup(props) {
    const columnItems = vue.ref(props.columnItems);
    const logs = vue.ref(props.logs);
    return {
      columnItems,
      logs
    };
  }
};
function _sfc_ssrRender$f(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "container" }, _attrs))}><table class="text-left w-full"><thead class="bg-black flex text-white w-full"><tr class="flex w-full"><!--[-->`);
  serverRenderer.ssrRenderList($setup.columnItems, (columnItem) => {
    _push(`<th class="p-4 w-1/4">${serverRenderer.ssrInterpolate(columnItem)}</th>`);
  });
  _push(`<!--]--></tr></thead><tbody class="bg-grey-light flex flex-col items-center justify-between overflow-y-scroll w-full" style="${serverRenderer.ssrRenderStyle({ "height": "50vh" })}"><tr class="flex flex-col w-full mb-4"><!--[-->`);
  serverRenderer.ssrRenderList($setup.logs, (log) => {
    _push(`<div class="w-full text-black"><td class="p-4 w-1/4">${serverRenderer.ssrInterpolate(log.time)}</td><td class="p-4 w-1/4">${serverRenderer.ssrInterpolate(log.log_type)}</td><td class="p-4 w-1/4">${serverRenderer.ssrInterpolate(log.ip)}</td><td class="p-4 w-1/4">${serverRenderer.ssrInterpolate(log.session)}</td></div>`);
  });
  _push(`<!--]--></tr></tbody></table></div>`);
}
const _sfc_setup$L = _sfc_main$L.setup;
_sfc_main$L.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/DataTable.vue");
  return _sfc_setup$L ? _sfc_setup$L(props, ctx) : void 0;
};
var DataTable = /* @__PURE__ */ _export_sfc(_sfc_main$L, [["ssrRender", _sfc_ssrRender$f]]);
const _sfc_main$K = {
  data() {
    return {
      show: true
    };
  },
  watch: {
    "$page.props.flash": {
      handler() {
        this.show = true;
      },
      deep: true
    }
  }
};
function _sfc_ssrRender$e(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)}>`);
  if (_ctx.$page.props.flash.success && $data.show) {
    _push(`<div class="flex items-center justify-between mb-8 w-full bg-green-500 rounded"><div class="flex items-center"><svg class="flex-shrink-0 ml-4 mr-2 w-4 h-4 fill-white" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><polygon points="0 11 2 9 7 14 18 3 20 5 7 18"></polygon></svg><div class="py-4 text-white text-sm font-medium">${serverRenderer.ssrInterpolate(_ctx.$page.props.flash.success)}</div></div><button type="button" class="group mr-2 p-2"><svg class="block w-2 h-2 fill-green-800 group-hover:fill-white" xmlns="http://www.w3.org/2000/svg" width="235.908" height="235.908" viewBox="278.046 126.846 235.908 235.908"><path d="M506.784 134.017c-9.56-9.56-25.06-9.56-34.62 0L396 210.18l-76.164-76.164c-9.56-9.56-25.06-9.56-34.62 0-9.56 9.56-9.56 25.06 0 34.62L361.38 244.8l-76.164 76.165c-9.56 9.56-9.56 25.06 0 34.62 9.56 9.56 25.06 9.56 34.62 0L396 279.42l76.164 76.165c9.56 9.56 25.06 9.56 34.62 0 9.56-9.56 9.56-25.06 0-34.62L430.62 244.8l76.164-76.163c9.56-9.56 9.56-25.06 0-34.62z"></path></svg></button></div>`);
  } else {
    _push(`<!---->`);
  }
  _push(`</div>`);
}
const _sfc_setup$K = _sfc_main$K.setup;
_sfc_main$K.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/FlashMessage.vue");
  return _sfc_setup$K ? _sfc_setup$K(props, ctx) : void 0;
};
var FlashMessage = /* @__PURE__ */ _export_sfc(_sfc_main$K, [["ssrRender", _sfc_ssrRender$e]]);
const _sfc_main$J = {
  __name: "GamePanel",
  __ssrInlineRender: true,
  setup(__props) {
    const modal = vue.reactive({
      confirmGameAccount: false
    });
    const game_accounts = vue.computed(() => inertiaVue3.usePage().props.value.game_accounts);
    const form = inertiaVue3.useForm({
      userid: "",
      password: "",
      password_confirmation: "",
      masterAccountPassword: ""
    });
    function deleteProfile(account_id) {
      const parent2 = document.getElementById("game-panel");
      const child = document.getElementById("profile_id-" + account_id);
      parent2.removeChild(child);
    }
    function store() {
      form.post("/game-accounts/create", {
        preserveScroll: true,
        onSuccess: () => closeModal(),
        onError: () => $refs.password.focus(),
        onFinish: () => form.reset()
      });
    }
    function confirmCreateGameAccount() {
      modal.confirmGameAccount = true;
    }
    function closeModal() {
      modal.confirmGameAccount = false;
      form.userid = null;
      form.password = null;
      form.password_confirmation = null;
      form.masterAccountPassword = null;
    }
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)}><div class="p-4 bg-white"><div class="text-2xl text-black font-bold uppercase"> Game Accounts Panel </div><div class="mt-1 text-black"> In this section you can manage all your gaming accounts. All in one place! </div>`);
      _push(serverRenderer.ssrRenderComponent(FlashMessage, { class: "mb-3" }, null, _parent));
      _push(serverRenderer.ssrRenderComponent(JetButton, {
        onClick: confirmCreateGameAccount,
        class: "rounded-sm bg-sky-400"
      }, {
        default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Create Game Account `);
          } else {
            return [
              vue.createTextVNode(" Create Game Account ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(serverRenderer.ssrRenderComponent(JetModalDialog, {
        show: modal.confirmGameAccount,
        onClose: closeModal,
        class: "text-black"
      }, {
        title: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`Create game account`);
          } else {
            return [
              vue.createTextVNode("Create game account")
            ];
          }
        }),
        content: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="container flex flex-col"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(JetLabel, {
              for: "userid",
              value: "Username",
              class: "mt-2"
            }, null, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(JetInput, {
              id: "userid",
              modelValue: vue.unref(form).userid,
              "onUpdate:modelValue": ($event) => vue.unref(form).userid = $event
            }, null, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(JetLabel, {
              for: "password",
              value: "Password",
              class: "mt-2"
            }, null, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(JetInput, {
              id: "password",
              modelValue: vue.unref(form).password,
              "onUpdate:modelValue": ($event) => vue.unref(form).password = $event,
              type: "password"
            }, null, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(JetLabel, {
              for: "password_confirmation",
              value: "Confirm password",
              class: "mt-2"
            }, null, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(JetInput, {
              id: "password_confirmation",
              modelValue: vue.unref(form).password_confirmation,
              "onUpdate:modelValue": ($event) => vue.unref(form).password_confirmation = $event,
              type: "password"
            }, null, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(JetLabel, {
              for: "masterAccountPassword",
              value: "Master account password",
              class: "mt-2"
            }, null, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(JetInput, {
              id: "masterAccountPassword",
              modelValue: vue.unref(form).masterAccountPassword,
              "onUpdate:modelValue": ($event) => vue.unref(form).masterAccountPassword = $event,
              type: "password"
            }, null, _parent2, _scopeId));
            _push2(`</div>`);
          } else {
            return [
              vue.createVNode("div", { class: "container flex flex-col" }, [
                vue.createVNode(JetLabel, {
                  for: "userid",
                  value: "Username",
                  class: "mt-2"
                }),
                vue.createVNode(JetInput, {
                  id: "userid",
                  modelValue: vue.unref(form).userid,
                  "onUpdate:modelValue": ($event) => vue.unref(form).userid = $event
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(JetLabel, {
                  for: "password",
                  value: "Password",
                  class: "mt-2"
                }),
                vue.createVNode(JetInput, {
                  id: "password",
                  modelValue: vue.unref(form).password,
                  "onUpdate:modelValue": ($event) => vue.unref(form).password = $event,
                  type: "password"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(JetLabel, {
                  for: "password_confirmation",
                  value: "Confirm password",
                  class: "mt-2"
                }),
                vue.createVNode(JetInput, {
                  id: "password_confirmation",
                  modelValue: vue.unref(form).password_confirmation,
                  "onUpdate:modelValue": ($event) => vue.unref(form).password_confirmation = $event,
                  type: "password"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(JetLabel, {
                  for: "masterAccountPassword",
                  value: "Master account password",
                  class: "mt-2"
                }),
                vue.createVNode(JetInput, {
                  id: "masterAccountPassword",
                  modelValue: vue.unref(form).masterAccountPassword,
                  "onUpdate:modelValue": ($event) => vue.unref(form).masterAccountPassword = $event,
                  type: "password"
                }, null, 8, ["modelValue", "onUpdate:modelValue"])
              ])
            ];
          }
        }),
        footer: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(JetSecondaryButton, { onClick: closeModal }, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Close `);
                } else {
                  return [
                    vue.createTextVNode(" Close ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(JetButton, {
              class: "ml-3",
              onClick: store
            }, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Create Account`);
                } else {
                  return [
                    vue.createTextVNode("Create Account")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(JetSecondaryButton, { onClick: closeModal }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Close ")
                ]),
                _: 1
              }),
              vue.createVNode(JetButton, {
                class: "ml-3",
                onClick: store
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Create Account")
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<div id="game-panel"><!--[-->`);
      serverRenderer.ssrRenderList(vue.unref(game_accounts).data, (game_account, index) => {
        _push(serverRenderer.ssrRenderComponent(AccountProfile, {
          key: index,
          game_account,
          type: "main",
          class: "mt-5",
          onDeleteGameAccountProfile: ($event) => deleteProfile($event)
        }, null, _parent));
      });
      _push(`<!--]--></div>`);
      _push(serverRenderer.ssrRenderComponent(_sfc_main$1x, {
        links: vue.unref(game_accounts).links,
        class: "mt-4 text-gray-600"
      }, null, _parent));
      _push(`</div></div>`);
    };
  }
};
const _sfc_setup$J = _sfc_main$J.setup;
_sfc_main$J.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/GamePanel.vue");
  return _sfc_setup$J ? _sfc_setup$J(props, ctx) : void 0;
};
const _sfc_main$I = {
  components: {
    AppLayout,
    GamePanel: _sfc_main$J
  }
};
function _sfc_ssrRender$d(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_AppLayout = vue.resolveComponent("AppLayout");
  const _component_game_panel = vue.resolveComponent("game-panel");
  _push(serverRenderer.ssrRenderComponent(_component_AppLayout, vue.mergeProps({ title: "Game Accounts" }, _attrs), {
    default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="py-12 min-h-[90rem]"${_scopeId}><div class="max-w-7xl mx-auto sm:px-6 lg:px-8 mt-36"${_scopeId}><div class="bg-white overflow-hidden shadow-xl sm:rounded-lg"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_game_panel, null, null, _parent2, _scopeId));
        _push2(`</div></div></div>`);
      } else {
        return [
          vue.createVNode("div", { class: "py-12 min-h-[90rem]" }, [
            vue.createVNode("div", { class: "max-w-7xl mx-auto sm:px-6 lg:px-8 mt-36" }, [
              vue.createVNode("div", { class: "bg-white overflow-hidden shadow-xl sm:rounded-lg" }, [
                vue.createVNode(_component_game_panel)
              ])
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$I = _sfc_main$I.setup;
_sfc_main$I.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/MasterAccount/Index.vue");
  return _sfc_setup$I ? _sfc_setup$I(props, ctx) : void 0;
};
var Index$b = /* @__PURE__ */ _export_sfc(_sfc_main$I, [["ssrRender", _sfc_ssrRender$d]]);
var Index$c = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Index$b
}, Symbol.toStringTag, { value: "Module" }));
var PreLayout_vue_vue_type_style_index_0_scoped_true_lang = "";
const _sfc_main$H = {
  __name: "PreLayout",
  __ssrInlineRender: true,
  setup(__props) {
    vue.ref(false);
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)} data-v-e872678e>`);
      _push(serverRenderer.ssrRenderComponent(vue.unref(inertiaVue3.Head), { title: _ctx.title }, null, _parent));
      _push(serverRenderer.ssrRenderComponent(JetBanner, null, null, _parent));
      _push(`<main class="mx-auto" data-v-e872678e><div class="w-full text-white" data-v-e872678e>`);
      serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</div></main></div>`);
    };
  }
};
const _sfc_setup$H = _sfc_main$H.setup;
_sfc_main$H.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Layouts/PreLayout.vue");
  return _sfc_setup$H ? _sfc_setup$H(props, ctx) : void 0;
};
var PreLayout = /* @__PURE__ */ _export_sfc(_sfc_main$H, [["__scopeId", "data-v-e872678e"]]);
var Index_vue_vue_type_style_index_0_scoped_true_lang = "";
const _sfc_main$G = vue.defineComponent({
  components: {
    Head: inertiaVue3.Head,
    Tabs,
    JetAuthenticationCard,
    JetAuthenticationCardLogo,
    JetButton,
    JetInput,
    JetCheckbox,
    JetLabel,
    JetValidationErrors,
    Link: inertiaVue3.Link
  },
  layout: PreLayout,
  data() {
    const total_accounts = inertiaVue3.usePage().props.value.total_accounts;
    const tabList = vue.ref(["Register", "Login"]);
    return {
      tabList,
      total_accounts,
      country_data,
      form: this.$inertia.form({
        email: "",
        password: "",
        country: "",
        password_confirmation: "",
        terms: false
      })
    };
  },
  methods: {
    submit_logo() {
      this.form.transform((data) => ({
        ...data,
        remember: this.form.remember ? "on" : ""
      })).post(this.route("login"), {
        onFinish: () => {
          this.form.reset("password");
        }
      });
    },
    submit() {
      this.form.post(this.route("register"), {
        onFinish: () => this.form.reset("password", "password_confirmation")
      });
    }
  }
});
function _sfc_ssrRender$c(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Head = vue.resolveComponent("Head");
  const _component_tabs = vue.resolveComponent("tabs");
  const _component_JetInput = vue.resolveComponent("JetInput");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_checkbox = vue.resolveComponent("jet-checkbox");
  const _component_jet_button = vue.resolveComponent("jet-button");
  const _component_jet_validation_errors = vue.resolveComponent("jet-validation-errors");
  _push(`<!--[-->`);
  _push(serverRenderer.ssrRenderComponent(_component_Head, { title: "Register" }, null, _parent));
  _push(`<div class="min-w-screen min-h-screen bg-register flex items-center justify-center px-5 py-5" data-v-335fac99><div class="bg-grey-lighter flex flex-col" data-v-335fac99><img src="/img/revenge-logo.png" alt="" data-v-335fac99><div class="mx-auto max-w-lg flex-1 flex flex-col items-center justify-center px-2" data-v-335fac99><div class="relative" data-v-335fac99><img src="/img/login_form.png" alt="" data-v-335fac99></div><div class="absolute h-[33rem] w-[21%] mr-[38px] flex flex-col justify-between" data-v-335fac99>`);
  _push(serverRenderer.ssrRenderComponent(_component_tabs, { tabList: _ctx.tabList }, {
    "tabPanel-1": vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<h2 class="title_pre-register font-bold uppercase" data-v-335fac99${_scopeId}>Create Your Account</h2><div class="w-full px-6" data-v-335fac99${_scopeId}><div data-v-335fac99${_scopeId}><div class="flex -mx-3" data-v-335fac99${_scopeId}><div class="w-1/2 px-3 mb-2" data-v-335fac99${_scopeId}><label for="" class="text-xs font-semibold px-1" data-v-335fac99${_scopeId}>Email</label><div class="flex" data-v-335fac99${_scopeId}><div class="w-10 z-10 pl-1 text-center pointer-events-none flex items-center justify-center" data-v-335fac99${_scopeId}><i class="mdi mdi-account-outline text-gray-300 text-lg" data-v-335fac99${_scopeId}></i></div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_JetInput, {
          type: "text",
          modelValue: _ctx.form.email,
          "onUpdate:modelValue": ($event) => _ctx.form.email = $event,
          class: "w-full -ml-10 pr-3 py-2 border-2 border-gray-200 outline-none focus:border-indigo-500 text-black"
        }, null, _parent2, _scopeId));
        _push2(`</div></div><div class="w-1/2 px-3 mb-2" data-v-335fac99${_scopeId}><label for="" class="text-xs font-semibold px-1" data-v-335fac99${_scopeId}>Country</label><div class="flex" data-v-335fac99${_scopeId}><select name="countries" id="" class="w-full border-2 border-gray-200 outline-none focus:border-indigo-500 text-black" data-v-335fac99${_scopeId}><!--[-->`);
        serverRenderer.ssrRenderList(_ctx.country_data, (country) => {
          _push2(`<option${serverRenderer.ssrRenderAttr(
            "value",
            country.code
          )} data-v-335fac99${_scopeId}>${serverRenderer.ssrInterpolate(country.name)}</option>`);
        });
        _push2(`<!--]--></select></div></div></div><div class="flex -mx-3" data-v-335fac99${_scopeId}><div class="w-full px-3 mb-2" data-v-335fac99${_scopeId}><label for="" class="text-xs font-semibold px-1" data-v-335fac99${_scopeId}>Master Account Password</label><div class="flex" data-v-335fac99${_scopeId}><div class="w-10 z-10 pl-1 text-center pointer-events-none flex items-center justify-center" data-v-335fac99${_scopeId}><i class="mdi mdi-email-outline text-gray-300 text-lg" data-v-335fac99${_scopeId}></i></div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_JetInput, {
          type: "password",
          modelValue: _ctx.form.password,
          "onUpdate:modelValue": ($event) => _ctx.form.password = $event,
          class: "w-full -ml-10 pr-3 py-2 border-2 border-gray-200 outline-none focus:border-indigo-500 text-black"
        }, null, _parent2, _scopeId));
        _push2(`</div></div></div><div class="flex -mx-3" data-v-335fac99${_scopeId}><div class="w-full px-3 mb-5" data-v-335fac99${_scopeId}><label for="" class="text-xs font-semibold px-1" data-v-335fac99${_scopeId}>Repeat Master Account Password</label><div class="flex" data-v-335fac99${_scopeId}><div class="w-10 z-10 pl-1 text-center pointer-events-none flex items-center justify-center" data-v-335fac99${_scopeId}></div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_JetInput, {
          type: "password",
          modelValue: _ctx.form.password_confirmation,
          "onUpdate:modelValue": ($event) => _ctx.form.password_confirmation = $event,
          class: "w-full -ml-10 pr-3 py-2 border-2 border-gray-200 outline-none focus:border-indigo-500 text-black"
        }, null, _parent2, _scopeId));
        _push2(`</div></div></div><div class="flex -mx-3" data-v-335fac99${_scopeId}><div class="w-full px-3" data-v-335fac99${_scopeId}><button class="bg-sky-500 border border-transparent rounded-md p-3 font-semibold text-md text-white uppercase tracking-widest hover:bg-sky-700 active:bg-gray-900 focus:outline-none focus:border-gray-900 focus:ring focus:ring-gray-300 disabled:opacity-25 transition block w-full" data-v-335fac99${_scopeId}> REGISTER NOW </button></div></div></div></div>`);
      } else {
        return [
          vue.createVNode("h2", { class: "title_pre-register font-bold uppercase" }, "Create Your Account"),
          vue.createVNode("div", { class: "w-full px-6" }, [
            vue.createVNode("div", null, [
              vue.createVNode("div", { class: "flex -mx-3" }, [
                vue.createVNode("div", { class: "w-1/2 px-3 mb-2" }, [
                  vue.createVNode("label", {
                    for: "",
                    class: "text-xs font-semibold px-1"
                  }, "Email"),
                  vue.createVNode("div", { class: "flex" }, [
                    vue.createVNode("div", { class: "w-10 z-10 pl-1 text-center pointer-events-none flex items-center justify-center" }, [
                      vue.createVNode("i", { class: "mdi mdi-account-outline text-gray-300 text-lg" })
                    ]),
                    vue.createVNode(_component_JetInput, {
                      type: "text",
                      modelValue: _ctx.form.email,
                      "onUpdate:modelValue": ($event) => _ctx.form.email = $event,
                      class: "w-full -ml-10 pr-3 py-2 border-2 border-gray-200 outline-none focus:border-indigo-500 text-black"
                    }, null, 8, ["modelValue", "onUpdate:modelValue"])
                  ])
                ]),
                vue.createVNode("div", { class: "w-1/2 px-3 mb-2" }, [
                  vue.createVNode("label", {
                    for: "",
                    class: "text-xs font-semibold px-1"
                  }, "Country"),
                  vue.createVNode("div", { class: "flex" }, [
                    vue.withDirectives(vue.createVNode("select", {
                      "onUpdate:modelValue": ($event) => _ctx.form.country = $event,
                      name: "countries",
                      id: "",
                      class: "w-full border-2 border-gray-200 outline-none focus:border-indigo-500 text-black"
                    }, [
                      (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(_ctx.country_data, (country) => {
                        return vue.openBlock(), vue.createBlock("option", {
                          value: country.code
                        }, vue.toDisplayString(country.name), 9, ["value"]);
                      }), 256))
                    ], 8, ["onUpdate:modelValue"]), [
                      [vue.vModelSelect, _ctx.form.country]
                    ])
                  ])
                ])
              ]),
              vue.createVNode("div", { class: "flex -mx-3" }, [
                vue.createVNode("div", { class: "w-full px-3 mb-2" }, [
                  vue.createVNode("label", {
                    for: "",
                    class: "text-xs font-semibold px-1"
                  }, "Master Account Password"),
                  vue.createVNode("div", { class: "flex" }, [
                    vue.createVNode("div", { class: "w-10 z-10 pl-1 text-center pointer-events-none flex items-center justify-center" }, [
                      vue.createVNode("i", { class: "mdi mdi-email-outline text-gray-300 text-lg" })
                    ]),
                    vue.createVNode(_component_JetInput, {
                      type: "password",
                      modelValue: _ctx.form.password,
                      "onUpdate:modelValue": ($event) => _ctx.form.password = $event,
                      class: "w-full -ml-10 pr-3 py-2 border-2 border-gray-200 outline-none focus:border-indigo-500 text-black"
                    }, null, 8, ["modelValue", "onUpdate:modelValue"])
                  ])
                ])
              ]),
              vue.createVNode("div", { class: "flex -mx-3" }, [
                vue.createVNode("div", { class: "w-full px-3 mb-5" }, [
                  vue.createVNode("label", {
                    for: "",
                    class: "text-xs font-semibold px-1"
                  }, "Repeat Master Account Password"),
                  vue.createVNode("div", { class: "flex" }, [
                    vue.createVNode("div", { class: "w-10 z-10 pl-1 text-center pointer-events-none flex items-center justify-center" }),
                    vue.createVNode(_component_JetInput, {
                      type: "password",
                      modelValue: _ctx.form.password_confirmation,
                      "onUpdate:modelValue": ($event) => _ctx.form.password_confirmation = $event,
                      class: "w-full -ml-10 pr-3 py-2 border-2 border-gray-200 outline-none focus:border-indigo-500 text-black"
                    }, null, 8, ["modelValue", "onUpdate:modelValue"])
                  ])
                ])
              ]),
              vue.createVNode("div", { class: "flex -mx-3" }, [
                vue.createVNode("div", { class: "w-full px-3" }, [
                  vue.createVNode("button", {
                    onClick: _ctx.submit,
                    class: "bg-sky-500 border border-transparent rounded-md p-3 font-semibold text-md text-white uppercase tracking-widest hover:bg-sky-700 active:bg-gray-900 focus:outline-none focus:border-gray-900 focus:ring focus:ring-gray-300 disabled:opacity-25 transition block w-full"
                  }, " REGISTER NOW ", 8, ["onClick"])
                ])
              ])
            ])
          ])
        ];
      }
    }),
    "tabPanel-2": vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<h2 class="title_pre-register font-bold uppercase" data-v-335fac99${_scopeId}>Login</h2><form class="p-5 rounded-md" data-v-335fac99${_scopeId}><div data-v-335fac99${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "email",
          value: "Email",
          class: "text-xs font-semibold px-1 text-white"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "email",
          type: "email",
          class: "mt-1 block w-full text-sm text-black",
          modelValue: _ctx.form.email,
          "onUpdate:modelValue": ($event) => _ctx.form.email = $event,
          required: "",
          autofocus: ""
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="mt-4" data-v-335fac99${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "password",
          value: "Password",
          class: "text-xs font-semibold px-1 text-white"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "password",
          type: "password",
          class: "mt-1 block w-full text-sm text-black",
          modelValue: _ctx.form.password,
          "onUpdate:modelValue": ($event) => _ctx.form.password = $event,
          required: "",
          autocomplete: "current-password"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="block mt-4" data-v-335fac99${_scopeId}><label class="flex items-center" data-v-335fac99${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_checkbox, {
          name: "remember",
          class: "bg-gray-200",
          checked: _ctx.form.remember,
          "onUpdate:checked": ($event) => _ctx.form.remember = $event
        }, null, _parent2, _scopeId));
        _push2(`<span class="ml-2 text-sm text-white" data-v-335fac99${_scopeId}>Remember me</span></label></div><div class="flex items-center flex-col justify-center mt-4" data-v-335fac99${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          class: ["ml-4 bg-sky-500 hover:bg-sky-700", {
            "opacity-25": _ctx.form.processing
          }],
          disabled: _ctx.form.processing
        }, {
          default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Log in `);
            } else {
              return [
                vue.createTextVNode(" Log in ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div></form>`);
      } else {
        return [
          vue.createVNode("h2", { class: "title_pre-register font-bold uppercase" }, "Login"),
          vue.createVNode("form", {
            onSubmit: vue.withModifiers(_ctx.submit_logo, ["prevent"]),
            class: "p-5 rounded-md"
          }, [
            vue.createVNode("div", null, [
              vue.createVNode(_component_jet_label, {
                for: "email",
                value: "Email",
                class: "text-xs font-semibold px-1 text-white"
              }),
              vue.createVNode(_component_jet_input, {
                id: "email",
                type: "email",
                class: "mt-1 block w-full text-sm text-black",
                modelValue: _ctx.form.email,
                "onUpdate:modelValue": ($event) => _ctx.form.email = $event,
                required: "",
                autofocus: ""
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ]),
            vue.createVNode("div", { class: "mt-4" }, [
              vue.createVNode(_component_jet_label, {
                for: "password",
                value: "Password",
                class: "text-xs font-semibold px-1 text-white"
              }),
              vue.createVNode(_component_jet_input, {
                id: "password",
                type: "password",
                class: "mt-1 block w-full text-sm text-black",
                modelValue: _ctx.form.password,
                "onUpdate:modelValue": ($event) => _ctx.form.password = $event,
                required: "",
                autocomplete: "current-password"
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ]),
            vue.createVNode("div", { class: "block mt-4" }, [
              vue.createVNode("label", { class: "flex items-center" }, [
                vue.createVNode(_component_jet_checkbox, {
                  name: "remember",
                  class: "bg-gray-200",
                  checked: _ctx.form.remember,
                  "onUpdate:checked": ($event) => _ctx.form.remember = $event
                }, null, 8, ["checked", "onUpdate:checked"]),
                vue.createVNode("span", { class: "ml-2 text-sm text-white" }, "Remember me")
              ])
            ]),
            vue.createVNode("div", { class: "flex items-center flex-col justify-center mt-4" }, [
              vue.createVNode(_component_jet_button, {
                class: ["ml-4 bg-sky-500 hover:bg-sky-700", {
                  "opacity-25": _ctx.form.processing
                }],
                disabled: _ctx.form.processing
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Log in ")
                ]),
                _: 1
              }, 8, ["class", "disabled"])
            ])
          ], 40, ["onSubmit"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<div class="text-center" data-v-335fac99>`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_validation_errors, null, null, _parent));
  _push(`</div><div class="text-center" data-v-335fac99><span data-v-335fac99>${serverRenderer.ssrInterpolate(_ctx.total_accounts)}</span></div></div></div></div></div><!--]-->`);
}
const _sfc_setup$G = _sfc_main$G.setup;
_sfc_main$G.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/PreRegister/Index.vue");
  return _sfc_setup$G ? _sfc_setup$G(props, ctx) : void 0;
};
var Index$9 = /* @__PURE__ */ _export_sfc(_sfc_main$G, [["ssrRender", _sfc_ssrRender$c], ["__scopeId", "data-v-335fac99"]]);
var Index$a = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Index$9
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$F = vue.defineComponent({
  components: {
    JetActionSection,
    JetDangerButton,
    JetDialogModal: JetModalDialog,
    JetInput,
    JetInputError,
    JetSecondaryButton
  },
  data() {
    return {
      confirmingUserDeletion: false,
      form: this.$inertia.form({
        password: ""
      })
    };
  },
  methods: {
    confirmUserDeletion() {
      this.confirmingUserDeletion = true;
      setTimeout(() => this.$refs.password.focus(), 250);
    },
    deleteUser() {
      this.form.delete(route("current-user.destroy"), {
        preserveScroll: true,
        onSuccess: () => this.closeModal(),
        onError: () => this.$refs.password.focus(),
        onFinish: () => this.form.reset()
      });
    },
    closeModal() {
      this.confirmingUserDeletion = false;
      this.form.reset();
    }
  }
});
function _sfc_ssrRender$b(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
}
const _sfc_setup$F = _sfc_main$F.setup;
_sfc_main$F.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Profile/Partials/DeleteUserForm.vue");
  return _sfc_setup$F ? _sfc_setup$F(props, ctx) : void 0;
};
var DeleteUserForm = /* @__PURE__ */ _export_sfc(_sfc_main$F, [["ssrRender", _sfc_ssrRender$b]]);
var DeleteUserForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": DeleteUserForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$E = vue.defineComponent({
  props: ["sessions"],
  components: {
    JetActionMessage,
    JetActionSection,
    JetButton,
    JetDialogModal: JetModalDialog,
    JetInput,
    JetInputError,
    JetSecondaryButton
  },
  data() {
    return {
      confirmingLogout: false,
      form: this.$inertia.form({
        password: ""
      })
    };
  },
  methods: {
    confirmLogout() {
      this.confirmingLogout = true;
      setTimeout(() => this.$refs.password.focus(), 250);
    },
    logoutOtherBrowserSessions() {
      this.form.delete(route("other-browser-sessions.destroy"), {
        preserveScroll: true,
        onSuccess: () => this.closeModal(),
        onError: () => this.$refs.password.focus(),
        onFinish: () => this.form.reset()
      });
    },
    closeModal() {
      this.confirmingLogout = false;
      this.form.reset();
    }
  }
});
function _sfc_ssrRender$a(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_action_section = vue.resolveComponent("jet-action-section");
  const _component_jet_button = vue.resolveComponent("jet-button");
  const _component_jet_action_message = vue.resolveComponent("jet-action-message");
  const _component_jet_dialog_modal = vue.resolveComponent("jet-dialog-modal");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_action_section, _attrs, {
    title: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Browser Sessions `);
      } else {
        return [
          vue.createTextVNode(" Browser Sessions ")
        ];
      }
    }),
    description: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Manage and log out your active sessions on other browsers and devices. `);
      } else {
        return [
          vue.createTextVNode(" Manage and log out your active sessions on other browsers and devices. ")
        ];
      }
    }),
    content: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="max-w-xl text-sm text-gray-600"${_scopeId}> If necessary, you may log out of all of your other browser sessions across all of your devices. Some of your recent sessions are listed below; however, this list may not be exhaustive. If you feel your account has been compromised, you should also update your password. </div>`);
        if (_ctx.sessions.length > 0) {
          _push2(`<div class="mt-5 space-y-6"${_scopeId}><!--[-->`);
          serverRenderer.ssrRenderList(_ctx.sessions, (session, i2) => {
            _push2(`<div class="flex items-center"${_scopeId}><div${_scopeId}>`);
            if (session.agent.is_desktop) {
              _push2(`<svg fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" viewBox="0 0 24 24" stroke="currentColor" class="w-8 h-8 text-gray-500"${_scopeId}><path d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"${_scopeId}></path></svg>`);
            } else {
              _push2(`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round" class="w-8 h-8 text-gray-500"${_scopeId}><path d="M0 0h24v24H0z" stroke="none"${_scopeId}></path><rect x="7" y="4" width="10" height="16" rx="1"${_scopeId}></rect><path d="M11 5h2M12 17v.01"${_scopeId}></path></svg>`);
            }
            _push2(`</div><div class="ml-3"${_scopeId}><div class="text-sm text-gray-600"${_scopeId}>${serverRenderer.ssrInterpolate(session.agent.platform ? session.agent.platform : "Unknown")} - ${serverRenderer.ssrInterpolate(session.agent.browser ? session.agent.browser : "Unknown")}</div><div${_scopeId}><div class="text-xs text-gray-500"${_scopeId}>${serverRenderer.ssrInterpolate(session.ip_address)}, `);
            if (session.is_current_device) {
              _push2(`<span class="text-green-500 font-semibold"${_scopeId}>This device</span>`);
            } else {
              _push2(`<span${_scopeId}>Last active ${serverRenderer.ssrInterpolate(session.last_active)}</span>`);
            }
            _push2(`</div></div></div></div>`);
          });
          _push2(`<!--]--></div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`<div class="flex items-center mt-5"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, { onClick: _ctx.confirmLogout }, {
          default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Log Out Other Browser Sessions `);
            } else {
              return [
                vue.createTextVNode(" Log Out Other Browser Sessions ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_action_message, {
          on: _ctx.form.recentlySuccessful,
          class: "ml-3"
        }, {
          default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Done. `);
            } else {
              return [
                vue.createTextVNode(" Done. ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_dialog_modal, {
          show: _ctx.confirmingLogout,
          onClose: _ctx.closeModal
        }, {
          title: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Log Out Other Browser Sessions `);
            } else {
              return [
                vue.createTextVNode(" Log Out Other Browser Sessions ")
              ];
            }
          }),
          content: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Please enter your password to confirm you would like to log out of your other browser sessions across all of your devices. <div class="mt-4"${_scopeId2}>`);
              _push3(serverRenderer.ssrRenderComponent(_component_jet_input, {
                type: "password",
                class: "mt-1 block w-3/4",
                placeholder: "Password",
                ref: "password",
                modelValue: _ctx.form.password,
                "onUpdate:modelValue": ($event) => _ctx.form.password = $event,
                onKeyup: _ctx.logoutOtherBrowserSessions
              }, null, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
                message: _ctx.form.errors.password,
                class: "mt-2"
              }, null, _parent3, _scopeId2));
              _push3(`</div>`);
            } else {
              return [
                vue.createTextVNode(" Please enter your password to confirm you would like to log out of your other browser sessions across all of your devices. "),
                vue.createVNode("div", { class: "mt-4" }, [
                  vue.createVNode(_component_jet_input, {
                    type: "password",
                    class: "mt-1 block w-3/4",
                    placeholder: "Password",
                    ref: "password",
                    modelValue: _ctx.form.password,
                    "onUpdate:modelValue": ($event) => _ctx.form.password = $event,
                    onKeyup: vue.withKeys(_ctx.logoutOtherBrowserSessions, ["enter"])
                  }, null, 8, ["modelValue", "onUpdate:modelValue", "onKeyup"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: _ctx.form.errors.password,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ])
              ];
            }
          }),
          footer: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, { onClick: _ctx.closeModal }, {
                default: vue.withCtx((_4, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Cancel `);
                  } else {
                    return [
                      vue.createTextVNode(" Cancel ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_jet_button, {
                class: ["ml-3", { "opacity-25": _ctx.form.processing }],
                onClick: _ctx.logoutOtherBrowserSessions,
                disabled: _ctx.form.processing
              }, {
                default: vue.withCtx((_4, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Log Out Other Browser Sessions `);
                  } else {
                    return [
                      vue.createTextVNode(" Log Out Other Browser Sessions ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_jet_secondary_button, { onClick: _ctx.closeModal }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Cancel ")
                  ]),
                  _: 1
                }, 8, ["onClick"]),
                vue.createVNode(_component_jet_button, {
                  class: ["ml-3", { "opacity-25": _ctx.form.processing }],
                  onClick: _ctx.logoutOtherBrowserSessions,
                  disabled: _ctx.form.processing
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Log Out Other Browser Sessions ")
                  ]),
                  _: 1
                }, 8, ["onClick", "class", "disabled"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode("div", { class: "max-w-xl text-sm text-gray-600" }, " If necessary, you may log out of all of your other browser sessions across all of your devices. Some of your recent sessions are listed below; however, this list may not be exhaustive. If you feel your account has been compromised, you should also update your password. "),
          _ctx.sessions.length > 0 ? (vue.openBlock(), vue.createBlock("div", {
            key: 0,
            class: "mt-5 space-y-6"
          }, [
            (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(_ctx.sessions, (session, i2) => {
              return vue.openBlock(), vue.createBlock("div", {
                class: "flex items-center",
                key: i2
              }, [
                vue.createVNode("div", null, [
                  session.agent.is_desktop ? (vue.openBlock(), vue.createBlock("svg", {
                    key: 0,
                    fill: "none",
                    "stroke-linecap": "round",
                    "stroke-linejoin": "round",
                    "stroke-width": "2",
                    viewBox: "0 0 24 24",
                    stroke: "currentColor",
                    class: "w-8 h-8 text-gray-500"
                  }, [
                    vue.createVNode("path", { d: "M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" })
                  ])) : (vue.openBlock(), vue.createBlock("svg", {
                    key: 1,
                    xmlns: "http://www.w3.org/2000/svg",
                    viewBox: "0 0 24 24",
                    "stroke-width": "2",
                    stroke: "currentColor",
                    fill: "none",
                    "stroke-linecap": "round",
                    "stroke-linejoin": "round",
                    class: "w-8 h-8 text-gray-500"
                  }, [
                    vue.createVNode("path", {
                      d: "M0 0h24v24H0z",
                      stroke: "none"
                    }),
                    vue.createVNode("rect", {
                      x: "7",
                      y: "4",
                      width: "10",
                      height: "16",
                      rx: "1"
                    }),
                    vue.createVNode("path", { d: "M11 5h2M12 17v.01" })
                  ]))
                ]),
                vue.createVNode("div", { class: "ml-3" }, [
                  vue.createVNode("div", { class: "text-sm text-gray-600" }, vue.toDisplayString(session.agent.platform ? session.agent.platform : "Unknown") + " - " + vue.toDisplayString(session.agent.browser ? session.agent.browser : "Unknown"), 1),
                  vue.createVNode("div", null, [
                    vue.createVNode("div", { class: "text-xs text-gray-500" }, [
                      vue.createTextVNode(vue.toDisplayString(session.ip_address) + ", ", 1),
                      session.is_current_device ? (vue.openBlock(), vue.createBlock("span", {
                        key: 0,
                        class: "text-green-500 font-semibold"
                      }, "This device")) : (vue.openBlock(), vue.createBlock("span", { key: 1 }, "Last active " + vue.toDisplayString(session.last_active), 1))
                    ])
                  ])
                ])
              ]);
            }), 128))
          ])) : vue.createCommentVNode("", true),
          vue.createVNode("div", { class: "flex items-center mt-5" }, [
            vue.createVNode(_component_jet_button, { onClick: _ctx.confirmLogout }, {
              default: vue.withCtx(() => [
                vue.createTextVNode(" Log Out Other Browser Sessions ")
              ]),
              _: 1
            }, 8, ["onClick"]),
            vue.createVNode(_component_jet_action_message, {
              on: _ctx.form.recentlySuccessful,
              class: "ml-3"
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode(" Done. ")
              ]),
              _: 1
            }, 8, ["on"])
          ]),
          vue.createVNode(_component_jet_dialog_modal, {
            show: _ctx.confirmingLogout,
            onClose: _ctx.closeModal
          }, {
            title: vue.withCtx(() => [
              vue.createTextVNode(" Log Out Other Browser Sessions ")
            ]),
            content: vue.withCtx(() => [
              vue.createTextVNode(" Please enter your password to confirm you would like to log out of your other browser sessions across all of your devices. "),
              vue.createVNode("div", { class: "mt-4" }, [
                vue.createVNode(_component_jet_input, {
                  type: "password",
                  class: "mt-1 block w-3/4",
                  placeholder: "Password",
                  ref: "password",
                  modelValue: _ctx.form.password,
                  "onUpdate:modelValue": ($event) => _ctx.form.password = $event,
                  onKeyup: vue.withKeys(_ctx.logoutOtherBrowserSessions, ["enter"])
                }, null, 8, ["modelValue", "onUpdate:modelValue", "onKeyup"]),
                vue.createVNode(_component_jet_input_error, {
                  message: _ctx.form.errors.password,
                  class: "mt-2"
                }, null, 8, ["message"])
              ])
            ]),
            footer: vue.withCtx(() => [
              vue.createVNode(_component_jet_secondary_button, { onClick: _ctx.closeModal }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Cancel ")
                ]),
                _: 1
              }, 8, ["onClick"]),
              vue.createVNode(_component_jet_button, {
                class: ["ml-3", { "opacity-25": _ctx.form.processing }],
                onClick: _ctx.logoutOtherBrowserSessions,
                disabled: _ctx.form.processing
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Log Out Other Browser Sessions ")
                ]),
                _: 1
              }, 8, ["onClick", "class", "disabled"])
            ]),
            _: 1
          }, 8, ["show", "onClose"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$E = _sfc_main$E.setup;
_sfc_main$E.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Profile/Partials/LogoutOtherBrowserSessionsForm.vue");
  return _sfc_setup$E ? _sfc_setup$E(props, ctx) : void 0;
};
var LogoutOtherBrowserSessionsForm = /* @__PURE__ */ _export_sfc(_sfc_main$E, [["ssrRender", _sfc_ssrRender$a]]);
var LogoutOtherBrowserSessionsForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": LogoutOtherBrowserSessionsForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$D = vue.defineComponent({
  emits: ["confirmed"],
  props: {
    title: {
      default: "Confirm Password"
    },
    content: {
      default: "For your security, please confirm your password to continue."
    },
    button: {
      default: "Confirm"
    }
  },
  components: {
    JetButton,
    JetDialogModal: JetModalDialog,
    JetInput,
    JetInputError,
    JetSecondaryButton
  },
  data() {
    return {
      confirmingPassword: false,
      form: {
        password: "",
        error: ""
      }
    };
  },
  methods: {
    startConfirmingPassword() {
      axios.get(route("password.confirmation")).then((response) => {
        if (response.data.confirmed) {
          this.$emit("confirmed");
        } else {
          this.confirmingPassword = true;
          setTimeout(() => this.$refs.password.focus(), 250);
        }
      });
    },
    confirmPassword() {
      this.form.processing = true;
      axios.post(route("password.confirm"), {
        password: this.form.password
      }).then(() => {
        this.form.processing = false;
        this.closeModal();
        this.$nextTick(() => this.$emit("confirmed"));
      }).catch((error) => {
        this.form.processing = false;
        this.form.error = error.response.data.errors.password[0];
        this.$refs.password.focus();
      });
    },
    closeModal() {
      this.confirmingPassword = false;
      this.form.password = "";
      this.form.error = "";
    }
  }
});
function _sfc_ssrRender$9(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_dialog_modal = vue.resolveComponent("jet-dialog-modal");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(`<span${serverRenderer.ssrRenderAttrs(_attrs)}><span>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</span>`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_dialog_modal, {
    show: _ctx.confirmingPassword,
    onClose: _ctx.closeModal
  }, {
    title: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`${serverRenderer.ssrInterpolate(_ctx.title)}`);
      } else {
        return [
          vue.createTextVNode(vue.toDisplayString(_ctx.title), 1)
        ];
      }
    }),
    content: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`${serverRenderer.ssrInterpolate(_ctx.content)} <div class="mt-4"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          type: "password",
          class: "mt-1 block w-3/4",
          placeholder: "Password",
          ref: "password",
          modelValue: _ctx.form.password,
          "onUpdate:modelValue": ($event) => _ctx.form.password = $event,
          onKeyup: _ctx.confirmPassword
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: _ctx.form.error,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createTextVNode(vue.toDisplayString(_ctx.content) + " ", 1),
          vue.createVNode("div", { class: "mt-4" }, [
            vue.createVNode(_component_jet_input, {
              type: "password",
              class: "mt-1 block w-3/4",
              placeholder: "Password",
              ref: "password",
              modelValue: _ctx.form.password,
              "onUpdate:modelValue": ($event) => _ctx.form.password = $event,
              onKeyup: vue.withKeys(_ctx.confirmPassword, ["enter"])
            }, null, 8, ["modelValue", "onUpdate:modelValue", "onKeyup"]),
            vue.createVNode(_component_jet_input_error, {
              message: _ctx.form.error,
              class: "mt-2"
            }, null, 8, ["message"])
          ])
        ];
      }
    }),
    footer: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, { onClick: _ctx.closeModal }, {
          default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Cancel `);
            } else {
              return [
                vue.createTextVNode(" Cancel ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          class: ["ml-3", { "opacity-25": _ctx.form.processing }],
          onClick: _ctx.confirmPassword,
          disabled: _ctx.form.processing
        }, {
          default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`${serverRenderer.ssrInterpolate(_ctx.button)}`);
            } else {
              return [
                vue.createTextVNode(vue.toDisplayString(_ctx.button), 1)
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_secondary_button, { onClick: _ctx.closeModal }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Cancel ")
            ]),
            _: 1
          }, 8, ["onClick"]),
          vue.createVNode(_component_jet_button, {
            class: ["ml-3", { "opacity-25": _ctx.form.processing }],
            onClick: _ctx.confirmPassword,
            disabled: _ctx.form.processing
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(vue.toDisplayString(_ctx.button), 1)
            ]),
            _: 1
          }, 8, ["onClick", "class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</span>`);
}
const _sfc_setup$D = _sfc_main$D.setup;
_sfc_main$D.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/ConfirmsPassword.vue");
  return _sfc_setup$D ? _sfc_setup$D(props, ctx) : void 0;
};
var JetConfirmsPassword = /* @__PURE__ */ _export_sfc(_sfc_main$D, [["ssrRender", _sfc_ssrRender$9]]);
const _sfc_main$C = vue.defineComponent({
  components: {
    JetActionSection,
    JetButton,
    JetConfirmsPassword,
    JetDangerButton,
    JetSecondaryButton
  },
  data() {
    return {
      enabling: false,
      disabling: false,
      qrCode: null,
      recoveryCodes: []
    };
  },
  methods: {
    enableTwoFactorAuthentication() {
      this.enabling = true;
      this.$inertia.post("/user/two-factor-authentication", {}, {
        preserveScroll: true,
        onSuccess: () => Promise.all([
          this.showQrCode(),
          this.showRecoveryCodes()
        ]),
        onFinish: () => this.enabling = false
      });
    },
    showQrCode() {
      return axios.get("/user/two-factor-qr-code").then((response) => {
        this.qrCode = response.data.svg;
      });
    },
    showRecoveryCodes() {
      return axios.get("/user/two-factor-recovery-codes").then((response) => {
        this.recoveryCodes = response.data;
      });
    },
    regenerateRecoveryCodes() {
      axios.post("/user/two-factor-recovery-codes").then((response) => {
        this.showRecoveryCodes();
      });
    },
    disableTwoFactorAuthentication() {
      this.disabling = true;
      this.$inertia.delete("/user/two-factor-authentication", {
        preserveScroll: true,
        onSuccess: () => this.disabling = false
      });
    }
  },
  computed: {
    twoFactorEnabled() {
      return !this.enabling && this.$page.props.user.two_factor_enabled;
    }
  }
});
function _sfc_ssrRender$8(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_action_section = vue.resolveComponent("jet-action-section");
  const _component_jet_confirms_password = vue.resolveComponent("jet-confirms-password");
  const _component_jet_button = vue.resolveComponent("jet-button");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  const _component_jet_danger_button = vue.resolveComponent("jet-danger-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_action_section, _attrs, {
    title: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Two Factor Authentication `);
      } else {
        return [
          vue.createTextVNode(" Two Factor Authentication ")
        ];
      }
    }),
    description: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Add additional security to your account using two factor authentication. `);
      } else {
        return [
          vue.createTextVNode(" Add additional security to your account using two factor authentication. ")
        ];
      }
    }),
    content: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        if (_ctx.twoFactorEnabled) {
          _push2(`<h3 class="text-lg font-medium text-gray-900"${_scopeId}> You have enabled two factor authentication. </h3>`);
        } else {
          _push2(`<h3 class="text-lg font-medium text-gray-900"${_scopeId}> You have not enabled two factor authentication. </h3>`);
        }
        _push2(`<div class="mt-3 max-w-xl text-sm text-gray-600"${_scopeId}><p${_scopeId}> When two factor authentication is enabled, you will be prompted for a secure, random token during authentication. You may retrieve this token from your phone&#39;s Google Authenticator application. </p></div>`);
        if (_ctx.twoFactorEnabled) {
          _push2(`<div${_scopeId}>`);
          if (_ctx.qrCode) {
            _push2(`<div${_scopeId}><div class="mt-4 max-w-xl text-sm text-gray-600"${_scopeId}><p class="font-semibold"${_scopeId}> Two factor authentication is now enabled. Scan the following QR code using your phone&#39;s authenticator application. </p></div><div class="mt-4"${_scopeId}>${_ctx.qrCode}</div></div>`);
          } else {
            _push2(`<!---->`);
          }
          if (_ctx.recoveryCodes.length > 0) {
            _push2(`<div${_scopeId}><div class="mt-4 max-w-xl text-sm text-gray-600"${_scopeId}><p class="font-semibold"${_scopeId}> Store these recovery codes in a secure password manager. They can be used to recover access to your account if your two factor authentication device is lost. </p></div><div class="grid gap-1 max-w-xl mt-4 px-4 py-4 font-mono text-sm bg-gray-100 rounded-lg"${_scopeId}><!--[-->`);
            serverRenderer.ssrRenderList(_ctx.recoveryCodes, (code) => {
              _push2(`<div${_scopeId}>${serverRenderer.ssrInterpolate(code)}</div>`);
            });
            _push2(`<!--]--></div></div>`);
          } else {
            _push2(`<!---->`);
          }
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`<div class="mt-5"${_scopeId}>`);
        if (!_ctx.twoFactorEnabled) {
          _push2(`<div${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_confirms_password, { onConfirmed: _ctx.enableTwoFactorAuthentication }, {
            default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(serverRenderer.ssrRenderComponent(_component_jet_button, {
                  type: "button",
                  class: { "opacity-25": _ctx.enabling },
                  disabled: _ctx.enabling
                }, {
                  default: vue.withCtx((_4, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(` Enable `);
                    } else {
                      return [
                        vue.createTextVNode(" Enable ")
                      ];
                    }
                  }),
                  _: 1
                }, _parent3, _scopeId2));
              } else {
                return [
                  vue.createVNode(_component_jet_button, {
                    type: "button",
                    class: { "opacity-25": _ctx.enabling },
                    disabled: _ctx.enabling
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(" Enable ")
                    ]),
                    _: 1
                  }, 8, ["class", "disabled"])
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<div${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_confirms_password, { onConfirmed: _ctx.regenerateRecoveryCodes }, {
            default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                if (_ctx.recoveryCodes.length > 0) {
                  _push3(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, { class: "mr-3" }, {
                    default: vue.withCtx((_4, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(` Regenerate Recovery Codes `);
                      } else {
                        return [
                          vue.createTextVNode(" Regenerate Recovery Codes ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  _push3(`<!---->`);
                }
              } else {
                return [
                  _ctx.recoveryCodes.length > 0 ? (vue.openBlock(), vue.createBlock(_component_jet_secondary_button, {
                    key: 0,
                    class: "mr-3"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(" Regenerate Recovery Codes ")
                    ]),
                    _: 1
                  })) : vue.createCommentVNode("", true)
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_confirms_password, { onConfirmed: _ctx.showRecoveryCodes }, {
            default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                if (_ctx.recoveryCodes.length === 0) {
                  _push3(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, { class: "mr-3" }, {
                    default: vue.withCtx((_4, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(` Show Recovery Codes `);
                      } else {
                        return [
                          vue.createTextVNode(" Show Recovery Codes ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  _push3(`<!---->`);
                }
              } else {
                return [
                  _ctx.recoveryCodes.length === 0 ? (vue.openBlock(), vue.createBlock(_component_jet_secondary_button, {
                    key: 0,
                    class: "mr-3"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(" Show Recovery Codes ")
                    ]),
                    _: 1
                  })) : vue.createCommentVNode("", true)
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_confirms_password, { onConfirmed: _ctx.disableTwoFactorAuthentication }, {
            default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(serverRenderer.ssrRenderComponent(_component_jet_danger_button, {
                  class: { "opacity-25": _ctx.disabling },
                  disabled: _ctx.disabling
                }, {
                  default: vue.withCtx((_4, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(` Disable `);
                    } else {
                      return [
                        vue.createTextVNode(" Disable ")
                      ];
                    }
                  }),
                  _: 1
                }, _parent3, _scopeId2));
              } else {
                return [
                  vue.createVNode(_component_jet_danger_button, {
                    class: { "opacity-25": _ctx.disabling },
                    disabled: _ctx.disabling
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(" Disable ")
                    ]),
                    _: 1
                  }, 8, ["class", "disabled"])
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(`</div>`);
        }
        _push2(`</div>`);
      } else {
        return [
          _ctx.twoFactorEnabled ? (vue.openBlock(), vue.createBlock("h3", {
            key: 0,
            class: "text-lg font-medium text-gray-900"
          }, " You have enabled two factor authentication. ")) : (vue.openBlock(), vue.createBlock("h3", {
            key: 1,
            class: "text-lg font-medium text-gray-900"
          }, " You have not enabled two factor authentication. ")),
          vue.createVNode("div", { class: "mt-3 max-w-xl text-sm text-gray-600" }, [
            vue.createVNode("p", null, " When two factor authentication is enabled, you will be prompted for a secure, random token during authentication. You may retrieve this token from your phone's Google Authenticator application. ")
          ]),
          _ctx.twoFactorEnabled ? (vue.openBlock(), vue.createBlock("div", { key: 2 }, [
            _ctx.qrCode ? (vue.openBlock(), vue.createBlock("div", { key: 0 }, [
              vue.createVNode("div", { class: "mt-4 max-w-xl text-sm text-gray-600" }, [
                vue.createVNode("p", { class: "font-semibold" }, " Two factor authentication is now enabled. Scan the following QR code using your phone's authenticator application. ")
              ]),
              vue.createVNode("div", {
                class: "mt-4",
                innerHTML: _ctx.qrCode
              }, null, 8, ["innerHTML"])
            ])) : vue.createCommentVNode("", true),
            _ctx.recoveryCodes.length > 0 ? (vue.openBlock(), vue.createBlock("div", { key: 1 }, [
              vue.createVNode("div", { class: "mt-4 max-w-xl text-sm text-gray-600" }, [
                vue.createVNode("p", { class: "font-semibold" }, " Store these recovery codes in a secure password manager. They can be used to recover access to your account if your two factor authentication device is lost. ")
              ]),
              vue.createVNode("div", { class: "grid gap-1 max-w-xl mt-4 px-4 py-4 font-mono text-sm bg-gray-100 rounded-lg" }, [
                (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(_ctx.recoveryCodes, (code) => {
                  return vue.openBlock(), vue.createBlock("div", { key: code }, vue.toDisplayString(code), 1);
                }), 128))
              ])
            ])) : vue.createCommentVNode("", true)
          ])) : vue.createCommentVNode("", true),
          vue.createVNode("div", { class: "mt-5" }, [
            !_ctx.twoFactorEnabled ? (vue.openBlock(), vue.createBlock("div", { key: 0 }, [
              vue.createVNode(_component_jet_confirms_password, { onConfirmed: _ctx.enableTwoFactorAuthentication }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_jet_button, {
                    type: "button",
                    class: { "opacity-25": _ctx.enabling },
                    disabled: _ctx.enabling
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(" Enable ")
                    ]),
                    _: 1
                  }, 8, ["class", "disabled"])
                ]),
                _: 1
              }, 8, ["onConfirmed"])
            ])) : (vue.openBlock(), vue.createBlock("div", { key: 1 }, [
              vue.createVNode(_component_jet_confirms_password, { onConfirmed: _ctx.regenerateRecoveryCodes }, {
                default: vue.withCtx(() => [
                  _ctx.recoveryCodes.length > 0 ? (vue.openBlock(), vue.createBlock(_component_jet_secondary_button, {
                    key: 0,
                    class: "mr-3"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(" Regenerate Recovery Codes ")
                    ]),
                    _: 1
                  })) : vue.createCommentVNode("", true)
                ]),
                _: 1
              }, 8, ["onConfirmed"]),
              vue.createVNode(_component_jet_confirms_password, { onConfirmed: _ctx.showRecoveryCodes }, {
                default: vue.withCtx(() => [
                  _ctx.recoveryCodes.length === 0 ? (vue.openBlock(), vue.createBlock(_component_jet_secondary_button, {
                    key: 0,
                    class: "mr-3"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(" Show Recovery Codes ")
                    ]),
                    _: 1
                  })) : vue.createCommentVNode("", true)
                ]),
                _: 1
              }, 8, ["onConfirmed"]),
              vue.createVNode(_component_jet_confirms_password, { onConfirmed: _ctx.disableTwoFactorAuthentication }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_jet_danger_button, {
                    class: { "opacity-25": _ctx.disabling },
                    disabled: _ctx.disabling
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(" Disable ")
                    ]),
                    _: 1
                  }, 8, ["class", "disabled"])
                ]),
                _: 1
              }, 8, ["onConfirmed"])
            ]))
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$C = _sfc_main$C.setup;
_sfc_main$C.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Profile/Partials/TwoFactorAuthenticationForm.vue");
  return _sfc_setup$C ? _sfc_setup$C(props, ctx) : void 0;
};
var TwoFactorAuthenticationForm = /* @__PURE__ */ _export_sfc(_sfc_main$C, [["ssrRender", _sfc_ssrRender$8]]);
var TwoFactorAuthenticationForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": TwoFactorAuthenticationForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$B = vue.defineComponent({
  components: {
    JetActionMessage,
    JetButton,
    JetFormSection,
    JetInput,
    JetInputError,
    JetLabel
  },
  data() {
    return {
      form: this.$inertia.form({
        current_password: "",
        password: "",
        password_confirmation: ""
      })
    };
  },
  methods: {
    updatePassword() {
      this.form.put(route("user-password.update"), {
        errorBag: "updatePassword",
        preserveScroll: true,
        onSuccess: () => this.form.reset(),
        onError: () => {
          if (this.form.errors.password) {
            this.form.reset("password", "password_confirmation");
            this.$refs.password.focus();
          }
          if (this.form.errors.current_password) {
            this.form.reset("current_password");
            this.$refs.current_password.focus();
          }
        }
      });
    }
  }
});
function _sfc_ssrRender$7(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_form_section = vue.resolveComponent("jet-form-section");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_jet_action_message = vue.resolveComponent("jet-action-message");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_form_section, vue.mergeProps({ onSubmitted: _ctx.updatePassword }, _attrs), {
    title: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Update Password `);
      } else {
        return [
          vue.createTextVNode(" Update Password ")
        ];
      }
    }),
    description: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Ensure your account is using a long, random password to stay secure. `);
      } else {
        return [
          vue.createTextVNode(" Ensure your account is using a long, random password to stay secure. ")
        ];
      }
    }),
    form: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="col-span-6 sm:col-span-4"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "current_password",
          value: "Current Password"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "current_password",
          type: "password",
          class: "mt-1 block w-full",
          modelValue: _ctx.form.current_password,
          "onUpdate:modelValue": ($event) => _ctx.form.current_password = $event,
          ref: "current_password",
          autocomplete: "current-password"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: _ctx.form.errors.current_password,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-6 sm:col-span-4"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "password",
          value: "New Password"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "password",
          type: "password",
          class: "mt-1 block w-full",
          modelValue: _ctx.form.password,
          "onUpdate:modelValue": ($event) => _ctx.form.password = $event,
          ref: "password",
          autocomplete: "new-password"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: _ctx.form.errors.password,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-6 sm:col-span-4"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "password_confirmation",
          value: "Confirm Password"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "password_confirmation",
          type: "password",
          class: "mt-1 block w-full",
          modelValue: _ctx.form.password_confirmation,
          "onUpdate:modelValue": ($event) => _ctx.form.password_confirmation = $event,
          autocomplete: "new-password"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: _ctx.form.errors.password_confirmation,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "col-span-6 sm:col-span-4" }, [
            vue.createVNode(_component_jet_label, {
              for: "current_password",
              value: "Current Password"
            }),
            vue.createVNode(_component_jet_input, {
              id: "current_password",
              type: "password",
              class: "mt-1 block w-full",
              modelValue: _ctx.form.current_password,
              "onUpdate:modelValue": ($event) => _ctx.form.current_password = $event,
              ref: "current_password",
              autocomplete: "current-password"
            }, null, 8, ["modelValue", "onUpdate:modelValue"]),
            vue.createVNode(_component_jet_input_error, {
              message: _ctx.form.errors.current_password,
              class: "mt-2"
            }, null, 8, ["message"])
          ]),
          vue.createVNode("div", { class: "col-span-6 sm:col-span-4" }, [
            vue.createVNode(_component_jet_label, {
              for: "password",
              value: "New Password"
            }),
            vue.createVNode(_component_jet_input, {
              id: "password",
              type: "password",
              class: "mt-1 block w-full",
              modelValue: _ctx.form.password,
              "onUpdate:modelValue": ($event) => _ctx.form.password = $event,
              ref: "password",
              autocomplete: "new-password"
            }, null, 8, ["modelValue", "onUpdate:modelValue"]),
            vue.createVNode(_component_jet_input_error, {
              message: _ctx.form.errors.password,
              class: "mt-2"
            }, null, 8, ["message"])
          ]),
          vue.createVNode("div", { class: "col-span-6 sm:col-span-4" }, [
            vue.createVNode(_component_jet_label, {
              for: "password_confirmation",
              value: "Confirm Password"
            }),
            vue.createVNode(_component_jet_input, {
              id: "password_confirmation",
              type: "password",
              class: "mt-1 block w-full",
              modelValue: _ctx.form.password_confirmation,
              "onUpdate:modelValue": ($event) => _ctx.form.password_confirmation = $event,
              autocomplete: "new-password"
            }, null, 8, ["modelValue", "onUpdate:modelValue"]),
            vue.createVNode(_component_jet_input_error, {
              message: _ctx.form.errors.password_confirmation,
              class: "mt-2"
            }, null, 8, ["message"])
          ])
        ];
      }
    }),
    actions: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_action_message, {
          on: _ctx.form.recentlySuccessful,
          class: "mr-3"
        }, {
          default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Saved. `);
            } else {
              return [
                vue.createTextVNode(" Saved. ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          class: { "opacity-25": _ctx.form.processing },
          disabled: _ctx.form.processing
        }, {
          default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Save `);
            } else {
              return [
                vue.createTextVNode(" Save ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_action_message, {
            on: _ctx.form.recentlySuccessful,
            class: "mr-3"
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Saved. ")
            ]),
            _: 1
          }, 8, ["on"]),
          vue.createVNode(_component_jet_button, {
            class: { "opacity-25": _ctx.form.processing },
            disabled: _ctx.form.processing
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Save ")
            ]),
            _: 1
          }, 8, ["class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$B = _sfc_main$B.setup;
_sfc_main$B.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Profile/Partials/UpdatePasswordForm.vue");
  return _sfc_setup$B ? _sfc_setup$B(props, ctx) : void 0;
};
var UpdatePasswordForm = /* @__PURE__ */ _export_sfc(_sfc_main$B, [["ssrRender", _sfc_ssrRender$7]]);
var UpdatePasswordForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": UpdatePasswordForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$A = vue.defineComponent({
  components: {
    JetActionMessage,
    JetButton,
    JetFormSection,
    JetSectionTitle,
    JetInput,
    JetInputError,
    JetLabel,
    JetSecondaryButton,
    CountryFlag: CountryFlag__default["default"]
  },
  props: ["user"],
  data() {
    return {
      form: this.$inertia.form({
        _method: "PUT",
        email: this.user.email,
        country: this.user.country,
        photo: null
      }),
      photoPreview: null
    };
  },
  methods: {
    updateProfileInformation() {
      if (this.$refs.photo) {
        this.form.photo = this.$refs.photo.files[0];
      }
      this.form.post(route("user-profile-information.update"), {
        errorBag: "updateProfileInformation",
        preserveScroll: true,
        onSuccess: () => this.clearPhotoFileInput()
      });
    },
    selectNewPhoto() {
      this.$refs.photo.click();
    },
    updatePhotoPreview() {
      const photo = this.$refs.photo.files[0];
      if (!photo)
        return;
      const reader = new FileReader();
      reader.onload = (e2) => {
        this.photoPreview = e2.target.result;
      };
      reader.readAsDataURL(photo);
    },
    deletePhoto() {
      this.$inertia.delete(route("current-user-photo.destroy"), {
        preserveScroll: true,
        onSuccess: () => {
          this.photoPreview = null;
          this.clearPhotoFileInput();
        }
      });
    },
    clearPhotoFileInput() {
      var _a2;
      if ((_a2 = this.$refs.photo) == null ? void 0 : _a2.value) {
        this.$refs.photo.value = null;
      }
    }
  }
});
function _sfc_ssrRender$6(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_section_title = vue.resolveComponent("jet-section-title");
  const _component_country_flag = vue.resolveComponent("country-flag");
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "md:grid md:grid-cols-3 md:gap-6 mt-3" }, _attrs))}>`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_section_title, null, {
    title: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Master Account`);
      } else {
        return [
          vue.createTextVNode("Master Account")
        ];
      }
    }),
    description: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Read your master account information`);
      } else {
        return [
          vue.createTextVNode("Read your master account information")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<div class="mt-5 md:mt-0 md:col-span-2"><div class="w-full max-w-2xl mx-auto text-gray-600 bg-white shadow-sm rounded-sm border border-gray-200"><div class="px-5 py-4 border-b border-gray-100"><h2 class="font-semibold text-gray-600"> Master Account Information </h2></div><div class="p-3"><div class="overflow-x-auto"><table class="table-auto w-full"><tbody class="text-sm divide-y divide-gray-100"><tr class="hover:bg-gray-100"><th class="font-semibold">Email</th><td class="p-2 whitespace-nowrap"><div class="text-center">${serverRenderer.ssrInterpolate(_ctx.user.email)}</div></td><th class="font-semibold">Account State</th><td class="p-2 whitespace-nowrap"><div class="text-center font-medium text-green-500">${serverRenderer.ssrInterpolate(_ctx.user.status ? "Active" : "Banned")}</div></td></tr><tr><th class="font-semibold"> Donations Points </th><td class="p-2 whitespace-nowrap"><div class="text-center font-medium text-green-500">${serverRenderer.ssrInterpolate(_ctx.user.donation_points)}</div></td><th class="font-semibold">Last IP</th><td class="p-2 whitespace-nowrap"><div class="text-center font-medium text-green-500"> 125.0.0.1 </div></td></tr><tr class="hover:bg-gray-100"><th class="font-semibold">Vote Points</th><td class="p-2 whitespace-nowrap"><div class="text-center font-medium text-green-500">${serverRenderer.ssrInterpolate(_ctx.user.vote_points)}</div></td><th class="font-semibold">Country</th><td class="p-2 whitespace-nowrap"><div class="text-lg text-center">`);
  _push(serverRenderer.ssrRenderComponent(_component_country_flag, {
    country: _ctx.user.country,
    size: "normal"
  }, null, _parent));
  _push(`</div></td></tr></tbody></table></div></div></div></div></div>`);
}
const _sfc_setup$A = _sfc_main$A.setup;
_sfc_main$A.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Profile/Partials/UpdateProfileInformationForm.vue");
  return _sfc_setup$A ? _sfc_setup$A(props, ctx) : void 0;
};
var UpdateProfileInformationForm = /* @__PURE__ */ _export_sfc(_sfc_main$A, [["ssrRender", _sfc_ssrRender$6]]);
var UpdateProfileInformationForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": UpdateProfileInformationForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$z = vue.defineComponent({
  props: ["sessions"],
  components: {
    AppLayout,
    DeleteUserForm,
    JetSectionBorder,
    LogoutOtherBrowserSessionsForm,
    TwoFactorAuthenticationForm,
    UpdatePasswordForm,
    UpdateProfileInformationForm
  }
});
function _sfc_ssrRender$5(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = vue.resolveComponent("app-layout");
  const _component_update_profile_information_form = vue.resolveComponent("update-profile-information-form");
  const _component_jet_section_border = vue.resolveComponent("jet-section-border");
  const _component_update_password_form = vue.resolveComponent("update-password-form");
  const _component_logout_other_browser_sessions_form = vue.resolveComponent("logout-other-browser-sessions-form");
  const _component_delete_user_form = vue.resolveComponent("delete-user-form");
  _push(serverRenderer.ssrRenderComponent(_component_app_layout, vue.mergeProps({ title: "Profile" }, _attrs), {
    default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="py-12 h-[90rem] text-black"${_scopeId}><div class="max-w-7xl mx-auto sm:px-6 lg:px-8 mt-36"${_scopeId}><div class="bg-white overflow-hidden shadow-xl sm:rounded-lg"${_scopeId}><div${_scopeId}><div class="max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 bg-white"${_scopeId}>`);
        if (_ctx.$page.props.jetstream.canUpdateProfileInformation) {
          _push2(`<div${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_update_profile_information_form, {
            user: _ctx.$page.props.user
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_section_border, null, null, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        if (_ctx.$page.props.jetstream.canUpdatePassword) {
          _push2(`<div${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_update_password_form, { class: "mt-10 sm:mt-0" }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_section_border, null, null, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(serverRenderer.ssrRenderComponent(_component_logout_other_browser_sessions_form, {
          sessions: _ctx.sessions,
          class: "mt-10 sm:mt-0"
        }, null, _parent2, _scopeId));
        if (_ctx.$page.props.jetstream.hasAccountDeletionFeatures) {
          _push2(`<!--[-->`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_section_border, null, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_delete_user_form, { class: "mt-10 sm:mt-0" }, null, _parent2, _scopeId));
          _push2(`<!--]-->`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div></div></div></div></div>`);
      } else {
        return [
          vue.createVNode("div", { class: "py-12 h-[90rem] text-black" }, [
            vue.createVNode("div", { class: "max-w-7xl mx-auto sm:px-6 lg:px-8 mt-36" }, [
              vue.createVNode("div", { class: "bg-white overflow-hidden shadow-xl sm:rounded-lg" }, [
                vue.createVNode("div", null, [
                  vue.createVNode("div", { class: "max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 bg-white" }, [
                    _ctx.$page.props.jetstream.canUpdateProfileInformation ? (vue.openBlock(), vue.createBlock("div", { key: 0 }, [
                      vue.createVNode(_component_update_profile_information_form, {
                        user: _ctx.$page.props.user
                      }, null, 8, ["user"]),
                      vue.createVNode(_component_jet_section_border)
                    ])) : vue.createCommentVNode("", true),
                    _ctx.$page.props.jetstream.canUpdatePassword ? (vue.openBlock(), vue.createBlock("div", { key: 1 }, [
                      vue.createVNode(_component_update_password_form, { class: "mt-10 sm:mt-0" }),
                      vue.createVNode(_component_jet_section_border)
                    ])) : vue.createCommentVNode("", true),
                    vue.createVNode(_component_logout_other_browser_sessions_form, {
                      sessions: _ctx.sessions,
                      class: "mt-10 sm:mt-0"
                    }, null, 8, ["sessions"]),
                    _ctx.$page.props.jetstream.hasAccountDeletionFeatures ? (vue.openBlock(), vue.createBlock(vue.Fragment, { key: 2 }, [
                      vue.createVNode(_component_jet_section_border),
                      vue.createVNode(_component_delete_user_form, { class: "mt-10 sm:mt-0" })
                    ], 64)) : vue.createCommentVNode("", true)
                  ])
                ])
              ])
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$z = _sfc_main$z.setup;
_sfc_main$z.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Profile/Show.vue");
  return _sfc_setup$z ? _sfc_setup$z(props, ctx) : void 0;
};
var Show$1 = /* @__PURE__ */ _export_sfc(_sfc_main$z, [["ssrRender", _sfc_ssrRender$5]]);
var Show$2 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Show$1
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$y = {
  __name: "RankFilter",
  __ssrInlineRender: true,
  props: ["rank_types", "rank", "filter_type", "char_id"],
  setup(__props) {
    const props = __props;
    const query_search = vue.ref("");
    const check_count = vue.ref(0);
    const check_count_type = vue.ref(0);
    const check_count_woe_type = vue.ref(0);
    const woe_dates = vue.ref([]);
    const filters = vue.reactive({
      classes: [{ value: "All", label: "All", checked: false }],
      type: []
    });
    const filters_woe = vue.reactive({
      woe_day: "",
      woe_id: 0
    });
    const checked_elements = vue.reactive({
      classes: [],
      type: null
    });
    const handleWoEDate = (value) => {
      filters_woe.woe_day = value;
      update_filter();
    };
    vue.onMounted(() => {
      ranking_jobs.forEach((job_info) => {
        filters.classes.push({
          value: job_info.id,
          label: job_info.name,
          checked: false
        });
      });
      if (props.filter_type === "ranking") {
        props.rank_types.forEach((type) => {
          filters.type.push({
            value: type.id,
            label: type.name,
            checked: false
          });
        });
      }
    });
    function update_filter() {
      inertia.Inertia.get(
        `/rankings/${props.rank}`,
        {
          class: checked_elements.classes.join(","),
          filter_type: checked_elements.type,
          q: query_search.value,
          woe_id: filters_woe.woe_id,
          woe_day: filters_woe.woe_day
        },
        {
          preserveState: true,
          preserveScroll: true
        }
      );
    }
    const filter_classes = (event) => {
      const checked = event.target.checked;
      if (checked) {
        filters.classes.forEach((class_info) => {
          if (class_info.value == event.target.value) {
            checked_elements.classes.push(class_info.value);
            class_info.checked = true;
            check_count.value++;
            update_filter();
          }
        });
      } else {
        filters.classes.forEach((class_info) => {
          if (class_info.value == event.target.value) {
            checked_elements.classes.splice(
              checked_elements.classes.indexOf(class_info.value),
              1
            );
            class_info.checked = false;
            check_count.value--;
          }
        });
      }
    };
    const filter_type = (event) => {
      const checked = event.target.checked;
      if (checked) {
        const group = event.target.name;
        const item = document.getElementsByName(group);
        if (check_count_woe_type.value == 0)
          check_count_woe_type.value++;
        for (let i2 = 0; i2 < item.length; i2++) {
          if (item[i2].value == event.target.value) {
            checked_elements.type = item[i2].value;
            item[i2].checked = true;
            update_filter();
          } else {
            item[i2].checked = false;
          }
        }
      } else {
        check_count_woe_type.value--;
        checked_elements.type = "";
      }
    };
    const filter_woe_type = (event) => {
      const checked = event.target.checked;
      if (checked) {
        const group = event.target.name;
        const item = document.getElementsByName(group);
        if (check_count_type.value == 0) {
          check_count_type.value++;
        }
        for (let i2 = 0; i2 < item.length; i2++) {
          if (item[i2].value == event.target.value) {
            filters_woe.woe_id = item[i2].value;
            item[i2].checked = true;
            axios__default["default"].get(`/api/woe/dates/${filters_woe.woe_id}`).then((response) => {
              woe_dates.value = [];
              response.data.map((date) => {
                woe_dates.value.push({
                  value: date,
                  label: date,
                  select: date
                });
              });
            });
          } else {
            item[i2].checked = false;
          }
        }
      } else {
        check_count_type.value--;
        filters_woe.woe_id = 0;
      }
    };
    vue.watch(query_search, (value) => {
      inertia.Inertia.get(
        `/rankings/${props.rank}`,
        {
          class: checked_elements.classes.join(","),
          filter_type: checked_elements.type,
          q: value,
          woe_id: checked_elements.woe_id,
          woe_day: checked_elements.woe_day
        },
        {
          preserveState: true,
          preserveScroll: true
        }
      );
    });
    function clear_checks() {
      filters.classes.forEach((class_info) => {
        class_info.checked = false;
      });
      filters.type.forEach((type_info) => {
        type_info.checked = false;
      });
    }
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "bg-transparent" }, _attrs))}><div class="px-4 py-16 text-center sm:px-6 lg:px-8"><h1 class="text-4xl font-bold tracking-tight text-gray-900"> Ranking </h1><p class="mx-auto mt-4 max-w-xl text-base text-white"> Filter the ranking by class, type and search for a specific player. </p></div>`);
      _push(serverRenderer.ssrRenderComponent(vue.unref(vue$1.Disclosure), {
        as: "section",
        "aria-labelledby": "filter-heading",
        class: "bg-black grid items-center border-b border-[#3b87f6]"
      }, {
        default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<h2 id="filter-heading" class="sr-only"${_scopeId}>Filters</h2><div class="relative col-start-1 row-start-1 py-4"${_scopeId}><div class="mx-auto flex max-w-7xl space-x-6 divide-x divide-gray-200 px-4 text-sm sm:px-6 lg:px-8"${_scopeId}><div${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(vue.unref(vue$1.DisclosureButton), { class: "group flex items-center font-medium text-white" }, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(vue.unref(solid.FunnelIcon), {
                    class: "mr-2 h-5 w-5 flex-none text-white group-hover:text-gray-500",
                    "aria-hidden": "true"
                  }, null, _parent3, _scopeId2));
                  _push3(` ${serverRenderer.ssrInterpolate(check_count.value + check_count_type.value)} Filters `);
                } else {
                  return [
                    vue.createVNode(vue.unref(solid.FunnelIcon), {
                      class: "mr-2 h-5 w-5 flex-none text-white group-hover:text-gray-500",
                      "aria-hidden": "true"
                    }),
                    vue.createTextVNode(" " + vue.toDisplayString(check_count.value + check_count_type.value) + " Filters ", 1)
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div><div class="pl-6"${_scopeId}><button type="button" class="text-white"${_scopeId}> Clear all </button></div></div></div>`);
            _push2(serverRenderer.ssrRenderComponent(vue.unref(vue$1.DisclosurePanel), { class: "border-t border-gray-200 py-10" }, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<div class="mx-auto grid max-w-7xl grid-cols-2 gap-x-4 px-4 text-sm sm:px-6 md:gap-x-6 lg:px-8"${_scopeId2}>`);
                  if (props.filter_type === "ranking") {
                    _push3(`<div class="grid auto-rows-min grid-cols-1 gap-y-10 md:grid-cols-2 md:gap-x-6"${_scopeId2}><fieldset${_scopeId2}><legend class="block font-medium"${_scopeId2}>Classes</legend><div class="space-y-6 pt-6 sm:space-y-4 sm:pt-4"${_scopeId2}><!--[-->`);
                    serverRenderer.ssrRenderList(filters.classes, (option, optionIdx) => {
                      _push3(`<div class="flex items-center text-base sm:text-sm"${_scopeId2}>`);
                      if (option.value != "All") {
                        _push3(`<img${serverRenderer.ssrRenderAttr("src", `/img/job_icons/icon_jobs_${option.value}.png`)} class="h-6 w-6 flex-shrink-0 mr-3 rounded border-gray-300 text-[#3b87f6] focus:ring-sky-500"${_scopeId2}>`);
                      } else {
                        _push3(`<!---->`);
                      }
                      _push3(`<input${serverRenderer.ssrRenderAttr("id", `class-${optionIdx}`)} name="class[]"${serverRenderer.ssrRenderAttr("value", option.value)} type="checkbox" class="h-4 w-4 flex-shrink-0 rounded border-gray-300 text-[#3b87f6] focus:ring-sky-500"${serverRenderer.ssrIncludeBooleanAttr(option.checked) ? " checked" : ""}${_scopeId2}><label${serverRenderer.ssrRenderAttr("for", `class-${optionIdx}`)} class="ml-3 min-w-0 flex-1 text-gray-300"${_scopeId2}>${serverRenderer.ssrInterpolate(option.label)}</label></div>`);
                    });
                    _push3(`<!--]--></div></fieldset><fieldset${_scopeId2}><legend class="block font-medium"${_scopeId2}> Filter Type </legend><div class="space-y-6 pt-6 sm:space-y-4 sm:pt-4"${_scopeId2}><!--[-->`);
                    serverRenderer.ssrRenderList(filters.type, (option, optionIdx) => {
                      _push3(`<div class="flex items-center text-base sm:text-sm"${_scopeId2}><input${serverRenderer.ssrRenderAttr("id", `type-${optionIdx}`)} name="type[]"${serverRenderer.ssrRenderAttr("value", option.value)} type="checkbox" class="h-4 w-4 flex-shrink-0 rounded border-gray-300 text-[#3b87f6] focus:ring-sky-500"${serverRenderer.ssrIncludeBooleanAttr(option.checked) ? " checked" : ""}${_scopeId2}><label${serverRenderer.ssrRenderAttr("for", `type-${optionIdx}`)} class="ml-3 min-w-0 flex-1 text-gray-300"${_scopeId2}>${serverRenderer.ssrInterpolate(option.label)}</label></div>`);
                    });
                    _push3(`<!--]--></div></fieldset></div>`);
                  } else {
                    _push3(`<!---->`);
                  }
                  if (props.rank === "woe" || props.rank === "woe-damage") {
                    _push3(`<div class="grid auto-rows-min grid-cols-1 gap-y-10 md:grid-cols-2 md:gap-x-6"${_scopeId2}><fieldset${_scopeId2}><legend class="block font-medium"${_scopeId2}>WoE Type</legend><div class="space-y-6 pt-6 sm:space-y-4 sm:pt-4"${_scopeId2}><!--[-->`);
                    serverRenderer.ssrRenderList(vue.unref(rank_woe_type), (option, optionIdx) => {
                      _push3(`<div class="flex items-center text-base sm:text-sm"${_scopeId2}><input${serverRenderer.ssrRenderAttr("id", `woe_type-${optionIdx}`)} name="woe_type[]"${serverRenderer.ssrRenderAttr("value", option.id)} type="checkbox" class="h-4 w-4 flex-shrink-0 rounded border-gray-300 text-[#3b87f6] focus:ring-sky-500"${serverRenderer.ssrIncludeBooleanAttr(option.checked) ? " checked" : ""}${_scopeId2}><label${serverRenderer.ssrRenderAttr("for", `woe_type-${optionIdx}`)} class="ml-3 min-w-0 flex-1 text-gray-300"${_scopeId2}>${serverRenderer.ssrInterpolate(option.name)}</label></div>`);
                    });
                    _push3(`<!--]--></div></fieldset></div>`);
                  } else {
                    _push3(`<!---->`);
                  }
                  _push3(`</div>`);
                } else {
                  return [
                    vue.createVNode("div", { class: "mx-auto grid max-w-7xl grid-cols-2 gap-x-4 px-4 text-sm sm:px-6 md:gap-x-6 lg:px-8" }, [
                      props.filter_type === "ranking" ? (vue.openBlock(), vue.createBlock("div", {
                        key: 0,
                        class: "grid auto-rows-min grid-cols-1 gap-y-10 md:grid-cols-2 md:gap-x-6"
                      }, [
                        vue.createVNode("fieldset", null, [
                          vue.createVNode("legend", { class: "block font-medium" }, "Classes"),
                          vue.createVNode("div", { class: "space-y-6 pt-6 sm:space-y-4 sm:pt-4" }, [
                            (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(filters.classes, (option, optionIdx) => {
                              return vue.openBlock(), vue.createBlock("div", {
                                key: option.value,
                                class: "flex items-center text-base sm:text-sm"
                              }, [
                                option.value != "All" ? (vue.openBlock(), vue.createBlock("img", {
                                  key: 0,
                                  src: `/img/job_icons/icon_jobs_${option.value}.png`,
                                  class: "h-6 w-6 flex-shrink-0 mr-3 rounded border-gray-300 text-[#3b87f6] focus:ring-sky-500"
                                }, null, 8, ["src"])) : vue.createCommentVNode("", true),
                                vue.createVNode("input", {
                                  onChange: ($event) => filter_classes($event),
                                  id: `class-${optionIdx}`,
                                  name: "class[]",
                                  value: option.value,
                                  type: "checkbox",
                                  class: "h-4 w-4 flex-shrink-0 rounded border-gray-300 text-[#3b87f6] focus:ring-sky-500",
                                  checked: option.checked
                                }, null, 40, ["onChange", "id", "value", "checked"]),
                                vue.createVNode("label", {
                                  for: `class-${optionIdx}`,
                                  class: "ml-3 min-w-0 flex-1 text-gray-300"
                                }, vue.toDisplayString(option.label), 9, ["for"])
                              ]);
                            }), 128))
                          ])
                        ]),
                        vue.createVNode("fieldset", null, [
                          vue.createVNode("legend", { class: "block font-medium" }, " Filter Type "),
                          vue.createVNode("div", { class: "space-y-6 pt-6 sm:space-y-4 sm:pt-4" }, [
                            (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(filters.type, (option, optionIdx) => {
                              return vue.openBlock(), vue.createBlock("div", {
                                key: option.value,
                                class: "flex items-center text-base sm:text-sm"
                              }, [
                                vue.createVNode("input", {
                                  onChange: ($event) => filter_type($event),
                                  id: `type-${optionIdx}`,
                                  name: "type[]",
                                  value: option.value,
                                  type: "checkbox",
                                  class: "h-4 w-4 flex-shrink-0 rounded border-gray-300 text-[#3b87f6] focus:ring-sky-500",
                                  checked: option.checked
                                }, null, 40, ["onChange", "id", "value", "checked"]),
                                vue.createVNode("label", {
                                  for: `type-${optionIdx}`,
                                  class: "ml-3 min-w-0 flex-1 text-gray-300"
                                }, vue.toDisplayString(option.label), 9, ["for"])
                              ]);
                            }), 128))
                          ])
                        ])
                      ])) : vue.createCommentVNode("", true),
                      props.rank === "woe" || props.rank === "woe-damage" ? (vue.openBlock(), vue.createBlock("div", {
                        key: 1,
                        class: "grid auto-rows-min grid-cols-1 gap-y-10 md:grid-cols-2 md:gap-x-6"
                      }, [
                        vue.createVNode("fieldset", null, [
                          vue.createVNode("legend", { class: "block font-medium" }, "WoE Type"),
                          vue.createVNode("div", { class: "space-y-6 pt-6 sm:space-y-4 sm:pt-4" }, [
                            (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(vue.unref(rank_woe_type), (option, optionIdx) => {
                              return vue.openBlock(), vue.createBlock("div", {
                                key: option.id,
                                class: "flex items-center text-base sm:text-sm"
                              }, [
                                vue.createVNode("input", {
                                  onChange: ($event) => filter_woe_type($event),
                                  id: `woe_type-${optionIdx}`,
                                  name: "woe_type[]",
                                  value: option.id,
                                  type: "checkbox",
                                  class: "h-4 w-4 flex-shrink-0 rounded border-gray-300 text-[#3b87f6] focus:ring-sky-500",
                                  checked: option.checked
                                }, null, 40, ["onChange", "id", "value", "checked"]),
                                vue.createVNode("label", {
                                  for: `woe_type-${optionIdx}`,
                                  class: "ml-3 min-w-0 flex-1 text-gray-300"
                                }, vue.toDisplayString(option.name), 9, ["for"])
                              ]);
                            }), 128))
                          ])
                        ])
                      ])) : vue.createCommentVNode("", true)
                    ])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<div class="col-start-1 row-start-1 py-4"${_scopeId}><div class="mx-auto flex max-w-7xl justify-end px-4 sm:px-6 lg:px-8"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(vue.unref(vue$1.Menu), {
              as: "div",
              class: "relative inline-block"
            }, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<div class="flex"${_scopeId2}>`);
                  if (props.rank === "woe" || props.rank === "woe-damage") {
                    _push3(`<div class="flex rounded-md shadow-sm mr-5"${_scopeId2}><div class="relative flex flex-grow items-stretch focus-within:z-10"${_scopeId2}>`);
                    _push3(serverRenderer.ssrRenderComponent(_sfc_main$T, {
                      class: "w-[250px]",
                      options: woe_dates.value,
                      placeholder: "WoE Date",
                      onGetSelected: handleWoEDate
                    }, null, _parent3, _scopeId2));
                    _push3(`</div></div>`);
                  } else {
                    _push3(`<!---->`);
                  }
                  if (props.filter_type === "ranking") {
                    _push3(`<div class="flex rounded-md shadow-sm"${_scopeId2}><div class="relative flex flex-grow items-stretch focus-within:z-10"${_scopeId2}><div class="pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3"${_scopeId2}>`);
                    _push3(serverRenderer.ssrRenderComponent(vue.unref(solid.UsersIcon), {
                      class: "h-5 w-5 text-gray-400",
                      "aria-hidden": "true"
                    }, null, _parent3, _scopeId2));
                    _push3(`</div><input type="email"${serverRenderer.ssrRenderAttr("value", query_search.value)} name="email" id="email" class="block w-full rounded-none rounded-l-md border-0 py-1.5 pl-10 text-gray-900 ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-sky-600 sm:text-sm sm:leading-6" placeholder="Search Player"${_scopeId2}></div><button type="button" class="relative -ml-px inline-flex items-center gap-x-1.5 rounded-r-md px-3 text-sm font-semibold text-gray-900 ring-1 ring-inset ring-gray-300 bg-gray-50"${_scopeId2}>`);
                    _push3(serverRenderer.ssrRenderComponent(vue.unref(solid.BarsArrowUpIcon), {
                      class: "-ml-0.5 h-5 w-5 text-gray-400",
                      "aria-hidden": "true"
                    }, null, _parent3, _scopeId2));
                    _push3(`<span${_scopeId2}>Filter</span></button></div>`);
                  } else {
                    _push3(`<!---->`);
                  }
                  _push3(`</div>`);
                } else {
                  return [
                    vue.createVNode("div", { class: "flex" }, [
                      props.rank === "woe" || props.rank === "woe-damage" ? (vue.openBlock(), vue.createBlock("div", {
                        key: 0,
                        class: "flex rounded-md shadow-sm mr-5"
                      }, [
                        vue.createVNode("div", { class: "relative flex flex-grow items-stretch focus-within:z-10" }, [
                          vue.createVNode(_sfc_main$T, {
                            class: "w-[250px]",
                            options: woe_dates.value,
                            placeholder: "WoE Date",
                            onGetSelected: handleWoEDate
                          }, null, 8, ["options"])
                        ])
                      ])) : vue.createCommentVNode("", true),
                      props.filter_type === "ranking" ? (vue.openBlock(), vue.createBlock("div", {
                        key: 1,
                        class: "flex rounded-md shadow-sm"
                      }, [
                        vue.createVNode("div", { class: "relative flex flex-grow items-stretch focus-within:z-10" }, [
                          vue.createVNode("div", { class: "pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3" }, [
                            vue.createVNode(vue.unref(solid.UsersIcon), {
                              class: "h-5 w-5 text-gray-400",
                              "aria-hidden": "true"
                            })
                          ]),
                          vue.withDirectives(vue.createVNode("input", {
                            type: "email",
                            "onUpdate:modelValue": ($event) => query_search.value = $event,
                            name: "email",
                            id: "email",
                            class: "block w-full rounded-none rounded-l-md border-0 py-1.5 pl-10 text-gray-900 ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-sky-600 sm:text-sm sm:leading-6",
                            placeholder: "Search Player"
                          }, null, 8, ["onUpdate:modelValue"]), [
                            [vue.vModelText, query_search.value]
                          ])
                        ]),
                        vue.createVNode("button", {
                          type: "button",
                          class: "relative -ml-px inline-flex items-center gap-x-1.5 rounded-r-md px-3 text-sm font-semibold text-gray-900 ring-1 ring-inset ring-gray-300 bg-gray-50"
                        }, [
                          vue.createVNode(vue.unref(solid.BarsArrowUpIcon), {
                            class: "-ml-0.5 h-5 w-5 text-gray-400",
                            "aria-hidden": "true"
                          }),
                          vue.createVNode("span", null, "Filter")
                        ])
                      ])) : vue.createCommentVNode("", true)
                    ])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div></div>`);
          } else {
            return [
              vue.createVNode("h2", {
                id: "filter-heading",
                class: "sr-only"
              }, "Filters"),
              vue.createVNode("div", { class: "relative col-start-1 row-start-1 py-4" }, [
                vue.createVNode("div", { class: "mx-auto flex max-w-7xl space-x-6 divide-x divide-gray-200 px-4 text-sm sm:px-6 lg:px-8" }, [
                  vue.createVNode("div", null, [
                    vue.createVNode(vue.unref(vue$1.DisclosureButton), { class: "group flex items-center font-medium text-white" }, {
                      default: vue.withCtx(() => [
                        vue.createVNode(vue.unref(solid.FunnelIcon), {
                          class: "mr-2 h-5 w-5 flex-none text-white group-hover:text-gray-500",
                          "aria-hidden": "true"
                        }),
                        vue.createTextVNode(" " + vue.toDisplayString(check_count.value + check_count_type.value) + " Filters ", 1)
                      ]),
                      _: 1
                    })
                  ]),
                  vue.createVNode("div", { class: "pl-6" }, [
                    vue.createVNode("button", {
                      type: "button",
                      onClick: clear_checks,
                      class: "text-white"
                    }, " Clear all ")
                  ])
                ])
              ]),
              vue.createVNode(vue.unref(vue$1.DisclosurePanel), { class: "border-t border-gray-200 py-10" }, {
                default: vue.withCtx(() => [
                  vue.createVNode("div", { class: "mx-auto grid max-w-7xl grid-cols-2 gap-x-4 px-4 text-sm sm:px-6 md:gap-x-6 lg:px-8" }, [
                    props.filter_type === "ranking" ? (vue.openBlock(), vue.createBlock("div", {
                      key: 0,
                      class: "grid auto-rows-min grid-cols-1 gap-y-10 md:grid-cols-2 md:gap-x-6"
                    }, [
                      vue.createVNode("fieldset", null, [
                        vue.createVNode("legend", { class: "block font-medium" }, "Classes"),
                        vue.createVNode("div", { class: "space-y-6 pt-6 sm:space-y-4 sm:pt-4" }, [
                          (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(filters.classes, (option, optionIdx) => {
                            return vue.openBlock(), vue.createBlock("div", {
                              key: option.value,
                              class: "flex items-center text-base sm:text-sm"
                            }, [
                              option.value != "All" ? (vue.openBlock(), vue.createBlock("img", {
                                key: 0,
                                src: `/img/job_icons/icon_jobs_${option.value}.png`,
                                class: "h-6 w-6 flex-shrink-0 mr-3 rounded border-gray-300 text-[#3b87f6] focus:ring-sky-500"
                              }, null, 8, ["src"])) : vue.createCommentVNode("", true),
                              vue.createVNode("input", {
                                onChange: ($event) => filter_classes($event),
                                id: `class-${optionIdx}`,
                                name: "class[]",
                                value: option.value,
                                type: "checkbox",
                                class: "h-4 w-4 flex-shrink-0 rounded border-gray-300 text-[#3b87f6] focus:ring-sky-500",
                                checked: option.checked
                              }, null, 40, ["onChange", "id", "value", "checked"]),
                              vue.createVNode("label", {
                                for: `class-${optionIdx}`,
                                class: "ml-3 min-w-0 flex-1 text-gray-300"
                              }, vue.toDisplayString(option.label), 9, ["for"])
                            ]);
                          }), 128))
                        ])
                      ]),
                      vue.createVNode("fieldset", null, [
                        vue.createVNode("legend", { class: "block font-medium" }, " Filter Type "),
                        vue.createVNode("div", { class: "space-y-6 pt-6 sm:space-y-4 sm:pt-4" }, [
                          (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(filters.type, (option, optionIdx) => {
                            return vue.openBlock(), vue.createBlock("div", {
                              key: option.value,
                              class: "flex items-center text-base sm:text-sm"
                            }, [
                              vue.createVNode("input", {
                                onChange: ($event) => filter_type($event),
                                id: `type-${optionIdx}`,
                                name: "type[]",
                                value: option.value,
                                type: "checkbox",
                                class: "h-4 w-4 flex-shrink-0 rounded border-gray-300 text-[#3b87f6] focus:ring-sky-500",
                                checked: option.checked
                              }, null, 40, ["onChange", "id", "value", "checked"]),
                              vue.createVNode("label", {
                                for: `type-${optionIdx}`,
                                class: "ml-3 min-w-0 flex-1 text-gray-300"
                              }, vue.toDisplayString(option.label), 9, ["for"])
                            ]);
                          }), 128))
                        ])
                      ])
                    ])) : vue.createCommentVNode("", true),
                    props.rank === "woe" || props.rank === "woe-damage" ? (vue.openBlock(), vue.createBlock("div", {
                      key: 1,
                      class: "grid auto-rows-min grid-cols-1 gap-y-10 md:grid-cols-2 md:gap-x-6"
                    }, [
                      vue.createVNode("fieldset", null, [
                        vue.createVNode("legend", { class: "block font-medium" }, "WoE Type"),
                        vue.createVNode("div", { class: "space-y-6 pt-6 sm:space-y-4 sm:pt-4" }, [
                          (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(vue.unref(rank_woe_type), (option, optionIdx) => {
                            return vue.openBlock(), vue.createBlock("div", {
                              key: option.id,
                              class: "flex items-center text-base sm:text-sm"
                            }, [
                              vue.createVNode("input", {
                                onChange: ($event) => filter_woe_type($event),
                                id: `woe_type-${optionIdx}`,
                                name: "woe_type[]",
                                value: option.id,
                                type: "checkbox",
                                class: "h-4 w-4 flex-shrink-0 rounded border-gray-300 text-[#3b87f6] focus:ring-sky-500",
                                checked: option.checked
                              }, null, 40, ["onChange", "id", "value", "checked"]),
                              vue.createVNode("label", {
                                for: `woe_type-${optionIdx}`,
                                class: "ml-3 min-w-0 flex-1 text-gray-300"
                              }, vue.toDisplayString(option.name), 9, ["for"])
                            ]);
                          }), 128))
                        ])
                      ])
                    ])) : vue.createCommentVNode("", true)
                  ])
                ]),
                _: 1
              }),
              vue.createVNode("div", { class: "col-start-1 row-start-1 py-4" }, [
                vue.createVNode("div", { class: "mx-auto flex max-w-7xl justify-end px-4 sm:px-6 lg:px-8" }, [
                  vue.createVNode(vue.unref(vue$1.Menu), {
                    as: "div",
                    class: "relative inline-block"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createVNode("div", { class: "flex" }, [
                        props.rank === "woe" || props.rank === "woe-damage" ? (vue.openBlock(), vue.createBlock("div", {
                          key: 0,
                          class: "flex rounded-md shadow-sm mr-5"
                        }, [
                          vue.createVNode("div", { class: "relative flex flex-grow items-stretch focus-within:z-10" }, [
                            vue.createVNode(_sfc_main$T, {
                              class: "w-[250px]",
                              options: woe_dates.value,
                              placeholder: "WoE Date",
                              onGetSelected: handleWoEDate
                            }, null, 8, ["options"])
                          ])
                        ])) : vue.createCommentVNode("", true),
                        props.filter_type === "ranking" ? (vue.openBlock(), vue.createBlock("div", {
                          key: 1,
                          class: "flex rounded-md shadow-sm"
                        }, [
                          vue.createVNode("div", { class: "relative flex flex-grow items-stretch focus-within:z-10" }, [
                            vue.createVNode("div", { class: "pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3" }, [
                              vue.createVNode(vue.unref(solid.UsersIcon), {
                                class: "h-5 w-5 text-gray-400",
                                "aria-hidden": "true"
                              })
                            ]),
                            vue.withDirectives(vue.createVNode("input", {
                              type: "email",
                              "onUpdate:modelValue": ($event) => query_search.value = $event,
                              name: "email",
                              id: "email",
                              class: "block w-full rounded-none rounded-l-md border-0 py-1.5 pl-10 text-gray-900 ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-sky-600 sm:text-sm sm:leading-6",
                              placeholder: "Search Player"
                            }, null, 8, ["onUpdate:modelValue"]), [
                              [vue.vModelText, query_search.value]
                            ])
                          ]),
                          vue.createVNode("button", {
                            type: "button",
                            class: "relative -ml-px inline-flex items-center gap-x-1.5 rounded-r-md px-3 text-sm font-semibold text-gray-900 ring-1 ring-inset ring-gray-300 bg-gray-50"
                          }, [
                            vue.createVNode(vue.unref(solid.BarsArrowUpIcon), {
                              class: "-ml-0.5 h-5 w-5 text-gray-400",
                              "aria-hidden": "true"
                            }),
                            vue.createVNode("span", null, "Filter")
                          ])
                        ])) : vue.createCommentVNode("", true)
                      ])
                    ]),
                    _: 1
                  })
                ])
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div>`);
    };
  }
};
const _sfc_setup$y = _sfc_main$y.setup;
_sfc_main$y.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/RankFilter.vue");
  return _sfc_setup$y ? _sfc_setup$y(props, ctx) : void 0;
};
const _sfc_main$x = {
  __name: "RankingPanel",
  __ssrInlineRender: true,
  props: {
    title: String,
    rank_filter: Array,
    rank: String,
    filter_type: String,
    char_id: String
  },
  setup(__props) {
    const props = __props;
    const ranking_filter = props.rank_filter;
    const rank = props.rank;
    const filter_type = props.filter_type;
    const char_id = props.char_id;
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<!--[-->`);
      _push(serverRenderer.ssrRenderComponent(vue.unref(inertiaVue3.Head), { title: __props.title }, null, _parent));
      _push(`<div class=""><div class="flex flex-col items-center h-full"><div class="max-w-screen-2xl w-full mx-auto mt-40">`);
      _push(serverRenderer.ssrRenderComponent(_sfc_main$y, {
        rank_types: vue.unref(ranking_filter),
        rank: vue.unref(rank),
        filter_type: vue.unref(filter_type),
        char_id: vue.unref(char_id)
      }, null, _parent));
      _push(`<div class="h-full mb-10"><div class="px-2 h-auto bg-[#191919] rounded-sm">`);
      serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</div></div></div></div></div><!--]-->`);
    };
  }
};
const _sfc_setup$x = _sfc_main$x.setup;
_sfc_main$x.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/RankingPanel.vue");
  return _sfc_setup$x ? _sfc_setup$x(props, ctx) : void 0;
};
var RankingTable_vue_vue_type_style_index_0_scoped_true_lang = "";
const _sfc_main$w = vue.defineComponent({
  components: {
    Pagination: _sfc_main$1x
  },
  props: {
    ranking: Object,
    rank_attributes: {
      type: Array,
      required: true
    }
  },
  setup(props) {
    vue.ref([]);
    function getOverallIndex(index) {
      return props.ranking.current_page * props.ranking.per_page - props.ranking.per_page + index + 1;
    }
    return {
      getOverallIndex
    };
  }
});
function _sfc_ssrRender$4(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<table${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "w-full border-collapse" }, _attrs))} data-v-e3295f92><thead class="shadow-md px-5 py-3 text-sm text-white border-b-1 border-b-[#3b87f6]" style="${serverRenderer.ssrRenderStyle({ "border-bottom-width": "1px" })}" data-v-e3295f92><tr data-v-e3295f92><th class="px-5 py-3 text-lg" data-v-e3295f92>Position</th><!--[-->`);
  serverRenderer.ssrRenderList(_ctx.rank_attributes, (rank_attribute, index) => {
    _push(`<th class="px-5 py-3 w-auto text-lg font-bold" data-v-e3295f92>${serverRenderer.ssrInterpolate(rank_attribute)}</th>`);
  });
  _push(`<!--]--></tr></thead><tbody class="text-center text-sm text-white" data-v-e3295f92>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "row", {}, null, _push, _parent);
  _push(`</tbody></table>`);
}
const _sfc_setup$w = _sfc_main$w.setup;
_sfc_main$w.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/RankingTable.vue");
  return _sfc_setup$w ? _sfc_setup$w(props, ctx) : void 0;
};
var RankingTable = /* @__PURE__ */ _export_sfc(_sfc_main$w, [["ssrRender", _sfc_ssrRender$4], ["__scopeId", "data-v-e3295f92"]]);
const __default__$j = {
  layout: RankingLayout
};
const _sfc_main$v = /* @__PURE__ */ Object.assign(__default__$j, {
  __name: "Alchimist",
  __ssrInlineRender: true,
  setup(__props) {
    const alchimists = inertiaVue3.usePage().props.value.alchimist;
    const url = vue.ref({});
    const rank_attributes = vue.ref([
      "Player",
      "Guild",
      "Level",
      "Online",
      "Points"
    ]);
    return (_ctx, _push, _parent, _attrs) => {
      const _component_font_awesome_icon = vue.resolveComponent("font-awesome-icon");
      _push(serverRenderer.ssrRenderComponent(_sfc_main$x, vue.mergeProps({ title: "Deaths Counter" }, _attrs), {
        default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(RankingTable, { rank_attributes: rank_attributes.value }, {
              row: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<!--[-->`);
                  serverRenderer.ssrRenderList(vue.unref(alchimists).data, (alchimist, index) => {
                    _push3(`<tr class="spaceUnder hover:bg-gray-800/40"${_scopeId2}>`);
                    if (index == 0) {
                      _push3(`<td class="px-5 py-3"${_scopeId2}>`);
                      _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                        class: "text-2xl p-1 w-9 text-yellow-500",
                        icon: "fa-solid fa-trophy"
                      }, null, _parent3, _scopeId2));
                      _push3(`</td>`);
                    } else {
                      _push3(`<!---->`);
                    }
                    if (index == 1) {
                      _push3(`<td class="px-5 py-3"${_scopeId2}>`);
                      _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                        class: "text-2xl p-1 w-9 text-silver-600",
                        icon: "fa-solid fa-trophy"
                      }, null, _parent3, _scopeId2));
                      _push3(`</td>`);
                    } else {
                      _push3(`<!---->`);
                    }
                    if (index == 2) {
                      _push3(`<td class="px-5 py-3"${_scopeId2}>`);
                      _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                        class: "text-2xl p-1 w-9 text-yellow-700",
                        icon: "fa-solid fa-trophy"
                      }, null, _parent3, _scopeId2));
                      _push3(`</td>`);
                    } else if (index > 2) {
                      _push3(`<td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(index + 1)}</td>`);
                    } else {
                      _push3(`<!---->`);
                    }
                    _push3(`<td class="px-5 py-3"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><img${serverRenderer.ssrRenderAttr("src", `/rochar/characterhead/${alchimist.name}`)} alt=""${_scopeId2}><a href=""${_scopeId2}><span class="text-[#3b87f6]"${_scopeId2}>${serverRenderer.ssrInterpolate(alchimist.char_name)}</span> (${serverRenderer.ssrInterpolate(vue.unref(get_job_name)(alchimist.char_class))}) </a></div></td><td class="px-5 py-3"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><div class="flex items-center"${_scopeId2}><img class="mr-2"${serverRenderer.ssrRenderAttr("src", `/${url.value[alchimist.guild_id]} `)} alt=""${_scopeId2}> ${serverRenderer.ssrInterpolate(alchimist.guild_name)}</div></div></td><td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(alchimist.base_level)} / ${serverRenderer.ssrInterpolate(alchimist.job_level)}</td><td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(isOnline)(alchimist.online))}</td><td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(alchimist.fame))}</td></tr>`);
                  });
                  _push3(`<!--]-->`);
                } else {
                  return [
                    (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(vue.unref(alchimists).data, (alchimist, index) => {
                      return vue.openBlock(), vue.createBlock("tr", {
                        class: "spaceUnder hover:bg-gray-800/40",
                        key: index
                      }, [
                        index == 0 ? (vue.openBlock(), vue.createBlock("td", {
                          key: 0,
                          class: "px-5 py-3"
                        }, [
                          vue.createVNode(_component_font_awesome_icon, {
                            class: "text-2xl p-1 w-9 text-yellow-500",
                            icon: "fa-solid fa-trophy"
                          })
                        ])) : vue.createCommentVNode("", true),
                        index == 1 ? (vue.openBlock(), vue.createBlock("td", {
                          key: 1,
                          class: "px-5 py-3"
                        }, [
                          vue.createVNode(_component_font_awesome_icon, {
                            class: "text-2xl p-1 w-9 text-silver-600",
                            icon: "fa-solid fa-trophy"
                          })
                        ])) : vue.createCommentVNode("", true),
                        index == 2 ? (vue.openBlock(), vue.createBlock("td", {
                          key: 2,
                          class: "px-5 py-3"
                        }, [
                          vue.createVNode(_component_font_awesome_icon, {
                            class: "text-2xl p-1 w-9 text-yellow-700",
                            icon: "fa-solid fa-trophy"
                          })
                        ])) : index > 2 ? (vue.openBlock(), vue.createBlock("td", {
                          key: 3,
                          class: "px-5 py-3"
                        }, vue.toDisplayString(index + 1), 1)) : vue.createCommentVNode("", true),
                        vue.createVNode("td", { class: "px-5 py-3" }, [
                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                            vue.createVNode("img", {
                              src: `/rochar/characterhead/${alchimist.name}`,
                              alt: ""
                            }, null, 8, ["src"]),
                            vue.createVNode("a", { href: "" }, [
                              vue.createVNode("span", { class: "text-[#3b87f6]" }, vue.toDisplayString(alchimist.char_name), 1),
                              vue.createTextVNode(" (" + vue.toDisplayString(vue.unref(get_job_name)(alchimist.char_class)) + ") ", 1)
                            ])
                          ])
                        ]),
                        vue.createVNode("td", { class: "px-5 py-3" }, [
                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                            vue.createVNode("div", { class: "flex items-center" }, [
                              vue.createVNode("img", {
                                class: "mr-2",
                                src: `/${url.value[alchimist.guild_id]} `,
                                alt: ""
                              }, null, 8, ["src"]),
                              vue.createTextVNode(" " + vue.toDisplayString(alchimist.guild_name), 1)
                            ])
                          ])
                        ]),
                        vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(alchimist.base_level) + " / " + vue.toDisplayString(alchimist.job_level), 1),
                        vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(isOnline)(alchimist.online)), 1),
                        vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(alchimist.fame)), 1)
                      ]);
                    }), 128))
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_sfc_main$1x, {
              class: "p-3",
              links: vue.unref(alchimists).links
            }, null, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(RankingTable, { rank_attributes: rank_attributes.value }, {
                row: vue.withCtx(() => [
                  (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(vue.unref(alchimists).data, (alchimist, index) => {
                    return vue.openBlock(), vue.createBlock("tr", {
                      class: "spaceUnder hover:bg-gray-800/40",
                      key: index
                    }, [
                      index == 0 ? (vue.openBlock(), vue.createBlock("td", {
                        key: 0,
                        class: "px-5 py-3"
                      }, [
                        vue.createVNode(_component_font_awesome_icon, {
                          class: "text-2xl p-1 w-9 text-yellow-500",
                          icon: "fa-solid fa-trophy"
                        })
                      ])) : vue.createCommentVNode("", true),
                      index == 1 ? (vue.openBlock(), vue.createBlock("td", {
                        key: 1,
                        class: "px-5 py-3"
                      }, [
                        vue.createVNode(_component_font_awesome_icon, {
                          class: "text-2xl p-1 w-9 text-silver-600",
                          icon: "fa-solid fa-trophy"
                        })
                      ])) : vue.createCommentVNode("", true),
                      index == 2 ? (vue.openBlock(), vue.createBlock("td", {
                        key: 2,
                        class: "px-5 py-3"
                      }, [
                        vue.createVNode(_component_font_awesome_icon, {
                          class: "text-2xl p-1 w-9 text-yellow-700",
                          icon: "fa-solid fa-trophy"
                        })
                      ])) : index > 2 ? (vue.openBlock(), vue.createBlock("td", {
                        key: 3,
                        class: "px-5 py-3"
                      }, vue.toDisplayString(index + 1), 1)) : vue.createCommentVNode("", true),
                      vue.createVNode("td", { class: "px-5 py-3" }, [
                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                          vue.createVNode("img", {
                            src: `/rochar/characterhead/${alchimist.name}`,
                            alt: ""
                          }, null, 8, ["src"]),
                          vue.createVNode("a", { href: "" }, [
                            vue.createVNode("span", { class: "text-[#3b87f6]" }, vue.toDisplayString(alchimist.char_name), 1),
                            vue.createTextVNode(" (" + vue.toDisplayString(vue.unref(get_job_name)(alchimist.char_class)) + ") ", 1)
                          ])
                        ])
                      ]),
                      vue.createVNode("td", { class: "px-5 py-3" }, [
                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                          vue.createVNode("div", { class: "flex items-center" }, [
                            vue.createVNode("img", {
                              class: "mr-2",
                              src: `/${url.value[alchimist.guild_id]} `,
                              alt: ""
                            }, null, 8, ["src"]),
                            vue.createTextVNode(" " + vue.toDisplayString(alchimist.guild_name), 1)
                          ])
                        ])
                      ]),
                      vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(alchimist.base_level) + " / " + vue.toDisplayString(alchimist.job_level), 1),
                      vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(isOnline)(alchimist.online)), 1),
                      vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(alchimist.fame)), 1)
                    ]);
                  }), 128))
                ]),
                _: 1
              }, 8, ["rank_attributes"]),
              vue.createVNode(_sfc_main$1x, {
                class: "p-3",
                links: vue.unref(alchimists).links
              }, null, 8, ["links"])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
});
const _sfc_setup$v = _sfc_main$v.setup;
_sfc_main$v.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Rankings/Alchimist.vue");
  return _sfc_setup$v ? _sfc_setup$v(props, ctx) : void 0;
};
var Alchimist = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": _sfc_main$v
}, Symbol.toStringTag, { value: "Module" }));
const __default__$i = vue.defineComponent({
  layout: RankingLayout
});
const _sfc_main$u = /* @__PURE__ */ Object.assign(__default__$i, {
  __name: "Battleground",
  __ssrInlineRender: true,
  setup(__props) {
    const url = vue.ref({});
    const bg_data = vue.computed(() => inertiaVue3.usePage().props.value.bg_data);
    vue.ref(false);
    const rank_attributes = vue.ref([
      "Player",
      "Guild",
      "Kill",
      "Death",
      "Country",
      "Score"
    ]);
    const rank_types = vue.ref([
      { id: "GW", name: "Game Wins" },
      { id: "GL", name: "Game Lost" },
      { id: "GT", name: "Game Tie" },
      { id: "KC", name: "Kill Counter" },
      { id: "DC", name: "Die Counter" },
      { id: "DD", name: "Damage Done" },
      { id: "DR", name: "Damage Received" },
      { id: "ACC", name: "Acid Demonstration Casted" },
      { id: "TGH", name: "Good Healing" },
      { id: "TWH", name: "Wrong Healing" },
      { id: "GSS", name: "Good Support" },
      { id: "WSS", name: "Wrong Support" },
      { id: "HPP", name: "HP Potions" },
      { id: "SPP", name: "SP Potions" },
      { id: "YGU", name: "Yellow Gemstone" },
      { id: "RGU", name: "Red Gemstone" },
      { id: "BGU", name: "Blue Gemstone" },
      { id: "AU", name: "Arrows Used" }
    ]);
    function show_info(index) {
      const item = document.getElementById("show_info_id_" + index);
      if (item.classList.contains("hidden")) {
        item.classList.remove("hidden");
        item.setAttribute("class", "visible");
      } else {
        item.classList.remove("visible");
        item.setAttribute("class", "hidden");
      }
    }
    vue.onMounted(() => {
      bg_data.value.data.forEach((bg_data2) => {
        axios.get(`/api/${bg_data2.guild_id}/emblem`).then((res) => {
          if (res.data.url === "X")
            return;
          url.value[bg_data2.guild_id] = res.data.url;
        });
      });
    });
    return (_ctx, _push, _parent, _attrs) => {
      const _component_font_awesome_icon = vue.resolveComponent("font-awesome-icon");
      _push(serverRenderer.ssrRenderComponent(_sfc_main$x, vue.mergeProps({
        title: "Battleground",
        rank_filter: rank_types.value,
        rank: "battleground",
        filter_type: "ranking"
      }, _attrs), {
        default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(RankingTable, { rank_attributes: rank_attributes.value }, {
              row: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<!--[-->`);
                  serverRenderer.ssrRenderList(vue.unref(bg_data).data, (bg, index) => {
                    var _a2;
                    _push3(`<!--[--><tr class="spaceUnder hover:bg-gray-800/40 cursor-pointer hover:transition hover:duration-150"${_scopeId2}>`);
                    if (index == 0) {
                      _push3(`<td class="px-5 py-3 w-1/12"${_scopeId2}>`);
                      _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                        class: "text-2xl hover:text-yellow-600",
                        icon: "fa-solid fa-trophy"
                      }, null, _parent3, _scopeId2));
                      _push3(`</td>`);
                    } else {
                      _push3(`<td class="px-5 py-3 w-1/12"${_scopeId2}>${serverRenderer.ssrInterpolate(index + 1)}</td>`);
                    }
                    _push3(`<td class="px-5 py-3 w-1/6"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><div class="flex justify-center items-center"${_scopeId2}><img${serverRenderer.ssrRenderAttr("src", `/rochar/characterhead/${bg.name}`)} alt=""${_scopeId2}><div${_scopeId2}><span class="text-[#04aaff]"${_scopeId2}>${serverRenderer.ssrInterpolate(bg.name)}</span> (${serverRenderer.ssrInterpolate(vue.unref(get_job_name)(bg.class))}) </div></div></div></td><td class="px-5 py-3 w-1/6"${_scopeId2}><div class="flex justify-center items-center"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><img class="mr-2"${serverRenderer.ssrRenderAttr("src", `/${url.value[bg.guild_id]} `)} alt=""${_scopeId2}> ${serverRenderer.ssrInterpolate((_a2 = bg.gname) != null ? _a2 : "No guild \u274C")}</div></div></td><td class="px-5 py-3 w-1/6"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(bg.kill_count))}</td><td class="px-5 py-3 w-1/6"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(bg.death_count))}</td><td class="px-5 py-3"${_scopeId2}><div class="flex justify-center items-center"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}>`);
                    _push3(serverRenderer.ssrRenderComponent(vue.unref(CountryFlag__default["default"]), {
                      country: bg.country,
                      size: "normal"
                    }, null, _parent3, _scopeId2));
                    _push3(`</div></div></td><td class="px-5 py-3 w-1/6"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(bg.score))}</td></tr><tr${serverRenderer.ssrRenderAttr("id", "show_info_id_" + index)} class="hidden spaceUnder"${_scopeId2}><td colspan="9"${_scopeId2}><div class="flex w-full"${_scopeId2}><div class="w-1/5 py-6"${_scopeId2}><div class="flex flex-col items-center h-full justify-center"${_scopeId2}><div class="flex justify-center"${_scopeId2}><img class=""${serverRenderer.ssrRenderAttr("src", `/rochar/character/${bg.name}`)} alt=""${_scopeId2}></div><p${_scopeId2}><span class="font-bold"${_scopeId2}>Playtime:</span> ${serverRenderer.ssrInterpolate(vue.unref(secondsToDh)(bg.playtime))}</p><p${_scopeId2}><span class="font-bold"${_scopeId2}>Score:</span> ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(bg.score))}</p><div class="flex w-full justify-center"${_scopeId2}><img src="/img/viewprofile.png" alt="" class="mr-2"${_scopeId2}><a class="text-[#04aaff]"${serverRenderer.ssrRenderAttr(
                      "href",
                      _ctx.route(
                        "bg.profile",
                        bg.char_id
                      )
                    )}${_scopeId2}>Player Profile</a></div></div></div><div class="w-4/5 grid grid-row-2"${_scopeId2}><div class="flex w-full"${_scopeId2}><div class="w-1/2 p-2"${_scopeId2}><table class="w-full"${_scopeId2}><thead class="bg-[#0d0d0d]"${_scopeId2}><th colspan="3" class="p-4"${_scopeId2}> Usable items </th></thead><tbody${_scopeId2}><tr class="spaceUnder"${_scopeId2}><td class="w-1/3 p-3"${_scopeId2}><div class="flex justify-center"${_scopeId2}><img src="/img/item/522.png" alt="" class="mr-2"${_scopeId2}>HP: ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.hp_heal_potions
                    ))}</div></td><td class="w-1/3 p-3"${_scopeId2}><div class="flex justify-center"${_scopeId2}><img src="/img/item/505.png" alt="" class="mr-2"${_scopeId2}>SP: ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.sp_heal_potions
                    ))}</div></td><td class="w-1/3 p-3"${_scopeId2}><div class="flex justify-center"${_scopeId2}><img src="/img/item/676.png" alt="" class="mr-2"${_scopeId2}>Zeny: ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.zeny_used
                    ))}</div></td></tr><tr class="spaceUnder"${_scopeId2}><td class="w-1/3 p-3"${_scopeId2}><div class="flex justify-center"${_scopeId2}><img src="/img/item/716.png" alt="" class="mr-2"${_scopeId2}>Gems: ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.red_gemstones
                    ))}</div></td><td class="w-1/3"${_scopeId2}><div class="flex justify-center"${_scopeId2}><img src="/img/item/717.png" alt="" class="mr-2"${_scopeId2}>Gems: ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.blue_gemstones
                    ))}</div></td><td class="w-1/3 p-3"${_scopeId2}><div class="flex justify-center"${_scopeId2}><img src="/img/item/715.png" alt="" class="mr-2"${_scopeId2}>Gems: ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.yellow_gemstones
                    ))}</div></td></tr><tr class="spaceUnder"${_scopeId2}><td class="w-1/3 p-3"${_scopeId2}><div class="flex justify-center"${_scopeId2}><img src="/img/item/1752.png" alt="" class="mr-2"${_scopeId2}>Arrows: ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.ammo_used
                    ))}</div></td><td class="w-1/3 p-3"${_scopeId2}><div class="flex justify-center"${_scopeId2}><img src="/img/item/7136.png" alt="" class="mr-2"${_scopeId2}>Bottles: ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.acid_demostration
                    ))}</div></td><td class="w-1/3 p-3"${_scopeId2}><div class="flex justify-center"${_scopeId2}><img src="/img/item/678.png" alt="" class="mr-2"${_scopeId2}>Bottles: ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.poison_bottles
                    ))}</div></td></tr></tbody></table></div><div class="w-1/2 p-2 flex"${_scopeId2}><table class="w-1/2 mr-2"${_scopeId2}><thead class="bg-[#0d0d0d]"${_scopeId2}><th colspan="3" class="p-4"${_scopeId2}> Damage vs Player </th></thead><tbody${_scopeId2}><tr class="spaceUnder"${_scopeId2}><td class="w-1/3 p-3"${_scopeId2}><div class="flex justify-center"${_scopeId2}><img src="/img/item/1228.png" alt="" class="mr-2"${_scopeId2}> Best: ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.top_damage
                    ))}</div></td></tr><tr class="spaceUnder"${_scopeId2}><td class="w-1/3 p-3"${_scopeId2}><div class="flex justify-center"${_scopeId2}><img src="/img/item/1281.png" alt="" class="mr-2"${_scopeId2}> Done: ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.damage_done
                    ))}</div></td></tr><tr class="spaceUnder"${_scopeId2}><td class="w-1/3 p-3"${_scopeId2}><div class="flex justify-center"${_scopeId2}><img src="/img/item/2115.png" alt="" class="mr-2"${_scopeId2}> Recv: ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.damage_received
                    ))}</div></td></tr></tbody></table><table class="w-1/2"${_scopeId2}><thead class="bg-[#0d0d0d]"${_scopeId2}><th colspan="3" class="p-4"${_scopeId2}> War Data </th></thead><tbody${_scopeId2}><tr class="spaceUnder"${_scopeId2}><td class="w-1/3 p-3"${_scopeId2}><div class="flex justify-center"${_scopeId2}><img src="/img/item/7005.png" alt="" class="mr-2"${_scopeId2}> Kills: ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.kill_count
                    ))}</div></td></tr><tr class="spaceUnder"${_scopeId2}><td class="w-1/3 p-3"${_scopeId2}><div class="flex justify-center"${_scopeId2}><img src="/img/item/7024.png" alt="" class="mr-2"${_scopeId2}> Deaths: ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.death_count
                    ))}</div></td></tr><tr class="spaceUnder"${_scopeId2}><td class="w-1/3 p-3"${_scopeId2}><div class="flex justify-center"${_scopeId2}><img src="/img/item/5431.png" alt="" class="mr-2"${_scopeId2}> Desertor: ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.deserter
                    ))}</div></td></tr></tbody></table></div></div><div class="flex w-full"${_scopeId2}><div class="w-1/2 p-2"${_scopeId2}><table class="w-full"${_scopeId2}><thead class="bg-[#0d0d0d] border-b"${_scopeId2}><th colspan="4" class="p-4"${_scopeId2}> General Standings </th></thead><thead class="bg-[#0d0d0d]"${_scopeId2}><th class="w-1/5 p-2"${_scopeId2}> Option </th><th class="p-2"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><img class="mr-2" src="/img/item/7427.gif" alt=""${_scopeId2}> Won </div></th><th class="p-2"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><img class="mr-2" src="/img/item/7428.gif" alt=""${_scopeId2}> Tie </div></th><th class="p-2"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><img class="mr-2" src="/img/item/7426.gif" alt=""${_scopeId2}> Lost </div></th></thead><tbody${_scopeId2}><tr class="border-b"${_scopeId2}><td class="p-3"${_scopeId2}> Total </td><td${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.win
                    ))}</td><td class="p-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.tie
                    ))}</td><td${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.lost
                    ))}</td></tr><tr class="spaceUnder"${_scopeId2}><td class="p-3"${_scopeId2}> As Team Leader </td><td class="p-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.leader_win
                    ))}</td><td class="p-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.leader_tie
                    ))}</td><td class="p-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.leader_lost
                    ))}</td></tr></tbody></table></div><div class="w-1/2 p-2"${_scopeId2}><table class="w-full"${_scopeId2}><thead class="bg-[#0d0d0d] border-b"${_scopeId2}><th class="p-4" colspan="3"${_scopeId2}> Support Skills </th></thead><thead class="bg-[#0d0d0d]"${_scopeId2}><th class="p-2"${_scopeId2}>Option</th><th class="p-2"${_scopeId2}> Total Skills </th><th class="p-2"${_scopeId2}> Total Healing </th></thead><tbody${_scopeId2}><tr class="border-b"${_scopeId2}><td class="p-3"${_scopeId2}><div class="flex justify-center"${_scopeId2}><img src="/img/item/2273.png" alt="" class="mr-2"${_scopeId2}> Correct </div></td><td class="p-3"${_scopeId2}>${serverRenderer.ssrInterpolate(bg.support_skills_used)}</td><td class="p-3"${_scopeId2}>${serverRenderer.ssrInterpolate(bg.healing_done)}</td></tr><tr class="spaceUnder"${_scopeId2}><td class="p-3"${_scopeId2}><div class="flex justify-center"${_scopeId2}><img src="/img/item/5272.png" alt="" class="mr-2"${_scopeId2}> Erroneous </div></td><td${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.wrong_support_skills_used
                    ))}</td><td class="p-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.wrong_healing_done
                    ))}</td></tr></tbody></table></div></div><div class="flex w-full"${_scopeId2}><div class="w-1/2 p-2"${_scopeId2}><table class="w-full"${_scopeId2}><thead class="bg-[#0d0d0d] border-b"${_scopeId2}><th colspan="5" class="p-4"${_scopeId2}> Team vs Team </th></thead><thead class="bg-[#0d0d0d]"${_scopeId2}><th class="p-2"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><img class="mr-2" src="/img/item/7253.gif" alt=""${_scopeId2}> Wins </div></th><th class="p-2"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><img class="mr-2" src="/img/item/7005.png" alt=""${_scopeId2}> Deaths </div></th><th class="p-2"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><img class="mr-2" src="/img/item/7427.gif" alt=""${_scopeId2}> Wins </div></th><th class="p-2"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><img class="mr-2" src="/img/item/7426.gif" alt=""${_scopeId2}> Lost </div></th><th class="p-2"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><img class="mr-2" src="/img/item/7428.gif" alt=""${_scopeId2}> Tie </div></th></thead><tbody${_scopeId2}><tr class="border-b"${_scopeId2}><td class="p-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.tvt_kills
                    ))}</td><td${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.tvt_deaths
                    ))}</td><td class="p-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.tvt_wins
                    ))}</td><td${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.tvt_tie
                    ))}</td><td${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.tvt_lost
                    ))}</td></tr></tbody></table></div><div class="w-1/2 p-2"${_scopeId2}><table class="w-full"${_scopeId2}><thead class="bg-[#0d0d0d] border-b"${_scopeId2}><th class="p-4" colspan="6"${_scopeId2}> Conquest </th></thead><thead class="bg-[#0d0d0d]"${_scopeId2}><th class="w-1/5 p-2"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><img class="mr-2" src="/img/item/714.png" alt=""${_scopeId2}> Emp. Kills </div></th><th class="p-2"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><img class="mr-2" src="/img/item/14287.gif" alt=""${_scopeId2}> Bar. Kills </div></th><th class="p-2"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><img class="mr-2" src="/img/item/7839.gif" alt=""${_scopeId2}> G.Stone Kills </div></th><th class="p-2"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><img class="mr-2" src="/img/item/7427.gif" alt=""${_scopeId2}> Bar. Kills </div></th><th class="p-2"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><img class="mr-2" src="/img/item/7426.gif" alt=""${_scopeId2}> Lost </div></th></thead><tbody${_scopeId2}><tr class="border-b"${_scopeId2}><td class="p-3"${_scopeId2}><div class="flex justify-center"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.cq_emperium_kill
                    ))}</div></td><td class="p-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.cq_barricade_kill
                    ))}</td><td class="p-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.cq_gstone_kill
                    ))}</td><td class="p-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.cq_wins
                    ))}</td><td class="p-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.cq_lost
                    ))}</td></tr></tbody></table></div></div><div class="flex w-full"${_scopeId2}><div class="w-1/2 p-2"${_scopeId2}><table class="w-full"${_scopeId2}><thead class="bg-[#0d0d0d] border-b"${_scopeId2}><th colspan="3" class="p-4"${_scopeId2}> Battle Zone </th></thead><thead class="bg-[#0d0d0d]"${_scopeId2}><th class="w-1/5 p-2"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><img class="mr-2" src="/img/item/7427.gif" alt=""${_scopeId2}> Wins </div></th><th class="p-2"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><img class="mr-2" src="/img/item/7428.gif" alt=""${_scopeId2}> Tie </div></th><th class="p-2"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><img class="mr-2" src="/img/item/7426.gif" alt=""${_scopeId2}> Lost </div></th></thead><tbody${_scopeId2}><tr class="border-b"${_scopeId2}><td class="p-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.bz_wins
                    ))}</td><td${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.bz_tie
                    ))}</td><td class="p-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.bz_lost
                    ))}</td></tr></tbody></table></div><div class="w-1/2 p-2"${_scopeId2}><table class="w-full"${_scopeId2}><thead class="bg-[#0d0d0d] border-b"${_scopeId2}><th class="p-4" colspan="5"${_scopeId2}> Destroy the Emperium </th></thead><thead class="bg-[#0d0d0d]"${_scopeId2}><th class="p-2"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><img class="mr-2" src="/img/item/714.png" alt=""${_scopeId2}> Emp.Kills </div></th><th class="p-2"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><img class="mr-2" src="/img/item/7427.gif" alt=""${_scopeId2}> Wins </div></th><th class="p-2"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><img class="mr-2" src="/img/item/7428.gif" alt=""${_scopeId2}> Tie </div></th><th class="p-2"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><img class="mr-2" src="/img/item/7426.gif" alt=""${_scopeId2}> Lost </div></th></thead><tbody${_scopeId2}><tr class="border-b"${_scopeId2}><td class="p-3"${_scopeId2}><div class="flex justify-center"${_scopeId2}><img src="/img/item/2273.png" alt="" class="mr-2"${_scopeId2}> ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.dte_emperium_kill
                    ))}</div></td><td class="p-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.dte_wins
                    ))}</td><td class="p-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.dte_tie
                    ))}</td><td class="p-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.dte_lost
                    ))}</td></tr></tbody></table></div></div><div class="flex w-full"${_scopeId2}><div class="w-full p-2"${_scopeId2}><table class="w-full"${_scopeId2}><thead class="bg-[#0d0d0d] border-b"${_scopeId2}><th colspan="7" class="p-4"${_scopeId2}> Castle Siege </th></thead><thead class="bg-[#0d0d0d]"${_scopeId2}><th class="p-2"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><img class="mr-2" src="/img/item/714.png" alt=""${_scopeId2}> Emp. Kills </div></th><th class="p-2"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><img class="mr-2" src="/img/item/14287.gif" alt=""${_scopeId2}> Bar. Kills </div></th><th class="p-2"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><img class="mr-2" src="/img/item/7839.gif" alt=""${_scopeId2}> G.Stone Kills </div></th><th class="p-2"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><img class="mr-2" src="/img/item/7427.gif" alt=""${_scopeId2}> Win </div></th><th class="p-2"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><img class="mr-2" src="/img/item/7428.gif" alt=""${_scopeId2}> Tie </div></th><th class="p-2"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><img class="mr-2" src="/img/item/7426.gif" alt=""${_scopeId2}> Lost </div></th></thead><tbody${_scopeId2}><tr class=""${_scopeId2}><td class="p-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.cs_emperium_kill
                    ))}</td><td${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.cs_barricade_kill
                    ))}</td><td${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.cs_gstone_kill
                    ))}</td><td class="p-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.cs_wins
                    ))}</td><td${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.cs_tie
                    ))}</td><td${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      bg.cs_lost
                    ))}</td></tr></tbody></table></div></div></div></div></td></tr><!--]-->`);
                  });
                  _push3(`<!--]-->`);
                } else {
                  return [
                    (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(vue.unref(bg_data).data, (bg, index) => {
                      var _a2;
                      return vue.openBlock(), vue.createBlock(vue.Fragment, { key: index }, [
                        vue.createVNode("tr", {
                          class: "spaceUnder hover:bg-gray-800/40 cursor-pointer hover:transition hover:duration-150",
                          onClick: ($event) => show_info(index)
                        }, [
                          index == 0 ? (vue.openBlock(), vue.createBlock("td", {
                            key: 0,
                            class: "px-5 py-3 w-1/12"
                          }, [
                            vue.createVNode(_component_font_awesome_icon, {
                              class: "text-2xl hover:text-yellow-600",
                              icon: "fa-solid fa-trophy"
                            })
                          ])) : (vue.openBlock(), vue.createBlock("td", {
                            key: 1,
                            class: "px-5 py-3 w-1/12"
                          }, vue.toDisplayString(index + 1), 1)),
                          vue.createVNode("td", { class: "px-5 py-3 w-1/6" }, [
                            vue.createVNode("div", { class: "flex items-center justify-center" }, [
                              vue.createVNode("div", { class: "flex justify-center items-center" }, [
                                vue.createVNode("img", {
                                  src: `/rochar/characterhead/${bg.name}`,
                                  alt: ""
                                }, null, 8, ["src"]),
                                vue.createVNode("div", null, [
                                  vue.createVNode("span", { class: "text-[#04aaff]" }, vue.toDisplayString(bg.name), 1),
                                  vue.createTextVNode(" (" + vue.toDisplayString(vue.unref(get_job_name)(bg.class)) + ") ", 1)
                                ])
                              ])
                            ])
                          ]),
                          vue.createVNode("td", { class: "px-5 py-3 w-1/6" }, [
                            vue.createVNode("div", { class: "flex justify-center items-center" }, [
                              vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                vue.createVNode("img", {
                                  class: "mr-2",
                                  src: `/${url.value[bg.guild_id]} `,
                                  alt: ""
                                }, null, 8, ["src"]),
                                vue.createTextVNode(" " + vue.toDisplayString((_a2 = bg.gname) != null ? _a2 : "No guild \u274C"), 1)
                              ])
                            ])
                          ]),
                          vue.createVNode("td", { class: "px-5 py-3 w-1/6" }, vue.toDisplayString(vue.unref(getFormatNumber)(bg.kill_count)), 1),
                          vue.createVNode("td", { class: "px-5 py-3 w-1/6" }, vue.toDisplayString(vue.unref(getFormatNumber)(bg.death_count)), 1),
                          vue.createVNode("td", { class: "px-5 py-3" }, [
                            vue.createVNode("div", { class: "flex justify-center items-center" }, [
                              vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                vue.createVNode(vue.unref(CountryFlag__default["default"]), {
                                  country: bg.country,
                                  size: "normal"
                                }, null, 8, ["country"])
                              ])
                            ])
                          ]),
                          vue.createVNode("td", { class: "px-5 py-3 w-1/6" }, vue.toDisplayString(vue.unref(getFormatNumber)(bg.score)), 1)
                        ], 8, ["onClick"]),
                        vue.createVNode("tr", {
                          id: "show_info_id_" + index,
                          class: "hidden spaceUnder"
                        }, [
                          vue.createVNode("td", { colspan: "9" }, [
                            vue.createVNode("div", { class: "flex w-full" }, [
                              vue.createVNode("div", { class: "w-1/5 py-6" }, [
                                vue.createVNode("div", { class: "flex flex-col items-center h-full justify-center" }, [
                                  vue.createVNode("div", { class: "flex justify-center" }, [
                                    vue.createVNode("img", {
                                      class: "",
                                      src: `/rochar/character/${bg.name}`,
                                      alt: ""
                                    }, null, 8, ["src"])
                                  ]),
                                  vue.createVNode("p", null, [
                                    vue.createVNode("span", { class: "font-bold" }, "Playtime:"),
                                    vue.createTextVNode(" " + vue.toDisplayString(vue.unref(secondsToDh)(bg.playtime)), 1)
                                  ]),
                                  vue.createVNode("p", null, [
                                    vue.createVNode("span", { class: "font-bold" }, "Score:"),
                                    vue.createTextVNode(" " + vue.toDisplayString(vue.unref(getFormatNumber)(bg.score)), 1)
                                  ]),
                                  vue.createVNode("div", { class: "flex w-full justify-center" }, [
                                    vue.createVNode("img", {
                                      src: "/img/viewprofile.png",
                                      alt: "",
                                      class: "mr-2"
                                    }),
                                    vue.createVNode("a", {
                                      class: "text-[#04aaff]",
                                      href: _ctx.route(
                                        "bg.profile",
                                        bg.char_id
                                      )
                                    }, "Player Profile", 8, ["href"])
                                  ])
                                ])
                              ]),
                              vue.createVNode("div", { class: "w-4/5 grid grid-row-2" }, [
                                vue.createVNode("div", { class: "flex w-full" }, [
                                  vue.createVNode("div", { class: "w-1/2 p-2" }, [
                                    vue.createVNode("table", { class: "w-full" }, [
                                      vue.createVNode("thead", { class: "bg-[#0d0d0d]" }, [
                                        vue.createVNode("th", {
                                          colspan: "3",
                                          class: "p-4"
                                        }, " Usable items ")
                                      ]),
                                      vue.createVNode("tbody", null, [
                                        vue.createVNode("tr", { class: "spaceUnder" }, [
                                          vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                            vue.createVNode("div", { class: "flex justify-center" }, [
                                              vue.createVNode("img", {
                                                src: "/img/item/522.png",
                                                alt: "",
                                                class: "mr-2"
                                              }),
                                              vue.createTextVNode("HP: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                bg.hp_heal_potions
                                              )), 1)
                                            ])
                                          ]),
                                          vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                            vue.createVNode("div", { class: "flex justify-center" }, [
                                              vue.createVNode("img", {
                                                src: "/img/item/505.png",
                                                alt: "",
                                                class: "mr-2"
                                              }),
                                              vue.createTextVNode("SP: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                bg.sp_heal_potions
                                              )), 1)
                                            ])
                                          ]),
                                          vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                            vue.createVNode("div", { class: "flex justify-center" }, [
                                              vue.createVNode("img", {
                                                src: "/img/item/676.png",
                                                alt: "",
                                                class: "mr-2"
                                              }),
                                              vue.createTextVNode("Zeny: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                bg.zeny_used
                                              )), 1)
                                            ])
                                          ])
                                        ]),
                                        vue.createVNode("tr", { class: "spaceUnder" }, [
                                          vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                            vue.createVNode("div", { class: "flex justify-center" }, [
                                              vue.createVNode("img", {
                                                src: "/img/item/716.png",
                                                alt: "",
                                                class: "mr-2"
                                              }),
                                              vue.createTextVNode("Gems: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                bg.red_gemstones
                                              )), 1)
                                            ])
                                          ]),
                                          vue.createVNode("td", { class: "w-1/3" }, [
                                            vue.createVNode("div", { class: "flex justify-center" }, [
                                              vue.createVNode("img", {
                                                src: "/img/item/717.png",
                                                alt: "",
                                                class: "mr-2"
                                              }),
                                              vue.createTextVNode("Gems: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                bg.blue_gemstones
                                              )), 1)
                                            ])
                                          ]),
                                          vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                            vue.createVNode("div", { class: "flex justify-center" }, [
                                              vue.createVNode("img", {
                                                src: "/img/item/715.png",
                                                alt: "",
                                                class: "mr-2"
                                              }),
                                              vue.createTextVNode("Gems: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                bg.yellow_gemstones
                                              )), 1)
                                            ])
                                          ])
                                        ]),
                                        vue.createVNode("tr", { class: "spaceUnder" }, [
                                          vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                            vue.createVNode("div", { class: "flex justify-center" }, [
                                              vue.createVNode("img", {
                                                src: "/img/item/1752.png",
                                                alt: "",
                                                class: "mr-2"
                                              }),
                                              vue.createTextVNode("Arrows: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                bg.ammo_used
                                              )), 1)
                                            ])
                                          ]),
                                          vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                            vue.createVNode("div", { class: "flex justify-center" }, [
                                              vue.createVNode("img", {
                                                src: "/img/item/7136.png",
                                                alt: "",
                                                class: "mr-2"
                                              }),
                                              vue.createTextVNode("Bottles: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                bg.acid_demostration
                                              )), 1)
                                            ])
                                          ]),
                                          vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                            vue.createVNode("div", { class: "flex justify-center" }, [
                                              vue.createVNode("img", {
                                                src: "/img/item/678.png",
                                                alt: "",
                                                class: "mr-2"
                                              }),
                                              vue.createTextVNode("Bottles: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                bg.poison_bottles
                                              )), 1)
                                            ])
                                          ])
                                        ])
                                      ])
                                    ])
                                  ]),
                                  vue.createVNode("div", { class: "w-1/2 p-2 flex" }, [
                                    vue.createVNode("table", { class: "w-1/2 mr-2" }, [
                                      vue.createVNode("thead", { class: "bg-[#0d0d0d]" }, [
                                        vue.createVNode("th", {
                                          colspan: "3",
                                          class: "p-4"
                                        }, " Damage vs Player ")
                                      ]),
                                      vue.createVNode("tbody", null, [
                                        vue.createVNode("tr", { class: "spaceUnder" }, [
                                          vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                            vue.createVNode("div", { class: "flex justify-center" }, [
                                              vue.createVNode("img", {
                                                src: "/img/item/1228.png",
                                                alt: "",
                                                class: "mr-2"
                                              }),
                                              vue.createTextVNode(" Best: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                bg.top_damage
                                              )), 1)
                                            ])
                                          ])
                                        ]),
                                        vue.createVNode("tr", { class: "spaceUnder" }, [
                                          vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                            vue.createVNode("div", { class: "flex justify-center" }, [
                                              vue.createVNode("img", {
                                                src: "/img/item/1281.png",
                                                alt: "",
                                                class: "mr-2"
                                              }),
                                              vue.createTextVNode(" Done: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                bg.damage_done
                                              )), 1)
                                            ])
                                          ])
                                        ]),
                                        vue.createVNode("tr", { class: "spaceUnder" }, [
                                          vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                            vue.createVNode("div", { class: "flex justify-center" }, [
                                              vue.createVNode("img", {
                                                src: "/img/item/2115.png",
                                                alt: "",
                                                class: "mr-2"
                                              }),
                                              vue.createTextVNode(" Recv: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                bg.damage_received
                                              )), 1)
                                            ])
                                          ])
                                        ])
                                      ])
                                    ]),
                                    vue.createVNode("table", { class: "w-1/2" }, [
                                      vue.createVNode("thead", { class: "bg-[#0d0d0d]" }, [
                                        vue.createVNode("th", {
                                          colspan: "3",
                                          class: "p-4"
                                        }, " War Data ")
                                      ]),
                                      vue.createVNode("tbody", null, [
                                        vue.createVNode("tr", { class: "spaceUnder" }, [
                                          vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                            vue.createVNode("div", { class: "flex justify-center" }, [
                                              vue.createVNode("img", {
                                                src: "/img/item/7005.png",
                                                alt: "",
                                                class: "mr-2"
                                              }),
                                              vue.createTextVNode(" Kills: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                bg.kill_count
                                              )), 1)
                                            ])
                                          ])
                                        ]),
                                        vue.createVNode("tr", { class: "spaceUnder" }, [
                                          vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                            vue.createVNode("div", { class: "flex justify-center" }, [
                                              vue.createVNode("img", {
                                                src: "/img/item/7024.png",
                                                alt: "",
                                                class: "mr-2"
                                              }),
                                              vue.createTextVNode(" Deaths: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                bg.death_count
                                              )), 1)
                                            ])
                                          ])
                                        ]),
                                        vue.createVNode("tr", { class: "spaceUnder" }, [
                                          vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                            vue.createVNode("div", { class: "flex justify-center" }, [
                                              vue.createVNode("img", {
                                                src: "/img/item/5431.png",
                                                alt: "",
                                                class: "mr-2"
                                              }),
                                              vue.createTextVNode(" Desertor: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                bg.deserter
                                              )), 1)
                                            ])
                                          ])
                                        ])
                                      ])
                                    ])
                                  ])
                                ]),
                                vue.createVNode("div", { class: "flex w-full" }, [
                                  vue.createVNode("div", { class: "w-1/2 p-2" }, [
                                    vue.createVNode("table", { class: "w-full" }, [
                                      vue.createVNode("thead", { class: "bg-[#0d0d0d] border-b" }, [
                                        vue.createVNode("th", {
                                          colspan: "4",
                                          class: "p-4"
                                        }, " General Standings ")
                                      ]),
                                      vue.createVNode("thead", { class: "bg-[#0d0d0d]" }, [
                                        vue.createVNode("th", { class: "w-1/5 p-2" }, " Option "),
                                        vue.createVNode("th", { class: "p-2" }, [
                                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                            vue.createVNode("img", {
                                              class: "mr-2",
                                              src: "/img/item/7427.gif",
                                              alt: ""
                                            }),
                                            vue.createTextVNode(" Won ")
                                          ])
                                        ]),
                                        vue.createVNode("th", { class: "p-2" }, [
                                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                            vue.createVNode("img", {
                                              class: "mr-2",
                                              src: "/img/item/7428.gif",
                                              alt: ""
                                            }),
                                            vue.createTextVNode(" Tie ")
                                          ])
                                        ]),
                                        vue.createVNode("th", { class: "p-2" }, [
                                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                            vue.createVNode("img", {
                                              class: "mr-2",
                                              src: "/img/item/7426.gif",
                                              alt: ""
                                            }),
                                            vue.createTextVNode(" Lost ")
                                          ])
                                        ])
                                      ]),
                                      vue.createVNode("tbody", null, [
                                        vue.createVNode("tr", { class: "border-b" }, [
                                          vue.createVNode("td", { class: "p-3" }, " Total "),
                                          vue.createVNode("td", null, vue.toDisplayString(vue.unref(getFormatNumber)(
                                            bg.win
                                          )), 1),
                                          vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(
                                            bg.tie
                                          )), 1),
                                          vue.createVNode("td", null, vue.toDisplayString(vue.unref(getFormatNumber)(
                                            bg.lost
                                          )), 1)
                                        ]),
                                        vue.createVNode("tr", { class: "spaceUnder" }, [
                                          vue.createVNode("td", { class: "p-3" }, " As Team Leader "),
                                          vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(
                                            bg.leader_win
                                          )), 1),
                                          vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(
                                            bg.leader_tie
                                          )), 1),
                                          vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(
                                            bg.leader_lost
                                          )), 1)
                                        ])
                                      ])
                                    ])
                                  ]),
                                  vue.createVNode("div", { class: "w-1/2 p-2" }, [
                                    vue.createVNode("table", { class: "w-full" }, [
                                      vue.createVNode("thead", { class: "bg-[#0d0d0d] border-b" }, [
                                        vue.createVNode("th", {
                                          class: "p-4",
                                          colspan: "3"
                                        }, " Support Skills ")
                                      ]),
                                      vue.createVNode("thead", { class: "bg-[#0d0d0d]" }, [
                                        vue.createVNode("th", { class: "p-2" }, "Option"),
                                        vue.createVNode("th", { class: "p-2" }, " Total Skills "),
                                        vue.createVNode("th", { class: "p-2" }, " Total Healing ")
                                      ]),
                                      vue.createVNode("tbody", null, [
                                        vue.createVNode("tr", { class: "border-b" }, [
                                          vue.createVNode("td", { class: "p-3" }, [
                                            vue.createVNode("div", { class: "flex justify-center" }, [
                                              vue.createVNode("img", {
                                                src: "/img/item/2273.png",
                                                alt: "",
                                                class: "mr-2"
                                              }),
                                              vue.createTextVNode(" Correct ")
                                            ])
                                          ]),
                                          vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(bg.support_skills_used), 1),
                                          vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(bg.healing_done), 1)
                                        ]),
                                        vue.createVNode("tr", { class: "spaceUnder" }, [
                                          vue.createVNode("td", { class: "p-3" }, [
                                            vue.createVNode("div", { class: "flex justify-center" }, [
                                              vue.createVNode("img", {
                                                src: "/img/item/5272.png",
                                                alt: "",
                                                class: "mr-2"
                                              }),
                                              vue.createTextVNode(" Erroneous ")
                                            ])
                                          ]),
                                          vue.createVNode("td", null, vue.toDisplayString(vue.unref(getFormatNumber)(
                                            bg.wrong_support_skills_used
                                          )), 1),
                                          vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(
                                            bg.wrong_healing_done
                                          )), 1)
                                        ])
                                      ])
                                    ])
                                  ])
                                ]),
                                vue.createVNode("div", { class: "flex w-full" }, [
                                  vue.createVNode("div", { class: "w-1/2 p-2" }, [
                                    vue.createVNode("table", { class: "w-full" }, [
                                      vue.createVNode("thead", { class: "bg-[#0d0d0d] border-b" }, [
                                        vue.createVNode("th", {
                                          colspan: "5",
                                          class: "p-4"
                                        }, " Team vs Team ")
                                      ]),
                                      vue.createVNode("thead", { class: "bg-[#0d0d0d]" }, [
                                        vue.createVNode("th", { class: "p-2" }, [
                                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                            vue.createVNode("img", {
                                              class: "mr-2",
                                              src: "/img/item/7253.gif",
                                              alt: ""
                                            }),
                                            vue.createTextVNode(" Wins ")
                                          ])
                                        ]),
                                        vue.createVNode("th", { class: "p-2" }, [
                                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                            vue.createVNode("img", {
                                              class: "mr-2",
                                              src: "/img/item/7005.png",
                                              alt: ""
                                            }),
                                            vue.createTextVNode(" Deaths ")
                                          ])
                                        ]),
                                        vue.createVNode("th", { class: "p-2" }, [
                                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                            vue.createVNode("img", {
                                              class: "mr-2",
                                              src: "/img/item/7427.gif",
                                              alt: ""
                                            }),
                                            vue.createTextVNode(" Wins ")
                                          ])
                                        ]),
                                        vue.createVNode("th", { class: "p-2" }, [
                                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                            vue.createVNode("img", {
                                              class: "mr-2",
                                              src: "/img/item/7426.gif",
                                              alt: ""
                                            }),
                                            vue.createTextVNode(" Lost ")
                                          ])
                                        ]),
                                        vue.createVNode("th", { class: "p-2" }, [
                                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                            vue.createVNode("img", {
                                              class: "mr-2",
                                              src: "/img/item/7428.gif",
                                              alt: ""
                                            }),
                                            vue.createTextVNode(" Tie ")
                                          ])
                                        ])
                                      ]),
                                      vue.createVNode("tbody", null, [
                                        vue.createVNode("tr", { class: "border-b" }, [
                                          vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(
                                            bg.tvt_kills
                                          )), 1),
                                          vue.createVNode("td", null, vue.toDisplayString(vue.unref(getFormatNumber)(
                                            bg.tvt_deaths
                                          )), 1),
                                          vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(
                                            bg.tvt_wins
                                          )), 1),
                                          vue.createVNode("td", null, vue.toDisplayString(vue.unref(getFormatNumber)(
                                            bg.tvt_tie
                                          )), 1),
                                          vue.createVNode("td", null, vue.toDisplayString(vue.unref(getFormatNumber)(
                                            bg.tvt_lost
                                          )), 1)
                                        ])
                                      ])
                                    ])
                                  ]),
                                  vue.createVNode("div", { class: "w-1/2 p-2" }, [
                                    vue.createVNode("table", { class: "w-full" }, [
                                      vue.createVNode("thead", { class: "bg-[#0d0d0d] border-b" }, [
                                        vue.createVNode("th", {
                                          class: "p-4",
                                          colspan: "6"
                                        }, " Conquest ")
                                      ]),
                                      vue.createVNode("thead", { class: "bg-[#0d0d0d]" }, [
                                        vue.createVNode("th", { class: "w-1/5 p-2" }, [
                                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                            vue.createVNode("img", {
                                              class: "mr-2",
                                              src: "/img/item/714.png",
                                              alt: ""
                                            }),
                                            vue.createTextVNode(" Emp. Kills ")
                                          ])
                                        ]),
                                        vue.createVNode("th", { class: "p-2" }, [
                                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                            vue.createVNode("img", {
                                              class: "mr-2",
                                              src: "/img/item/14287.gif",
                                              alt: ""
                                            }),
                                            vue.createTextVNode(" Bar. Kills ")
                                          ])
                                        ]),
                                        vue.createVNode("th", { class: "p-2" }, [
                                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                            vue.createVNode("img", {
                                              class: "mr-2",
                                              src: "/img/item/7839.gif",
                                              alt: ""
                                            }),
                                            vue.createTextVNode(" G.Stone Kills ")
                                          ])
                                        ]),
                                        vue.createVNode("th", { class: "p-2" }, [
                                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                            vue.createVNode("img", {
                                              class: "mr-2",
                                              src: "/img/item/7427.gif",
                                              alt: ""
                                            }),
                                            vue.createTextVNode(" Bar. Kills ")
                                          ])
                                        ]),
                                        vue.createVNode("th", { class: "p-2" }, [
                                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                            vue.createVNode("img", {
                                              class: "mr-2",
                                              src: "/img/item/7426.gif",
                                              alt: ""
                                            }),
                                            vue.createTextVNode(" Lost ")
                                          ])
                                        ])
                                      ]),
                                      vue.createVNode("tbody", null, [
                                        vue.createVNode("tr", { class: "border-b" }, [
                                          vue.createVNode("td", { class: "p-3" }, [
                                            vue.createVNode("div", { class: "flex justify-center" }, vue.toDisplayString(vue.unref(getFormatNumber)(
                                              bg.cq_emperium_kill
                                            )), 1)
                                          ]),
                                          vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(
                                            bg.cq_barricade_kill
                                          )), 1),
                                          vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(
                                            bg.cq_gstone_kill
                                          )), 1),
                                          vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(
                                            bg.cq_wins
                                          )), 1),
                                          vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(
                                            bg.cq_lost
                                          )), 1)
                                        ])
                                      ])
                                    ])
                                  ])
                                ]),
                                vue.createVNode("div", { class: "flex w-full" }, [
                                  vue.createVNode("div", { class: "w-1/2 p-2" }, [
                                    vue.createVNode("table", { class: "w-full" }, [
                                      vue.createVNode("thead", { class: "bg-[#0d0d0d] border-b" }, [
                                        vue.createVNode("th", {
                                          colspan: "3",
                                          class: "p-4"
                                        }, " Battle Zone ")
                                      ]),
                                      vue.createVNode("thead", { class: "bg-[#0d0d0d]" }, [
                                        vue.createVNode("th", { class: "w-1/5 p-2" }, [
                                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                            vue.createVNode("img", {
                                              class: "mr-2",
                                              src: "/img/item/7427.gif",
                                              alt: ""
                                            }),
                                            vue.createTextVNode(" Wins ")
                                          ])
                                        ]),
                                        vue.createVNode("th", { class: "p-2" }, [
                                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                            vue.createVNode("img", {
                                              class: "mr-2",
                                              src: "/img/item/7428.gif",
                                              alt: ""
                                            }),
                                            vue.createTextVNode(" Tie ")
                                          ])
                                        ]),
                                        vue.createVNode("th", { class: "p-2" }, [
                                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                            vue.createVNode("img", {
                                              class: "mr-2",
                                              src: "/img/item/7426.gif",
                                              alt: ""
                                            }),
                                            vue.createTextVNode(" Lost ")
                                          ])
                                        ])
                                      ]),
                                      vue.createVNode("tbody", null, [
                                        vue.createVNode("tr", { class: "border-b" }, [
                                          vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(
                                            bg.bz_wins
                                          )), 1),
                                          vue.createVNode("td", null, vue.toDisplayString(vue.unref(getFormatNumber)(
                                            bg.bz_tie
                                          )), 1),
                                          vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(
                                            bg.bz_lost
                                          )), 1)
                                        ])
                                      ])
                                    ])
                                  ]),
                                  vue.createVNode("div", { class: "w-1/2 p-2" }, [
                                    vue.createVNode("table", { class: "w-full" }, [
                                      vue.createVNode("thead", { class: "bg-[#0d0d0d] border-b" }, [
                                        vue.createVNode("th", {
                                          class: "p-4",
                                          colspan: "5"
                                        }, " Destroy the Emperium ")
                                      ]),
                                      vue.createVNode("thead", { class: "bg-[#0d0d0d]" }, [
                                        vue.createVNode("th", { class: "p-2" }, [
                                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                            vue.createVNode("img", {
                                              class: "mr-2",
                                              src: "/img/item/714.png",
                                              alt: ""
                                            }),
                                            vue.createTextVNode(" Emp.Kills ")
                                          ])
                                        ]),
                                        vue.createVNode("th", { class: "p-2" }, [
                                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                            vue.createVNode("img", {
                                              class: "mr-2",
                                              src: "/img/item/7427.gif",
                                              alt: ""
                                            }),
                                            vue.createTextVNode(" Wins ")
                                          ])
                                        ]),
                                        vue.createVNode("th", { class: "p-2" }, [
                                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                            vue.createVNode("img", {
                                              class: "mr-2",
                                              src: "/img/item/7428.gif",
                                              alt: ""
                                            }),
                                            vue.createTextVNode(" Tie ")
                                          ])
                                        ]),
                                        vue.createVNode("th", { class: "p-2" }, [
                                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                            vue.createVNode("img", {
                                              class: "mr-2",
                                              src: "/img/item/7426.gif",
                                              alt: ""
                                            }),
                                            vue.createTextVNode(" Lost ")
                                          ])
                                        ])
                                      ]),
                                      vue.createVNode("tbody", null, [
                                        vue.createVNode("tr", { class: "border-b" }, [
                                          vue.createVNode("td", { class: "p-3" }, [
                                            vue.createVNode("div", { class: "flex justify-center" }, [
                                              vue.createVNode("img", {
                                                src: "/img/item/2273.png",
                                                alt: "",
                                                class: "mr-2"
                                              }),
                                              vue.createTextVNode(" " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                bg.dte_emperium_kill
                                              )), 1)
                                            ])
                                          ]),
                                          vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(
                                            bg.dte_wins
                                          )), 1),
                                          vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(
                                            bg.dte_tie
                                          )), 1),
                                          vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(
                                            bg.dte_lost
                                          )), 1)
                                        ])
                                      ])
                                    ])
                                  ])
                                ]),
                                vue.createVNode("div", { class: "flex w-full" }, [
                                  vue.createVNode("div", { class: "w-full p-2" }, [
                                    vue.createVNode("table", { class: "w-full" }, [
                                      vue.createVNode("thead", { class: "bg-[#0d0d0d] border-b" }, [
                                        vue.createVNode("th", {
                                          colspan: "7",
                                          class: "p-4"
                                        }, " Castle Siege ")
                                      ]),
                                      vue.createVNode("thead", { class: "bg-[#0d0d0d]" }, [
                                        vue.createVNode("th", { class: "p-2" }, [
                                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                            vue.createVNode("img", {
                                              class: "mr-2",
                                              src: "/img/item/714.png",
                                              alt: ""
                                            }),
                                            vue.createTextVNode(" Emp. Kills ")
                                          ])
                                        ]),
                                        vue.createVNode("th", { class: "p-2" }, [
                                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                            vue.createVNode("img", {
                                              class: "mr-2",
                                              src: "/img/item/14287.gif",
                                              alt: ""
                                            }),
                                            vue.createTextVNode(" Bar. Kills ")
                                          ])
                                        ]),
                                        vue.createVNode("th", { class: "p-2" }, [
                                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                            vue.createVNode("img", {
                                              class: "mr-2",
                                              src: "/img/item/7839.gif",
                                              alt: ""
                                            }),
                                            vue.createTextVNode(" G.Stone Kills ")
                                          ])
                                        ]),
                                        vue.createVNode("th", { class: "p-2" }, [
                                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                            vue.createVNode("img", {
                                              class: "mr-2",
                                              src: "/img/item/7427.gif",
                                              alt: ""
                                            }),
                                            vue.createTextVNode(" Win ")
                                          ])
                                        ]),
                                        vue.createVNode("th", { class: "p-2" }, [
                                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                            vue.createVNode("img", {
                                              class: "mr-2",
                                              src: "/img/item/7428.gif",
                                              alt: ""
                                            }),
                                            vue.createTextVNode(" Tie ")
                                          ])
                                        ]),
                                        vue.createVNode("th", { class: "p-2" }, [
                                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                            vue.createVNode("img", {
                                              class: "mr-2",
                                              src: "/img/item/7426.gif",
                                              alt: ""
                                            }),
                                            vue.createTextVNode(" Lost ")
                                          ])
                                        ])
                                      ]),
                                      vue.createVNode("tbody", null, [
                                        vue.createVNode("tr", { class: "" }, [
                                          vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(
                                            bg.cs_emperium_kill
                                          )), 1),
                                          vue.createVNode("td", null, vue.toDisplayString(vue.unref(getFormatNumber)(
                                            bg.cs_barricade_kill
                                          )), 1),
                                          vue.createVNode("td", null, vue.toDisplayString(vue.unref(getFormatNumber)(
                                            bg.cs_gstone_kill
                                          )), 1),
                                          vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(
                                            bg.cs_wins
                                          )), 1),
                                          vue.createVNode("td", null, vue.toDisplayString(vue.unref(getFormatNumber)(
                                            bg.cs_tie
                                          )), 1),
                                          vue.createVNode("td", null, vue.toDisplayString(vue.unref(getFormatNumber)(
                                            bg.cs_lost
                                          )), 1)
                                        ])
                                      ])
                                    ])
                                  ])
                                ])
                              ])
                            ])
                          ])
                        ], 8, ["id"])
                      ], 64);
                    }), 128))
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_sfc_main$1x, {
              class: "p-3 text-white",
              links: vue.unref(bg_data).links
            }, null, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(RankingTable, { rank_attributes: rank_attributes.value }, {
                row: vue.withCtx(() => [
                  (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(vue.unref(bg_data).data, (bg, index) => {
                    var _a2;
                    return vue.openBlock(), vue.createBlock(vue.Fragment, { key: index }, [
                      vue.createVNode("tr", {
                        class: "spaceUnder hover:bg-gray-800/40 cursor-pointer hover:transition hover:duration-150",
                        onClick: ($event) => show_info(index)
                      }, [
                        index == 0 ? (vue.openBlock(), vue.createBlock("td", {
                          key: 0,
                          class: "px-5 py-3 w-1/12"
                        }, [
                          vue.createVNode(_component_font_awesome_icon, {
                            class: "text-2xl hover:text-yellow-600",
                            icon: "fa-solid fa-trophy"
                          })
                        ])) : (vue.openBlock(), vue.createBlock("td", {
                          key: 1,
                          class: "px-5 py-3 w-1/12"
                        }, vue.toDisplayString(index + 1), 1)),
                        vue.createVNode("td", { class: "px-5 py-3 w-1/6" }, [
                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                            vue.createVNode("div", { class: "flex justify-center items-center" }, [
                              vue.createVNode("img", {
                                src: `/rochar/characterhead/${bg.name}`,
                                alt: ""
                              }, null, 8, ["src"]),
                              vue.createVNode("div", null, [
                                vue.createVNode("span", { class: "text-[#04aaff]" }, vue.toDisplayString(bg.name), 1),
                                vue.createTextVNode(" (" + vue.toDisplayString(vue.unref(get_job_name)(bg.class)) + ") ", 1)
                              ])
                            ])
                          ])
                        ]),
                        vue.createVNode("td", { class: "px-5 py-3 w-1/6" }, [
                          vue.createVNode("div", { class: "flex justify-center items-center" }, [
                            vue.createVNode("div", { class: "flex items-center justify-center" }, [
                              vue.createVNode("img", {
                                class: "mr-2",
                                src: `/${url.value[bg.guild_id]} `,
                                alt: ""
                              }, null, 8, ["src"]),
                              vue.createTextVNode(" " + vue.toDisplayString((_a2 = bg.gname) != null ? _a2 : "No guild \u274C"), 1)
                            ])
                          ])
                        ]),
                        vue.createVNode("td", { class: "px-5 py-3 w-1/6" }, vue.toDisplayString(vue.unref(getFormatNumber)(bg.kill_count)), 1),
                        vue.createVNode("td", { class: "px-5 py-3 w-1/6" }, vue.toDisplayString(vue.unref(getFormatNumber)(bg.death_count)), 1),
                        vue.createVNode("td", { class: "px-5 py-3" }, [
                          vue.createVNode("div", { class: "flex justify-center items-center" }, [
                            vue.createVNode("div", { class: "flex items-center justify-center" }, [
                              vue.createVNode(vue.unref(CountryFlag__default["default"]), {
                                country: bg.country,
                                size: "normal"
                              }, null, 8, ["country"])
                            ])
                          ])
                        ]),
                        vue.createVNode("td", { class: "px-5 py-3 w-1/6" }, vue.toDisplayString(vue.unref(getFormatNumber)(bg.score)), 1)
                      ], 8, ["onClick"]),
                      vue.createVNode("tr", {
                        id: "show_info_id_" + index,
                        class: "hidden spaceUnder"
                      }, [
                        vue.createVNode("td", { colspan: "9" }, [
                          vue.createVNode("div", { class: "flex w-full" }, [
                            vue.createVNode("div", { class: "w-1/5 py-6" }, [
                              vue.createVNode("div", { class: "flex flex-col items-center h-full justify-center" }, [
                                vue.createVNode("div", { class: "flex justify-center" }, [
                                  vue.createVNode("img", {
                                    class: "",
                                    src: `/rochar/character/${bg.name}`,
                                    alt: ""
                                  }, null, 8, ["src"])
                                ]),
                                vue.createVNode("p", null, [
                                  vue.createVNode("span", { class: "font-bold" }, "Playtime:"),
                                  vue.createTextVNode(" " + vue.toDisplayString(vue.unref(secondsToDh)(bg.playtime)), 1)
                                ]),
                                vue.createVNode("p", null, [
                                  vue.createVNode("span", { class: "font-bold" }, "Score:"),
                                  vue.createTextVNode(" " + vue.toDisplayString(vue.unref(getFormatNumber)(bg.score)), 1)
                                ]),
                                vue.createVNode("div", { class: "flex w-full justify-center" }, [
                                  vue.createVNode("img", {
                                    src: "/img/viewprofile.png",
                                    alt: "",
                                    class: "mr-2"
                                  }),
                                  vue.createVNode("a", {
                                    class: "text-[#04aaff]",
                                    href: _ctx.route(
                                      "bg.profile",
                                      bg.char_id
                                    )
                                  }, "Player Profile", 8, ["href"])
                                ])
                              ])
                            ]),
                            vue.createVNode("div", { class: "w-4/5 grid grid-row-2" }, [
                              vue.createVNode("div", { class: "flex w-full" }, [
                                vue.createVNode("div", { class: "w-1/2 p-2" }, [
                                  vue.createVNode("table", { class: "w-full" }, [
                                    vue.createVNode("thead", { class: "bg-[#0d0d0d]" }, [
                                      vue.createVNode("th", {
                                        colspan: "3",
                                        class: "p-4"
                                      }, " Usable items ")
                                    ]),
                                    vue.createVNode("tbody", null, [
                                      vue.createVNode("tr", { class: "spaceUnder" }, [
                                        vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                          vue.createVNode("div", { class: "flex justify-center" }, [
                                            vue.createVNode("img", {
                                              src: "/img/item/522.png",
                                              alt: "",
                                              class: "mr-2"
                                            }),
                                            vue.createTextVNode("HP: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                              bg.hp_heal_potions
                                            )), 1)
                                          ])
                                        ]),
                                        vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                          vue.createVNode("div", { class: "flex justify-center" }, [
                                            vue.createVNode("img", {
                                              src: "/img/item/505.png",
                                              alt: "",
                                              class: "mr-2"
                                            }),
                                            vue.createTextVNode("SP: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                              bg.sp_heal_potions
                                            )), 1)
                                          ])
                                        ]),
                                        vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                          vue.createVNode("div", { class: "flex justify-center" }, [
                                            vue.createVNode("img", {
                                              src: "/img/item/676.png",
                                              alt: "",
                                              class: "mr-2"
                                            }),
                                            vue.createTextVNode("Zeny: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                              bg.zeny_used
                                            )), 1)
                                          ])
                                        ])
                                      ]),
                                      vue.createVNode("tr", { class: "spaceUnder" }, [
                                        vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                          vue.createVNode("div", { class: "flex justify-center" }, [
                                            vue.createVNode("img", {
                                              src: "/img/item/716.png",
                                              alt: "",
                                              class: "mr-2"
                                            }),
                                            vue.createTextVNode("Gems: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                              bg.red_gemstones
                                            )), 1)
                                          ])
                                        ]),
                                        vue.createVNode("td", { class: "w-1/3" }, [
                                          vue.createVNode("div", { class: "flex justify-center" }, [
                                            vue.createVNode("img", {
                                              src: "/img/item/717.png",
                                              alt: "",
                                              class: "mr-2"
                                            }),
                                            vue.createTextVNode("Gems: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                              bg.blue_gemstones
                                            )), 1)
                                          ])
                                        ]),
                                        vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                          vue.createVNode("div", { class: "flex justify-center" }, [
                                            vue.createVNode("img", {
                                              src: "/img/item/715.png",
                                              alt: "",
                                              class: "mr-2"
                                            }),
                                            vue.createTextVNode("Gems: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                              bg.yellow_gemstones
                                            )), 1)
                                          ])
                                        ])
                                      ]),
                                      vue.createVNode("tr", { class: "spaceUnder" }, [
                                        vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                          vue.createVNode("div", { class: "flex justify-center" }, [
                                            vue.createVNode("img", {
                                              src: "/img/item/1752.png",
                                              alt: "",
                                              class: "mr-2"
                                            }),
                                            vue.createTextVNode("Arrows: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                              bg.ammo_used
                                            )), 1)
                                          ])
                                        ]),
                                        vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                          vue.createVNode("div", { class: "flex justify-center" }, [
                                            vue.createVNode("img", {
                                              src: "/img/item/7136.png",
                                              alt: "",
                                              class: "mr-2"
                                            }),
                                            vue.createTextVNode("Bottles: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                              bg.acid_demostration
                                            )), 1)
                                          ])
                                        ]),
                                        vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                          vue.createVNode("div", { class: "flex justify-center" }, [
                                            vue.createVNode("img", {
                                              src: "/img/item/678.png",
                                              alt: "",
                                              class: "mr-2"
                                            }),
                                            vue.createTextVNode("Bottles: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                              bg.poison_bottles
                                            )), 1)
                                          ])
                                        ])
                                      ])
                                    ])
                                  ])
                                ]),
                                vue.createVNode("div", { class: "w-1/2 p-2 flex" }, [
                                  vue.createVNode("table", { class: "w-1/2 mr-2" }, [
                                    vue.createVNode("thead", { class: "bg-[#0d0d0d]" }, [
                                      vue.createVNode("th", {
                                        colspan: "3",
                                        class: "p-4"
                                      }, " Damage vs Player ")
                                    ]),
                                    vue.createVNode("tbody", null, [
                                      vue.createVNode("tr", { class: "spaceUnder" }, [
                                        vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                          vue.createVNode("div", { class: "flex justify-center" }, [
                                            vue.createVNode("img", {
                                              src: "/img/item/1228.png",
                                              alt: "",
                                              class: "mr-2"
                                            }),
                                            vue.createTextVNode(" Best: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                              bg.top_damage
                                            )), 1)
                                          ])
                                        ])
                                      ]),
                                      vue.createVNode("tr", { class: "spaceUnder" }, [
                                        vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                          vue.createVNode("div", { class: "flex justify-center" }, [
                                            vue.createVNode("img", {
                                              src: "/img/item/1281.png",
                                              alt: "",
                                              class: "mr-2"
                                            }),
                                            vue.createTextVNode(" Done: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                              bg.damage_done
                                            )), 1)
                                          ])
                                        ])
                                      ]),
                                      vue.createVNode("tr", { class: "spaceUnder" }, [
                                        vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                          vue.createVNode("div", { class: "flex justify-center" }, [
                                            vue.createVNode("img", {
                                              src: "/img/item/2115.png",
                                              alt: "",
                                              class: "mr-2"
                                            }),
                                            vue.createTextVNode(" Recv: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                              bg.damage_received
                                            )), 1)
                                          ])
                                        ])
                                      ])
                                    ])
                                  ]),
                                  vue.createVNode("table", { class: "w-1/2" }, [
                                    vue.createVNode("thead", { class: "bg-[#0d0d0d]" }, [
                                      vue.createVNode("th", {
                                        colspan: "3",
                                        class: "p-4"
                                      }, " War Data ")
                                    ]),
                                    vue.createVNode("tbody", null, [
                                      vue.createVNode("tr", { class: "spaceUnder" }, [
                                        vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                          vue.createVNode("div", { class: "flex justify-center" }, [
                                            vue.createVNode("img", {
                                              src: "/img/item/7005.png",
                                              alt: "",
                                              class: "mr-2"
                                            }),
                                            vue.createTextVNode(" Kills: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                              bg.kill_count
                                            )), 1)
                                          ])
                                        ])
                                      ]),
                                      vue.createVNode("tr", { class: "spaceUnder" }, [
                                        vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                          vue.createVNode("div", { class: "flex justify-center" }, [
                                            vue.createVNode("img", {
                                              src: "/img/item/7024.png",
                                              alt: "",
                                              class: "mr-2"
                                            }),
                                            vue.createTextVNode(" Deaths: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                              bg.death_count
                                            )), 1)
                                          ])
                                        ])
                                      ]),
                                      vue.createVNode("tr", { class: "spaceUnder" }, [
                                        vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                          vue.createVNode("div", { class: "flex justify-center" }, [
                                            vue.createVNode("img", {
                                              src: "/img/item/5431.png",
                                              alt: "",
                                              class: "mr-2"
                                            }),
                                            vue.createTextVNode(" Desertor: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                              bg.deserter
                                            )), 1)
                                          ])
                                        ])
                                      ])
                                    ])
                                  ])
                                ])
                              ]),
                              vue.createVNode("div", { class: "flex w-full" }, [
                                vue.createVNode("div", { class: "w-1/2 p-2" }, [
                                  vue.createVNode("table", { class: "w-full" }, [
                                    vue.createVNode("thead", { class: "bg-[#0d0d0d] border-b" }, [
                                      vue.createVNode("th", {
                                        colspan: "4",
                                        class: "p-4"
                                      }, " General Standings ")
                                    ]),
                                    vue.createVNode("thead", { class: "bg-[#0d0d0d]" }, [
                                      vue.createVNode("th", { class: "w-1/5 p-2" }, " Option "),
                                      vue.createVNode("th", { class: "p-2" }, [
                                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                          vue.createVNode("img", {
                                            class: "mr-2",
                                            src: "/img/item/7427.gif",
                                            alt: ""
                                          }),
                                          vue.createTextVNode(" Won ")
                                        ])
                                      ]),
                                      vue.createVNode("th", { class: "p-2" }, [
                                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                          vue.createVNode("img", {
                                            class: "mr-2",
                                            src: "/img/item/7428.gif",
                                            alt: ""
                                          }),
                                          vue.createTextVNode(" Tie ")
                                        ])
                                      ]),
                                      vue.createVNode("th", { class: "p-2" }, [
                                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                          vue.createVNode("img", {
                                            class: "mr-2",
                                            src: "/img/item/7426.gif",
                                            alt: ""
                                          }),
                                          vue.createTextVNode(" Lost ")
                                        ])
                                      ])
                                    ]),
                                    vue.createVNode("tbody", null, [
                                      vue.createVNode("tr", { class: "border-b" }, [
                                        vue.createVNode("td", { class: "p-3" }, " Total "),
                                        vue.createVNode("td", null, vue.toDisplayString(vue.unref(getFormatNumber)(
                                          bg.win
                                        )), 1),
                                        vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(
                                          bg.tie
                                        )), 1),
                                        vue.createVNode("td", null, vue.toDisplayString(vue.unref(getFormatNumber)(
                                          bg.lost
                                        )), 1)
                                      ]),
                                      vue.createVNode("tr", { class: "spaceUnder" }, [
                                        vue.createVNode("td", { class: "p-3" }, " As Team Leader "),
                                        vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(
                                          bg.leader_win
                                        )), 1),
                                        vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(
                                          bg.leader_tie
                                        )), 1),
                                        vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(
                                          bg.leader_lost
                                        )), 1)
                                      ])
                                    ])
                                  ])
                                ]),
                                vue.createVNode("div", { class: "w-1/2 p-2" }, [
                                  vue.createVNode("table", { class: "w-full" }, [
                                    vue.createVNode("thead", { class: "bg-[#0d0d0d] border-b" }, [
                                      vue.createVNode("th", {
                                        class: "p-4",
                                        colspan: "3"
                                      }, " Support Skills ")
                                    ]),
                                    vue.createVNode("thead", { class: "bg-[#0d0d0d]" }, [
                                      vue.createVNode("th", { class: "p-2" }, "Option"),
                                      vue.createVNode("th", { class: "p-2" }, " Total Skills "),
                                      vue.createVNode("th", { class: "p-2" }, " Total Healing ")
                                    ]),
                                    vue.createVNode("tbody", null, [
                                      vue.createVNode("tr", { class: "border-b" }, [
                                        vue.createVNode("td", { class: "p-3" }, [
                                          vue.createVNode("div", { class: "flex justify-center" }, [
                                            vue.createVNode("img", {
                                              src: "/img/item/2273.png",
                                              alt: "",
                                              class: "mr-2"
                                            }),
                                            vue.createTextVNode(" Correct ")
                                          ])
                                        ]),
                                        vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(bg.support_skills_used), 1),
                                        vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(bg.healing_done), 1)
                                      ]),
                                      vue.createVNode("tr", { class: "spaceUnder" }, [
                                        vue.createVNode("td", { class: "p-3" }, [
                                          vue.createVNode("div", { class: "flex justify-center" }, [
                                            vue.createVNode("img", {
                                              src: "/img/item/5272.png",
                                              alt: "",
                                              class: "mr-2"
                                            }),
                                            vue.createTextVNode(" Erroneous ")
                                          ])
                                        ]),
                                        vue.createVNode("td", null, vue.toDisplayString(vue.unref(getFormatNumber)(
                                          bg.wrong_support_skills_used
                                        )), 1),
                                        vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(
                                          bg.wrong_healing_done
                                        )), 1)
                                      ])
                                    ])
                                  ])
                                ])
                              ]),
                              vue.createVNode("div", { class: "flex w-full" }, [
                                vue.createVNode("div", { class: "w-1/2 p-2" }, [
                                  vue.createVNode("table", { class: "w-full" }, [
                                    vue.createVNode("thead", { class: "bg-[#0d0d0d] border-b" }, [
                                      vue.createVNode("th", {
                                        colspan: "5",
                                        class: "p-4"
                                      }, " Team vs Team ")
                                    ]),
                                    vue.createVNode("thead", { class: "bg-[#0d0d0d]" }, [
                                      vue.createVNode("th", { class: "p-2" }, [
                                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                          vue.createVNode("img", {
                                            class: "mr-2",
                                            src: "/img/item/7253.gif",
                                            alt: ""
                                          }),
                                          vue.createTextVNode(" Wins ")
                                        ])
                                      ]),
                                      vue.createVNode("th", { class: "p-2" }, [
                                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                          vue.createVNode("img", {
                                            class: "mr-2",
                                            src: "/img/item/7005.png",
                                            alt: ""
                                          }),
                                          vue.createTextVNode(" Deaths ")
                                        ])
                                      ]),
                                      vue.createVNode("th", { class: "p-2" }, [
                                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                          vue.createVNode("img", {
                                            class: "mr-2",
                                            src: "/img/item/7427.gif",
                                            alt: ""
                                          }),
                                          vue.createTextVNode(" Wins ")
                                        ])
                                      ]),
                                      vue.createVNode("th", { class: "p-2" }, [
                                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                          vue.createVNode("img", {
                                            class: "mr-2",
                                            src: "/img/item/7426.gif",
                                            alt: ""
                                          }),
                                          vue.createTextVNode(" Lost ")
                                        ])
                                      ]),
                                      vue.createVNode("th", { class: "p-2" }, [
                                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                          vue.createVNode("img", {
                                            class: "mr-2",
                                            src: "/img/item/7428.gif",
                                            alt: ""
                                          }),
                                          vue.createTextVNode(" Tie ")
                                        ])
                                      ])
                                    ]),
                                    vue.createVNode("tbody", null, [
                                      vue.createVNode("tr", { class: "border-b" }, [
                                        vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(
                                          bg.tvt_kills
                                        )), 1),
                                        vue.createVNode("td", null, vue.toDisplayString(vue.unref(getFormatNumber)(
                                          bg.tvt_deaths
                                        )), 1),
                                        vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(
                                          bg.tvt_wins
                                        )), 1),
                                        vue.createVNode("td", null, vue.toDisplayString(vue.unref(getFormatNumber)(
                                          bg.tvt_tie
                                        )), 1),
                                        vue.createVNode("td", null, vue.toDisplayString(vue.unref(getFormatNumber)(
                                          bg.tvt_lost
                                        )), 1)
                                      ])
                                    ])
                                  ])
                                ]),
                                vue.createVNode("div", { class: "w-1/2 p-2" }, [
                                  vue.createVNode("table", { class: "w-full" }, [
                                    vue.createVNode("thead", { class: "bg-[#0d0d0d] border-b" }, [
                                      vue.createVNode("th", {
                                        class: "p-4",
                                        colspan: "6"
                                      }, " Conquest ")
                                    ]),
                                    vue.createVNode("thead", { class: "bg-[#0d0d0d]" }, [
                                      vue.createVNode("th", { class: "w-1/5 p-2" }, [
                                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                          vue.createVNode("img", {
                                            class: "mr-2",
                                            src: "/img/item/714.png",
                                            alt: ""
                                          }),
                                          vue.createTextVNode(" Emp. Kills ")
                                        ])
                                      ]),
                                      vue.createVNode("th", { class: "p-2" }, [
                                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                          vue.createVNode("img", {
                                            class: "mr-2",
                                            src: "/img/item/14287.gif",
                                            alt: ""
                                          }),
                                          vue.createTextVNode(" Bar. Kills ")
                                        ])
                                      ]),
                                      vue.createVNode("th", { class: "p-2" }, [
                                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                          vue.createVNode("img", {
                                            class: "mr-2",
                                            src: "/img/item/7839.gif",
                                            alt: ""
                                          }),
                                          vue.createTextVNode(" G.Stone Kills ")
                                        ])
                                      ]),
                                      vue.createVNode("th", { class: "p-2" }, [
                                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                          vue.createVNode("img", {
                                            class: "mr-2",
                                            src: "/img/item/7427.gif",
                                            alt: ""
                                          }),
                                          vue.createTextVNode(" Bar. Kills ")
                                        ])
                                      ]),
                                      vue.createVNode("th", { class: "p-2" }, [
                                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                          vue.createVNode("img", {
                                            class: "mr-2",
                                            src: "/img/item/7426.gif",
                                            alt: ""
                                          }),
                                          vue.createTextVNode(" Lost ")
                                        ])
                                      ])
                                    ]),
                                    vue.createVNode("tbody", null, [
                                      vue.createVNode("tr", { class: "border-b" }, [
                                        vue.createVNode("td", { class: "p-3" }, [
                                          vue.createVNode("div", { class: "flex justify-center" }, vue.toDisplayString(vue.unref(getFormatNumber)(
                                            bg.cq_emperium_kill
                                          )), 1)
                                        ]),
                                        vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(
                                          bg.cq_barricade_kill
                                        )), 1),
                                        vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(
                                          bg.cq_gstone_kill
                                        )), 1),
                                        vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(
                                          bg.cq_wins
                                        )), 1),
                                        vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(
                                          bg.cq_lost
                                        )), 1)
                                      ])
                                    ])
                                  ])
                                ])
                              ]),
                              vue.createVNode("div", { class: "flex w-full" }, [
                                vue.createVNode("div", { class: "w-1/2 p-2" }, [
                                  vue.createVNode("table", { class: "w-full" }, [
                                    vue.createVNode("thead", { class: "bg-[#0d0d0d] border-b" }, [
                                      vue.createVNode("th", {
                                        colspan: "3",
                                        class: "p-4"
                                      }, " Battle Zone ")
                                    ]),
                                    vue.createVNode("thead", { class: "bg-[#0d0d0d]" }, [
                                      vue.createVNode("th", { class: "w-1/5 p-2" }, [
                                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                          vue.createVNode("img", {
                                            class: "mr-2",
                                            src: "/img/item/7427.gif",
                                            alt: ""
                                          }),
                                          vue.createTextVNode(" Wins ")
                                        ])
                                      ]),
                                      vue.createVNode("th", { class: "p-2" }, [
                                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                          vue.createVNode("img", {
                                            class: "mr-2",
                                            src: "/img/item/7428.gif",
                                            alt: ""
                                          }),
                                          vue.createTextVNode(" Tie ")
                                        ])
                                      ]),
                                      vue.createVNode("th", { class: "p-2" }, [
                                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                          vue.createVNode("img", {
                                            class: "mr-2",
                                            src: "/img/item/7426.gif",
                                            alt: ""
                                          }),
                                          vue.createTextVNode(" Lost ")
                                        ])
                                      ])
                                    ]),
                                    vue.createVNode("tbody", null, [
                                      vue.createVNode("tr", { class: "border-b" }, [
                                        vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(
                                          bg.bz_wins
                                        )), 1),
                                        vue.createVNode("td", null, vue.toDisplayString(vue.unref(getFormatNumber)(
                                          bg.bz_tie
                                        )), 1),
                                        vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(
                                          bg.bz_lost
                                        )), 1)
                                      ])
                                    ])
                                  ])
                                ]),
                                vue.createVNode("div", { class: "w-1/2 p-2" }, [
                                  vue.createVNode("table", { class: "w-full" }, [
                                    vue.createVNode("thead", { class: "bg-[#0d0d0d] border-b" }, [
                                      vue.createVNode("th", {
                                        class: "p-4",
                                        colspan: "5"
                                      }, " Destroy the Emperium ")
                                    ]),
                                    vue.createVNode("thead", { class: "bg-[#0d0d0d]" }, [
                                      vue.createVNode("th", { class: "p-2" }, [
                                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                          vue.createVNode("img", {
                                            class: "mr-2",
                                            src: "/img/item/714.png",
                                            alt: ""
                                          }),
                                          vue.createTextVNode(" Emp.Kills ")
                                        ])
                                      ]),
                                      vue.createVNode("th", { class: "p-2" }, [
                                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                          vue.createVNode("img", {
                                            class: "mr-2",
                                            src: "/img/item/7427.gif",
                                            alt: ""
                                          }),
                                          vue.createTextVNode(" Wins ")
                                        ])
                                      ]),
                                      vue.createVNode("th", { class: "p-2" }, [
                                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                          vue.createVNode("img", {
                                            class: "mr-2",
                                            src: "/img/item/7428.gif",
                                            alt: ""
                                          }),
                                          vue.createTextVNode(" Tie ")
                                        ])
                                      ]),
                                      vue.createVNode("th", { class: "p-2" }, [
                                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                          vue.createVNode("img", {
                                            class: "mr-2",
                                            src: "/img/item/7426.gif",
                                            alt: ""
                                          }),
                                          vue.createTextVNode(" Lost ")
                                        ])
                                      ])
                                    ]),
                                    vue.createVNode("tbody", null, [
                                      vue.createVNode("tr", { class: "border-b" }, [
                                        vue.createVNode("td", { class: "p-3" }, [
                                          vue.createVNode("div", { class: "flex justify-center" }, [
                                            vue.createVNode("img", {
                                              src: "/img/item/2273.png",
                                              alt: "",
                                              class: "mr-2"
                                            }),
                                            vue.createTextVNode(" " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                              bg.dte_emperium_kill
                                            )), 1)
                                          ])
                                        ]),
                                        vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(
                                          bg.dte_wins
                                        )), 1),
                                        vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(
                                          bg.dte_tie
                                        )), 1),
                                        vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(
                                          bg.dte_lost
                                        )), 1)
                                      ])
                                    ])
                                  ])
                                ])
                              ]),
                              vue.createVNode("div", { class: "flex w-full" }, [
                                vue.createVNode("div", { class: "w-full p-2" }, [
                                  vue.createVNode("table", { class: "w-full" }, [
                                    vue.createVNode("thead", { class: "bg-[#0d0d0d] border-b" }, [
                                      vue.createVNode("th", {
                                        colspan: "7",
                                        class: "p-4"
                                      }, " Castle Siege ")
                                    ]),
                                    vue.createVNode("thead", { class: "bg-[#0d0d0d]" }, [
                                      vue.createVNode("th", { class: "p-2" }, [
                                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                          vue.createVNode("img", {
                                            class: "mr-2",
                                            src: "/img/item/714.png",
                                            alt: ""
                                          }),
                                          vue.createTextVNode(" Emp. Kills ")
                                        ])
                                      ]),
                                      vue.createVNode("th", { class: "p-2" }, [
                                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                          vue.createVNode("img", {
                                            class: "mr-2",
                                            src: "/img/item/14287.gif",
                                            alt: ""
                                          }),
                                          vue.createTextVNode(" Bar. Kills ")
                                        ])
                                      ]),
                                      vue.createVNode("th", { class: "p-2" }, [
                                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                          vue.createVNode("img", {
                                            class: "mr-2",
                                            src: "/img/item/7839.gif",
                                            alt: ""
                                          }),
                                          vue.createTextVNode(" G.Stone Kills ")
                                        ])
                                      ]),
                                      vue.createVNode("th", { class: "p-2" }, [
                                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                          vue.createVNode("img", {
                                            class: "mr-2",
                                            src: "/img/item/7427.gif",
                                            alt: ""
                                          }),
                                          vue.createTextVNode(" Win ")
                                        ])
                                      ]),
                                      vue.createVNode("th", { class: "p-2" }, [
                                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                          vue.createVNode("img", {
                                            class: "mr-2",
                                            src: "/img/item/7428.gif",
                                            alt: ""
                                          }),
                                          vue.createTextVNode(" Tie ")
                                        ])
                                      ]),
                                      vue.createVNode("th", { class: "p-2" }, [
                                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                          vue.createVNode("img", {
                                            class: "mr-2",
                                            src: "/img/item/7426.gif",
                                            alt: ""
                                          }),
                                          vue.createTextVNode(" Lost ")
                                        ])
                                      ])
                                    ]),
                                    vue.createVNode("tbody", null, [
                                      vue.createVNode("tr", { class: "" }, [
                                        vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(
                                          bg.cs_emperium_kill
                                        )), 1),
                                        vue.createVNode("td", null, vue.toDisplayString(vue.unref(getFormatNumber)(
                                          bg.cs_barricade_kill
                                        )), 1),
                                        vue.createVNode("td", null, vue.toDisplayString(vue.unref(getFormatNumber)(
                                          bg.cs_gstone_kill
                                        )), 1),
                                        vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(
                                          bg.cs_wins
                                        )), 1),
                                        vue.createVNode("td", null, vue.toDisplayString(vue.unref(getFormatNumber)(
                                          bg.cs_tie
                                        )), 1),
                                        vue.createVNode("td", null, vue.toDisplayString(vue.unref(getFormatNumber)(
                                          bg.cs_lost
                                        )), 1)
                                      ])
                                    ])
                                  ])
                                ])
                              ])
                            ])
                          ])
                        ])
                      ], 8, ["id"])
                    ], 64);
                  }), 128))
                ]),
                _: 1
              }, 8, ["rank_attributes"]),
              vue.createVNode(_sfc_main$1x, {
                class: "p-3 text-white",
                links: vue.unref(bg_data).links
              }, null, 8, ["links"])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
});
const _sfc_setup$u = _sfc_main$u.setup;
_sfc_main$u.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Rankings/Battleground.vue");
  return _sfc_setup$u ? _sfc_setup$u(props, ctx) : void 0;
};
var Battleground = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": _sfc_main$u
}, Symbol.toStringTag, { value: "Module" }));
const __default__$h = {
  layout: RankingLayout
};
const _sfc_main$t = /* @__PURE__ */ Object.assign(__default__$h, {
  __name: "Blacksmith",
  __ssrInlineRender: true,
  setup(__props) {
    const blacksmiths = inertiaVue3.usePage().props.value.blacksmiths;
    const url = vue.ref({});
    const rank_attributes = vue.ref([
      "Player",
      "Guild",
      "Level",
      "Online",
      "Points"
    ]);
    vue.onMounted(() => {
      blacksmiths.data.forEach((blacksmith) => {
        axios__default["default"].get(`/api/${blacksmith.guild_id}/emblem`).then((res) => {
          if (res.data.url === "X")
            return;
          url.value[blacksmith.guild_id] = res.data.url;
        });
      });
    });
    return (_ctx, _push, _parent, _attrs) => {
      const _component_font_awesome_icon = vue.resolveComponent("font-awesome-icon");
      _push(serverRenderer.ssrRenderComponent(_sfc_main$x, vue.mergeProps({ title: "Deaths Counter" }, _attrs), {
        default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(RankingTable, { rank_attributes: rank_attributes.value }, {
              row: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<!--[-->`);
                  serverRenderer.ssrRenderList(vue.unref(blacksmiths).data, (blacksmith, index) => {
                    var _a2;
                    _push3(`<tr class="spaceUnder hover:bg-gray-800/40"${_scopeId2}>`);
                    if (index == 0) {
                      _push3(`<td class="px-5 py-3"${_scopeId2}>`);
                      _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                        class: "text-2xl p-1 w-9 text-yellow-500",
                        icon: "fa-solid fa-trophy"
                      }, null, _parent3, _scopeId2));
                      _push3(`</td>`);
                    } else {
                      _push3(`<!---->`);
                    }
                    if (index == 1) {
                      _push3(`<td class="px-5 py-3"${_scopeId2}>`);
                      _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                        class: "text-2xl p-1 w-9 text-silver-600",
                        icon: "fa-solid fa-trophy"
                      }, null, _parent3, _scopeId2));
                      _push3(`</td>`);
                    } else {
                      _push3(`<!---->`);
                    }
                    if (index == 2) {
                      _push3(`<td class="px-5 py-3"${_scopeId2}>`);
                      _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                        class: "text-2xl p-1 w-9 text-yellow-700",
                        icon: "fa-solid fa-trophy"
                      }, null, _parent3, _scopeId2));
                      _push3(`</td>`);
                    } else if (index > 2) {
                      _push3(`<td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(index + 1)}</td>`);
                    } else {
                      _push3(`<!---->`);
                    }
                    _push3(`<td class="px-5 py-3"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><img${serverRenderer.ssrRenderAttr("src", `/rochar/characterhead/${blacksmith.name}`)} alt=""${_scopeId2}><a href=""${_scopeId2}><span class="text-[#3b87f6]"${_scopeId2}>${serverRenderer.ssrInterpolate(blacksmith.char_name)}</span> (${serverRenderer.ssrInterpolate(vue.unref(get_job_name)(blacksmith.char_class))}) </a></div></td><td class="px-5 py-3"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><div class="flex items-center"${_scopeId2}><img class="mr-2"${serverRenderer.ssrRenderAttr("src", `/${url.value[blacksmith.guild_id]} `)} alt=""${_scopeId2}> ${serverRenderer.ssrInterpolate((_a2 = blacksmith.guild_name) != null ? _a2 : "No guild \u274C")}</div></div></td><td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(blacksmith.base_level)} / ${serverRenderer.ssrInterpolate(blacksmith.job_level)}</td><td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(isOnline)(blacksmith.online))}</td><td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(blacksmith.fame))}</td></tr>`);
                  });
                  _push3(`<!--]-->`);
                } else {
                  return [
                    (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(vue.unref(blacksmiths).data, (blacksmith, index) => {
                      var _a2;
                      return vue.openBlock(), vue.createBlock("tr", {
                        class: "spaceUnder hover:bg-gray-800/40",
                        key: index
                      }, [
                        index == 0 ? (vue.openBlock(), vue.createBlock("td", {
                          key: 0,
                          class: "px-5 py-3"
                        }, [
                          vue.createVNode(_component_font_awesome_icon, {
                            class: "text-2xl p-1 w-9 text-yellow-500",
                            icon: "fa-solid fa-trophy"
                          })
                        ])) : vue.createCommentVNode("", true),
                        index == 1 ? (vue.openBlock(), vue.createBlock("td", {
                          key: 1,
                          class: "px-5 py-3"
                        }, [
                          vue.createVNode(_component_font_awesome_icon, {
                            class: "text-2xl p-1 w-9 text-silver-600",
                            icon: "fa-solid fa-trophy"
                          })
                        ])) : vue.createCommentVNode("", true),
                        index == 2 ? (vue.openBlock(), vue.createBlock("td", {
                          key: 2,
                          class: "px-5 py-3"
                        }, [
                          vue.createVNode(_component_font_awesome_icon, {
                            class: "text-2xl p-1 w-9 text-yellow-700",
                            icon: "fa-solid fa-trophy"
                          })
                        ])) : index > 2 ? (vue.openBlock(), vue.createBlock("td", {
                          key: 3,
                          class: "px-5 py-3"
                        }, vue.toDisplayString(index + 1), 1)) : vue.createCommentVNode("", true),
                        vue.createVNode("td", { class: "px-5 py-3" }, [
                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                            vue.createVNode("img", {
                              src: `/rochar/characterhead/${blacksmith.name}`,
                              alt: ""
                            }, null, 8, ["src"]),
                            vue.createVNode("a", { href: "" }, [
                              vue.createVNode("span", { class: "text-[#3b87f6]" }, vue.toDisplayString(blacksmith.char_name), 1),
                              vue.createTextVNode(" (" + vue.toDisplayString(vue.unref(get_job_name)(blacksmith.char_class)) + ") ", 1)
                            ])
                          ])
                        ]),
                        vue.createVNode("td", { class: "px-5 py-3" }, [
                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                            vue.createVNode("div", { class: "flex items-center" }, [
                              vue.createVNode("img", {
                                class: "mr-2",
                                src: `/${url.value[blacksmith.guild_id]} `,
                                alt: ""
                              }, null, 8, ["src"]),
                              vue.createTextVNode(" " + vue.toDisplayString((_a2 = blacksmith.guild_name) != null ? _a2 : "No guild \u274C"), 1)
                            ])
                          ])
                        ]),
                        vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(blacksmith.base_level) + " / " + vue.toDisplayString(blacksmith.job_level), 1),
                        vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(isOnline)(blacksmith.online)), 1),
                        vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(blacksmith.fame)), 1)
                      ]);
                    }), 128))
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_sfc_main$1x, {
              class: "p-3",
              links: vue.unref(blacksmiths).links
            }, null, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(RankingTable, { rank_attributes: rank_attributes.value }, {
                row: vue.withCtx(() => [
                  (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(vue.unref(blacksmiths).data, (blacksmith, index) => {
                    var _a2;
                    return vue.openBlock(), vue.createBlock("tr", {
                      class: "spaceUnder hover:bg-gray-800/40",
                      key: index
                    }, [
                      index == 0 ? (vue.openBlock(), vue.createBlock("td", {
                        key: 0,
                        class: "px-5 py-3"
                      }, [
                        vue.createVNode(_component_font_awesome_icon, {
                          class: "text-2xl p-1 w-9 text-yellow-500",
                          icon: "fa-solid fa-trophy"
                        })
                      ])) : vue.createCommentVNode("", true),
                      index == 1 ? (vue.openBlock(), vue.createBlock("td", {
                        key: 1,
                        class: "px-5 py-3"
                      }, [
                        vue.createVNode(_component_font_awesome_icon, {
                          class: "text-2xl p-1 w-9 text-silver-600",
                          icon: "fa-solid fa-trophy"
                        })
                      ])) : vue.createCommentVNode("", true),
                      index == 2 ? (vue.openBlock(), vue.createBlock("td", {
                        key: 2,
                        class: "px-5 py-3"
                      }, [
                        vue.createVNode(_component_font_awesome_icon, {
                          class: "text-2xl p-1 w-9 text-yellow-700",
                          icon: "fa-solid fa-trophy"
                        })
                      ])) : index > 2 ? (vue.openBlock(), vue.createBlock("td", {
                        key: 3,
                        class: "px-5 py-3"
                      }, vue.toDisplayString(index + 1), 1)) : vue.createCommentVNode("", true),
                      vue.createVNode("td", { class: "px-5 py-3" }, [
                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                          vue.createVNode("img", {
                            src: `/rochar/characterhead/${blacksmith.name}`,
                            alt: ""
                          }, null, 8, ["src"]),
                          vue.createVNode("a", { href: "" }, [
                            vue.createVNode("span", { class: "text-[#3b87f6]" }, vue.toDisplayString(blacksmith.char_name), 1),
                            vue.createTextVNode(" (" + vue.toDisplayString(vue.unref(get_job_name)(blacksmith.char_class)) + ") ", 1)
                          ])
                        ])
                      ]),
                      vue.createVNode("td", { class: "px-5 py-3" }, [
                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                          vue.createVNode("div", { class: "flex items-center" }, [
                            vue.createVNode("img", {
                              class: "mr-2",
                              src: `/${url.value[blacksmith.guild_id]} `,
                              alt: ""
                            }, null, 8, ["src"]),
                            vue.createTextVNode(" " + vue.toDisplayString((_a2 = blacksmith.guild_name) != null ? _a2 : "No guild \u274C"), 1)
                          ])
                        ])
                      ]),
                      vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(blacksmith.base_level) + " / " + vue.toDisplayString(blacksmith.job_level), 1),
                      vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(isOnline)(blacksmith.online)), 1),
                      vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(blacksmith.fame)), 1)
                    ]);
                  }), 128))
                ]),
                _: 1
              }, 8, ["rank_attributes"]),
              vue.createVNode(_sfc_main$1x, {
                class: "p-3",
                links: vue.unref(blacksmiths).links
              }, null, 8, ["links"])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
});
const _sfc_setup$t = _sfc_main$t.setup;
_sfc_main$t.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Rankings/Blacksmith.vue");
  return _sfc_setup$t ? _sfc_setup$t(props, ctx) : void 0;
};
var Blacksmith = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": _sfc_main$t
}, Symbol.toStringTag, { value: "Module" }));
const __default__$g = {
  layout: RankingLayout
};
const _sfc_main$s = /* @__PURE__ */ Object.assign(__default__$g, {
  __name: "CashPoints",
  __ssrInlineRender: true,
  setup(__props) {
    const url = vue.ref({});
    const cash_points = vue.computed(() => inertiaVue3.usePage().props.value.cash_points);
    const rank_attributes = vue.ref([
      "Player",
      "Guild",
      "Level",
      "Online",
      "Country",
      "Points"
    ]);
    const rank_type = vue.ref([
      { name: "Job Level", id: "JL" },
      { name: "Base Level", id: "BL" },
      { name: "Amount", id: "A" },
      { name: "Status", id: "S" }
    ]);
    vue.onMounted(() => {
      cash_points.value.data.forEach((cash_point) => {
        axios.get(`/api/${cash_point.guild_id}/emblem`).then((res) => {
          if (res.data.url === "X")
            return;
          url.value[cash_point.guild_id] = res.data.url;
        });
      });
    });
    return (_ctx, _push, _parent, _attrs) => {
      const _component_font_awesome_icon = vue.resolveComponent("font-awesome-icon");
      _push(serverRenderer.ssrRenderComponent(_sfc_main$x, vue.mergeProps({
        title: "Cash Points",
        rank_filter: rank_type.value,
        rank: "cashpoints",
        filter_type: "ranking"
      }, _attrs), {
        default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(RankingTable, { rank_attributes: rank_attributes.value }, {
              row: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<!--[-->`);
                  serverRenderer.ssrRenderList(vue.unref(cash_points).data, (cash_point, index) => {
                    var _a2;
                    _push3(`<tr class="spaceUnder hover:bg-gray-800/40"${_scopeId2}>`);
                    if (index == 0) {
                      _push3(`<td class="px-5 py-3"${_scopeId2}>`);
                      _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                        class: "text-2xl p-1 w-9 text-yellow-500",
                        icon: "fa-solid fa-trophy"
                      }, null, _parent3, _scopeId2));
                      _push3(`</td>`);
                    } else {
                      _push3(`<!---->`);
                    }
                    if (index == 1) {
                      _push3(`<td class="px-5 py-3"${_scopeId2}>`);
                      _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                        class: "text-2xl p-1 w-9 text-silver-600",
                        icon: "fa-solid fa-trophy"
                      }, null, _parent3, _scopeId2));
                      _push3(`</td>`);
                    } else {
                      _push3(`<!---->`);
                    }
                    if (index == 2) {
                      _push3(`<td class="px-5 py-3"${_scopeId2}>`);
                      _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                        class: "text-2xl p-1 w-9 text-yellow-700",
                        icon: "fa-solid fa-trophy"
                      }, null, _parent3, _scopeId2));
                      _push3(`</td>`);
                    } else if (index > 2) {
                      _push3(`<td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(index + 1)}</td>`);
                    } else {
                      _push3(`<!---->`);
                    }
                    _push3(`<td class="px-5 py-3"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><img${serverRenderer.ssrRenderAttr("src", `/rochar/characterhead/${cash_point.name}`)} alt=""${_scopeId2}><a href=""${_scopeId2}><span class="text-[#3b87f6]"${_scopeId2}>${serverRenderer.ssrInterpolate(cash_point.name)}</span> (${serverRenderer.ssrInterpolate(vue.unref(get_job_name)(cash_point.job))}) </a></div></td><td class="px-5 py-3"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><div class="flex items-center"${_scopeId2}><img class="mr-2"${serverRenderer.ssrRenderAttr("src", `/${url.value[cash_point.guild_id]} `)} alt=""${_scopeId2}> ${serverRenderer.ssrInterpolate((_a2 = cash_point.GName) != null ? _a2 : "No guild \u274C")}</div></div></td><td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(cash_point.lvl)} / ${serverRenderer.ssrInterpolate(cash_point.blvl)}</td><td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(isOnline)(cash_point.online))}</td><td class="px-5 py-3"${_scopeId2}>`);
                    _push3(serverRenderer.ssrRenderComponent(vue.unref(CountryFlag__default["default"]), {
                      country: cash_point.country,
                      size: "normal"
                    }, null, _parent3, _scopeId2));
                    _push3(`</td><td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(cash_point.points))}</td></tr>`);
                  });
                  _push3(`<!--]-->`);
                } else {
                  return [
                    (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(vue.unref(cash_points).data, (cash_point, index) => {
                      var _a2;
                      return vue.openBlock(), vue.createBlock("tr", {
                        class: "spaceUnder hover:bg-gray-800/40",
                        key: index
                      }, [
                        index == 0 ? (vue.openBlock(), vue.createBlock("td", {
                          key: 0,
                          class: "px-5 py-3"
                        }, [
                          vue.createVNode(_component_font_awesome_icon, {
                            class: "text-2xl p-1 w-9 text-yellow-500",
                            icon: "fa-solid fa-trophy"
                          })
                        ])) : vue.createCommentVNode("", true),
                        index == 1 ? (vue.openBlock(), vue.createBlock("td", {
                          key: 1,
                          class: "px-5 py-3"
                        }, [
                          vue.createVNode(_component_font_awesome_icon, {
                            class: "text-2xl p-1 w-9 text-silver-600",
                            icon: "fa-solid fa-trophy"
                          })
                        ])) : vue.createCommentVNode("", true),
                        index == 2 ? (vue.openBlock(), vue.createBlock("td", {
                          key: 2,
                          class: "px-5 py-3"
                        }, [
                          vue.createVNode(_component_font_awesome_icon, {
                            class: "text-2xl p-1 w-9 text-yellow-700",
                            icon: "fa-solid fa-trophy"
                          })
                        ])) : index > 2 ? (vue.openBlock(), vue.createBlock("td", {
                          key: 3,
                          class: "px-5 py-3"
                        }, vue.toDisplayString(index + 1), 1)) : vue.createCommentVNode("", true),
                        vue.createVNode("td", { class: "px-5 py-3" }, [
                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                            vue.createVNode("img", {
                              src: `/rochar/characterhead/${cash_point.name}`,
                              alt: ""
                            }, null, 8, ["src"]),
                            vue.createVNode("a", { href: "" }, [
                              vue.createVNode("span", { class: "text-[#3b87f6]" }, vue.toDisplayString(cash_point.name), 1),
                              vue.createTextVNode(" (" + vue.toDisplayString(vue.unref(get_job_name)(cash_point.job)) + ") ", 1)
                            ])
                          ])
                        ]),
                        vue.createVNode("td", { class: "px-5 py-3" }, [
                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                            vue.createVNode("div", { class: "flex items-center" }, [
                              vue.createVNode("img", {
                                class: "mr-2",
                                src: `/${url.value[cash_point.guild_id]} `,
                                alt: ""
                              }, null, 8, ["src"]),
                              vue.createTextVNode(" " + vue.toDisplayString((_a2 = cash_point.GName) != null ? _a2 : "No guild \u274C"), 1)
                            ])
                          ])
                        ]),
                        vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(cash_point.lvl) + " / " + vue.toDisplayString(cash_point.blvl), 1),
                        vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(isOnline)(cash_point.online)), 1),
                        vue.createVNode("td", { class: "px-5 py-3" }, [
                          vue.createVNode(vue.unref(CountryFlag__default["default"]), {
                            country: cash_point.country,
                            size: "normal"
                          }, null, 8, ["country"])
                        ]),
                        vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(cash_point.points)), 1)
                      ]);
                    }), 128))
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_sfc_main$1x, {
              class: "p-3",
              links: vue.unref(cash_points).links
            }, null, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(RankingTable, { rank_attributes: rank_attributes.value }, {
                row: vue.withCtx(() => [
                  (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(vue.unref(cash_points).data, (cash_point, index) => {
                    var _a2;
                    return vue.openBlock(), vue.createBlock("tr", {
                      class: "spaceUnder hover:bg-gray-800/40",
                      key: index
                    }, [
                      index == 0 ? (vue.openBlock(), vue.createBlock("td", {
                        key: 0,
                        class: "px-5 py-3"
                      }, [
                        vue.createVNode(_component_font_awesome_icon, {
                          class: "text-2xl p-1 w-9 text-yellow-500",
                          icon: "fa-solid fa-trophy"
                        })
                      ])) : vue.createCommentVNode("", true),
                      index == 1 ? (vue.openBlock(), vue.createBlock("td", {
                        key: 1,
                        class: "px-5 py-3"
                      }, [
                        vue.createVNode(_component_font_awesome_icon, {
                          class: "text-2xl p-1 w-9 text-silver-600",
                          icon: "fa-solid fa-trophy"
                        })
                      ])) : vue.createCommentVNode("", true),
                      index == 2 ? (vue.openBlock(), vue.createBlock("td", {
                        key: 2,
                        class: "px-5 py-3"
                      }, [
                        vue.createVNode(_component_font_awesome_icon, {
                          class: "text-2xl p-1 w-9 text-yellow-700",
                          icon: "fa-solid fa-trophy"
                        })
                      ])) : index > 2 ? (vue.openBlock(), vue.createBlock("td", {
                        key: 3,
                        class: "px-5 py-3"
                      }, vue.toDisplayString(index + 1), 1)) : vue.createCommentVNode("", true),
                      vue.createVNode("td", { class: "px-5 py-3" }, [
                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                          vue.createVNode("img", {
                            src: `/rochar/characterhead/${cash_point.name}`,
                            alt: ""
                          }, null, 8, ["src"]),
                          vue.createVNode("a", { href: "" }, [
                            vue.createVNode("span", { class: "text-[#3b87f6]" }, vue.toDisplayString(cash_point.name), 1),
                            vue.createTextVNode(" (" + vue.toDisplayString(vue.unref(get_job_name)(cash_point.job)) + ") ", 1)
                          ])
                        ])
                      ]),
                      vue.createVNode("td", { class: "px-5 py-3" }, [
                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                          vue.createVNode("div", { class: "flex items-center" }, [
                            vue.createVNode("img", {
                              class: "mr-2",
                              src: `/${url.value[cash_point.guild_id]} `,
                              alt: ""
                            }, null, 8, ["src"]),
                            vue.createTextVNode(" " + vue.toDisplayString((_a2 = cash_point.GName) != null ? _a2 : "No guild \u274C"), 1)
                          ])
                        ])
                      ]),
                      vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(cash_point.lvl) + " / " + vue.toDisplayString(cash_point.blvl), 1),
                      vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(isOnline)(cash_point.online)), 1),
                      vue.createVNode("td", { class: "px-5 py-3" }, [
                        vue.createVNode(vue.unref(CountryFlag__default["default"]), {
                          country: cash_point.country,
                          size: "normal"
                        }, null, 8, ["country"])
                      ]),
                      vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(cash_point.points)), 1)
                    ]);
                  }), 128))
                ]),
                _: 1
              }, 8, ["rank_attributes"]),
              vue.createVNode(_sfc_main$1x, {
                class: "p-3",
                links: vue.unref(cash_points).links
              }, null, 8, ["links"])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
});
const _sfc_setup$s = _sfc_main$s.setup;
_sfc_main$s.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Rankings/CashPoints.vue");
  return _sfc_setup$s ? _sfc_setup$s(props, ctx) : void 0;
};
var CashPoints$2 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": _sfc_main$s
}, Symbol.toStringTag, { value: "Module" }));
const __default__$f = {
  layout: RankingLayout
};
const _sfc_main$r = /* @__PURE__ */ Object.assign(__default__$f, {
  __name: "Deaths",
  __ssrInlineRender: true,
  setup(__props) {
    const deaths = vue.computed(() => inertiaVue3.usePage().props.value.deaths_player);
    const url = vue.ref({});
    const rank_attributes = vue.ref([
      "Player",
      "Guild",
      "Level",
      "Online",
      "Country",
      "Deaths"
    ]);
    const rank_type = vue.ref([
      { name: "Job Level", id: "JL" },
      { name: "Base Level", id: "BL" },
      { name: "Points", id: "A" }
    ]);
    vue.onMounted(() => {
      deaths.value.data.forEach((death) => {
        axios__default["default"].get(`/api/${death.guild_id}/emblem`).then((res) => {
          if (res.data.url === "X")
            return;
          url.value[death.guild_id] = res.data.url;
        });
      });
    });
    return (_ctx, _push, _parent, _attrs) => {
      const _component_font_awesome_icon = vue.resolveComponent("font-awesome-icon");
      _push(serverRenderer.ssrRenderComponent(_sfc_main$x, vue.mergeProps({
        title: "Deaths Counter",
        rank_filter: rank_type.value,
        rank: "deaths",
        filter_type: "ranking"
      }, _attrs), {
        default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(RankingTable, { rank_attributes: rank_attributes.value }, {
              row: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<!--[-->`);
                  serverRenderer.ssrRenderList(vue.unref(deaths).data, (death, index) => {
                    var _a2;
                    _push3(`<tr class="spaceUnder hover:bg-gray-800/40"${_scopeId2}>`);
                    if (index == 0) {
                      _push3(`<td class="px-5 py-3"${_scopeId2}>`);
                      _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                        class: "text-2xl p-1 w-9 text-yellow-500",
                        icon: "fa-solid fa-trophy"
                      }, null, _parent3, _scopeId2));
                      _push3(`</td>`);
                    } else {
                      _push3(`<!---->`);
                    }
                    if (index == 1) {
                      _push3(`<td class="px-5 py-3"${_scopeId2}>`);
                      _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                        class: "text-2xl p-1 w-9 text-silver-600",
                        icon: "fa-solid fa-trophy"
                      }, null, _parent3, _scopeId2));
                      _push3(`</td>`);
                    } else {
                      _push3(`<!---->`);
                    }
                    if (index == 2) {
                      _push3(`<td class="px-5 py-3"${_scopeId2}>`);
                      _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                        class: "text-2xl p-1 w-9 text-yellow-700",
                        icon: "fa-solid fa-trophy"
                      }, null, _parent3, _scopeId2));
                      _push3(`</td>`);
                    } else if (index > 2) {
                      _push3(`<td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(index + 1)}</td>`);
                    } else {
                      _push3(`<!---->`);
                    }
                    _push3(`<td class="px-5 py-3"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><img${serverRenderer.ssrRenderAttr("src", `/rochar/characterhead/${death.name}`)} alt=""${_scopeId2}><a href=""${_scopeId2}><span class="text-[#3b87f6]"${_scopeId2}>${serverRenderer.ssrInterpolate(death.char_name)}</span> (${serverRenderer.ssrInterpolate(vue.unref(get_job_name)(death.class))}) </a></div></td><td class="px-5 py-3"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><div class="flex items-center"${_scopeId2}><img class="mr-2"${serverRenderer.ssrRenderAttr("src", `/${url.value[death.guild_id]} `)} alt=""${_scopeId2}> ${serverRenderer.ssrInterpolate((_a2 = death.guild_name) != null ? _a2 : "No guild \u274C")}</div></div></td><td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(death.base_level)} / ${serverRenderer.ssrInterpolate(death.job_level)}</td><td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(isOnline)(death.online))}</td><td class="px-5 py-3"${_scopeId2}>`);
                    _push3(serverRenderer.ssrRenderComponent(vue.unref(CountryFlag__default["default"]), {
                      country: death.country,
                      size: "normal"
                    }, null, _parent3, _scopeId2));
                    _push3(`</td><td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(death.death_count))}</td></tr>`);
                  });
                  _push3(`<!--]-->`);
                } else {
                  return [
                    (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(vue.unref(deaths).data, (death, index) => {
                      var _a2;
                      return vue.openBlock(), vue.createBlock("tr", {
                        class: "spaceUnder hover:bg-gray-800/40",
                        key: index
                      }, [
                        index == 0 ? (vue.openBlock(), vue.createBlock("td", {
                          key: 0,
                          class: "px-5 py-3"
                        }, [
                          vue.createVNode(_component_font_awesome_icon, {
                            class: "text-2xl p-1 w-9 text-yellow-500",
                            icon: "fa-solid fa-trophy"
                          })
                        ])) : vue.createCommentVNode("", true),
                        index == 1 ? (vue.openBlock(), vue.createBlock("td", {
                          key: 1,
                          class: "px-5 py-3"
                        }, [
                          vue.createVNode(_component_font_awesome_icon, {
                            class: "text-2xl p-1 w-9 text-silver-600",
                            icon: "fa-solid fa-trophy"
                          })
                        ])) : vue.createCommentVNode("", true),
                        index == 2 ? (vue.openBlock(), vue.createBlock("td", {
                          key: 2,
                          class: "px-5 py-3"
                        }, [
                          vue.createVNode(_component_font_awesome_icon, {
                            class: "text-2xl p-1 w-9 text-yellow-700",
                            icon: "fa-solid fa-trophy"
                          })
                        ])) : index > 2 ? (vue.openBlock(), vue.createBlock("td", {
                          key: 3,
                          class: "px-5 py-3"
                        }, vue.toDisplayString(index + 1), 1)) : vue.createCommentVNode("", true),
                        vue.createVNode("td", { class: "px-5 py-3" }, [
                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                            vue.createVNode("img", {
                              src: `/rochar/characterhead/${death.name}`,
                              alt: ""
                            }, null, 8, ["src"]),
                            vue.createVNode("a", { href: "" }, [
                              vue.createVNode("span", { class: "text-[#3b87f6]" }, vue.toDisplayString(death.char_name), 1),
                              vue.createTextVNode(" (" + vue.toDisplayString(vue.unref(get_job_name)(death.class)) + ") ", 1)
                            ])
                          ])
                        ]),
                        vue.createVNode("td", { class: "px-5 py-3" }, [
                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                            vue.createVNode("div", { class: "flex items-center" }, [
                              vue.createVNode("img", {
                                class: "mr-2",
                                src: `/${url.value[death.guild_id]} `,
                                alt: ""
                              }, null, 8, ["src"]),
                              vue.createTextVNode(" " + vue.toDisplayString((_a2 = death.guild_name) != null ? _a2 : "No guild \u274C"), 1)
                            ])
                          ])
                        ]),
                        vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(death.base_level) + " / " + vue.toDisplayString(death.job_level), 1),
                        vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(isOnline)(death.online)), 1),
                        vue.createVNode("td", { class: "px-5 py-3" }, [
                          vue.createVNode(vue.unref(CountryFlag__default["default"]), {
                            country: death.country,
                            size: "normal"
                          }, null, 8, ["country"])
                        ]),
                        vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(death.death_count)), 1)
                      ]);
                    }), 128))
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_sfc_main$1x, {
              class: "p-3",
              links: vue.unref(deaths).links
            }, null, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(RankingTable, { rank_attributes: rank_attributes.value }, {
                row: vue.withCtx(() => [
                  (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(vue.unref(deaths).data, (death, index) => {
                    var _a2;
                    return vue.openBlock(), vue.createBlock("tr", {
                      class: "spaceUnder hover:bg-gray-800/40",
                      key: index
                    }, [
                      index == 0 ? (vue.openBlock(), vue.createBlock("td", {
                        key: 0,
                        class: "px-5 py-3"
                      }, [
                        vue.createVNode(_component_font_awesome_icon, {
                          class: "text-2xl p-1 w-9 text-yellow-500",
                          icon: "fa-solid fa-trophy"
                        })
                      ])) : vue.createCommentVNode("", true),
                      index == 1 ? (vue.openBlock(), vue.createBlock("td", {
                        key: 1,
                        class: "px-5 py-3"
                      }, [
                        vue.createVNode(_component_font_awesome_icon, {
                          class: "text-2xl p-1 w-9 text-silver-600",
                          icon: "fa-solid fa-trophy"
                        })
                      ])) : vue.createCommentVNode("", true),
                      index == 2 ? (vue.openBlock(), vue.createBlock("td", {
                        key: 2,
                        class: "px-5 py-3"
                      }, [
                        vue.createVNode(_component_font_awesome_icon, {
                          class: "text-2xl p-1 w-9 text-yellow-700",
                          icon: "fa-solid fa-trophy"
                        })
                      ])) : index > 2 ? (vue.openBlock(), vue.createBlock("td", {
                        key: 3,
                        class: "px-5 py-3"
                      }, vue.toDisplayString(index + 1), 1)) : vue.createCommentVNode("", true),
                      vue.createVNode("td", { class: "px-5 py-3" }, [
                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                          vue.createVNode("img", {
                            src: `/rochar/characterhead/${death.name}`,
                            alt: ""
                          }, null, 8, ["src"]),
                          vue.createVNode("a", { href: "" }, [
                            vue.createVNode("span", { class: "text-[#3b87f6]" }, vue.toDisplayString(death.char_name), 1),
                            vue.createTextVNode(" (" + vue.toDisplayString(vue.unref(get_job_name)(death.class)) + ") ", 1)
                          ])
                        ])
                      ]),
                      vue.createVNode("td", { class: "px-5 py-3" }, [
                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                          vue.createVNode("div", { class: "flex items-center" }, [
                            vue.createVNode("img", {
                              class: "mr-2",
                              src: `/${url.value[death.guild_id]} `,
                              alt: ""
                            }, null, 8, ["src"]),
                            vue.createTextVNode(" " + vue.toDisplayString((_a2 = death.guild_name) != null ? _a2 : "No guild \u274C"), 1)
                          ])
                        ])
                      ]),
                      vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(death.base_level) + " / " + vue.toDisplayString(death.job_level), 1),
                      vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(isOnline)(death.online)), 1),
                      vue.createVNode("td", { class: "px-5 py-3" }, [
                        vue.createVNode(vue.unref(CountryFlag__default["default"]), {
                          country: death.country,
                          size: "normal"
                        }, null, 8, ["country"])
                      ]),
                      vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(death.death_count)), 1)
                    ]);
                  }), 128))
                ]),
                _: 1
              }, 8, ["rank_attributes"]),
              vue.createVNode(_sfc_main$1x, {
                class: "p-3",
                links: vue.unref(deaths).links
              }, null, 8, ["links"])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
});
const _sfc_setup$r = _sfc_main$r.setup;
_sfc_main$r.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Rankings/Deaths.vue");
  return _sfc_setup$r ? _sfc_setup$r(props, ctx) : void 0;
};
var Deaths = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": _sfc_main$r
}, Symbol.toStringTag, { value: "Module" }));
const __default__$e = {
  layout: RankingLayout
};
const _sfc_main$q = /* @__PURE__ */ Object.assign(__default__$e, {
  __name: "Guild",
  __ssrInlineRender: true,
  setup(__props) {
    const guilds = inertiaVue3.usePage().props.value.guilds;
    const rank_attributes = vue.ref([
      "Guild Name",
      "Emblem",
      "Guild LvL",
      "Exp",
      "Average Level"
    ]);
    console.log(guilds);
    return (_ctx, _push, _parent, _attrs) => {
      const _component_font_awesome_icon = vue.resolveComponent("font-awesome-icon");
      _push(serverRenderer.ssrRenderComponent(_sfc_main$x, vue.mergeProps({ title: "Cash Points" }, _attrs), {
        default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(RankingTable, { rank_attributes: rank_attributes.value }, {
              row: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<!--[-->`);
                  serverRenderer.ssrRenderList(vue.unref(guilds).data, (guild, index) => {
                    _push3(`<tr class="spaceUnder hover:bg-gray-800/40"${_scopeId2}>`);
                    if (index == 0) {
                      _push3(`<td class="px-5 py-3"${_scopeId2}>`);
                      _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                        class: "text-2xl p-1 w-9 text-yellow-500",
                        icon: "fa-solid fa-trophy"
                      }, null, _parent3, _scopeId2));
                      _push3(`</td>`);
                    } else {
                      _push3(`<!---->`);
                    }
                    if (index == 1) {
                      _push3(`<td class="px-5 py-3"${_scopeId2}>`);
                      _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                        class: "text-2xl p-1 w-9 text-silver-600",
                        icon: "fa-solid fa-trophy"
                      }, null, _parent3, _scopeId2));
                      _push3(`</td>`);
                    } else {
                      _push3(`<!---->`);
                    }
                    if (index == 2) {
                      _push3(`<td class="px-5 py-3"${_scopeId2}>`);
                      _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                        class: "text-2xl p-1 w-9 text-yellow-700",
                        icon: "fa-solid fa-trophy"
                      }, null, _parent3, _scopeId2));
                      _push3(`</td>`);
                    } else if (index > 2) {
                      _push3(`<td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(index + 1)}</td>`);
                    } else {
                      _push3(`<!---->`);
                    }
                    _push3(`<td class="px-5 py-3"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><a href=""${_scopeId2}><span class="text-[#3b87f6]"${_scopeId2}>${serverRenderer.ssrInterpolate(guild.name)}</span></a></div></td><td class="px-5 py-3"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><div class="flex items-center"${_scopeId2}></div></div></td><td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(guild.guild_lv)}</td><td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(guild.exp))}</td><td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(guild.average_lv))}</td></tr>`);
                  });
                  _push3(`<!--]-->`);
                } else {
                  return [
                    (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(vue.unref(guilds).data, (guild, index) => {
                      return vue.openBlock(), vue.createBlock("tr", {
                        class: "spaceUnder hover:bg-gray-800/40",
                        key: index
                      }, [
                        index == 0 ? (vue.openBlock(), vue.createBlock("td", {
                          key: 0,
                          class: "px-5 py-3"
                        }, [
                          vue.createVNode(_component_font_awesome_icon, {
                            class: "text-2xl p-1 w-9 text-yellow-500",
                            icon: "fa-solid fa-trophy"
                          })
                        ])) : vue.createCommentVNode("", true),
                        index == 1 ? (vue.openBlock(), vue.createBlock("td", {
                          key: 1,
                          class: "px-5 py-3"
                        }, [
                          vue.createVNode(_component_font_awesome_icon, {
                            class: "text-2xl p-1 w-9 text-silver-600",
                            icon: "fa-solid fa-trophy"
                          })
                        ])) : vue.createCommentVNode("", true),
                        index == 2 ? (vue.openBlock(), vue.createBlock("td", {
                          key: 2,
                          class: "px-5 py-3"
                        }, [
                          vue.createVNode(_component_font_awesome_icon, {
                            class: "text-2xl p-1 w-9 text-yellow-700",
                            icon: "fa-solid fa-trophy"
                          })
                        ])) : index > 2 ? (vue.openBlock(), vue.createBlock("td", {
                          key: 3,
                          class: "px-5 py-3"
                        }, vue.toDisplayString(index + 1), 1)) : vue.createCommentVNode("", true),
                        vue.createVNode("td", { class: "px-5 py-3" }, [
                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                            vue.createVNode("a", { href: "" }, [
                              vue.createVNode("span", { class: "text-[#3b87f6]" }, vue.toDisplayString(guild.name), 1)
                            ])
                          ])
                        ]),
                        vue.createVNode("td", { class: "px-5 py-3" }, [
                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                            vue.createVNode("div", { class: "flex items-center" })
                          ])
                        ]),
                        vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(guild.guild_lv), 1),
                        vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(guild.exp)), 1),
                        vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(guild.average_lv)), 1)
                      ]);
                    }), 128))
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_sfc_main$1x, {
              class: "p-3",
              links: vue.unref(guilds).links
            }, null, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(RankingTable, { rank_attributes: rank_attributes.value }, {
                row: vue.withCtx(() => [
                  (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(vue.unref(guilds).data, (guild, index) => {
                    return vue.openBlock(), vue.createBlock("tr", {
                      class: "spaceUnder hover:bg-gray-800/40",
                      key: index
                    }, [
                      index == 0 ? (vue.openBlock(), vue.createBlock("td", {
                        key: 0,
                        class: "px-5 py-3"
                      }, [
                        vue.createVNode(_component_font_awesome_icon, {
                          class: "text-2xl p-1 w-9 text-yellow-500",
                          icon: "fa-solid fa-trophy"
                        })
                      ])) : vue.createCommentVNode("", true),
                      index == 1 ? (vue.openBlock(), vue.createBlock("td", {
                        key: 1,
                        class: "px-5 py-3"
                      }, [
                        vue.createVNode(_component_font_awesome_icon, {
                          class: "text-2xl p-1 w-9 text-silver-600",
                          icon: "fa-solid fa-trophy"
                        })
                      ])) : vue.createCommentVNode("", true),
                      index == 2 ? (vue.openBlock(), vue.createBlock("td", {
                        key: 2,
                        class: "px-5 py-3"
                      }, [
                        vue.createVNode(_component_font_awesome_icon, {
                          class: "text-2xl p-1 w-9 text-yellow-700",
                          icon: "fa-solid fa-trophy"
                        })
                      ])) : index > 2 ? (vue.openBlock(), vue.createBlock("td", {
                        key: 3,
                        class: "px-5 py-3"
                      }, vue.toDisplayString(index + 1), 1)) : vue.createCommentVNode("", true),
                      vue.createVNode("td", { class: "px-5 py-3" }, [
                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                          vue.createVNode("a", { href: "" }, [
                            vue.createVNode("span", { class: "text-[#3b87f6]" }, vue.toDisplayString(guild.name), 1)
                          ])
                        ])
                      ]),
                      vue.createVNode("td", { class: "px-5 py-3" }, [
                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                          vue.createVNode("div", { class: "flex items-center" })
                        ])
                      ]),
                      vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(guild.guild_lv), 1),
                      vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(guild.exp)), 1),
                      vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(guild.average_lv)), 1)
                    ]);
                  }), 128))
                ]),
                _: 1
              }, 8, ["rank_attributes"]),
              vue.createVNode(_sfc_main$1x, {
                class: "p-3",
                links: vue.unref(guilds).links
              }, null, 8, ["links"])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
});
const _sfc_setup$q = _sfc_main$q.setup;
_sfc_main$q.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Rankings/Guild.vue");
  return _sfc_setup$q ? _sfc_setup$q(props, ctx) : void 0;
};
var Guild = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": _sfc_main$q
}, Symbol.toStringTag, { value: "Module" }));
const __default__$d = {
  layout: RankingLayout
};
const _sfc_main$p = /* @__PURE__ */ Object.assign(__default__$d, {
  __name: "Homunculus",
  __ssrInlineRender: true,
  setup(__props) {
    const homunculus = inertiaVue3.usePage().props.value.homunculus;
    const url = vue.ref({});
    const rank_attributes = vue.ref([
      "Player",
      "Homunculus",
      "Level",
      "Online",
      "Experience",
      "Intimacy"
    ]);
    return (_ctx, _push, _parent, _attrs) => {
      const _component_font_awesome_icon = vue.resolveComponent("font-awesome-icon");
      _push(serverRenderer.ssrRenderComponent(_sfc_main$x, vue.mergeProps({ title: "Deaths Counter" }, _attrs), {
        default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(RankingTable, { rank_attributes: rank_attributes.value }, {
              row: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<!--[-->`);
                  serverRenderer.ssrRenderList(vue.unref(homunculus).data, (homun, index) => {
                    _push3(`<tr class="spaceUnder hover:bg-gray-800/40"${_scopeId2}>`);
                    if (index == 0) {
                      _push3(`<td class="px-5 py-3"${_scopeId2}>`);
                      _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                        class: "text-2xl p-1 w-9 text-yellow-500",
                        icon: "fa-solid fa-trophy"
                      }, null, _parent3, _scopeId2));
                      _push3(`</td>`);
                    } else {
                      _push3(`<!---->`);
                    }
                    if (index == 1) {
                      _push3(`<td class="px-5 py-3"${_scopeId2}>`);
                      _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                        class: "text-2xl p-1 w-9 text-silver-600",
                        icon: "fa-solid fa-trophy"
                      }, null, _parent3, _scopeId2));
                      _push3(`</td>`);
                    } else {
                      _push3(`<!---->`);
                    }
                    if (index == 2) {
                      _push3(`<td class="px-5 py-3"${_scopeId2}>`);
                      _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                        class: "text-2xl p-1 w-9 text-yellow-700",
                        icon: "fa-solid fa-trophy"
                      }, null, _parent3, _scopeId2));
                      _push3(`</td>`);
                    } else if (index > 2) {
                      _push3(`<td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(index + 1)}</td>`);
                    } else {
                      _push3(`<!---->`);
                    }
                    _push3(`<td class="px-5 py-3"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><img${serverRenderer.ssrRenderAttr("src", `/rochar/characterhead/${homun.name}`)} alt=""${_scopeId2}><a href=""${_scopeId2}><span class="text-[#3b87f6]"${_scopeId2}>${serverRenderer.ssrInterpolate(homun.owner_name)}</span> (${serverRenderer.ssrInterpolate(vue.unref(get_job_name)(homun.class))}) </a></div></td><td class="px-5 py-3"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><div class="flex items-center"${_scopeId2}><img class="mr-2"${serverRenderer.ssrRenderAttr("src", `/${url.value[homun.guild_id]} `)} alt=""${_scopeId2}> ${serverRenderer.ssrInterpolate(homun.homun_name)}</div></div></td><td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(homun.base_level)} / ${serverRenderer.ssrInterpolate(homun.job_level)}</td><td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(isOnline)(homun.online))}</td><td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(homun.exp))}</td><td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(homun.intimacy))}</td></tr>`);
                  });
                  _push3(`<!--]-->`);
                } else {
                  return [
                    (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(vue.unref(homunculus).data, (homun, index) => {
                      return vue.openBlock(), vue.createBlock("tr", {
                        class: "spaceUnder hover:bg-gray-800/40",
                        key: index
                      }, [
                        index == 0 ? (vue.openBlock(), vue.createBlock("td", {
                          key: 0,
                          class: "px-5 py-3"
                        }, [
                          vue.createVNode(_component_font_awesome_icon, {
                            class: "text-2xl p-1 w-9 text-yellow-500",
                            icon: "fa-solid fa-trophy"
                          })
                        ])) : vue.createCommentVNode("", true),
                        index == 1 ? (vue.openBlock(), vue.createBlock("td", {
                          key: 1,
                          class: "px-5 py-3"
                        }, [
                          vue.createVNode(_component_font_awesome_icon, {
                            class: "text-2xl p-1 w-9 text-silver-600",
                            icon: "fa-solid fa-trophy"
                          })
                        ])) : vue.createCommentVNode("", true),
                        index == 2 ? (vue.openBlock(), vue.createBlock("td", {
                          key: 2,
                          class: "px-5 py-3"
                        }, [
                          vue.createVNode(_component_font_awesome_icon, {
                            class: "text-2xl p-1 w-9 text-yellow-700",
                            icon: "fa-solid fa-trophy"
                          })
                        ])) : index > 2 ? (vue.openBlock(), vue.createBlock("td", {
                          key: 3,
                          class: "px-5 py-3"
                        }, vue.toDisplayString(index + 1), 1)) : vue.createCommentVNode("", true),
                        vue.createVNode("td", { class: "px-5 py-3" }, [
                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                            vue.createVNode("img", {
                              src: `/rochar/characterhead/${homun.name}`,
                              alt: ""
                            }, null, 8, ["src"]),
                            vue.createVNode("a", { href: "" }, [
                              vue.createVNode("span", { class: "text-[#3b87f6]" }, vue.toDisplayString(homun.owner_name), 1),
                              vue.createTextVNode(" (" + vue.toDisplayString(vue.unref(get_job_name)(homun.class)) + ") ", 1)
                            ])
                          ])
                        ]),
                        vue.createVNode("td", { class: "px-5 py-3" }, [
                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                            vue.createVNode("div", { class: "flex items-center" }, [
                              vue.createVNode("img", {
                                class: "mr-2",
                                src: `/${url.value[homun.guild_id]} `,
                                alt: ""
                              }, null, 8, ["src"]),
                              vue.createTextVNode(" " + vue.toDisplayString(homun.homun_name), 1)
                            ])
                          ])
                        ]),
                        vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(homun.base_level) + " / " + vue.toDisplayString(homun.job_level), 1),
                        vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(isOnline)(homun.online)), 1),
                        vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(homun.exp)), 1),
                        vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(homun.intimacy)), 1)
                      ]);
                    }), 128))
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_sfc_main$1x, {
              class: "p-3",
              links: vue.unref(homunculus).links
            }, null, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(RankingTable, { rank_attributes: rank_attributes.value }, {
                row: vue.withCtx(() => [
                  (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(vue.unref(homunculus).data, (homun, index) => {
                    return vue.openBlock(), vue.createBlock("tr", {
                      class: "spaceUnder hover:bg-gray-800/40",
                      key: index
                    }, [
                      index == 0 ? (vue.openBlock(), vue.createBlock("td", {
                        key: 0,
                        class: "px-5 py-3"
                      }, [
                        vue.createVNode(_component_font_awesome_icon, {
                          class: "text-2xl p-1 w-9 text-yellow-500",
                          icon: "fa-solid fa-trophy"
                        })
                      ])) : vue.createCommentVNode("", true),
                      index == 1 ? (vue.openBlock(), vue.createBlock("td", {
                        key: 1,
                        class: "px-5 py-3"
                      }, [
                        vue.createVNode(_component_font_awesome_icon, {
                          class: "text-2xl p-1 w-9 text-silver-600",
                          icon: "fa-solid fa-trophy"
                        })
                      ])) : vue.createCommentVNode("", true),
                      index == 2 ? (vue.openBlock(), vue.createBlock("td", {
                        key: 2,
                        class: "px-5 py-3"
                      }, [
                        vue.createVNode(_component_font_awesome_icon, {
                          class: "text-2xl p-1 w-9 text-yellow-700",
                          icon: "fa-solid fa-trophy"
                        })
                      ])) : index > 2 ? (vue.openBlock(), vue.createBlock("td", {
                        key: 3,
                        class: "px-5 py-3"
                      }, vue.toDisplayString(index + 1), 1)) : vue.createCommentVNode("", true),
                      vue.createVNode("td", { class: "px-5 py-3" }, [
                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                          vue.createVNode("img", {
                            src: `/rochar/characterhead/${homun.name}`,
                            alt: ""
                          }, null, 8, ["src"]),
                          vue.createVNode("a", { href: "" }, [
                            vue.createVNode("span", { class: "text-[#3b87f6]" }, vue.toDisplayString(homun.owner_name), 1),
                            vue.createTextVNode(" (" + vue.toDisplayString(vue.unref(get_job_name)(homun.class)) + ") ", 1)
                          ])
                        ])
                      ]),
                      vue.createVNode("td", { class: "px-5 py-3" }, [
                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                          vue.createVNode("div", { class: "flex items-center" }, [
                            vue.createVNode("img", {
                              class: "mr-2",
                              src: `/${url.value[homun.guild_id]} `,
                              alt: ""
                            }, null, 8, ["src"]),
                            vue.createTextVNode(" " + vue.toDisplayString(homun.homun_name), 1)
                          ])
                        ])
                      ]),
                      vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(homun.base_level) + " / " + vue.toDisplayString(homun.job_level), 1),
                      vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(isOnline)(homun.online)), 1),
                      vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(homun.exp)), 1),
                      vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(homun.intimacy)), 1)
                    ]);
                  }), 128))
                ]),
                _: 1
              }, 8, ["rank_attributes"]),
              vue.createVNode(_sfc_main$1x, {
                class: "p-3",
                links: vue.unref(homunculus).links
              }, null, 8, ["links"])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
});
const _sfc_setup$p = _sfc_main$p.setup;
_sfc_main$p.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Rankings/Homunculus.vue");
  return _sfc_setup$p ? _sfc_setup$p(props, ctx) : void 0;
};
var Homunculus = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": _sfc_main$p
}, Symbol.toStringTag, { value: "Module" }));
const __default__$c = {
  layout: RankingLayout
};
const _sfc_main$o = /* @__PURE__ */ Object.assign(__default__$c, {
  __name: "MonsterHunter",
  __ssrInlineRender: true,
  setup(__props) {
    const url = vue.ref({});
    const monster_hunter = vue.computed(() => inertiaVue3.usePage().props.value.monster_hunter);
    const rank_attributes = vue.ref([
      "Player",
      "Guild",
      "Level",
      "Online",
      "Country",
      "Points"
    ]);
    const rank_types = vue.ref([
      { id: "JL", name: "Job Level" },
      { id: "BL", name: "Base Level" },
      { id: "A", name: "Points" }
    ]);
    vue.onMounted(() => {
      monster_hunter.value.data.forEach((monster_hunter2) => {
        axios.get(`/api/${monster_hunter2.guild_id}/emblem`).then((res) => {
          if (res.data.url === "X")
            return;
          url.value[monster_hunter2.guild_id] = res.data.url;
        });
      });
    });
    return (_ctx, _push, _parent, _attrs) => {
      const _component_font_awesome_icon = vue.resolveComponent("font-awesome-icon");
      _push(serverRenderer.ssrRenderComponent(_sfc_main$x, vue.mergeProps({
        title: "Monster Hunter",
        rank_filter: rank_types.value,
        rank: "monster-hunter",
        filter_type: "ranking"
      }, _attrs), {
        default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(RankingTable, { rank_attributes: rank_attributes.value }, {
              row: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<!--[-->`);
                  serverRenderer.ssrRenderList(vue.unref(monster_hunter).data, (monster_hunter2, index) => {
                    var _a2;
                    _push3(`<tr class="spaceUnder hover:bg-gray-800/40"${_scopeId2}>`);
                    if (index == 0) {
                      _push3(`<td class="px-5 py-3"${_scopeId2}>`);
                      _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                        class: "text-2xl p-1 w-9 text-yellow-500",
                        icon: "fa-solid fa-trophy"
                      }, null, _parent3, _scopeId2));
                      _push3(`</td>`);
                    } else {
                      _push3(`<!---->`);
                    }
                    if (index == 1) {
                      _push3(`<td class="px-5 py-3"${_scopeId2}>`);
                      _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                        class: "text-2xl p-1 w-9 text-silver-600",
                        icon: "fa-solid fa-trophy"
                      }, null, _parent3, _scopeId2));
                      _push3(`</td>`);
                    } else {
                      _push3(`<!---->`);
                    }
                    if (index == 2) {
                      _push3(`<td class="px-5 py-3"${_scopeId2}>`);
                      _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                        class: "text-2xl p-1 w-9 text-yellow-700",
                        icon: "fa-solid fa-trophy"
                      }, null, _parent3, _scopeId2));
                      _push3(`</td>`);
                    } else if (index > 2) {
                      _push3(`<td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(index + 1)}</td>`);
                    } else {
                      _push3(`<!---->`);
                    }
                    _push3(`<td class="px-5 py-3"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><img${serverRenderer.ssrRenderAttr("src", `/rochar/characterhead/${monster_hunter2.name}`)} alt=""${_scopeId2}><a href=""${_scopeId2}><span class="text-[#3b87f6]"${_scopeId2}>${serverRenderer.ssrInterpolate(monster_hunter2.name)}</span> (${serverRenderer.ssrInterpolate(vue.unref(get_job_name)(monster_hunter2.job))}) </a></div></td><td class="px-5 py-3"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><div class="flex items-center"${_scopeId2}><img class="mr-2"${serverRenderer.ssrRenderAttr("src", `/${url.value[monster_hunter2.guild_id]} `)} alt=""${_scopeId2}> ${serverRenderer.ssrInterpolate((_a2 = monster_hunter2.GName) != null ? _a2 : "No guild \u274C")}</div></div></td><td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(monster_hunter2.lvl)} / ${serverRenderer.ssrInterpolate(monster_hunter2.blvl)}</td><td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(isOnline)(monster_hunter2.online))}</td><td class="px-5 py-3"${_scopeId2}>`);
                    _push3(serverRenderer.ssrRenderComponent(vue.unref(CountryFlag__default["default"]), {
                      country: monster_hunter2.country,
                      size: "normal"
                    }, null, _parent3, _scopeId2));
                    _push3(`</td><td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(monster_hunter2.points))}</td></tr>`);
                  });
                  _push3(`<!--]-->`);
                } else {
                  return [
                    (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(vue.unref(monster_hunter).data, (monster_hunter2, index) => {
                      var _a2;
                      return vue.openBlock(), vue.createBlock("tr", {
                        class: "spaceUnder hover:bg-gray-800/40",
                        key: index
                      }, [
                        index == 0 ? (vue.openBlock(), vue.createBlock("td", {
                          key: 0,
                          class: "px-5 py-3"
                        }, [
                          vue.createVNode(_component_font_awesome_icon, {
                            class: "text-2xl p-1 w-9 text-yellow-500",
                            icon: "fa-solid fa-trophy"
                          })
                        ])) : vue.createCommentVNode("", true),
                        index == 1 ? (vue.openBlock(), vue.createBlock("td", {
                          key: 1,
                          class: "px-5 py-3"
                        }, [
                          vue.createVNode(_component_font_awesome_icon, {
                            class: "text-2xl p-1 w-9 text-silver-600",
                            icon: "fa-solid fa-trophy"
                          })
                        ])) : vue.createCommentVNode("", true),
                        index == 2 ? (vue.openBlock(), vue.createBlock("td", {
                          key: 2,
                          class: "px-5 py-3"
                        }, [
                          vue.createVNode(_component_font_awesome_icon, {
                            class: "text-2xl p-1 w-9 text-yellow-700",
                            icon: "fa-solid fa-trophy"
                          })
                        ])) : index > 2 ? (vue.openBlock(), vue.createBlock("td", {
                          key: 3,
                          class: "px-5 py-3"
                        }, vue.toDisplayString(index + 1), 1)) : vue.createCommentVNode("", true),
                        vue.createVNode("td", { class: "px-5 py-3" }, [
                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                            vue.createVNode("img", {
                              src: `/rochar/characterhead/${monster_hunter2.name}`,
                              alt: ""
                            }, null, 8, ["src"]),
                            vue.createVNode("a", { href: "" }, [
                              vue.createVNode("span", { class: "text-[#3b87f6]" }, vue.toDisplayString(monster_hunter2.name), 1),
                              vue.createTextVNode(" (" + vue.toDisplayString(vue.unref(get_job_name)(monster_hunter2.job)) + ") ", 1)
                            ])
                          ])
                        ]),
                        vue.createVNode("td", { class: "px-5 py-3" }, [
                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                            vue.createVNode("div", { class: "flex items-center" }, [
                              vue.createVNode("img", {
                                class: "mr-2",
                                src: `/${url.value[monster_hunter2.guild_id]} `,
                                alt: ""
                              }, null, 8, ["src"]),
                              vue.createTextVNode(" " + vue.toDisplayString((_a2 = monster_hunter2.GName) != null ? _a2 : "No guild \u274C"), 1)
                            ])
                          ])
                        ]),
                        vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(monster_hunter2.lvl) + " / " + vue.toDisplayString(monster_hunter2.blvl), 1),
                        vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(isOnline)(monster_hunter2.online)), 1),
                        vue.createVNode("td", { class: "px-5 py-3" }, [
                          vue.createVNode(vue.unref(CountryFlag__default["default"]), {
                            country: monster_hunter2.country,
                            size: "normal"
                          }, null, 8, ["country"])
                        ]),
                        vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(monster_hunter2.points)), 1)
                      ]);
                    }), 128))
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_sfc_main$1x, {
              class: "p-3",
              links: vue.unref(monster_hunter).links
            }, null, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(RankingTable, { rank_attributes: rank_attributes.value }, {
                row: vue.withCtx(() => [
                  (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(vue.unref(monster_hunter).data, (monster_hunter2, index) => {
                    var _a2;
                    return vue.openBlock(), vue.createBlock("tr", {
                      class: "spaceUnder hover:bg-gray-800/40",
                      key: index
                    }, [
                      index == 0 ? (vue.openBlock(), vue.createBlock("td", {
                        key: 0,
                        class: "px-5 py-3"
                      }, [
                        vue.createVNode(_component_font_awesome_icon, {
                          class: "text-2xl p-1 w-9 text-yellow-500",
                          icon: "fa-solid fa-trophy"
                        })
                      ])) : vue.createCommentVNode("", true),
                      index == 1 ? (vue.openBlock(), vue.createBlock("td", {
                        key: 1,
                        class: "px-5 py-3"
                      }, [
                        vue.createVNode(_component_font_awesome_icon, {
                          class: "text-2xl p-1 w-9 text-silver-600",
                          icon: "fa-solid fa-trophy"
                        })
                      ])) : vue.createCommentVNode("", true),
                      index == 2 ? (vue.openBlock(), vue.createBlock("td", {
                        key: 2,
                        class: "px-5 py-3"
                      }, [
                        vue.createVNode(_component_font_awesome_icon, {
                          class: "text-2xl p-1 w-9 text-yellow-700",
                          icon: "fa-solid fa-trophy"
                        })
                      ])) : index > 2 ? (vue.openBlock(), vue.createBlock("td", {
                        key: 3,
                        class: "px-5 py-3"
                      }, vue.toDisplayString(index + 1), 1)) : vue.createCommentVNode("", true),
                      vue.createVNode("td", { class: "px-5 py-3" }, [
                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                          vue.createVNode("img", {
                            src: `/rochar/characterhead/${monster_hunter2.name}`,
                            alt: ""
                          }, null, 8, ["src"]),
                          vue.createVNode("a", { href: "" }, [
                            vue.createVNode("span", { class: "text-[#3b87f6]" }, vue.toDisplayString(monster_hunter2.name), 1),
                            vue.createTextVNode(" (" + vue.toDisplayString(vue.unref(get_job_name)(monster_hunter2.job)) + ") ", 1)
                          ])
                        ])
                      ]),
                      vue.createVNode("td", { class: "px-5 py-3" }, [
                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                          vue.createVNode("div", { class: "flex items-center" }, [
                            vue.createVNode("img", {
                              class: "mr-2",
                              src: `/${url.value[monster_hunter2.guild_id]} `,
                              alt: ""
                            }, null, 8, ["src"]),
                            vue.createTextVNode(" " + vue.toDisplayString((_a2 = monster_hunter2.GName) != null ? _a2 : "No guild \u274C"), 1)
                          ])
                        ])
                      ]),
                      vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(monster_hunter2.lvl) + " / " + vue.toDisplayString(monster_hunter2.blvl), 1),
                      vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(isOnline)(monster_hunter2.online)), 1),
                      vue.createVNode("td", { class: "px-5 py-3" }, [
                        vue.createVNode(vue.unref(CountryFlag__default["default"]), {
                          country: monster_hunter2.country,
                          size: "normal"
                        }, null, 8, ["country"])
                      ]),
                      vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(monster_hunter2.points)), 1)
                    ]);
                  }), 128))
                ]),
                _: 1
              }, 8, ["rank_attributes"]),
              vue.createVNode(_sfc_main$1x, {
                class: "p-3",
                links: vue.unref(monster_hunter).links
              }, null, 8, ["links"])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
});
const _sfc_setup$o = _sfc_main$o.setup;
_sfc_main$o.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Rankings/MonsterHunter.vue");
  return _sfc_setup$o ? _sfc_setup$o(props, ctx) : void 0;
};
var MonsterHunter = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": _sfc_main$o
}, Symbol.toStringTag, { value: "Module" }));
const __default__$b = vue.defineComponent({
  layout: RankingLayout
});
const _sfc_main$n = /* @__PURE__ */ Object.assign(__default__$b, {
  __name: "Mvps",
  __ssrInlineRender: true,
  setup(__props) {
    const mvps_count = vue.computed(() => inertiaVue3.usePage().props.value.mvps_count);
    const url = vue.ref({});
    const rank_attributes = vue.ref([
      "Name",
      "Guild",
      "Level",
      "Online",
      "Country",
      "MvP's"
    ]);
    const rank_types = vue.ref([
      { name: "Mvp Kills", id: "MK" },
      { name: "Status", id: "S" }
    ]);
    vue.onMounted(() => {
      mvps_count.value.data.forEach((mvps_count2) => {
        axios.get(`/api/${mvps_count2.guild_id}/emblem`).then((res) => {
          if (res.data.url === "X")
            return;
          url.value[mvps_count2.guild_id] = res.data.url;
        });
      });
    });
    return (_ctx, _push, _parent, _attrs) => {
      const _component_font_awesome_icon = vue.resolveComponent("font-awesome-icon");
      _push(serverRenderer.ssrRenderComponent(_sfc_main$x, vue.mergeProps({
        title: "MvP's",
        rank_filter: rank_types.value,
        rank: "mvps",
        filter_type: "ranking"
      }, _attrs), {
        default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(RankingTable, { rank_attributes: rank_attributes.value }, {
              row: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<!--[-->`);
                  serverRenderer.ssrRenderList(vue.unref(mvps_count).data, (mvp, index) => {
                    var _a2;
                    _push3(`<tr class="spaceUnder"${_scopeId2}>`);
                    if (index == 0) {
                      _push3(`<td class="px-5 py-3"${_scopeId2}>`);
                      _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                        class: "text-2xl p-1 w-9 text-yellow-500",
                        icon: "fa-solid fa-trophy"
                      }, null, _parent3, _scopeId2));
                      _push3(`</td>`);
                    } else {
                      _push3(`<!---->`);
                    }
                    if (index == 1) {
                      _push3(`<td class="px-5 py-3"${_scopeId2}>`);
                      _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                        class: "text-2xl p-1 w-9 text-silver-600",
                        icon: "fa-solid fa-trophy"
                      }, null, _parent3, _scopeId2));
                      _push3(`</td>`);
                    } else {
                      _push3(`<!---->`);
                    }
                    if (index == 2) {
                      _push3(`<td class="px-5 py-3"${_scopeId2}>`);
                      _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                        class: "text-2xl p-1 w-9 text-yellow-700",
                        icon: "fa-solid fa-trophy"
                      }, null, _parent3, _scopeId2));
                      _push3(`</td>`);
                    } else if (index > 2) {
                      _push3(`<td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(index + 1)}</td>`);
                    } else {
                      _push3(`<!---->`);
                    }
                    _push3(`<td class="px-5 py-3"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><img${serverRenderer.ssrRenderAttr("src", `/rochar/characterhead/${mvp.name}`)} alt=""${_scopeId2}><a href=""${_scopeId2}><span class="text-[#3b87f6]"${_scopeId2}>${serverRenderer.ssrInterpolate(mvp.name)}</span> (${serverRenderer.ssrInterpolate(vue.unref(get_job_name)(mvp.class))}) </a></div></td><td class="px-5 py-3"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><div class="flex items-center"${_scopeId2}><img class="mr-2"${serverRenderer.ssrRenderAttr("src", `/${url.value[mvp.guild_id]} `)} alt=""${_scopeId2}> ${serverRenderer.ssrInterpolate((_a2 = mvp.GName) != null ? _a2 : "No Guild \u274C")}</div></div></td><td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(mvp.base_level)} / ${serverRenderer.ssrInterpolate(mvp.job_level)}</td><td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(isOnline)(mvp.online))}</td><td class="px-5 py-3"${_scopeId2}>`);
                    _push3(serverRenderer.ssrRenderComponent(vue.unref(CountryFlag__default["default"]), {
                      country: mvp.country,
                      size: "normal"
                    }, null, _parent3, _scopeId2));
                    _push3(`</td><td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(mvp.mvp_kills))}</td></tr>`);
                  });
                  _push3(`<!--]-->`);
                } else {
                  return [
                    (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(vue.unref(mvps_count).data, (mvp, index) => {
                      var _a2;
                      return vue.openBlock(), vue.createBlock("tr", {
                        class: "spaceUnder",
                        key: index
                      }, [
                        index == 0 ? (vue.openBlock(), vue.createBlock("td", {
                          key: 0,
                          class: "px-5 py-3"
                        }, [
                          vue.createVNode(_component_font_awesome_icon, {
                            class: "text-2xl p-1 w-9 text-yellow-500",
                            icon: "fa-solid fa-trophy"
                          })
                        ])) : vue.createCommentVNode("", true),
                        index == 1 ? (vue.openBlock(), vue.createBlock("td", {
                          key: 1,
                          class: "px-5 py-3"
                        }, [
                          vue.createVNode(_component_font_awesome_icon, {
                            class: "text-2xl p-1 w-9 text-silver-600",
                            icon: "fa-solid fa-trophy"
                          })
                        ])) : vue.createCommentVNode("", true),
                        index == 2 ? (vue.openBlock(), vue.createBlock("td", {
                          key: 2,
                          class: "px-5 py-3"
                        }, [
                          vue.createVNode(_component_font_awesome_icon, {
                            class: "text-2xl p-1 w-9 text-yellow-700",
                            icon: "fa-solid fa-trophy"
                          })
                        ])) : index > 2 ? (vue.openBlock(), vue.createBlock("td", {
                          key: 3,
                          class: "px-5 py-3"
                        }, vue.toDisplayString(index + 1), 1)) : vue.createCommentVNode("", true),
                        vue.createVNode("td", { class: "px-5 py-3" }, [
                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                            vue.createVNode("img", {
                              src: `/rochar/characterhead/${mvp.name}`,
                              alt: ""
                            }, null, 8, ["src"]),
                            vue.createVNode("a", { href: "" }, [
                              vue.createVNode("span", { class: "text-[#3b87f6]" }, vue.toDisplayString(mvp.name), 1),
                              vue.createTextVNode(" (" + vue.toDisplayString(vue.unref(get_job_name)(mvp.class)) + ") ", 1)
                            ])
                          ])
                        ]),
                        vue.createVNode("td", { class: "px-5 py-3" }, [
                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                            vue.createVNode("div", { class: "flex items-center" }, [
                              vue.createVNode("img", {
                                class: "mr-2",
                                src: `/${url.value[mvp.guild_id]} `,
                                alt: ""
                              }, null, 8, ["src"]),
                              vue.createTextVNode(" " + vue.toDisplayString((_a2 = mvp.GName) != null ? _a2 : "No Guild \u274C"), 1)
                            ])
                          ])
                        ]),
                        vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(mvp.base_level) + " / " + vue.toDisplayString(mvp.job_level), 1),
                        vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(isOnline)(mvp.online)), 1),
                        vue.createVNode("td", { class: "px-5 py-3" }, [
                          vue.createVNode(vue.unref(CountryFlag__default["default"]), {
                            country: mvp.country,
                            size: "normal"
                          }, null, 8, ["country"])
                        ]),
                        vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(mvp.mvp_kills)), 1)
                      ]);
                    }), 128))
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_sfc_main$1x, {
              class: "p-3",
              links: vue.unref(mvps_count).links
            }, null, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(RankingTable, { rank_attributes: rank_attributes.value }, {
                row: vue.withCtx(() => [
                  (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(vue.unref(mvps_count).data, (mvp, index) => {
                    var _a2;
                    return vue.openBlock(), vue.createBlock("tr", {
                      class: "spaceUnder",
                      key: index
                    }, [
                      index == 0 ? (vue.openBlock(), vue.createBlock("td", {
                        key: 0,
                        class: "px-5 py-3"
                      }, [
                        vue.createVNode(_component_font_awesome_icon, {
                          class: "text-2xl p-1 w-9 text-yellow-500",
                          icon: "fa-solid fa-trophy"
                        })
                      ])) : vue.createCommentVNode("", true),
                      index == 1 ? (vue.openBlock(), vue.createBlock("td", {
                        key: 1,
                        class: "px-5 py-3"
                      }, [
                        vue.createVNode(_component_font_awesome_icon, {
                          class: "text-2xl p-1 w-9 text-silver-600",
                          icon: "fa-solid fa-trophy"
                        })
                      ])) : vue.createCommentVNode("", true),
                      index == 2 ? (vue.openBlock(), vue.createBlock("td", {
                        key: 2,
                        class: "px-5 py-3"
                      }, [
                        vue.createVNode(_component_font_awesome_icon, {
                          class: "text-2xl p-1 w-9 text-yellow-700",
                          icon: "fa-solid fa-trophy"
                        })
                      ])) : index > 2 ? (vue.openBlock(), vue.createBlock("td", {
                        key: 3,
                        class: "px-5 py-3"
                      }, vue.toDisplayString(index + 1), 1)) : vue.createCommentVNode("", true),
                      vue.createVNode("td", { class: "px-5 py-3" }, [
                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                          vue.createVNode("img", {
                            src: `/rochar/characterhead/${mvp.name}`,
                            alt: ""
                          }, null, 8, ["src"]),
                          vue.createVNode("a", { href: "" }, [
                            vue.createVNode("span", { class: "text-[#3b87f6]" }, vue.toDisplayString(mvp.name), 1),
                            vue.createTextVNode(" (" + vue.toDisplayString(vue.unref(get_job_name)(mvp.class)) + ") ", 1)
                          ])
                        ])
                      ]),
                      vue.createVNode("td", { class: "px-5 py-3" }, [
                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                          vue.createVNode("div", { class: "flex items-center" }, [
                            vue.createVNode("img", {
                              class: "mr-2",
                              src: `/${url.value[mvp.guild_id]} `,
                              alt: ""
                            }, null, 8, ["src"]),
                            vue.createTextVNode(" " + vue.toDisplayString((_a2 = mvp.GName) != null ? _a2 : "No Guild \u274C"), 1)
                          ])
                        ])
                      ]),
                      vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(mvp.base_level) + " / " + vue.toDisplayString(mvp.job_level), 1),
                      vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(isOnline)(mvp.online)), 1),
                      vue.createVNode("td", { class: "px-5 py-3" }, [
                        vue.createVNode(vue.unref(CountryFlag__default["default"]), {
                          country: mvp.country,
                          size: "normal"
                        }, null, 8, ["country"])
                      ]),
                      vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(mvp.mvp_kills)), 1)
                    ]);
                  }), 128))
                ]),
                _: 1
              }, 8, ["rank_attributes"]),
              vue.createVNode(_sfc_main$1x, {
                class: "p-3",
                links: vue.unref(mvps_count).links
              }, null, 8, ["links"])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
});
const _sfc_setup$n = _sfc_main$n.setup;
_sfc_main$n.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Rankings/Mvps.vue");
  return _sfc_setup$n ? _sfc_setup$n(props, ctx) : void 0;
};
var Mvps = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": _sfc_main$n
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$m = {
  __name: "Playtime",
  __ssrInlineRender: true,
  props: {
    playtime: {
      type: Object,
      required: true
    }
  },
  setup(__props) {
    const props = __props;
    const playtime = vue.computed(() => props.playtime);
    const url = vue.ref({});
    const rank_attributes = vue.ref([
      "Player",
      "Guild",
      "Level",
      "Online",
      "Country",
      "Time"
    ]);
    const rank_type = vue.ref([
      { name: "Job Level", id: "JL" },
      { name: "Base Level", id: "BL" },
      { name: "Time", id: "PT" }
    ]);
    vue.onMounted(() => {
      playtime.value.data.forEach((play_time) => {
        axios.get(`/api/${play_time.guild_id}/emblem`).then((res) => {
          if (res.data.url === "X")
            return;
          url.value[play_time.guild_id] = res.data.url;
        });
      });
    });
    return (_ctx, _push, _parent, _attrs) => {
      const _component_font_awesome_icon = vue.resolveComponent("font-awesome-icon");
      _push(serverRenderer.ssrRenderComponent(RankingLayout, _attrs, {
        default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_sfc_main$x, {
              title: "Playtime",
              rank_filter: rank_type.value,
              rank: "playtime",
              filter_type: "ranking"
            }, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(RankingTable, { rank_attributes: rank_attributes.value }, {
                    row: vue.withCtx((_4, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`<!--[-->`);
                        serverRenderer.ssrRenderList(vue.unref(playtime).data, (play, index) => {
                          var _a2;
                          _push4(`<tr class="spaceUnder hover:bg-gray-800/40"${_scopeId3}>`);
                          if (index == 0) {
                            _push4(`<td class="px-5 py-3"${_scopeId3}>`);
                            _push4(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                              class: "text-2xl p-1 w-9 hover:text-yellow-600",
                              icon: "fa-solid fa-trophy"
                            }, null, _parent4, _scopeId3));
                            _push4(`</td>`);
                          } else {
                            _push4(`<td class="px-5 py-3"${_scopeId3}>${serverRenderer.ssrInterpolate(index + 1)}</td>`);
                          }
                          _push4(`<td class="px-5 py-3"${_scopeId3}><div class="flex items-center justify-center"${_scopeId3}><img${serverRenderer.ssrRenderAttr("src", `/rochar/characterhead/${play.name}`)} alt=""${_scopeId3}><a href=""${_scopeId3}><span class="text-[#04aaff]"${_scopeId3}>${serverRenderer.ssrInterpolate(play.name)}</span> (${serverRenderer.ssrInterpolate(vue.unref(get_job_name)(play.class))}) </a></div></td><td class="px-5 py-3"${_scopeId3}><div class="flex items-center justify-center"${_scopeId3}><div class="flex items-center"${_scopeId3}><img class="mr-2"${serverRenderer.ssrRenderAttr("src", `/${url.value[play.guild_id]} `)} alt=""${_scopeId3}> ${serverRenderer.ssrInterpolate((_a2 = play.GName) != null ? _a2 : "No guild \u274C")}</div></div></td><td class="px-5 py-3"${_scopeId3}>${serverRenderer.ssrInterpolate(play.base_level)} / ${serverRenderer.ssrInterpolate(play.job_level)}</td><td class="px-5 py-3"${_scopeId3}>${serverRenderer.ssrInterpolate(vue.unref(isOnline)(play.online))}</td><td class="px-5 py-3"${_scopeId3}>`);
                          _push4(serverRenderer.ssrRenderComponent(vue.unref(CountryFlag__default["default"]), {
                            country: play.country,
                            size: "normal"
                          }, null, _parent4, _scopeId3));
                          _push4(`</td><td class="px-5 py-3"${_scopeId3}>${serverRenderer.ssrInterpolate(vue.unref(secondsToDh)(play.playtime))}</td></tr>`);
                        });
                        _push4(`<!--]-->`);
                      } else {
                        return [
                          (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(vue.unref(playtime).data, (play, index) => {
                            var _a2;
                            return vue.openBlock(), vue.createBlock("tr", {
                              class: "spaceUnder hover:bg-gray-800/40",
                              key: index
                            }, [
                              index == 0 ? (vue.openBlock(), vue.createBlock("td", {
                                key: 0,
                                class: "px-5 py-3"
                              }, [
                                vue.createVNode(_component_font_awesome_icon, {
                                  class: "text-2xl p-1 w-9 hover:text-yellow-600",
                                  icon: "fa-solid fa-trophy"
                                })
                              ])) : (vue.openBlock(), vue.createBlock("td", {
                                key: 1,
                                class: "px-5 py-3"
                              }, vue.toDisplayString(index + 1), 1)),
                              vue.createVNode("td", { class: "px-5 py-3" }, [
                                vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                  vue.createVNode("img", {
                                    src: `/rochar/characterhead/${play.name}`,
                                    alt: ""
                                  }, null, 8, ["src"]),
                                  vue.createVNode("a", { href: "" }, [
                                    vue.createVNode("span", { class: "text-[#04aaff]" }, vue.toDisplayString(play.name), 1),
                                    vue.createTextVNode(" (" + vue.toDisplayString(vue.unref(get_job_name)(play.class)) + ") ", 1)
                                  ])
                                ])
                              ]),
                              vue.createVNode("td", { class: "px-5 py-3" }, [
                                vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                  vue.createVNode("div", { class: "flex items-center" }, [
                                    vue.createVNode("img", {
                                      class: "mr-2",
                                      src: `/${url.value[play.guild_id]} `,
                                      alt: ""
                                    }, null, 8, ["src"]),
                                    vue.createTextVNode(" " + vue.toDisplayString((_a2 = play.GName) != null ? _a2 : "No guild \u274C"), 1)
                                  ])
                                ])
                              ]),
                              vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(play.base_level) + " / " + vue.toDisplayString(play.job_level), 1),
                              vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(isOnline)(play.online)), 1),
                              vue.createVNode("td", { class: "px-5 py-3" }, [
                                vue.createVNode(vue.unref(CountryFlag__default["default"]), {
                                  country: play.country,
                                  size: "normal"
                                }, null, 8, ["country"])
                              ]),
                              vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(secondsToDh)(play.playtime)), 1)
                            ]);
                          }), 128))
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(serverRenderer.ssrRenderComponent(_sfc_main$1x, {
                    class: "p-3",
                    links: vue.unref(playtime).links
                  }, null, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(RankingTable, { rank_attributes: rank_attributes.value }, {
                      row: vue.withCtx(() => [
                        (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(vue.unref(playtime).data, (play, index) => {
                          var _a2;
                          return vue.openBlock(), vue.createBlock("tr", {
                            class: "spaceUnder hover:bg-gray-800/40",
                            key: index
                          }, [
                            index == 0 ? (vue.openBlock(), vue.createBlock("td", {
                              key: 0,
                              class: "px-5 py-3"
                            }, [
                              vue.createVNode(_component_font_awesome_icon, {
                                class: "text-2xl p-1 w-9 hover:text-yellow-600",
                                icon: "fa-solid fa-trophy"
                              })
                            ])) : (vue.openBlock(), vue.createBlock("td", {
                              key: 1,
                              class: "px-5 py-3"
                            }, vue.toDisplayString(index + 1), 1)),
                            vue.createVNode("td", { class: "px-5 py-3" }, [
                              vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                vue.createVNode("img", {
                                  src: `/rochar/characterhead/${play.name}`,
                                  alt: ""
                                }, null, 8, ["src"]),
                                vue.createVNode("a", { href: "" }, [
                                  vue.createVNode("span", { class: "text-[#04aaff]" }, vue.toDisplayString(play.name), 1),
                                  vue.createTextVNode(" (" + vue.toDisplayString(vue.unref(get_job_name)(play.class)) + ") ", 1)
                                ])
                              ])
                            ]),
                            vue.createVNode("td", { class: "px-5 py-3" }, [
                              vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                vue.createVNode("div", { class: "flex items-center" }, [
                                  vue.createVNode("img", {
                                    class: "mr-2",
                                    src: `/${url.value[play.guild_id]} `,
                                    alt: ""
                                  }, null, 8, ["src"]),
                                  vue.createTextVNode(" " + vue.toDisplayString((_a2 = play.GName) != null ? _a2 : "No guild \u274C"), 1)
                                ])
                              ])
                            ]),
                            vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(play.base_level) + " / " + vue.toDisplayString(play.job_level), 1),
                            vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(isOnline)(play.online)), 1),
                            vue.createVNode("td", { class: "px-5 py-3" }, [
                              vue.createVNode(vue.unref(CountryFlag__default["default"]), {
                                country: play.country,
                                size: "normal"
                              }, null, 8, ["country"])
                            ]),
                            vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(secondsToDh)(play.playtime)), 1)
                          ]);
                        }), 128))
                      ]),
                      _: 1
                    }, 8, ["rank_attributes"]),
                    vue.createVNode(_sfc_main$1x, {
                      class: "p-3",
                      links: vue.unref(playtime).links
                    }, null, 8, ["links"])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(_sfc_main$x, {
                title: "Playtime",
                rank_filter: rank_type.value,
                rank: "playtime",
                filter_type: "ranking"
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode(RankingTable, { rank_attributes: rank_attributes.value }, {
                    row: vue.withCtx(() => [
                      (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(vue.unref(playtime).data, (play, index) => {
                        var _a2;
                        return vue.openBlock(), vue.createBlock("tr", {
                          class: "spaceUnder hover:bg-gray-800/40",
                          key: index
                        }, [
                          index == 0 ? (vue.openBlock(), vue.createBlock("td", {
                            key: 0,
                            class: "px-5 py-3"
                          }, [
                            vue.createVNode(_component_font_awesome_icon, {
                              class: "text-2xl p-1 w-9 hover:text-yellow-600",
                              icon: "fa-solid fa-trophy"
                            })
                          ])) : (vue.openBlock(), vue.createBlock("td", {
                            key: 1,
                            class: "px-5 py-3"
                          }, vue.toDisplayString(index + 1), 1)),
                          vue.createVNode("td", { class: "px-5 py-3" }, [
                            vue.createVNode("div", { class: "flex items-center justify-center" }, [
                              vue.createVNode("img", {
                                src: `/rochar/characterhead/${play.name}`,
                                alt: ""
                              }, null, 8, ["src"]),
                              vue.createVNode("a", { href: "" }, [
                                vue.createVNode("span", { class: "text-[#04aaff]" }, vue.toDisplayString(play.name), 1),
                                vue.createTextVNode(" (" + vue.toDisplayString(vue.unref(get_job_name)(play.class)) + ") ", 1)
                              ])
                            ])
                          ]),
                          vue.createVNode("td", { class: "px-5 py-3" }, [
                            vue.createVNode("div", { class: "flex items-center justify-center" }, [
                              vue.createVNode("div", { class: "flex items-center" }, [
                                vue.createVNode("img", {
                                  class: "mr-2",
                                  src: `/${url.value[play.guild_id]} `,
                                  alt: ""
                                }, null, 8, ["src"]),
                                vue.createTextVNode(" " + vue.toDisplayString((_a2 = play.GName) != null ? _a2 : "No guild \u274C"), 1)
                              ])
                            ])
                          ]),
                          vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(play.base_level) + " / " + vue.toDisplayString(play.job_level), 1),
                          vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(isOnline)(play.online)), 1),
                          vue.createVNode("td", { class: "px-5 py-3" }, [
                            vue.createVNode(vue.unref(CountryFlag__default["default"]), {
                              country: play.country,
                              size: "normal"
                            }, null, 8, ["country"])
                          ]),
                          vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(secondsToDh)(play.playtime)), 1)
                        ]);
                      }), 128))
                    ]),
                    _: 1
                  }, 8, ["rank_attributes"]),
                  vue.createVNode(_sfc_main$1x, {
                    class: "p-3",
                    links: vue.unref(playtime).links
                  }, null, 8, ["links"])
                ]),
                _: 1
              }, 8, ["rank_filter"])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$m = _sfc_main$m.setup;
_sfc_main$m.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Rankings/Playtime.vue");
  return _sfc_setup$m ? _sfc_setup$m(props, ctx) : void 0;
};
var Playtime = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": _sfc_main$m
}, Symbol.toStringTag, { value: "Module" }));
const __default__$a = {
  layout: RankingLayout
};
const _sfc_main$l = /* @__PURE__ */ Object.assign(__default__$a, {
  __name: "Pvp",
  __ssrInlineRender: true,
  setup(__props) {
    const pvp = vue.computed(() => inertiaVue3.usePage().props.value.pvp);
    const url = vue.ref({});
    const rank_attributes = vue.ref([
      "Player",
      "Guild ",
      "Battle Kills",
      "Deaths",
      "Dmg. Done",
      "Dmg. Received",
      "Country",
      "KD"
    ]);
    const rank_type = vue.ref([
      { name: "Damage Received", id: "DR" },
      { name: "Damage Done", id: "DD" },
      { name: "Deaths", id: "D" },
      { name: "Kills", id: "K" },
      { name: "Elo", id: "E" }
    ]);
    vue.onMounted(() => {
      pvp.value.data.forEach((pvp2) => {
        axios.get(`/api/${pvp2.guild_id}/emblem`).then((res) => {
          if (res.data.url === "X")
            return;
          url.value[pvp2.guild_id] = res.data.url;
        });
      });
    });
    return (_ctx, _push, _parent, _attrs) => {
      const _component_font_awesome_icon = vue.resolveComponent("font-awesome-icon");
      _push(serverRenderer.ssrRenderComponent(_sfc_main$x, vue.mergeProps({
        title: "PvP",
        rank_filter: rank_type.value,
        rank: "pvp",
        filter_type: "ranking"
      }, _attrs), {
        default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(RankingTable, { rank_attributes: rank_attributes.value }, {
              row: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<!--[-->`);
                  serverRenderer.ssrRenderList(vue.unref(pvp).data, (pvp2, index) => {
                    var _a2;
                    _push3(`<tr class="spaceUnder hover:bg-gray-800/40"${_scopeId2}>`);
                    if (index == 0) {
                      _push3(`<td class="px-5 py-3"${_scopeId2}>`);
                      _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                        class: "text-2xl p-1 w-9 hover:text-yellow-600",
                        icon: "fa-solid fa-trophy"
                      }, null, _parent3, _scopeId2));
                      _push3(`</td>`);
                    } else {
                      _push3(`<td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(index + 1)}</td>`);
                    }
                    _push3(`<td class="px-5 py-3"${_scopeId2}><div class="flex justify-center"${_scopeId2}><img${serverRenderer.ssrRenderAttr("src", `/rochar/characterhead/${pvp2.name}`)} alt=""${_scopeId2}><a href=""${_scopeId2}><span class="text-[#04aaff]"${_scopeId2}>${serverRenderer.ssrInterpolate(pvp2.name)}</span> (${serverRenderer.ssrInterpolate(vue.unref(get_job_name)(pvp2.class))}) </a></div></td><td class="px-5 py-3"${_scopeId2}><div class="flex justify-center items-center"${_scopeId2}><img class="mr-3"${serverRenderer.ssrRenderAttr("src", `/${url.value[pvp2.guild_id]} `)} alt=""${_scopeId2}> ${serverRenderer.ssrInterpolate((_a2 = pvp2.GName) != null ? _a2 : "No guild \u274C")}</div></td><td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(pvp2.kill))}</td><td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(pvp2.dead))}</td><td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(pvp2.damage_done))}</td><td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(pvp2.damage_received))}</td><td class="px-5 py-3"${_scopeId2}><div class="flex justify-center items-center"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}>`);
                    _push3(serverRenderer.ssrRenderComponent(vue.unref(CountryFlag__default["default"]), {
                      country: pvp2.country,
                      size: "normal"
                    }, null, _parent3, _scopeId2));
                    _push3(`</div></div></td><td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(pvp2.kill - pvp2.dead))}</td></tr>`);
                  });
                  _push3(`<!--]-->`);
                } else {
                  return [
                    (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(vue.unref(pvp).data, (pvp2, index) => {
                      var _a2;
                      return vue.openBlock(), vue.createBlock("tr", {
                        class: "spaceUnder hover:bg-gray-800/40",
                        key: index
                      }, [
                        index == 0 ? (vue.openBlock(), vue.createBlock("td", {
                          key: 0,
                          class: "px-5 py-3"
                        }, [
                          vue.createVNode(_component_font_awesome_icon, {
                            class: "text-2xl p-1 w-9 hover:text-yellow-600",
                            icon: "fa-solid fa-trophy"
                          })
                        ])) : (vue.openBlock(), vue.createBlock("td", {
                          key: 1,
                          class: "px-5 py-3"
                        }, vue.toDisplayString(index + 1), 1)),
                        vue.createVNode("td", { class: "px-5 py-3" }, [
                          vue.createVNode("div", { class: "flex justify-center" }, [
                            vue.createVNode("img", {
                              src: `/rochar/characterhead/${pvp2.name}`,
                              alt: ""
                            }, null, 8, ["src"]),
                            vue.createVNode("a", { href: "" }, [
                              vue.createVNode("span", { class: "text-[#04aaff]" }, vue.toDisplayString(pvp2.name), 1),
                              vue.createTextVNode(" (" + vue.toDisplayString(vue.unref(get_job_name)(pvp2.class)) + ") ", 1)
                            ])
                          ])
                        ]),
                        vue.createVNode("td", { class: "px-5 py-3" }, [
                          vue.createVNode("div", { class: "flex justify-center items-center" }, [
                            vue.createVNode("img", {
                              class: "mr-3",
                              src: `/${url.value[pvp2.guild_id]} `,
                              alt: ""
                            }, null, 8, ["src"]),
                            vue.createTextVNode(" " + vue.toDisplayString((_a2 = pvp2.GName) != null ? _a2 : "No guild \u274C"), 1)
                          ])
                        ]),
                        vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(pvp2.kill)), 1),
                        vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(pvp2.dead)), 1),
                        vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(pvp2.damage_done)), 1),
                        vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(pvp2.damage_received)), 1),
                        vue.createVNode("td", { class: "px-5 py-3" }, [
                          vue.createVNode("div", { class: "flex justify-center items-center" }, [
                            vue.createVNode("div", { class: "flex items-center justify-center" }, [
                              vue.createVNode(vue.unref(CountryFlag__default["default"]), {
                                country: pvp2.country,
                                size: "normal"
                              }, null, 8, ["country"])
                            ])
                          ])
                        ]),
                        vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(pvp2.kill - pvp2.dead)), 1)
                      ]);
                    }), 128))
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_sfc_main$1x, {
              class: "p-3",
              links: vue.unref(pvp).links
            }, null, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(RankingTable, { rank_attributes: rank_attributes.value }, {
                row: vue.withCtx(() => [
                  (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(vue.unref(pvp).data, (pvp2, index) => {
                    var _a2;
                    return vue.openBlock(), vue.createBlock("tr", {
                      class: "spaceUnder hover:bg-gray-800/40",
                      key: index
                    }, [
                      index == 0 ? (vue.openBlock(), vue.createBlock("td", {
                        key: 0,
                        class: "px-5 py-3"
                      }, [
                        vue.createVNode(_component_font_awesome_icon, {
                          class: "text-2xl p-1 w-9 hover:text-yellow-600",
                          icon: "fa-solid fa-trophy"
                        })
                      ])) : (vue.openBlock(), vue.createBlock("td", {
                        key: 1,
                        class: "px-5 py-3"
                      }, vue.toDisplayString(index + 1), 1)),
                      vue.createVNode("td", { class: "px-5 py-3" }, [
                        vue.createVNode("div", { class: "flex justify-center" }, [
                          vue.createVNode("img", {
                            src: `/rochar/characterhead/${pvp2.name}`,
                            alt: ""
                          }, null, 8, ["src"]),
                          vue.createVNode("a", { href: "" }, [
                            vue.createVNode("span", { class: "text-[#04aaff]" }, vue.toDisplayString(pvp2.name), 1),
                            vue.createTextVNode(" (" + vue.toDisplayString(vue.unref(get_job_name)(pvp2.class)) + ") ", 1)
                          ])
                        ])
                      ]),
                      vue.createVNode("td", { class: "px-5 py-3" }, [
                        vue.createVNode("div", { class: "flex justify-center items-center" }, [
                          vue.createVNode("img", {
                            class: "mr-3",
                            src: `/${url.value[pvp2.guild_id]} `,
                            alt: ""
                          }, null, 8, ["src"]),
                          vue.createTextVNode(" " + vue.toDisplayString((_a2 = pvp2.GName) != null ? _a2 : "No guild \u274C"), 1)
                        ])
                      ]),
                      vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(pvp2.kill)), 1),
                      vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(pvp2.dead)), 1),
                      vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(pvp2.damage_done)), 1),
                      vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(pvp2.damage_received)), 1),
                      vue.createVNode("td", { class: "px-5 py-3" }, [
                        vue.createVNode("div", { class: "flex justify-center items-center" }, [
                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                            vue.createVNode(vue.unref(CountryFlag__default["default"]), {
                              country: pvp2.country,
                              size: "normal"
                            }, null, 8, ["country"])
                          ])
                        ])
                      ]),
                      vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(pvp2.kill - pvp2.dead)), 1)
                    ]);
                  }), 128))
                ]),
                _: 1
              }, 8, ["rank_attributes"]),
              vue.createVNode(_sfc_main$1x, {
                class: "p-3",
                links: vue.unref(pvp).links
              }, null, 8, ["links"])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
});
const _sfc_setup$l = _sfc_main$l.setup;
_sfc_main$l.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Rankings/Pvp.vue");
  return _sfc_setup$l ? _sfc_setup$l(props, ctx) : void 0;
};
var Pvp = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": _sfc_main$l
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$k = {
  __name: "RankingCard",
  __ssrInlineRender: true,
  props: {
    title: String,
    char_name: String,
    guild_name: String,
    guild_id: Number,
    score: Number,
    type: String,
    bg: String
  },
  setup(__props) {
    const props = __props;
    const ranking_url = inertiaVue3.usePage().props.value.rankings_url;
    const url = vue.ref("");
    async function get_emblem_url() {
      if (props.guild_id == null) {
        return;
      }
      await axios.get(`/api/${props.guild_id}/emblem`).then((response) => {
        url.value = response.data.url;
      }).catch((error) => {
        console.log(error);
      });
    }
    vue.onMounted(() => {
      get_emblem_url();
    });
    return (_ctx, _push, _parent, _attrs) => {
      var _a2, _b;
      const _component_font_awesome_icon = vue.resolveComponent("font-awesome-icon");
      _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "flex flex-col justify-center items-center" }, _attrs))}><div class="!z-5 relative flex flex-col rounded-[20px] max-w-[300px] bg-white bg-clip-border shadow-3xl shadow-shadow-500 flex flex-col w-full !p-4 3xl:p-![18px] bg-white undefined"><div class="h-full w-full"><div class="relative w-full"><img src="/img/main_bg.jpg" class="mb-3 h-full w-full rounded-xl 3xl:h-full 3xl:w-full relative" alt=""><div class="absolute flex top-0 left-0 w-full h-full rounded-xl items-center justify-center"><img${serverRenderer.ssrRenderAttr("src", `/rochar/character/${__props.char_name}`)} alt=""></div></div><div class="mb-3 flex items-center justify-between px-1 md:items-start"><div class="mb-2"><p class="text-lg font-bold text-gray-700">${serverRenderer.ssrInterpolate(__props.title)}</p><p class="mt-1 text-sm font-medium text-gray-600 md:mt-2">${serverRenderer.ssrInterpolate((_a2 = __props.char_name) != null ? _a2 : "N/A")}</p><div class="flex items-center"><p class="mt-1 text-sm font-medium text-gray-600 md:mt-2">${serverRenderer.ssrInterpolate((_b = __props.guild_name) != null ? _b : "No guild \u274C")}</p>`);
      if (url.value) {
        _push(`<img${serverRenderer.ssrRenderAttr("src", "/" + url.value)} class="w-6 h-6 ml-2" alt="">`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div></div><div class="flex flex-row-reverse md:mt-2 lg:mt-0">`);
      _push(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
        class: "text-2xl p-1 w-9 text-yellow-500",
        icon: "fa-solid fa-trophy"
      }, null, _parent));
      _push(`</div></div><div class="flex items-center justify-between md:items-center lg:justify-between"><div class="flex"><p class="!mb-0 text-sm font-bold text-gray-500">Current Points: ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(__props.score))}</p></div><div class="flex flex-row-reverse md:mt-2 lg:mt-0">`);
      _push(serverRenderer.ssrRenderComponent(vue.unref(inertiaVue3.Link), {
        href: vue.unref(ranking_url)[__props.type]
      }, {
        default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(JetButton, { is: "" }, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Rank`);
                } else {
                  return [
                    vue.createTextVNode("Rank")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(JetButton, { is: "" }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Rank")
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div></div></div></div></div>`);
    };
  }
};
const _sfc_setup$k = _sfc_main$k.setup;
_sfc_main$k.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/RankingCard.vue");
  return _sfc_setup$k ? _sfc_setup$k(props, ctx) : void 0;
};
const __default__$9 = vue.defineComponent({
  layout: RankingLayout
});
const _sfc_main$j = /* @__PURE__ */ Object.assign(__default__$9, {
  __name: "Resumen",
  __ssrInlineRender: true,
  setup(__props) {
    var _a2, _b, _c, _d, _e, _f;
    const woe_player = (_a2 = inertiaVue3.usePage().props.value.woe_player) != null ? _a2 : "N/A";
    const pvp_player = (_b = inertiaVue3.usePage().props.value.pvp_player) != null ? _b : "N/A";
    const woe_damage = (_c = inertiaVue3.usePage().props.value.woe_damage) != null ? _c : "N/A";
    const mvp_player = (_d = inertiaVue3.usePage().props.value.mvp_player) != null ? _d : "N/A";
    const cash_player = (_e = inertiaVue3.usePage().props.value.cash_points) != null ? _e : "N/A";
    const bg_player = (_f = inertiaVue3.usePage().props.value.bg_player) != null ? _f : "N/A";
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<!--[-->`);
      _push(serverRenderer.ssrRenderComponent(vue.unref(inertiaVue3.Head), { title: "Ranking Resumen" }, null, _parent));
      _push(`<div class="py-12"><div class="max-w-7xl mx-auto sm:px-6 lg:px-8"><div class="overflow-hidden shadow-sm sm:rounded-lg mt-30"><div class="min-h-screen py-8"><div class="mb-5 p-5 py-12 flex flex-wrap flex-row justify-around w-full"><div class="flex w-full justify-around mb-8">`);
      _push(serverRenderer.ssrRenderComponent(_sfc_main$k, {
        title: "Guild vs Guild \u{1F5E1}",
        char_name: vue.unref(woe_damage).gname,
        guild_name: vue.unref(woe_damage).master,
        guild_id: vue.unref(woe_damage).guild_id,
        score: vue.unref(woe_damage).comp_kd,
        type: "woe_damage",
        bg: "bg-woe-damage"
      }, null, _parent));
      _push(serverRenderer.ssrRenderComponent(_sfc_main$k, {
        title: "Best WoE Player \u{1F947}",
        char_name: vue.unref(woe_player).name,
        guild_name: vue.unref(woe_player).GName,
        guild_id: vue.unref(woe_player).guild_id,
        score: vue.unref(woe_player).score,
        type: "guild",
        bg: "bg-woe"
      }, null, _parent));
      _push(serverRenderer.ssrRenderComponent(_sfc_main$k, {
        title: "Best BG Player \u{1F6E1}",
        char_name: vue.unref(bg_player).name,
        guild_name: vue.unref(bg_player).GName,
        guild_id: vue.unref(bg_player).guild_id,
        score: vue.unref(bg_player).score,
        type: "battleground",
        bg: "bg-pvp"
      }, null, _parent));
      _push(`</div><div class="flex w-full justify-around">`);
      _push(serverRenderer.ssrRenderComponent(_sfc_main$k, {
        title: "MvP Hunter \u{1F3F9}",
        char_name: vue.unref(mvp_player).name,
        guild_name: vue.unref(mvp_player).GName,
        guild_id: vue.unref(mvp_player).guild_id,
        score: vue.unref(mvp_player).mvp_kills,
        type: "mvp",
        bg: "bg-pvp"
      }, null, _parent));
      _push(serverRenderer.ssrRenderComponent(_sfc_main$k, {
        title: "Cash Collector \u{1F4B0}",
        char_name: vue.unref(cash_player).name,
        guild_name: vue.unref(cash_player).GName,
        guild_id: vue.unref(cash_player).guild_id,
        score: vue.unref(cash_player).points,
        type: "cash",
        bg: "bg-pvp"
      }, null, _parent));
      _push(serverRenderer.ssrRenderComponent(_sfc_main$k, {
        title: "PvP Killer \u2694",
        char_name: vue.unref(pvp_player).name,
        guild_name: vue.unref(pvp_player).GName,
        guild_id: vue.unref(pvp_player).guild_id,
        score: vue.unref(pvp_player).elo,
        type: "pvp",
        bg: "bg-pvp"
      }, null, _parent));
      _push(`</div></div></div></div></div></div><!--]-->`);
    };
  }
});
const _sfc_setup$j = _sfc_main$j.setup;
_sfc_main$j.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Rankings/Resumen.vue");
  return _sfc_setup$j ? _sfc_setup$j(props, ctx) : void 0;
};
var Resumen = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": _sfc_main$j
}, Symbol.toStringTag, { value: "Module" }));
var Woe_vue_vue_type_style_index_0_scoped_true_lang$1 = "";
const _sfc_main$i = {
  __name: "Woe",
  __ssrInlineRender: true,
  setup(__props) {
    const woe = vue.computed(() => inertiaVue3.usePage().props.value.woe);
    const rank_types = vue.ref([
      { id: "GW", name: "Game Wins" },
      { id: "GL", name: "Game Lost" },
      { id: "GT", name: "Game Tie" },
      { id: "KC", name: "Kill Counter" },
      { id: "DC", name: "Die Counter" },
      { id: "DD", name: "Damage Done" },
      { id: "DR", name: "Damage Received" },
      { id: "ACC", name: "Acid Demonstration Casted" },
      { id: "TGH", name: "Good Healing" },
      { id: "TWH", name: "Wrong Healing" },
      { id: "GSS", name: "Good Support" },
      { id: "WSS", name: "Wrong Support" },
      { id: "HPP", name: "HP Potions" },
      { id: "SPP", name: "SP Potions" },
      { id: "YGU", name: "Yellow Gemstone" },
      { id: "RGU", name: "Red Gemstone" },
      { id: "BGU", name: "Blue Gemstone" },
      { id: "AU", name: "Arrows Used" }
    ]);
    const rank_attributes = vue.ref([
      "Player",
      "Guild",
      "Kill",
      "Death",
      "Country",
      "Score"
    ]);
    function show_info(index) {
      const item = document.getElementById("show_info_id_" + index);
      if (item.classList.contains("hidden")) {
        item.classList.remove("hidden");
        item.setAttribute("class", "visible");
      } else {
        item.classList.remove("visible");
        item.setAttribute("class", "hidden");
      }
    }
    return (_ctx, _push, _parent, _attrs) => {
      const _component_font_awesome_icon = vue.resolveComponent("font-awesome-icon");
      _push(serverRenderer.ssrRenderComponent(RankingLayout, _attrs, {
        default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_sfc_main$x, {
              title: "WoE",
              rank_filter: rank_types.value,
              rank: "woe",
              filter_type: "ranking"
            }, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(RankingTable, { rank_attributes: rank_attributes.value }, {
                    row: vue.withCtx((_4, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`<!--[-->`);
                        serverRenderer.ssrRenderList(vue.unref(woe).data, (woe2, index) => {
                          _push4(`<!--[--><tr class="spaceUnder hover:bg-gray-800/40 cursor-pointer hover:transition hover:duration-150" data-v-ab25c6ec${_scopeId3}>`);
                          if (index == 0) {
                            _push4(`<td class="px-5 py-3 w-1/12" data-v-ab25c6ec${_scopeId3}>`);
                            _push4(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                              class: "text-2xl hover:text-yellow-600",
                              icon: "fa-solid fa-trophy"
                            }, null, _parent4, _scopeId3));
                            _push4(`</td>`);
                          } else {
                            _push4(`<td class="px-5 py-3 w-1/12" data-v-ab25c6ec${_scopeId3}>${serverRenderer.ssrInterpolate(index + 1)}</td>`);
                          }
                          _push4(`<td class="px-5 py-3 w-1/6" data-v-ab25c6ec${_scopeId3}><div class="flex items-center justify-center" data-v-ab25c6ec${_scopeId3}><div class="flex justify-center items-center" data-v-ab25c6ec${_scopeId3}><img${serverRenderer.ssrRenderAttr("src", `/rochar/characterhead/${woe2.name}`)} alt="" data-v-ab25c6ec${_scopeId3}><div data-v-ab25c6ec${_scopeId3}><span class="text-[#04aaff]" data-v-ab25c6ec${_scopeId3}>${serverRenderer.ssrInterpolate(woe2.name)}</span> (${serverRenderer.ssrInterpolate(vue.unref(get_job_name)(woe2.class))}) </div></div></div></td><td class="px-5 py-3 w-1/6" data-v-ab25c6ec${_scopeId3}><div class="flex justify-center items-center" data-v-ab25c6ec${_scopeId3}><div class="flex items-center justify-center" data-v-ab25c6ec${_scopeId3}><img class="mr-2"${serverRenderer.ssrRenderAttr("src", `/storage/cache/tmp_emblem/${woe2.guild_id}.png `)} alt="" data-v-ab25c6ec${_scopeId3}> ${serverRenderer.ssrInterpolate(woe2.GName)}</div></div></td><td class="px-5 py-3 w-1/6" data-v-ab25c6ec${_scopeId3}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(woe2.kill_count))}</td><td class="px-5 py-3 w-1/6" data-v-ab25c6ec${_scopeId3}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(woe2.death_count))}</td><td class="px-5 py-3" data-v-ab25c6ec${_scopeId3}><div class="flex justify-center items-center" data-v-ab25c6ec${_scopeId3}><div class="flex items-center justify-center" data-v-ab25c6ec${_scopeId3}>`);
                          _push4(serverRenderer.ssrRenderComponent(vue.unref(CountryFlag__default["default"]), {
                            country: woe2.country,
                            size: "normal"
                          }, null, _parent4, _scopeId3));
                          _push4(`</div></div></td><td class="px-5 py-3 w-1/6" data-v-ab25c6ec${_scopeId3}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(woe2.score))}</td></tr><tr${serverRenderer.ssrRenderAttr("id", "show_info_id_" + index)} class="hidden spaceUnder" data-v-ab25c6ec${_scopeId3}><td colspan="9" data-v-ab25c6ec${_scopeId3}><div class="flex w-full" data-v-ab25c6ec${_scopeId3}><div class="w-1/5 py-6" data-v-ab25c6ec${_scopeId3}><div class="flex flex-col items-center h-full justify-center" data-v-ab25c6ec${_scopeId3}><div class="flex justify-center" data-v-ab25c6ec${_scopeId3}><img class=""${serverRenderer.ssrRenderAttr("src", `/rochar/character/${woe2.name}`)} alt="" data-v-ab25c6ec${_scopeId3}></div><p data-v-ab25c6ec${_scopeId3}><span class="font-bold" data-v-ab25c6ec${_scopeId3}>Playtime:</span> ${serverRenderer.ssrInterpolate(vue.unref(secondsToDh)(woe2.playtime))}</p><p data-v-ab25c6ec${_scopeId3}><span class="font-bold" data-v-ab25c6ec${_scopeId3}>Score:</span> ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(woe2.score))}</p><div class="flex w-full justify-center" data-v-ab25c6ec${_scopeId3}><img src="/img/viewprofile.png" alt="" class="mr-2" data-v-ab25c6ec${_scopeId3}><a class="text-[#04aaff]"${serverRenderer.ssrRenderAttr(
                            "href",
                            _ctx.route(
                              "woe.profile",
                              woe2.char_id
                            )
                          )} data-v-ab25c6ec${_scopeId3}>Player Profile</a></div></div></div><div class="w-4/5 grid grid-row-2" data-v-ab25c6ec${_scopeId3}><div class="flex w-full" data-v-ab25c6ec${_scopeId3}><div class="w-1/2 p-2" data-v-ab25c6ec${_scopeId3}><table class="w-full" data-v-ab25c6ec${_scopeId3}><thead class="bg-[#0d0d0d]" data-v-ab25c6ec${_scopeId3}><th colspan="3" class="p-4" data-v-ab25c6ec${_scopeId3}> Usable items </th></thead><tbody data-v-ab25c6ec${_scopeId3}><tr class="spaceUnder" data-v-ab25c6ec${_scopeId3}><td class="w-1/3 p-3" data-v-ab25c6ec${_scopeId3}><div class="flex justify-center" data-v-ab25c6ec${_scopeId3}><img src="/img/item/522.png" alt="" class="mr-2" data-v-ab25c6ec${_scopeId3}>HP: ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                            woe2.hp_heal_potions
                          ))}</div></td><td class="w-1/3 p-3" data-v-ab25c6ec${_scopeId3}><div class="flex justify-center" data-v-ab25c6ec${_scopeId3}><img src="/img/item/505.png" alt="" class="mr-2" data-v-ab25c6ec${_scopeId3}>SP: ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                            woe2.sp_heal_potions
                          ))}</div></td><td class="w-1/3 p-3" data-v-ab25c6ec${_scopeId3}><div class="flex justify-center" data-v-ab25c6ec${_scopeId3}><img src="/img/item/676.png" alt="" class="mr-2" data-v-ab25c6ec${_scopeId3}>Zeny: ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                            woe2.zeny_used
                          ))}</div></td></tr><tr class="spaceUnder" data-v-ab25c6ec${_scopeId3}><td class="w-1/3 p-3" data-v-ab25c6ec${_scopeId3}><div class="flex justify-center" data-v-ab25c6ec${_scopeId3}><img src="/img/item/716.png" alt="" class="mr-2" data-v-ab25c6ec${_scopeId3}>Gems: ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                            woe2.red_gemstones
                          ))}</div></td><td class="w-1/3" data-v-ab25c6ec${_scopeId3}><div class="flex justify-center" data-v-ab25c6ec${_scopeId3}><img src="/img/item/717.png" alt="" class="mr-2" data-v-ab25c6ec${_scopeId3}>Gems: ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                            woe2.blue_gemstones
                          ))}</div></td><td class="w-1/3 p-3" data-v-ab25c6ec${_scopeId3}><div class="flex justify-center" data-v-ab25c6ec${_scopeId3}><img src="/img/item/715.png" alt="" class="mr-2" data-v-ab25c6ec${_scopeId3}>Gems: ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                            woe2.yellow_gemstones
                          ))}</div></td></tr><tr class="spaceUnder" data-v-ab25c6ec${_scopeId3}><td class="w-1/3 p-3" data-v-ab25c6ec${_scopeId3}><div class="flex justify-center" data-v-ab25c6ec${_scopeId3}><img src="/img/item/1752.png" alt="" class="mr-2" data-v-ab25c6ec${_scopeId3}>Arrows: ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                            woe2.ammo_used
                          ))}</div></td><td class="w-1/3 p-3" data-v-ab25c6ec${_scopeId3}><div class="flex justify-center" data-v-ab25c6ec${_scopeId3}><img src="/img/item/7136.png" alt="" class="mr-2" data-v-ab25c6ec${_scopeId3}>Bottles: ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                            woe2.acid_demostration
                          ))}</div></td><td class="w-1/3 p-3" data-v-ab25c6ec${_scopeId3}><div class="flex justify-center" data-v-ab25c6ec${_scopeId3}><img src="/img/item/678.png" alt="" class="mr-2" data-v-ab25c6ec${_scopeId3}>Bottles: ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                            woe2.poison_bottles
                          ))}</div></td></tr></tbody></table></div><div class="w-1/2 p-2 flex" data-v-ab25c6ec${_scopeId3}><table class="w-1/2 mr-2" data-v-ab25c6ec${_scopeId3}><thead class="bg-[#0d0d0d]" data-v-ab25c6ec${_scopeId3}><th colspan="3" class="p-4" data-v-ab25c6ec${_scopeId3}> Damage vs Player </th></thead><tbody data-v-ab25c6ec${_scopeId3}><tr class="spaceUnder" data-v-ab25c6ec${_scopeId3}><td class="w-1/3 p-3" data-v-ab25c6ec${_scopeId3}><div class="flex justify-center" data-v-ab25c6ec${_scopeId3}><img src="/img/item/1228.png" alt="" class="mr-2" data-v-ab25c6ec${_scopeId3}> Best: ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                            woe2.top_damage
                          ))}</div></td></tr><tr class="spaceUnder" data-v-ab25c6ec${_scopeId3}><td class="w-1/3 p-3" data-v-ab25c6ec${_scopeId3}><div class="flex justify-center" data-v-ab25c6ec${_scopeId3}><img src="/img/item/1281.png" alt="" class="mr-2" data-v-ab25c6ec${_scopeId3}> Done: ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                            woe2.damage_done
                          ))}</div></td></tr><tr class="spaceUnder" data-v-ab25c6ec${_scopeId3}><td class="w-1/3 p-3" data-v-ab25c6ec${_scopeId3}><div class="flex justify-center" data-v-ab25c6ec${_scopeId3}><img src="/img/item/2115.png" alt="" class="mr-2" data-v-ab25c6ec${_scopeId3}> Recv: ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                            woe2.damage_received
                          ))}</div></td></tr></tbody></table><table class="w-1/2" data-v-ab25c6ec${_scopeId3}><thead class="bg-[#0d0d0d]" data-v-ab25c6ec${_scopeId3}><th colspan="3" class="p-4" data-v-ab25c6ec${_scopeId3}> War Data </th></thead><tbody data-v-ab25c6ec${_scopeId3}><tr class="spaceUnder" data-v-ab25c6ec${_scopeId3}><td class="w-1/3 p-3 border-b" data-v-ab25c6ec${_scopeId3}><div class="flex justify-center" data-v-ab25c6ec${_scopeId3}><img src="/img/item/7005.png" alt="" class="mr-2" data-v-ab25c6ec${_scopeId3}> Kills: ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                            woe2.kill_count
                          ))}</div></td></tr><tr class="spaceUnder" data-v-ab25c6ec${_scopeId3}><td class="w-1/3 p-3" data-v-ab25c6ec${_scopeId3}><div class="flex justify-center" data-v-ab25c6ec${_scopeId3}><img src="/img/item/7024.png" alt="" class="mr-2" data-v-ab25c6ec${_scopeId3}> Deaths: ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                            woe2.death_count
                          ))}</div></td></tr></tbody></table></div></div><div class="flex w-full" data-v-ab25c6ec${_scopeId3}><div class="w-1/2 p-2" data-v-ab25c6ec${_scopeId3}><table class="w-full" data-v-ab25c6ec${_scopeId3}><thead class="bg-[#0d0d0d] border-b" data-v-ab25c6ec${_scopeId3}><th colspan="5" class="p-4" data-v-ab25c6ec${_scopeId3}> Structure </th></thead><thead class="bg-[#0d0d0d]" data-v-ab25c6ec${_scopeId3}><th class="w-1/5 p-2" data-v-ab25c6ec${_scopeId3}> Option </th><th class="p-2" data-v-ab25c6ec${_scopeId3}><div class="flex items-center" data-v-ab25c6ec${_scopeId3}><img class="mr-2" src="/img/item/714.png" alt="" data-v-ab25c6ec${_scopeId3}> Emperium </div></th><th class="p-2" data-v-ab25c6ec${_scopeId3}><div class="flex items-center" data-v-ab25c6ec${_scopeId3}><img class="mr-2" src="/img/item/1068.png" alt="" data-v-ab25c6ec${_scopeId3}> Barricade </div></th><th class="p-2" data-v-ab25c6ec${_scopeId3}><div class="flex items-center" data-v-ab25c6ec${_scopeId3}><img class="mr-2" src="/img/item/7430.png" alt="" data-v-ab25c6ec${_scopeId3}> G.Stone </div></th><th class="p-2" data-v-ab25c6ec${_scopeId3}><div class="flex items-center" data-v-ab25c6ec${_scopeId3}><img class="mr-2" src="/img/item/14288.png" alt="" data-v-ab25c6ec${_scopeId3}> Guardian </div></th></thead><tbody data-v-ab25c6ec${_scopeId3}><tr class="border-b" data-v-ab25c6ec${_scopeId3}><td class="p-3" data-v-ab25c6ec${_scopeId3}> Damage Structure </td><td data-v-ab25c6ec${_scopeId3}>${serverRenderer.ssrInterpolate(woe2.emperium_damage)}</td><td class="p-3" data-v-ab25c6ec${_scopeId3}>${serverRenderer.ssrInterpolate(woe2.barricade_damage)}</td><td data-v-ab25c6ec${_scopeId3}>${serverRenderer.ssrInterpolate(woe2.gstone_damage)}</td><td class="p-3" data-v-ab25c6ec${_scopeId3}>${serverRenderer.ssrInterpolate(woe2.guardian_damage)}</td></tr><tr class="spaceUnder" data-v-ab25c6ec${_scopeId3}><td class="p-3" data-v-ab25c6ec${_scopeId3}> Eliminated Structures </td><td class="p-3" data-v-ab25c6ec${_scopeId3}>${serverRenderer.ssrInterpolate(woe2.emperium_kill)}</td><td class="p-3" data-v-ab25c6ec${_scopeId3}>${serverRenderer.ssrInterpolate(woe2.barricade_kill)}</td><td class="p-3" data-v-ab25c6ec${_scopeId3}>${serverRenderer.ssrInterpolate(woe2.gstone_kill)}</td><td class="p-3" data-v-ab25c6ec${_scopeId3}>${serverRenderer.ssrInterpolate(woe2.guardian_kill)}</td></tr></tbody></table></div><div class="w-1/2 p-2" data-v-ab25c6ec${_scopeId3}><table class="w-full" data-v-ab25c6ec${_scopeId3}><thead class="bg-[#0d0d0d] border-b" data-v-ab25c6ec${_scopeId3}><th class="p-4" colspan="3" data-v-ab25c6ec${_scopeId3}> Support Skills </th></thead><thead class="bg-[#0d0d0d]" data-v-ab25c6ec${_scopeId3}><th class="p-2" data-v-ab25c6ec${_scopeId3}> Option </th><th class="p-2" data-v-ab25c6ec${_scopeId3}> Total Skills </th><th class="p-2" data-v-ab25c6ec${_scopeId3}> Total Healing </th></thead><tbody data-v-ab25c6ec${_scopeId3}><tr class="border-b" data-v-ab25c6ec${_scopeId3}><td class="p-3" data-v-ab25c6ec${_scopeId3}><div class="flex justify-center" data-v-ab25c6ec${_scopeId3}><img src="/img/item/2273.png" alt="" class="mr-2" data-v-ab25c6ec${_scopeId3}> Correct </div></td><td class="p-3" data-v-ab25c6ec${_scopeId3}>${serverRenderer.ssrInterpolate(woe2.support_skills_used)}</td><td class="p-3" data-v-ab25c6ec${_scopeId3}>${serverRenderer.ssrInterpolate(woe2.healing_done)}</td></tr><tr class="spaceUnder" data-v-ab25c6ec${_scopeId3}><td class="p-3" data-v-ab25c6ec${_scopeId3}><div class="flex justify-center" data-v-ab25c6ec${_scopeId3}><img src="/img/item/5272.png" alt="" class="mr-2" data-v-ab25c6ec${_scopeId3}> Erroneous </div></td><td data-v-ab25c6ec${_scopeId3}>${serverRenderer.ssrInterpolate(woe2.wrong_support_skills_used)}</td><td class="p-3" data-v-ab25c6ec${_scopeId3}>${serverRenderer.ssrInterpolate(woe2.wrong_healing_done)}</td></tr></tbody></table></div></div></div></div></td></tr><!--]-->`);
                        });
                        _push4(`<!--]-->`);
                      } else {
                        return [
                          (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(vue.unref(woe).data, (woe2, index) => {
                            return vue.openBlock(), vue.createBlock(vue.Fragment, { key: index }, [
                              vue.createVNode("tr", {
                                class: "spaceUnder hover:bg-gray-800/40 cursor-pointer hover:transition hover:duration-150",
                                onClick: ($event) => show_info(index)
                              }, [
                                index == 0 ? (vue.openBlock(), vue.createBlock("td", {
                                  key: 0,
                                  class: "px-5 py-3 w-1/12"
                                }, [
                                  vue.createVNode(_component_font_awesome_icon, {
                                    class: "text-2xl hover:text-yellow-600",
                                    icon: "fa-solid fa-trophy"
                                  })
                                ])) : (vue.openBlock(), vue.createBlock("td", {
                                  key: 1,
                                  class: "px-5 py-3 w-1/12"
                                }, vue.toDisplayString(index + 1), 1)),
                                vue.createVNode("td", { class: "px-5 py-3 w-1/6" }, [
                                  vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                    vue.createVNode("div", { class: "flex justify-center items-center" }, [
                                      vue.createVNode("img", {
                                        src: `/rochar/characterhead/${woe2.name}`,
                                        alt: ""
                                      }, null, 8, ["src"]),
                                      vue.createVNode("div", null, [
                                        vue.createVNode("span", { class: "text-[#04aaff]" }, vue.toDisplayString(woe2.name), 1),
                                        vue.createTextVNode(" (" + vue.toDisplayString(vue.unref(get_job_name)(woe2.class)) + ") ", 1)
                                      ])
                                    ])
                                  ])
                                ]),
                                vue.createVNode("td", { class: "px-5 py-3 w-1/6" }, [
                                  vue.createVNode("div", { class: "flex justify-center items-center" }, [
                                    vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                      vue.createVNode("img", {
                                        class: "mr-2",
                                        src: `/storage/cache/tmp_emblem/${woe2.guild_id}.png `,
                                        alt: ""
                                      }, null, 8, ["src"]),
                                      vue.createTextVNode(" " + vue.toDisplayString(woe2.GName), 1)
                                    ])
                                  ])
                                ]),
                                vue.createVNode("td", { class: "px-5 py-3 w-1/6" }, vue.toDisplayString(vue.unref(getFormatNumber)(woe2.kill_count)), 1),
                                vue.createVNode("td", { class: "px-5 py-3 w-1/6" }, vue.toDisplayString(vue.unref(getFormatNumber)(woe2.death_count)), 1),
                                vue.createVNode("td", { class: "px-5 py-3" }, [
                                  vue.createVNode("div", { class: "flex justify-center items-center" }, [
                                    vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                      vue.createVNode(vue.unref(CountryFlag__default["default"]), {
                                        country: woe2.country,
                                        size: "normal"
                                      }, null, 8, ["country"])
                                    ])
                                  ])
                                ]),
                                vue.createVNode("td", { class: "px-5 py-3 w-1/6" }, vue.toDisplayString(vue.unref(getFormatNumber)(woe2.score)), 1)
                              ], 8, ["onClick"]),
                              vue.createVNode("tr", {
                                id: "show_info_id_" + index,
                                class: "hidden spaceUnder"
                              }, [
                                vue.createVNode("td", { colspan: "9" }, [
                                  vue.createVNode("div", { class: "flex w-full" }, [
                                    vue.createVNode("div", { class: "w-1/5 py-6" }, [
                                      vue.createVNode("div", { class: "flex flex-col items-center h-full justify-center" }, [
                                        vue.createVNode("div", { class: "flex justify-center" }, [
                                          vue.createVNode("img", {
                                            class: "",
                                            src: `/rochar/character/${woe2.name}`,
                                            alt: ""
                                          }, null, 8, ["src"])
                                        ]),
                                        vue.createVNode("p", null, [
                                          vue.createVNode("span", { class: "font-bold" }, "Playtime:"),
                                          vue.createTextVNode(" " + vue.toDisplayString(vue.unref(secondsToDh)(woe2.playtime)), 1)
                                        ]),
                                        vue.createVNode("p", null, [
                                          vue.createVNode("span", { class: "font-bold" }, "Score:"),
                                          vue.createTextVNode(" " + vue.toDisplayString(vue.unref(getFormatNumber)(woe2.score)), 1)
                                        ]),
                                        vue.createVNode("div", { class: "flex w-full justify-center" }, [
                                          vue.createVNode("img", {
                                            src: "/img/viewprofile.png",
                                            alt: "",
                                            class: "mr-2"
                                          }),
                                          vue.createVNode("a", {
                                            class: "text-[#04aaff]",
                                            href: _ctx.route(
                                              "woe.profile",
                                              woe2.char_id
                                            )
                                          }, "Player Profile", 8, ["href"])
                                        ])
                                      ])
                                    ]),
                                    vue.createVNode("div", { class: "w-4/5 grid grid-row-2" }, [
                                      vue.createVNode("div", { class: "flex w-full" }, [
                                        vue.createVNode("div", { class: "w-1/2 p-2" }, [
                                          vue.createVNode("table", { class: "w-full" }, [
                                            vue.createVNode("thead", { class: "bg-[#0d0d0d]" }, [
                                              vue.createVNode("th", {
                                                colspan: "3",
                                                class: "p-4"
                                              }, " Usable items ")
                                            ]),
                                            vue.createVNode("tbody", null, [
                                              vue.createVNode("tr", { class: "spaceUnder" }, [
                                                vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                                  vue.createVNode("div", { class: "flex justify-center" }, [
                                                    vue.createVNode("img", {
                                                      src: "/img/item/522.png",
                                                      alt: "",
                                                      class: "mr-2"
                                                    }),
                                                    vue.createTextVNode("HP: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                      woe2.hp_heal_potions
                                                    )), 1)
                                                  ])
                                                ]),
                                                vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                                  vue.createVNode("div", { class: "flex justify-center" }, [
                                                    vue.createVNode("img", {
                                                      src: "/img/item/505.png",
                                                      alt: "",
                                                      class: "mr-2"
                                                    }),
                                                    vue.createTextVNode("SP: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                      woe2.sp_heal_potions
                                                    )), 1)
                                                  ])
                                                ]),
                                                vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                                  vue.createVNode("div", { class: "flex justify-center" }, [
                                                    vue.createVNode("img", {
                                                      src: "/img/item/676.png",
                                                      alt: "",
                                                      class: "mr-2"
                                                    }),
                                                    vue.createTextVNode("Zeny: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                      woe2.zeny_used
                                                    )), 1)
                                                  ])
                                                ])
                                              ]),
                                              vue.createVNode("tr", { class: "spaceUnder" }, [
                                                vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                                  vue.createVNode("div", { class: "flex justify-center" }, [
                                                    vue.createVNode("img", {
                                                      src: "/img/item/716.png",
                                                      alt: "",
                                                      class: "mr-2"
                                                    }),
                                                    vue.createTextVNode("Gems: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                      woe2.red_gemstones
                                                    )), 1)
                                                  ])
                                                ]),
                                                vue.createVNode("td", { class: "w-1/3" }, [
                                                  vue.createVNode("div", { class: "flex justify-center" }, [
                                                    vue.createVNode("img", {
                                                      src: "/img/item/717.png",
                                                      alt: "",
                                                      class: "mr-2"
                                                    }),
                                                    vue.createTextVNode("Gems: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                      woe2.blue_gemstones
                                                    )), 1)
                                                  ])
                                                ]),
                                                vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                                  vue.createVNode("div", { class: "flex justify-center" }, [
                                                    vue.createVNode("img", {
                                                      src: "/img/item/715.png",
                                                      alt: "",
                                                      class: "mr-2"
                                                    }),
                                                    vue.createTextVNode("Gems: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                      woe2.yellow_gemstones
                                                    )), 1)
                                                  ])
                                                ])
                                              ]),
                                              vue.createVNode("tr", { class: "spaceUnder" }, [
                                                vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                                  vue.createVNode("div", { class: "flex justify-center" }, [
                                                    vue.createVNode("img", {
                                                      src: "/img/item/1752.png",
                                                      alt: "",
                                                      class: "mr-2"
                                                    }),
                                                    vue.createTextVNode("Arrows: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                      woe2.ammo_used
                                                    )), 1)
                                                  ])
                                                ]),
                                                vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                                  vue.createVNode("div", { class: "flex justify-center" }, [
                                                    vue.createVNode("img", {
                                                      src: "/img/item/7136.png",
                                                      alt: "",
                                                      class: "mr-2"
                                                    }),
                                                    vue.createTextVNode("Bottles: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                      woe2.acid_demostration
                                                    )), 1)
                                                  ])
                                                ]),
                                                vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                                  vue.createVNode("div", { class: "flex justify-center" }, [
                                                    vue.createVNode("img", {
                                                      src: "/img/item/678.png",
                                                      alt: "",
                                                      class: "mr-2"
                                                    }),
                                                    vue.createTextVNode("Bottles: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                      woe2.poison_bottles
                                                    )), 1)
                                                  ])
                                                ])
                                              ])
                                            ])
                                          ])
                                        ]),
                                        vue.createVNode("div", { class: "w-1/2 p-2 flex" }, [
                                          vue.createVNode("table", { class: "w-1/2 mr-2" }, [
                                            vue.createVNode("thead", { class: "bg-[#0d0d0d]" }, [
                                              vue.createVNode("th", {
                                                colspan: "3",
                                                class: "p-4"
                                              }, " Damage vs Player ")
                                            ]),
                                            vue.createVNode("tbody", null, [
                                              vue.createVNode("tr", { class: "spaceUnder" }, [
                                                vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                                  vue.createVNode("div", { class: "flex justify-center" }, [
                                                    vue.createVNode("img", {
                                                      src: "/img/item/1228.png",
                                                      alt: "",
                                                      class: "mr-2"
                                                    }),
                                                    vue.createTextVNode(" Best: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                      woe2.top_damage
                                                    )), 1)
                                                  ])
                                                ])
                                              ]),
                                              vue.createVNode("tr", { class: "spaceUnder" }, [
                                                vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                                  vue.createVNode("div", { class: "flex justify-center" }, [
                                                    vue.createVNode("img", {
                                                      src: "/img/item/1281.png",
                                                      alt: "",
                                                      class: "mr-2"
                                                    }),
                                                    vue.createTextVNode(" Done: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                      woe2.damage_done
                                                    )), 1)
                                                  ])
                                                ])
                                              ]),
                                              vue.createVNode("tr", { class: "spaceUnder" }, [
                                                vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                                  vue.createVNode("div", { class: "flex justify-center" }, [
                                                    vue.createVNode("img", {
                                                      src: "/img/item/2115.png",
                                                      alt: "",
                                                      class: "mr-2"
                                                    }),
                                                    vue.createTextVNode(" Recv: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                      woe2.damage_received
                                                    )), 1)
                                                  ])
                                                ])
                                              ])
                                            ])
                                          ]),
                                          vue.createVNode("table", { class: "w-1/2" }, [
                                            vue.createVNode("thead", { class: "bg-[#0d0d0d]" }, [
                                              vue.createVNode("th", {
                                                colspan: "3",
                                                class: "p-4"
                                              }, " War Data ")
                                            ]),
                                            vue.createVNode("tbody", null, [
                                              vue.createVNode("tr", { class: "spaceUnder" }, [
                                                vue.createVNode("td", { class: "w-1/3 p-3 border-b" }, [
                                                  vue.createVNode("div", { class: "flex justify-center" }, [
                                                    vue.createVNode("img", {
                                                      src: "/img/item/7005.png",
                                                      alt: "",
                                                      class: "mr-2"
                                                    }),
                                                    vue.createTextVNode(" Kills: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                      woe2.kill_count
                                                    )), 1)
                                                  ])
                                                ])
                                              ]),
                                              vue.createVNode("tr", { class: "spaceUnder" }, [
                                                vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                                  vue.createVNode("div", { class: "flex justify-center" }, [
                                                    vue.createVNode("img", {
                                                      src: "/img/item/7024.png",
                                                      alt: "",
                                                      class: "mr-2"
                                                    }),
                                                    vue.createTextVNode(" Deaths: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                      woe2.death_count
                                                    )), 1)
                                                  ])
                                                ])
                                              ])
                                            ])
                                          ])
                                        ])
                                      ]),
                                      vue.createVNode("div", { class: "flex w-full" }, [
                                        vue.createVNode("div", { class: "w-1/2 p-2" }, [
                                          vue.createVNode("table", { class: "w-full" }, [
                                            vue.createVNode("thead", { class: "bg-[#0d0d0d] border-b" }, [
                                              vue.createVNode("th", {
                                                colspan: "5",
                                                class: "p-4"
                                              }, " Structure ")
                                            ]),
                                            vue.createVNode("thead", { class: "bg-[#0d0d0d]" }, [
                                              vue.createVNode("th", { class: "w-1/5 p-2" }, " Option "),
                                              vue.createVNode("th", { class: "p-2" }, [
                                                vue.createVNode("div", { class: "flex items-center" }, [
                                                  vue.createVNode("img", {
                                                    class: "mr-2",
                                                    src: "/img/item/714.png",
                                                    alt: ""
                                                  }),
                                                  vue.createTextVNode(" Emperium ")
                                                ])
                                              ]),
                                              vue.createVNode("th", { class: "p-2" }, [
                                                vue.createVNode("div", { class: "flex items-center" }, [
                                                  vue.createVNode("img", {
                                                    class: "mr-2",
                                                    src: "/img/item/1068.png",
                                                    alt: ""
                                                  }),
                                                  vue.createTextVNode(" Barricade ")
                                                ])
                                              ]),
                                              vue.createVNode("th", { class: "p-2" }, [
                                                vue.createVNode("div", { class: "flex items-center" }, [
                                                  vue.createVNode("img", {
                                                    class: "mr-2",
                                                    src: "/img/item/7430.png",
                                                    alt: ""
                                                  }),
                                                  vue.createTextVNode(" G.Stone ")
                                                ])
                                              ]),
                                              vue.createVNode("th", { class: "p-2" }, [
                                                vue.createVNode("div", { class: "flex items-center" }, [
                                                  vue.createVNode("img", {
                                                    class: "mr-2",
                                                    src: "/img/item/14288.png",
                                                    alt: ""
                                                  }),
                                                  vue.createTextVNode(" Guardian ")
                                                ])
                                              ])
                                            ]),
                                            vue.createVNode("tbody", null, [
                                              vue.createVNode("tr", { class: "border-b" }, [
                                                vue.createVNode("td", { class: "p-3" }, " Damage Structure "),
                                                vue.createVNode("td", null, vue.toDisplayString(woe2.emperium_damage), 1),
                                                vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(woe2.barricade_damage), 1),
                                                vue.createVNode("td", null, vue.toDisplayString(woe2.gstone_damage), 1),
                                                vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(woe2.guardian_damage), 1)
                                              ]),
                                              vue.createVNode("tr", { class: "spaceUnder" }, [
                                                vue.createVNode("td", { class: "p-3" }, " Eliminated Structures "),
                                                vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(woe2.emperium_kill), 1),
                                                vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(woe2.barricade_kill), 1),
                                                vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(woe2.gstone_kill), 1),
                                                vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(woe2.guardian_kill), 1)
                                              ])
                                            ])
                                          ])
                                        ]),
                                        vue.createVNode("div", { class: "w-1/2 p-2" }, [
                                          vue.createVNode("table", { class: "w-full" }, [
                                            vue.createVNode("thead", { class: "bg-[#0d0d0d] border-b" }, [
                                              vue.createVNode("th", {
                                                class: "p-4",
                                                colspan: "3"
                                              }, " Support Skills ")
                                            ]),
                                            vue.createVNode("thead", { class: "bg-[#0d0d0d]" }, [
                                              vue.createVNode("th", { class: "p-2" }, " Option "),
                                              vue.createVNode("th", { class: "p-2" }, " Total Skills "),
                                              vue.createVNode("th", { class: "p-2" }, " Total Healing ")
                                            ]),
                                            vue.createVNode("tbody", null, [
                                              vue.createVNode("tr", { class: "border-b" }, [
                                                vue.createVNode("td", { class: "p-3" }, [
                                                  vue.createVNode("div", { class: "flex justify-center" }, [
                                                    vue.createVNode("img", {
                                                      src: "/img/item/2273.png",
                                                      alt: "",
                                                      class: "mr-2"
                                                    }),
                                                    vue.createTextVNode(" Correct ")
                                                  ])
                                                ]),
                                                vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(woe2.support_skills_used), 1),
                                                vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(woe2.healing_done), 1)
                                              ]),
                                              vue.createVNode("tr", { class: "spaceUnder" }, [
                                                vue.createVNode("td", { class: "p-3" }, [
                                                  vue.createVNode("div", { class: "flex justify-center" }, [
                                                    vue.createVNode("img", {
                                                      src: "/img/item/5272.png",
                                                      alt: "",
                                                      class: "mr-2"
                                                    }),
                                                    vue.createTextVNode(" Erroneous ")
                                                  ])
                                                ]),
                                                vue.createVNode("td", null, vue.toDisplayString(woe2.wrong_support_skills_used), 1),
                                                vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(woe2.wrong_healing_done), 1)
                                              ])
                                            ])
                                          ])
                                        ])
                                      ])
                                    ])
                                  ])
                                ])
                              ], 8, ["id"])
                            ], 64);
                          }), 128))
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(serverRenderer.ssrRenderComponent(_sfc_main$1x, {
                    class: "p-3 text-white",
                    links: vue.unref(woe).links
                  }, null, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(RankingTable, { rank_attributes: rank_attributes.value }, {
                      row: vue.withCtx(() => [
                        (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(vue.unref(woe).data, (woe2, index) => {
                          return vue.openBlock(), vue.createBlock(vue.Fragment, { key: index }, [
                            vue.createVNode("tr", {
                              class: "spaceUnder hover:bg-gray-800/40 cursor-pointer hover:transition hover:duration-150",
                              onClick: ($event) => show_info(index)
                            }, [
                              index == 0 ? (vue.openBlock(), vue.createBlock("td", {
                                key: 0,
                                class: "px-5 py-3 w-1/12"
                              }, [
                                vue.createVNode(_component_font_awesome_icon, {
                                  class: "text-2xl hover:text-yellow-600",
                                  icon: "fa-solid fa-trophy"
                                })
                              ])) : (vue.openBlock(), vue.createBlock("td", {
                                key: 1,
                                class: "px-5 py-3 w-1/12"
                              }, vue.toDisplayString(index + 1), 1)),
                              vue.createVNode("td", { class: "px-5 py-3 w-1/6" }, [
                                vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                  vue.createVNode("div", { class: "flex justify-center items-center" }, [
                                    vue.createVNode("img", {
                                      src: `/rochar/characterhead/${woe2.name}`,
                                      alt: ""
                                    }, null, 8, ["src"]),
                                    vue.createVNode("div", null, [
                                      vue.createVNode("span", { class: "text-[#04aaff]" }, vue.toDisplayString(woe2.name), 1),
                                      vue.createTextVNode(" (" + vue.toDisplayString(vue.unref(get_job_name)(woe2.class)) + ") ", 1)
                                    ])
                                  ])
                                ])
                              ]),
                              vue.createVNode("td", { class: "px-5 py-3 w-1/6" }, [
                                vue.createVNode("div", { class: "flex justify-center items-center" }, [
                                  vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                    vue.createVNode("img", {
                                      class: "mr-2",
                                      src: `/storage/cache/tmp_emblem/${woe2.guild_id}.png `,
                                      alt: ""
                                    }, null, 8, ["src"]),
                                    vue.createTextVNode(" " + vue.toDisplayString(woe2.GName), 1)
                                  ])
                                ])
                              ]),
                              vue.createVNode("td", { class: "px-5 py-3 w-1/6" }, vue.toDisplayString(vue.unref(getFormatNumber)(woe2.kill_count)), 1),
                              vue.createVNode("td", { class: "px-5 py-3 w-1/6" }, vue.toDisplayString(vue.unref(getFormatNumber)(woe2.death_count)), 1),
                              vue.createVNode("td", { class: "px-5 py-3" }, [
                                vue.createVNode("div", { class: "flex justify-center items-center" }, [
                                  vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                    vue.createVNode(vue.unref(CountryFlag__default["default"]), {
                                      country: woe2.country,
                                      size: "normal"
                                    }, null, 8, ["country"])
                                  ])
                                ])
                              ]),
                              vue.createVNode("td", { class: "px-5 py-3 w-1/6" }, vue.toDisplayString(vue.unref(getFormatNumber)(woe2.score)), 1)
                            ], 8, ["onClick"]),
                            vue.createVNode("tr", {
                              id: "show_info_id_" + index,
                              class: "hidden spaceUnder"
                            }, [
                              vue.createVNode("td", { colspan: "9" }, [
                                vue.createVNode("div", { class: "flex w-full" }, [
                                  vue.createVNode("div", { class: "w-1/5 py-6" }, [
                                    vue.createVNode("div", { class: "flex flex-col items-center h-full justify-center" }, [
                                      vue.createVNode("div", { class: "flex justify-center" }, [
                                        vue.createVNode("img", {
                                          class: "",
                                          src: `/rochar/character/${woe2.name}`,
                                          alt: ""
                                        }, null, 8, ["src"])
                                      ]),
                                      vue.createVNode("p", null, [
                                        vue.createVNode("span", { class: "font-bold" }, "Playtime:"),
                                        vue.createTextVNode(" " + vue.toDisplayString(vue.unref(secondsToDh)(woe2.playtime)), 1)
                                      ]),
                                      vue.createVNode("p", null, [
                                        vue.createVNode("span", { class: "font-bold" }, "Score:"),
                                        vue.createTextVNode(" " + vue.toDisplayString(vue.unref(getFormatNumber)(woe2.score)), 1)
                                      ]),
                                      vue.createVNode("div", { class: "flex w-full justify-center" }, [
                                        vue.createVNode("img", {
                                          src: "/img/viewprofile.png",
                                          alt: "",
                                          class: "mr-2"
                                        }),
                                        vue.createVNode("a", {
                                          class: "text-[#04aaff]",
                                          href: _ctx.route(
                                            "woe.profile",
                                            woe2.char_id
                                          )
                                        }, "Player Profile", 8, ["href"])
                                      ])
                                    ])
                                  ]),
                                  vue.createVNode("div", { class: "w-4/5 grid grid-row-2" }, [
                                    vue.createVNode("div", { class: "flex w-full" }, [
                                      vue.createVNode("div", { class: "w-1/2 p-2" }, [
                                        vue.createVNode("table", { class: "w-full" }, [
                                          vue.createVNode("thead", { class: "bg-[#0d0d0d]" }, [
                                            vue.createVNode("th", {
                                              colspan: "3",
                                              class: "p-4"
                                            }, " Usable items ")
                                          ]),
                                          vue.createVNode("tbody", null, [
                                            vue.createVNode("tr", { class: "spaceUnder" }, [
                                              vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                                vue.createVNode("div", { class: "flex justify-center" }, [
                                                  vue.createVNode("img", {
                                                    src: "/img/item/522.png",
                                                    alt: "",
                                                    class: "mr-2"
                                                  }),
                                                  vue.createTextVNode("HP: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                    woe2.hp_heal_potions
                                                  )), 1)
                                                ])
                                              ]),
                                              vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                                vue.createVNode("div", { class: "flex justify-center" }, [
                                                  vue.createVNode("img", {
                                                    src: "/img/item/505.png",
                                                    alt: "",
                                                    class: "mr-2"
                                                  }),
                                                  vue.createTextVNode("SP: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                    woe2.sp_heal_potions
                                                  )), 1)
                                                ])
                                              ]),
                                              vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                                vue.createVNode("div", { class: "flex justify-center" }, [
                                                  vue.createVNode("img", {
                                                    src: "/img/item/676.png",
                                                    alt: "",
                                                    class: "mr-2"
                                                  }),
                                                  vue.createTextVNode("Zeny: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                    woe2.zeny_used
                                                  )), 1)
                                                ])
                                              ])
                                            ]),
                                            vue.createVNode("tr", { class: "spaceUnder" }, [
                                              vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                                vue.createVNode("div", { class: "flex justify-center" }, [
                                                  vue.createVNode("img", {
                                                    src: "/img/item/716.png",
                                                    alt: "",
                                                    class: "mr-2"
                                                  }),
                                                  vue.createTextVNode("Gems: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                    woe2.red_gemstones
                                                  )), 1)
                                                ])
                                              ]),
                                              vue.createVNode("td", { class: "w-1/3" }, [
                                                vue.createVNode("div", { class: "flex justify-center" }, [
                                                  vue.createVNode("img", {
                                                    src: "/img/item/717.png",
                                                    alt: "",
                                                    class: "mr-2"
                                                  }),
                                                  vue.createTextVNode("Gems: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                    woe2.blue_gemstones
                                                  )), 1)
                                                ])
                                              ]),
                                              vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                                vue.createVNode("div", { class: "flex justify-center" }, [
                                                  vue.createVNode("img", {
                                                    src: "/img/item/715.png",
                                                    alt: "",
                                                    class: "mr-2"
                                                  }),
                                                  vue.createTextVNode("Gems: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                    woe2.yellow_gemstones
                                                  )), 1)
                                                ])
                                              ])
                                            ]),
                                            vue.createVNode("tr", { class: "spaceUnder" }, [
                                              vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                                vue.createVNode("div", { class: "flex justify-center" }, [
                                                  vue.createVNode("img", {
                                                    src: "/img/item/1752.png",
                                                    alt: "",
                                                    class: "mr-2"
                                                  }),
                                                  vue.createTextVNode("Arrows: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                    woe2.ammo_used
                                                  )), 1)
                                                ])
                                              ]),
                                              vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                                vue.createVNode("div", { class: "flex justify-center" }, [
                                                  vue.createVNode("img", {
                                                    src: "/img/item/7136.png",
                                                    alt: "",
                                                    class: "mr-2"
                                                  }),
                                                  vue.createTextVNode("Bottles: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                    woe2.acid_demostration
                                                  )), 1)
                                                ])
                                              ]),
                                              vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                                vue.createVNode("div", { class: "flex justify-center" }, [
                                                  vue.createVNode("img", {
                                                    src: "/img/item/678.png",
                                                    alt: "",
                                                    class: "mr-2"
                                                  }),
                                                  vue.createTextVNode("Bottles: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                    woe2.poison_bottles
                                                  )), 1)
                                                ])
                                              ])
                                            ])
                                          ])
                                        ])
                                      ]),
                                      vue.createVNode("div", { class: "w-1/2 p-2 flex" }, [
                                        vue.createVNode("table", { class: "w-1/2 mr-2" }, [
                                          vue.createVNode("thead", { class: "bg-[#0d0d0d]" }, [
                                            vue.createVNode("th", {
                                              colspan: "3",
                                              class: "p-4"
                                            }, " Damage vs Player ")
                                          ]),
                                          vue.createVNode("tbody", null, [
                                            vue.createVNode("tr", { class: "spaceUnder" }, [
                                              vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                                vue.createVNode("div", { class: "flex justify-center" }, [
                                                  vue.createVNode("img", {
                                                    src: "/img/item/1228.png",
                                                    alt: "",
                                                    class: "mr-2"
                                                  }),
                                                  vue.createTextVNode(" Best: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                    woe2.top_damage
                                                  )), 1)
                                                ])
                                              ])
                                            ]),
                                            vue.createVNode("tr", { class: "spaceUnder" }, [
                                              vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                                vue.createVNode("div", { class: "flex justify-center" }, [
                                                  vue.createVNode("img", {
                                                    src: "/img/item/1281.png",
                                                    alt: "",
                                                    class: "mr-2"
                                                  }),
                                                  vue.createTextVNode(" Done: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                    woe2.damage_done
                                                  )), 1)
                                                ])
                                              ])
                                            ]),
                                            vue.createVNode("tr", { class: "spaceUnder" }, [
                                              vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                                vue.createVNode("div", { class: "flex justify-center" }, [
                                                  vue.createVNode("img", {
                                                    src: "/img/item/2115.png",
                                                    alt: "",
                                                    class: "mr-2"
                                                  }),
                                                  vue.createTextVNode(" Recv: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                    woe2.damage_received
                                                  )), 1)
                                                ])
                                              ])
                                            ])
                                          ])
                                        ]),
                                        vue.createVNode("table", { class: "w-1/2" }, [
                                          vue.createVNode("thead", { class: "bg-[#0d0d0d]" }, [
                                            vue.createVNode("th", {
                                              colspan: "3",
                                              class: "p-4"
                                            }, " War Data ")
                                          ]),
                                          vue.createVNode("tbody", null, [
                                            vue.createVNode("tr", { class: "spaceUnder" }, [
                                              vue.createVNode("td", { class: "w-1/3 p-3 border-b" }, [
                                                vue.createVNode("div", { class: "flex justify-center" }, [
                                                  vue.createVNode("img", {
                                                    src: "/img/item/7005.png",
                                                    alt: "",
                                                    class: "mr-2"
                                                  }),
                                                  vue.createTextVNode(" Kills: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                    woe2.kill_count
                                                  )), 1)
                                                ])
                                              ])
                                            ]),
                                            vue.createVNode("tr", { class: "spaceUnder" }, [
                                              vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                                vue.createVNode("div", { class: "flex justify-center" }, [
                                                  vue.createVNode("img", {
                                                    src: "/img/item/7024.png",
                                                    alt: "",
                                                    class: "mr-2"
                                                  }),
                                                  vue.createTextVNode(" Deaths: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                    woe2.death_count
                                                  )), 1)
                                                ])
                                              ])
                                            ])
                                          ])
                                        ])
                                      ])
                                    ]),
                                    vue.createVNode("div", { class: "flex w-full" }, [
                                      vue.createVNode("div", { class: "w-1/2 p-2" }, [
                                        vue.createVNode("table", { class: "w-full" }, [
                                          vue.createVNode("thead", { class: "bg-[#0d0d0d] border-b" }, [
                                            vue.createVNode("th", {
                                              colspan: "5",
                                              class: "p-4"
                                            }, " Structure ")
                                          ]),
                                          vue.createVNode("thead", { class: "bg-[#0d0d0d]" }, [
                                            vue.createVNode("th", { class: "w-1/5 p-2" }, " Option "),
                                            vue.createVNode("th", { class: "p-2" }, [
                                              vue.createVNode("div", { class: "flex items-center" }, [
                                                vue.createVNode("img", {
                                                  class: "mr-2",
                                                  src: "/img/item/714.png",
                                                  alt: ""
                                                }),
                                                vue.createTextVNode(" Emperium ")
                                              ])
                                            ]),
                                            vue.createVNode("th", { class: "p-2" }, [
                                              vue.createVNode("div", { class: "flex items-center" }, [
                                                vue.createVNode("img", {
                                                  class: "mr-2",
                                                  src: "/img/item/1068.png",
                                                  alt: ""
                                                }),
                                                vue.createTextVNode(" Barricade ")
                                              ])
                                            ]),
                                            vue.createVNode("th", { class: "p-2" }, [
                                              vue.createVNode("div", { class: "flex items-center" }, [
                                                vue.createVNode("img", {
                                                  class: "mr-2",
                                                  src: "/img/item/7430.png",
                                                  alt: ""
                                                }),
                                                vue.createTextVNode(" G.Stone ")
                                              ])
                                            ]),
                                            vue.createVNode("th", { class: "p-2" }, [
                                              vue.createVNode("div", { class: "flex items-center" }, [
                                                vue.createVNode("img", {
                                                  class: "mr-2",
                                                  src: "/img/item/14288.png",
                                                  alt: ""
                                                }),
                                                vue.createTextVNode(" Guardian ")
                                              ])
                                            ])
                                          ]),
                                          vue.createVNode("tbody", null, [
                                            vue.createVNode("tr", { class: "border-b" }, [
                                              vue.createVNode("td", { class: "p-3" }, " Damage Structure "),
                                              vue.createVNode("td", null, vue.toDisplayString(woe2.emperium_damage), 1),
                                              vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(woe2.barricade_damage), 1),
                                              vue.createVNode("td", null, vue.toDisplayString(woe2.gstone_damage), 1),
                                              vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(woe2.guardian_damage), 1)
                                            ]),
                                            vue.createVNode("tr", { class: "spaceUnder" }, [
                                              vue.createVNode("td", { class: "p-3" }, " Eliminated Structures "),
                                              vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(woe2.emperium_kill), 1),
                                              vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(woe2.barricade_kill), 1),
                                              vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(woe2.gstone_kill), 1),
                                              vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(woe2.guardian_kill), 1)
                                            ])
                                          ])
                                        ])
                                      ]),
                                      vue.createVNode("div", { class: "w-1/2 p-2" }, [
                                        vue.createVNode("table", { class: "w-full" }, [
                                          vue.createVNode("thead", { class: "bg-[#0d0d0d] border-b" }, [
                                            vue.createVNode("th", {
                                              class: "p-4",
                                              colspan: "3"
                                            }, " Support Skills ")
                                          ]),
                                          vue.createVNode("thead", { class: "bg-[#0d0d0d]" }, [
                                            vue.createVNode("th", { class: "p-2" }, " Option "),
                                            vue.createVNode("th", { class: "p-2" }, " Total Skills "),
                                            vue.createVNode("th", { class: "p-2" }, " Total Healing ")
                                          ]),
                                          vue.createVNode("tbody", null, [
                                            vue.createVNode("tr", { class: "border-b" }, [
                                              vue.createVNode("td", { class: "p-3" }, [
                                                vue.createVNode("div", { class: "flex justify-center" }, [
                                                  vue.createVNode("img", {
                                                    src: "/img/item/2273.png",
                                                    alt: "",
                                                    class: "mr-2"
                                                  }),
                                                  vue.createTextVNode(" Correct ")
                                                ])
                                              ]),
                                              vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(woe2.support_skills_used), 1),
                                              vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(woe2.healing_done), 1)
                                            ]),
                                            vue.createVNode("tr", { class: "spaceUnder" }, [
                                              vue.createVNode("td", { class: "p-3" }, [
                                                vue.createVNode("div", { class: "flex justify-center" }, [
                                                  vue.createVNode("img", {
                                                    src: "/img/item/5272.png",
                                                    alt: "",
                                                    class: "mr-2"
                                                  }),
                                                  vue.createTextVNode(" Erroneous ")
                                                ])
                                              ]),
                                              vue.createVNode("td", null, vue.toDisplayString(woe2.wrong_support_skills_used), 1),
                                              vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(woe2.wrong_healing_done), 1)
                                            ])
                                          ])
                                        ])
                                      ])
                                    ])
                                  ])
                                ])
                              ])
                            ], 8, ["id"])
                          ], 64);
                        }), 128))
                      ]),
                      _: 1
                    }, 8, ["rank_attributes"]),
                    vue.createVNode(_sfc_main$1x, {
                      class: "p-3 text-white",
                      links: vue.unref(woe).links
                    }, null, 8, ["links"])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(_sfc_main$x, {
                title: "WoE",
                rank_filter: rank_types.value,
                rank: "woe",
                filter_type: "ranking"
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode(RankingTable, { rank_attributes: rank_attributes.value }, {
                    row: vue.withCtx(() => [
                      (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(vue.unref(woe).data, (woe2, index) => {
                        return vue.openBlock(), vue.createBlock(vue.Fragment, { key: index }, [
                          vue.createVNode("tr", {
                            class: "spaceUnder hover:bg-gray-800/40 cursor-pointer hover:transition hover:duration-150",
                            onClick: ($event) => show_info(index)
                          }, [
                            index == 0 ? (vue.openBlock(), vue.createBlock("td", {
                              key: 0,
                              class: "px-5 py-3 w-1/12"
                            }, [
                              vue.createVNode(_component_font_awesome_icon, {
                                class: "text-2xl hover:text-yellow-600",
                                icon: "fa-solid fa-trophy"
                              })
                            ])) : (vue.openBlock(), vue.createBlock("td", {
                              key: 1,
                              class: "px-5 py-3 w-1/12"
                            }, vue.toDisplayString(index + 1), 1)),
                            vue.createVNode("td", { class: "px-5 py-3 w-1/6" }, [
                              vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                vue.createVNode("div", { class: "flex justify-center items-center" }, [
                                  vue.createVNode("img", {
                                    src: `/rochar/characterhead/${woe2.name}`,
                                    alt: ""
                                  }, null, 8, ["src"]),
                                  vue.createVNode("div", null, [
                                    vue.createVNode("span", { class: "text-[#04aaff]" }, vue.toDisplayString(woe2.name), 1),
                                    vue.createTextVNode(" (" + vue.toDisplayString(vue.unref(get_job_name)(woe2.class)) + ") ", 1)
                                  ])
                                ])
                              ])
                            ]),
                            vue.createVNode("td", { class: "px-5 py-3 w-1/6" }, [
                              vue.createVNode("div", { class: "flex justify-center items-center" }, [
                                vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                  vue.createVNode("img", {
                                    class: "mr-2",
                                    src: `/storage/cache/tmp_emblem/${woe2.guild_id}.png `,
                                    alt: ""
                                  }, null, 8, ["src"]),
                                  vue.createTextVNode(" " + vue.toDisplayString(woe2.GName), 1)
                                ])
                              ])
                            ]),
                            vue.createVNode("td", { class: "px-5 py-3 w-1/6" }, vue.toDisplayString(vue.unref(getFormatNumber)(woe2.kill_count)), 1),
                            vue.createVNode("td", { class: "px-5 py-3 w-1/6" }, vue.toDisplayString(vue.unref(getFormatNumber)(woe2.death_count)), 1),
                            vue.createVNode("td", { class: "px-5 py-3" }, [
                              vue.createVNode("div", { class: "flex justify-center items-center" }, [
                                vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                  vue.createVNode(vue.unref(CountryFlag__default["default"]), {
                                    country: woe2.country,
                                    size: "normal"
                                  }, null, 8, ["country"])
                                ])
                              ])
                            ]),
                            vue.createVNode("td", { class: "px-5 py-3 w-1/6" }, vue.toDisplayString(vue.unref(getFormatNumber)(woe2.score)), 1)
                          ], 8, ["onClick"]),
                          vue.createVNode("tr", {
                            id: "show_info_id_" + index,
                            class: "hidden spaceUnder"
                          }, [
                            vue.createVNode("td", { colspan: "9" }, [
                              vue.createVNode("div", { class: "flex w-full" }, [
                                vue.createVNode("div", { class: "w-1/5 py-6" }, [
                                  vue.createVNode("div", { class: "flex flex-col items-center h-full justify-center" }, [
                                    vue.createVNode("div", { class: "flex justify-center" }, [
                                      vue.createVNode("img", {
                                        class: "",
                                        src: `/rochar/character/${woe2.name}`,
                                        alt: ""
                                      }, null, 8, ["src"])
                                    ]),
                                    vue.createVNode("p", null, [
                                      vue.createVNode("span", { class: "font-bold" }, "Playtime:"),
                                      vue.createTextVNode(" " + vue.toDisplayString(vue.unref(secondsToDh)(woe2.playtime)), 1)
                                    ]),
                                    vue.createVNode("p", null, [
                                      vue.createVNode("span", { class: "font-bold" }, "Score:"),
                                      vue.createTextVNode(" " + vue.toDisplayString(vue.unref(getFormatNumber)(woe2.score)), 1)
                                    ]),
                                    vue.createVNode("div", { class: "flex w-full justify-center" }, [
                                      vue.createVNode("img", {
                                        src: "/img/viewprofile.png",
                                        alt: "",
                                        class: "mr-2"
                                      }),
                                      vue.createVNode("a", {
                                        class: "text-[#04aaff]",
                                        href: _ctx.route(
                                          "woe.profile",
                                          woe2.char_id
                                        )
                                      }, "Player Profile", 8, ["href"])
                                    ])
                                  ])
                                ]),
                                vue.createVNode("div", { class: "w-4/5 grid grid-row-2" }, [
                                  vue.createVNode("div", { class: "flex w-full" }, [
                                    vue.createVNode("div", { class: "w-1/2 p-2" }, [
                                      vue.createVNode("table", { class: "w-full" }, [
                                        vue.createVNode("thead", { class: "bg-[#0d0d0d]" }, [
                                          vue.createVNode("th", {
                                            colspan: "3",
                                            class: "p-4"
                                          }, " Usable items ")
                                        ]),
                                        vue.createVNode("tbody", null, [
                                          vue.createVNode("tr", { class: "spaceUnder" }, [
                                            vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                              vue.createVNode("div", { class: "flex justify-center" }, [
                                                vue.createVNode("img", {
                                                  src: "/img/item/522.png",
                                                  alt: "",
                                                  class: "mr-2"
                                                }),
                                                vue.createTextVNode("HP: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                  woe2.hp_heal_potions
                                                )), 1)
                                              ])
                                            ]),
                                            vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                              vue.createVNode("div", { class: "flex justify-center" }, [
                                                vue.createVNode("img", {
                                                  src: "/img/item/505.png",
                                                  alt: "",
                                                  class: "mr-2"
                                                }),
                                                vue.createTextVNode("SP: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                  woe2.sp_heal_potions
                                                )), 1)
                                              ])
                                            ]),
                                            vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                              vue.createVNode("div", { class: "flex justify-center" }, [
                                                vue.createVNode("img", {
                                                  src: "/img/item/676.png",
                                                  alt: "",
                                                  class: "mr-2"
                                                }),
                                                vue.createTextVNode("Zeny: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                  woe2.zeny_used
                                                )), 1)
                                              ])
                                            ])
                                          ]),
                                          vue.createVNode("tr", { class: "spaceUnder" }, [
                                            vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                              vue.createVNode("div", { class: "flex justify-center" }, [
                                                vue.createVNode("img", {
                                                  src: "/img/item/716.png",
                                                  alt: "",
                                                  class: "mr-2"
                                                }),
                                                vue.createTextVNode("Gems: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                  woe2.red_gemstones
                                                )), 1)
                                              ])
                                            ]),
                                            vue.createVNode("td", { class: "w-1/3" }, [
                                              vue.createVNode("div", { class: "flex justify-center" }, [
                                                vue.createVNode("img", {
                                                  src: "/img/item/717.png",
                                                  alt: "",
                                                  class: "mr-2"
                                                }),
                                                vue.createTextVNode("Gems: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                  woe2.blue_gemstones
                                                )), 1)
                                              ])
                                            ]),
                                            vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                              vue.createVNode("div", { class: "flex justify-center" }, [
                                                vue.createVNode("img", {
                                                  src: "/img/item/715.png",
                                                  alt: "",
                                                  class: "mr-2"
                                                }),
                                                vue.createTextVNode("Gems: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                  woe2.yellow_gemstones
                                                )), 1)
                                              ])
                                            ])
                                          ]),
                                          vue.createVNode("tr", { class: "spaceUnder" }, [
                                            vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                              vue.createVNode("div", { class: "flex justify-center" }, [
                                                vue.createVNode("img", {
                                                  src: "/img/item/1752.png",
                                                  alt: "",
                                                  class: "mr-2"
                                                }),
                                                vue.createTextVNode("Arrows: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                  woe2.ammo_used
                                                )), 1)
                                              ])
                                            ]),
                                            vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                              vue.createVNode("div", { class: "flex justify-center" }, [
                                                vue.createVNode("img", {
                                                  src: "/img/item/7136.png",
                                                  alt: "",
                                                  class: "mr-2"
                                                }),
                                                vue.createTextVNode("Bottles: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                  woe2.acid_demostration
                                                )), 1)
                                              ])
                                            ]),
                                            vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                              vue.createVNode("div", { class: "flex justify-center" }, [
                                                vue.createVNode("img", {
                                                  src: "/img/item/678.png",
                                                  alt: "",
                                                  class: "mr-2"
                                                }),
                                                vue.createTextVNode("Bottles: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                  woe2.poison_bottles
                                                )), 1)
                                              ])
                                            ])
                                          ])
                                        ])
                                      ])
                                    ]),
                                    vue.createVNode("div", { class: "w-1/2 p-2 flex" }, [
                                      vue.createVNode("table", { class: "w-1/2 mr-2" }, [
                                        vue.createVNode("thead", { class: "bg-[#0d0d0d]" }, [
                                          vue.createVNode("th", {
                                            colspan: "3",
                                            class: "p-4"
                                          }, " Damage vs Player ")
                                        ]),
                                        vue.createVNode("tbody", null, [
                                          vue.createVNode("tr", { class: "spaceUnder" }, [
                                            vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                              vue.createVNode("div", { class: "flex justify-center" }, [
                                                vue.createVNode("img", {
                                                  src: "/img/item/1228.png",
                                                  alt: "",
                                                  class: "mr-2"
                                                }),
                                                vue.createTextVNode(" Best: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                  woe2.top_damage
                                                )), 1)
                                              ])
                                            ])
                                          ]),
                                          vue.createVNode("tr", { class: "spaceUnder" }, [
                                            vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                              vue.createVNode("div", { class: "flex justify-center" }, [
                                                vue.createVNode("img", {
                                                  src: "/img/item/1281.png",
                                                  alt: "",
                                                  class: "mr-2"
                                                }),
                                                vue.createTextVNode(" Done: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                  woe2.damage_done
                                                )), 1)
                                              ])
                                            ])
                                          ]),
                                          vue.createVNode("tr", { class: "spaceUnder" }, [
                                            vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                              vue.createVNode("div", { class: "flex justify-center" }, [
                                                vue.createVNode("img", {
                                                  src: "/img/item/2115.png",
                                                  alt: "",
                                                  class: "mr-2"
                                                }),
                                                vue.createTextVNode(" Recv: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                  woe2.damage_received
                                                )), 1)
                                              ])
                                            ])
                                          ])
                                        ])
                                      ]),
                                      vue.createVNode("table", { class: "w-1/2" }, [
                                        vue.createVNode("thead", { class: "bg-[#0d0d0d]" }, [
                                          vue.createVNode("th", {
                                            colspan: "3",
                                            class: "p-4"
                                          }, " War Data ")
                                        ]),
                                        vue.createVNode("tbody", null, [
                                          vue.createVNode("tr", { class: "spaceUnder" }, [
                                            vue.createVNode("td", { class: "w-1/3 p-3 border-b" }, [
                                              vue.createVNode("div", { class: "flex justify-center" }, [
                                                vue.createVNode("img", {
                                                  src: "/img/item/7005.png",
                                                  alt: "",
                                                  class: "mr-2"
                                                }),
                                                vue.createTextVNode(" Kills: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                  woe2.kill_count
                                                )), 1)
                                              ])
                                            ])
                                          ]),
                                          vue.createVNode("tr", { class: "spaceUnder" }, [
                                            vue.createVNode("td", { class: "w-1/3 p-3" }, [
                                              vue.createVNode("div", { class: "flex justify-center" }, [
                                                vue.createVNode("img", {
                                                  src: "/img/item/7024.png",
                                                  alt: "",
                                                  class: "mr-2"
                                                }),
                                                vue.createTextVNode(" Deaths: " + vue.toDisplayString(vue.unref(getFormatNumber)(
                                                  woe2.death_count
                                                )), 1)
                                              ])
                                            ])
                                          ])
                                        ])
                                      ])
                                    ])
                                  ]),
                                  vue.createVNode("div", { class: "flex w-full" }, [
                                    vue.createVNode("div", { class: "w-1/2 p-2" }, [
                                      vue.createVNode("table", { class: "w-full" }, [
                                        vue.createVNode("thead", { class: "bg-[#0d0d0d] border-b" }, [
                                          vue.createVNode("th", {
                                            colspan: "5",
                                            class: "p-4"
                                          }, " Structure ")
                                        ]),
                                        vue.createVNode("thead", { class: "bg-[#0d0d0d]" }, [
                                          vue.createVNode("th", { class: "w-1/5 p-2" }, " Option "),
                                          vue.createVNode("th", { class: "p-2" }, [
                                            vue.createVNode("div", { class: "flex items-center" }, [
                                              vue.createVNode("img", {
                                                class: "mr-2",
                                                src: "/img/item/714.png",
                                                alt: ""
                                              }),
                                              vue.createTextVNode(" Emperium ")
                                            ])
                                          ]),
                                          vue.createVNode("th", { class: "p-2" }, [
                                            vue.createVNode("div", { class: "flex items-center" }, [
                                              vue.createVNode("img", {
                                                class: "mr-2",
                                                src: "/img/item/1068.png",
                                                alt: ""
                                              }),
                                              vue.createTextVNode(" Barricade ")
                                            ])
                                          ]),
                                          vue.createVNode("th", { class: "p-2" }, [
                                            vue.createVNode("div", { class: "flex items-center" }, [
                                              vue.createVNode("img", {
                                                class: "mr-2",
                                                src: "/img/item/7430.png",
                                                alt: ""
                                              }),
                                              vue.createTextVNode(" G.Stone ")
                                            ])
                                          ]),
                                          vue.createVNode("th", { class: "p-2" }, [
                                            vue.createVNode("div", { class: "flex items-center" }, [
                                              vue.createVNode("img", {
                                                class: "mr-2",
                                                src: "/img/item/14288.png",
                                                alt: ""
                                              }),
                                              vue.createTextVNode(" Guardian ")
                                            ])
                                          ])
                                        ]),
                                        vue.createVNode("tbody", null, [
                                          vue.createVNode("tr", { class: "border-b" }, [
                                            vue.createVNode("td", { class: "p-3" }, " Damage Structure "),
                                            vue.createVNode("td", null, vue.toDisplayString(woe2.emperium_damage), 1),
                                            vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(woe2.barricade_damage), 1),
                                            vue.createVNode("td", null, vue.toDisplayString(woe2.gstone_damage), 1),
                                            vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(woe2.guardian_damage), 1)
                                          ]),
                                          vue.createVNode("tr", { class: "spaceUnder" }, [
                                            vue.createVNode("td", { class: "p-3" }, " Eliminated Structures "),
                                            vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(woe2.emperium_kill), 1),
                                            vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(woe2.barricade_kill), 1),
                                            vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(woe2.gstone_kill), 1),
                                            vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(woe2.guardian_kill), 1)
                                          ])
                                        ])
                                      ])
                                    ]),
                                    vue.createVNode("div", { class: "w-1/2 p-2" }, [
                                      vue.createVNode("table", { class: "w-full" }, [
                                        vue.createVNode("thead", { class: "bg-[#0d0d0d] border-b" }, [
                                          vue.createVNode("th", {
                                            class: "p-4",
                                            colspan: "3"
                                          }, " Support Skills ")
                                        ]),
                                        vue.createVNode("thead", { class: "bg-[#0d0d0d]" }, [
                                          vue.createVNode("th", { class: "p-2" }, " Option "),
                                          vue.createVNode("th", { class: "p-2" }, " Total Skills "),
                                          vue.createVNode("th", { class: "p-2" }, " Total Healing ")
                                        ]),
                                        vue.createVNode("tbody", null, [
                                          vue.createVNode("tr", { class: "border-b" }, [
                                            vue.createVNode("td", { class: "p-3" }, [
                                              vue.createVNode("div", { class: "flex justify-center" }, [
                                                vue.createVNode("img", {
                                                  src: "/img/item/2273.png",
                                                  alt: "",
                                                  class: "mr-2"
                                                }),
                                                vue.createTextVNode(" Correct ")
                                              ])
                                            ]),
                                            vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(woe2.support_skills_used), 1),
                                            vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(woe2.healing_done), 1)
                                          ]),
                                          vue.createVNode("tr", { class: "spaceUnder" }, [
                                            vue.createVNode("td", { class: "p-3" }, [
                                              vue.createVNode("div", { class: "flex justify-center" }, [
                                                vue.createVNode("img", {
                                                  src: "/img/item/5272.png",
                                                  alt: "",
                                                  class: "mr-2"
                                                }),
                                                vue.createTextVNode(" Erroneous ")
                                              ])
                                            ]),
                                            vue.createVNode("td", null, vue.toDisplayString(woe2.wrong_support_skills_used), 1),
                                            vue.createVNode("td", { class: "p-3" }, vue.toDisplayString(woe2.wrong_healing_done), 1)
                                          ])
                                        ])
                                      ])
                                    ])
                                  ])
                                ])
                              ])
                            ])
                          ], 8, ["id"])
                        ], 64);
                      }), 128))
                    ]),
                    _: 1
                  }, 8, ["rank_attributes"]),
                  vue.createVNode(_sfc_main$1x, {
                    class: "p-3 text-white",
                    links: vue.unref(woe).links
                  }, null, 8, ["links"])
                ]),
                _: 1
              }, 8, ["rank_filter"])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$i = _sfc_main$i.setup;
_sfc_main$i.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Rankings/Woe.vue");
  return _sfc_setup$i ? _sfc_setup$i(props, ctx) : void 0;
};
var Woe$2 = /* @__PURE__ */ _export_sfc(_sfc_main$i, [["__scopeId", "data-v-ab25c6ec"]]);
var Woe$3 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Woe$2
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$h = {
  __name: "Guildvs",
  __ssrInlineRender: true,
  props: ["guild", "all_guilds", "vs_data", "index"],
  setup(__props) {
    const props = __props;
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<tr${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "spaceUnder" }, _attrs))}><td colspan="9"><table class="w-full"><thead class="bg-[#0d0d0d]"><th class="p-2 w-1/5">Guild</th><th class="p-2">vs</th><th class="p-2 w-1/5">Guild</th><th class="p-2 w-1/5">Total Kills</th><th class="p-2 w-1/5">Total Deaths</th><th class="p-2 w-1/5">Total K/D</th></thead><tbody><!--[-->`);
      serverRenderer.ssrRenderList(__props.all_guilds, (vs_guilds, index) => {
        _push(`<tr>`);
        if (vs_guilds.guild_id != props.guild.guild_id) {
          _push(`<!--[--><td class="px-5 py-3"><div class="flex justify-center items-center"><div class="${serverRenderer.ssrRenderClass([{
            ["text-[#04aaff]"]: props.vs_data[props.guild.guild_id][vs_guilds.guild_id][0].kills > props.vs_data[props.guild.guild_id][vs_guilds.guild_id][0].deaths
          }, "flex items-center justify-center"])}"><img class="mr-2"${serverRenderer.ssrRenderAttr("src", `/storage/cache/tmp_emblem/${props.guild.guild_id}.png`)} alt=""> ${serverRenderer.ssrInterpolate(props.guild.gname)}</div></div></td><td>vs</td><td class="px-5 py-3"><div class="flex justify-center items-center"><div class="${serverRenderer.ssrRenderClass([{
            "text-[#04aaff]": props.vs_data[props.guild.guild_id][vs_guilds.guild_id][0].kills < props.vs_data[props.guild.guild_id][vs_guilds.guild_id][0].deaths
          }, "flex items-center justify-center"])}"><img class="mr-2"${serverRenderer.ssrRenderAttr("src", `/storage/cache/tmp_emblem/${vs_guilds.guild_id}.png`)} alt=""> ${serverRenderer.ssrInterpolate(vs_guilds.name)}</div></div></td><td class="px-5 py-3"><div class="flex justify-center items-center"><div class="flex items-center justify-center">${serverRenderer.ssrInterpolate(props.vs_data != null ? props.vs_data[props.guild.guild_id][vs_guilds.guild_id][0].kills : 0)}</div></div></td><td class="px-5 py-3"><div class="flex justify-center items-center"><div class="flex items-center justify-center">${serverRenderer.ssrInterpolate(props.vs_data != null ? props.vs_data[props.guild.guild_id][vs_guilds.guild_id][0].deaths : 0)}</div></div></td><td class="px-5 py-3"><div class="flex justify-center items-center"><div class="flex items-center justify-center">${serverRenderer.ssrInterpolate(props.vs_data != null ? props.vs_data[props.guild.guild_id][vs_guilds.guild_id][0].kills - props.vs_data[props.guild.guild_id][vs_guilds.guild_id][0].deaths : 0)}</div></div></td><!--]-->`);
        } else {
          _push(`<!---->`);
        }
        _push(`</tr>`);
      });
      _push(`<!--]--></tbody></table></td></tr>`);
    };
  }
};
const _sfc_setup$h = _sfc_main$h.setup;
_sfc_main$h.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Guildvs.vue");
  return _sfc_setup$h ? _sfc_setup$h(props, ctx) : void 0;
};
const __default__$8 = {
  layout: RankingLayout
};
const _sfc_main$g = /* @__PURE__ */ Object.assign(__default__$8, {
  __name: "WoeDamage",
  __ssrInlineRender: true,
  props: {
    woe_damage: Object,
    all_guilds: Object,
    vs_data: Object,
    index: String
  },
  setup(__props) {
    const props = __props;
    const woe_damage = vue.computed(() => props.woe_damage);
    const all_guilds = vue.computed(() => props.all_guilds);
    const vs_data = vue.computed(() => props.vs_data);
    vue.ref({});
    vue.ref({});
    const dates_woe = inertiaVue3.usePage().props.value.woe_dates;
    const rank_attributes = vue.ref([
      "Guild",
      "Damage Done",
      "Damage Received",
      "Comparative",
      "Total Kills",
      "Total Deaths",
      "K/D",
      "Elo"
    ]);
    function show_info(index) {
      const item = document.getElementById("show_info_id_" + index);
      if (item.classList.contains("hidden")) {
        item.classList.remove("hidden");
        item.setAttribute("class", "visible");
      } else {
        item.classList.remove("visible");
        item.setAttribute("class", "hidden");
      }
    }
    return (_ctx, _push, _parent, _attrs) => {
      const _component_font_awesome_icon = vue.resolveComponent("font-awesome-icon");
      _push(serverRenderer.ssrRenderComponent(_sfc_main$x, vue.mergeProps({
        title: "Guilds Rank",
        dates_woe: vue.unref(dates_woe),
        rank: "woe-damage",
        filter_type: "woe-damage"
      }, _attrs), {
        default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(RankingTable, { rank_attributes: rank_attributes.value }, {
              row: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<!--[-->`);
                  serverRenderer.ssrRenderList(vue.unref(woe_damage).data, (wd, index) => {
                    _push3(`<!--[--><tr class="spaceUnder hover:bg-gray-800/40 cursor-pointer"${_scopeId2}>`);
                    if (index == 0) {
                      _push3(`<td class="px-5 py-3"${_scopeId2}>`);
                      _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                        class: "text-2xl p-1 w-9 hover:text-yellow-600",
                        icon: "fa-solid fa-trophy"
                      }, null, _parent3, _scopeId2));
                      _push3(`</td>`);
                    } else {
                      _push3(`<td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(index + 1)}</td>`);
                    }
                    _push3(`<td class="px-5 py-3"${_scopeId2}><div class="flex justify-center items-center"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><img class="mr-2"${serverRenderer.ssrRenderAttr("src", `/storage/cache/tmp_emblem/${wd.guild_id}.png`)} alt=""${_scopeId2}> ${serverRenderer.ssrInterpolate(wd.gname)}</div></div></td><td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(wd.total_dmg))}</td><td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(wd.total_dmg_rcvd))}</td><td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
                      wd.total_dmg - wd.total_dmg_rcvd
                    ))}</td><td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(wd.total_kill))}</td><td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(wd.total_dead))}</td><td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(wd.total_kill - wd.total_dead))}</td><td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(wd.elo))}</td></tr>`);
                    _push3(serverRenderer.ssrRenderComponent(_sfc_main$h, {
                      id: "show_info_id_" + index,
                      guild: wd,
                      all_guilds: vue.unref(all_guilds),
                      vs_data: vue.unref(vs_data)
                    }, null, _parent3, _scopeId2));
                    _push3(`<!--]-->`);
                  });
                  _push3(`<!--]-->`);
                } else {
                  return [
                    (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(vue.unref(woe_damage).data, (wd, index) => {
                      return vue.openBlock(), vue.createBlock(vue.Fragment, { key: index }, [
                        vue.createVNode("tr", {
                          onClick: ($event) => show_info(index),
                          class: "spaceUnder hover:bg-gray-800/40 cursor-pointer"
                        }, [
                          index == 0 ? (vue.openBlock(), vue.createBlock("td", {
                            key: 0,
                            class: "px-5 py-3"
                          }, [
                            vue.createVNode(_component_font_awesome_icon, {
                              class: "text-2xl p-1 w-9 hover:text-yellow-600",
                              icon: "fa-solid fa-trophy"
                            })
                          ])) : (vue.openBlock(), vue.createBlock("td", {
                            key: 1,
                            class: "px-5 py-3"
                          }, vue.toDisplayString(index + 1), 1)),
                          vue.createVNode("td", { class: "px-5 py-3" }, [
                            vue.createVNode("div", { class: "flex justify-center items-center" }, [
                              vue.createVNode("div", { class: "flex items-center justify-center" }, [
                                vue.createVNode("img", {
                                  class: "mr-2",
                                  src: `/storage/cache/tmp_emblem/${wd.guild_id}.png`,
                                  alt: ""
                                }, null, 8, ["src"]),
                                vue.createTextVNode(" " + vue.toDisplayString(wd.gname), 1)
                              ])
                            ])
                          ]),
                          vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(wd.total_dmg)), 1),
                          vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(wd.total_dmg_rcvd)), 1),
                          vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(
                            wd.total_dmg - wd.total_dmg_rcvd
                          )), 1),
                          vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(wd.total_kill)), 1),
                          vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(wd.total_dead)), 1),
                          vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(wd.total_kill - wd.total_dead)), 1),
                          vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(wd.elo)), 1)
                        ], 8, ["onClick"]),
                        vue.createVNode(_sfc_main$h, {
                          id: "show_info_id_" + index,
                          guild: wd,
                          all_guilds: vue.unref(all_guilds),
                          vs_data: vue.unref(vs_data)
                        }, null, 8, ["id", "guild", "all_guilds", "vs_data"])
                      ], 64);
                    }), 128))
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_sfc_main$1x, {
              class: "p-3",
              links: vue.unref(woe_damage).links
            }, null, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(RankingTable, { rank_attributes: rank_attributes.value }, {
                row: vue.withCtx(() => [
                  (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(vue.unref(woe_damage).data, (wd, index) => {
                    return vue.openBlock(), vue.createBlock(vue.Fragment, { key: index }, [
                      vue.createVNode("tr", {
                        onClick: ($event) => show_info(index),
                        class: "spaceUnder hover:bg-gray-800/40 cursor-pointer"
                      }, [
                        index == 0 ? (vue.openBlock(), vue.createBlock("td", {
                          key: 0,
                          class: "px-5 py-3"
                        }, [
                          vue.createVNode(_component_font_awesome_icon, {
                            class: "text-2xl p-1 w-9 hover:text-yellow-600",
                            icon: "fa-solid fa-trophy"
                          })
                        ])) : (vue.openBlock(), vue.createBlock("td", {
                          key: 1,
                          class: "px-5 py-3"
                        }, vue.toDisplayString(index + 1), 1)),
                        vue.createVNode("td", { class: "px-5 py-3" }, [
                          vue.createVNode("div", { class: "flex justify-center items-center" }, [
                            vue.createVNode("div", { class: "flex items-center justify-center" }, [
                              vue.createVNode("img", {
                                class: "mr-2",
                                src: `/storage/cache/tmp_emblem/${wd.guild_id}.png`,
                                alt: ""
                              }, null, 8, ["src"]),
                              vue.createTextVNode(" " + vue.toDisplayString(wd.gname), 1)
                            ])
                          ])
                        ]),
                        vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(wd.total_dmg)), 1),
                        vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(wd.total_dmg_rcvd)), 1),
                        vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(
                          wd.total_dmg - wd.total_dmg_rcvd
                        )), 1),
                        vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(wd.total_kill)), 1),
                        vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(wd.total_dead)), 1),
                        vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(wd.total_kill - wd.total_dead)), 1),
                        vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(wd.elo)), 1)
                      ], 8, ["onClick"]),
                      vue.createVNode(_sfc_main$h, {
                        id: "show_info_id_" + index,
                        guild: wd,
                        all_guilds: vue.unref(all_guilds),
                        vs_data: vue.unref(vs_data)
                      }, null, 8, ["id", "guild", "all_guilds", "vs_data"])
                    ], 64);
                  }), 128))
                ]),
                _: 1
              }, 8, ["rank_attributes"]),
              vue.createVNode(_sfc_main$1x, {
                class: "p-3",
                links: vue.unref(woe_damage).links
              }, null, 8, ["links"])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
});
const _sfc_setup$g = _sfc_main$g.setup;
_sfc_main$g.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Rankings/WoeDamage.vue");
  return _sfc_setup$g ? _sfc_setup$g(props, ctx) : void 0;
};
var WoeDamage = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": _sfc_main$g
}, Symbol.toStringTag, { value: "Module" }));
const __default__$7 = {
  layout: RankingLayout
};
const _sfc_main$f = /* @__PURE__ */ Object.assign(__default__$7, {
  __name: "Zeny",
  __ssrInlineRender: true,
  setup(__props) {
    const zeny_account = inertiaVue3.usePage().props.value.zeny;
    const rank_attributes = vue.ref([
      "Player",
      "Guild",
      "Level",
      "Online",
      "Zeny"
    ]);
    return (_ctx, _push, _parent, _attrs) => {
      const _component_font_awesome_icon = vue.resolveComponent("font-awesome-icon");
      _push(serverRenderer.ssrRenderComponent(_sfc_main$x, vue.mergeProps({ title: "Cash Points" }, _attrs), {
        default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(RankingTable, { rank_attributes: rank_attributes.value }, {
              row: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<!--[-->`);
                  serverRenderer.ssrRenderList(vue.unref(zeny_account).data, (zeny, index) => {
                    var _a2;
                    _push3(`<tr class="spaceUnder hover:bg-gray-800/40"${_scopeId2}>`);
                    if (index == 0) {
                      _push3(`<td class="px-5 py-3"${_scopeId2}>`);
                      _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                        class: "text-2xl p-1 w-9 text-yellow-500",
                        icon: "fa-solid fa-trophy"
                      }, null, _parent3, _scopeId2));
                      _push3(`</td>`);
                    } else {
                      _push3(`<!---->`);
                    }
                    if (index == 1) {
                      _push3(`<td class="px-5 py-3"${_scopeId2}>`);
                      _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                        class: "text-2xl p-1 w-9 text-silver-600",
                        icon: "fa-solid fa-trophy"
                      }, null, _parent3, _scopeId2));
                      _push3(`</td>`);
                    } else {
                      _push3(`<!---->`);
                    }
                    if (index == 2) {
                      _push3(`<td class="px-5 py-3"${_scopeId2}>`);
                      _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                        class: "text-2xl p-1 w-9 text-yellow-700",
                        icon: "fa-solid fa-trophy"
                      }, null, _parent3, _scopeId2));
                      _push3(`</td>`);
                    } else if (index > 2) {
                      _push3(`<td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(index + 1)}</td>`);
                    } else {
                      _push3(`<!---->`);
                    }
                    _push3(`<td class="px-5 py-3"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><img${serverRenderer.ssrRenderAttr("src", `/rochar/characterhead/${zeny.name}`)} alt=""${_scopeId2}><a href=""${_scopeId2}><span class="text-[#3b87f6]"${_scopeId2}>${serverRenderer.ssrInterpolate(zeny.char_name)}</span> (${serverRenderer.ssrInterpolate(vue.unref(get_job_name)(zeny.class))}) </a></div></td><td class="px-5 py-3"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><div class="flex items-center"${_scopeId2}><img class="mr-2"${serverRenderer.ssrRenderAttr("src", `/${_ctx.url[_ctx.cash_point.guild_id]} `)} alt=""${_scopeId2}> ${serverRenderer.ssrInterpolate((_a2 = zeny.guild_name) != null ? _a2 : "No guild \u274C")}</div></div></td><td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(zeny.base_level)} / ${serverRenderer.ssrInterpolate(zeny.job_level)}</td><td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(isOnline)(zeny.online))}</td><td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(zeny.zeny))}</td></tr>`);
                  });
                  _push3(`<!--]-->`);
                } else {
                  return [
                    (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(vue.unref(zeny_account).data, (zeny, index) => {
                      var _a2;
                      return vue.openBlock(), vue.createBlock("tr", {
                        class: "spaceUnder hover:bg-gray-800/40",
                        key: index
                      }, [
                        index == 0 ? (vue.openBlock(), vue.createBlock("td", {
                          key: 0,
                          class: "px-5 py-3"
                        }, [
                          vue.createVNode(_component_font_awesome_icon, {
                            class: "text-2xl p-1 w-9 text-yellow-500",
                            icon: "fa-solid fa-trophy"
                          })
                        ])) : vue.createCommentVNode("", true),
                        index == 1 ? (vue.openBlock(), vue.createBlock("td", {
                          key: 1,
                          class: "px-5 py-3"
                        }, [
                          vue.createVNode(_component_font_awesome_icon, {
                            class: "text-2xl p-1 w-9 text-silver-600",
                            icon: "fa-solid fa-trophy"
                          })
                        ])) : vue.createCommentVNode("", true),
                        index == 2 ? (vue.openBlock(), vue.createBlock("td", {
                          key: 2,
                          class: "px-5 py-3"
                        }, [
                          vue.createVNode(_component_font_awesome_icon, {
                            class: "text-2xl p-1 w-9 text-yellow-700",
                            icon: "fa-solid fa-trophy"
                          })
                        ])) : index > 2 ? (vue.openBlock(), vue.createBlock("td", {
                          key: 3,
                          class: "px-5 py-3"
                        }, vue.toDisplayString(index + 1), 1)) : vue.createCommentVNode("", true),
                        vue.createVNode("td", { class: "px-5 py-3" }, [
                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                            vue.createVNode("img", {
                              src: `/rochar/characterhead/${zeny.name}`,
                              alt: ""
                            }, null, 8, ["src"]),
                            vue.createVNode("a", { href: "" }, [
                              vue.createVNode("span", { class: "text-[#3b87f6]" }, vue.toDisplayString(zeny.char_name), 1),
                              vue.createTextVNode(" (" + vue.toDisplayString(vue.unref(get_job_name)(zeny.class)) + ") ", 1)
                            ])
                          ])
                        ]),
                        vue.createVNode("td", { class: "px-5 py-3" }, [
                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                            vue.createVNode("div", { class: "flex items-center" }, [
                              vue.createVNode("img", {
                                class: "mr-2",
                                src: `/${_ctx.url[_ctx.cash_point.guild_id]} `,
                                alt: ""
                              }, null, 8, ["src"]),
                              vue.createTextVNode(" " + vue.toDisplayString((_a2 = zeny.guild_name) != null ? _a2 : "No guild \u274C"), 1)
                            ])
                          ])
                        ]),
                        vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(zeny.base_level) + " / " + vue.toDisplayString(zeny.job_level), 1),
                        vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(isOnline)(zeny.online)), 1),
                        vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(zeny.zeny)), 1)
                      ]);
                    }), 128))
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_sfc_main$1x, {
              class: "p-3",
              links: vue.unref(zeny_account).links
            }, null, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(RankingTable, { rank_attributes: rank_attributes.value }, {
                row: vue.withCtx(() => [
                  (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(vue.unref(zeny_account).data, (zeny, index) => {
                    var _a2;
                    return vue.openBlock(), vue.createBlock("tr", {
                      class: "spaceUnder hover:bg-gray-800/40",
                      key: index
                    }, [
                      index == 0 ? (vue.openBlock(), vue.createBlock("td", {
                        key: 0,
                        class: "px-5 py-3"
                      }, [
                        vue.createVNode(_component_font_awesome_icon, {
                          class: "text-2xl p-1 w-9 text-yellow-500",
                          icon: "fa-solid fa-trophy"
                        })
                      ])) : vue.createCommentVNode("", true),
                      index == 1 ? (vue.openBlock(), vue.createBlock("td", {
                        key: 1,
                        class: "px-5 py-3"
                      }, [
                        vue.createVNode(_component_font_awesome_icon, {
                          class: "text-2xl p-1 w-9 text-silver-600",
                          icon: "fa-solid fa-trophy"
                        })
                      ])) : vue.createCommentVNode("", true),
                      index == 2 ? (vue.openBlock(), vue.createBlock("td", {
                        key: 2,
                        class: "px-5 py-3"
                      }, [
                        vue.createVNode(_component_font_awesome_icon, {
                          class: "text-2xl p-1 w-9 text-yellow-700",
                          icon: "fa-solid fa-trophy"
                        })
                      ])) : index > 2 ? (vue.openBlock(), vue.createBlock("td", {
                        key: 3,
                        class: "px-5 py-3"
                      }, vue.toDisplayString(index + 1), 1)) : vue.createCommentVNode("", true),
                      vue.createVNode("td", { class: "px-5 py-3" }, [
                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                          vue.createVNode("img", {
                            src: `/rochar/characterhead/${zeny.name}`,
                            alt: ""
                          }, null, 8, ["src"]),
                          vue.createVNode("a", { href: "" }, [
                            vue.createVNode("span", { class: "text-[#3b87f6]" }, vue.toDisplayString(zeny.char_name), 1),
                            vue.createTextVNode(" (" + vue.toDisplayString(vue.unref(get_job_name)(zeny.class)) + ") ", 1)
                          ])
                        ])
                      ]),
                      vue.createVNode("td", { class: "px-5 py-3" }, [
                        vue.createVNode("div", { class: "flex items-center justify-center" }, [
                          vue.createVNode("div", { class: "flex items-center" }, [
                            vue.createVNode("img", {
                              class: "mr-2",
                              src: `/${_ctx.url[_ctx.cash_point.guild_id]} `,
                              alt: ""
                            }, null, 8, ["src"]),
                            vue.createTextVNode(" " + vue.toDisplayString((_a2 = zeny.guild_name) != null ? _a2 : "No guild \u274C"), 1)
                          ])
                        ])
                      ]),
                      vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(zeny.base_level) + " / " + vue.toDisplayString(zeny.job_level), 1),
                      vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(isOnline)(zeny.online)), 1),
                      vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(vue.unref(getFormatNumber)(zeny.zeny)), 1)
                    ]);
                  }), 128))
                ]),
                _: 1
              }, 8, ["rank_attributes"]),
              vue.createVNode(_sfc_main$1x, {
                class: "p-3",
                links: vue.unref(zeny_account).links
              }, null, 8, ["links"])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
});
const _sfc_setup$f = _sfc_main$f.setup;
_sfc_main$f.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Rankings/Zeny.vue");
  return _sfc_setup$f ? _sfc_setup$f(props, ctx) : void 0;
};
var Zeny = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": _sfc_main$f
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$e = {
  __name: "Index",
  __ssrInlineRender: true,
  setup(__props) {
    const game_accounts = inertiaVue3.usePage().props.value.game_accounts;
    const char_account = vue.computed(() => inertiaVue3.usePage().props.value.char_account);
    const disabled = vue.ref(false);
    const account_id = vue.ref("");
    const user_auth = vue.computed(() => inertiaVue3.usePage().props.value.user_auth);
    const selection_account = vue.computed(() => {
      return game_accounts.map((account) => {
        return {
          id: account.account_id,
          value: account.account_id,
          select: account.userid
        };
      });
    });
    const selection_char = vue.computed(() => {
      if (char_account.value != null) {
        return char_account.value.map((char) => {
          return {
            id: char.char_id,
            value: char.char_id,
            select: char.name
          };
        });
      }
    });
    const points_type = vue.ref([
      {
        id: "DONA",
        value: "DONA",
        select: "Donation Points"
      },
      {
        id: "VOTE",
        value: "VOTE",
        select: "Vote Points"
      }
    ]);
    const form = inertiaVue3.useForm({
      account_id: "",
      char_id: "",
      points_type: "DONA",
      amount: 0
    });
    const state2 = vue.reactive({
      title: "",
      message: "",
      group: "",
      duration: 5e3
    });
    const handelSelectedAccount = (event) => {
      account_id.value = event;
      form.account_id = event;
    };
    const handleSelectedPoints = (event) => {
      form.points_type = event;
      return event != "Vote Points" ? disabled.value = false : disabled.value = true;
    };
    const handleSelectedChar = (event) => {
      form.char_id = event;
    };
    function notifyMe() {
      Notifications.notify(
        {
          group: state2.group,
          title: state2.title.toUpperCase(),
          text: state2.message + " "
        },
        state2.duration
      );
    }
    function transfer_points(account_id2) {
      if (form.amount <= 0 || form.account_id == "" || form.char_id == "" || form.points_type == "") {
        state2.title = "Error";
        state2.message = "Please fill all fields";
        state2.group = "error";
        notifyMe();
        return;
      }
      axios__default["default"].post(`transfer/${account_id2}`, form).then((response) => {
        if (response.status == 200) {
          inertia.Inertia.reload();
        }
        state2.title = response.data.status;
        state2.message = response.data.message;
        state2.group = response.data.status;
        notifyMe();
      }).catch((error) => {
        form.reset("amount");
      });
    }
    vue.watch(account_id, (userid) => {
      inertia.Inertia.get(
        route("transfer.index"),
        { user: userid },
        { preserveScroll: true, preserveState: true },
        150
      );
    });
    return (_ctx, _push, _parent, _attrs) => {
      const _component_QuestionMarkCircleIcon = vue.resolveComponent("QuestionMarkCircleIcon");
      _push(serverRenderer.ssrRenderComponent(AppLayout, vue.mergeProps({ title: "Transfer Points" }, _attrs), {
        default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="py-12 h-screen"${_scopeId}><div class="max-w-7xl mx-auto sm:px-6 lg:px-8 mt-36"${_scopeId}><div class="bg-white shadow-xl sm:rounded-md p-6 text-black"${_scopeId}><h1 class="text-4xl font-bold animate-text bg-gradient-to-r from-teal-500 via-purple-500 to-orange-500 bg-clip-text text-transparent mb-3"${_scopeId}> ~ Transfer Points </h1><span class="text-red-500 text-sm italic"${_scopeId}>The Donations points will be automatically converted into Donation Coins and you will receive them through RODEX</span><br${_scopeId}><span class="text-red-500 text-sm italic"${_scopeId}>To transfer Vote Points it is not necessary to select a character, they will be added to your selected account</span><div${_scopeId}><h3 class="text-lg font-semibold"${_scopeId}>YOUR POINTS:</h3><div class="flex justify-around bg-black mb-6 border-2 p-6 rounded-md text-white"${_scopeId}><div class="flex flex-col items-center"${_scopeId}><p class="text-lg font-semibold"${_scopeId}> Donation Points: </p><p class="text-5xl font-semibold"${_scopeId}>${serverRenderer.ssrInterpolate(vue.unref(user_auth).donation_points)}</p></div><div class="flex flex-col items-center"${_scopeId}><p class="text-lg font-semibold"${_scopeId}> Vote Points: </p><p class="text-5xl font-semibold"${_scopeId}>${serverRenderer.ssrInterpolate(vue.unref(user_auth).vote_points)}</p></div></div><div${_scopeId}><div class="my-6 border-2 p-6 rounded-md bg-gray-100"${_scopeId}><h2 class="text-2xl font-semibold text-black mb-2"${_scopeId}> Transfer </h2><div class="flex justify-between items-center"${_scopeId}><div class="md:p-10 py-2 px-4 w-1/4"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(_sfc_main$T, {
              options: vue.unref(selection_account),
              label: "Select Account",
              required: true,
              placeholder: "Select Account",
              onGetSelected: handelSelectedAccount
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="md:p-10 py-2 px-4 w-1/4"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(_sfc_main$T, {
              options: points_type.value,
              label: "Points Type",
              required: true,
              placeholder: "Points Type",
              onGetSelected: handleSelectedPoints
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="md:p-10 py-2 px-4 w-1/4"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(_sfc_main$T, {
              options: vue.unref(selection_char),
              label: "Select Character",
              placeholder: "Select Character",
              required: true,
              disabled: disabled.value,
              onGetSelected: handleSelectedChar
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="md:p-10 py-2 px-4 w-1/4"${_scopeId}><div${_scopeId}><label for="account-number" class="block text-sm font-medium leading-6 text-gray-900"${_scopeId}>Amount <span class="text-red-500"${_scopeId}>*</span></label><div class="relative mt-2 rounded-md shadow-sm"${_scopeId}><input type="text" name="account-number" id="account-number"${serverRenderer.ssrRenderAttr("value", vue.unref(form).amount)} class="block w-full rounded-md border-0 py-1.5 pr-10 text-gray-900 ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6" placeholder="0"${_scopeId}><div class="pointer-events-none absolute inset-y-0 right-0 flex items-center pr-3"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(_component_QuestionMarkCircleIcon, {
              class: "h-5 w-5 text-gray-400",
              "aria-hidden": "true"
            }, null, _parent2, _scopeId));
            _push2(`</div></div></div></div></div><div class="mt-4 space-x-2"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(JetButton, {
              class: "text-md px-6 bg-sky-500 font-bold py-3 rounded-md text-white",
              onClick: ($event) => transfer_points(vue.unref(form).account_id)
            }, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Transfer `);
                } else {
                  return [
                    vue.createTextVNode(" Transfer ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div></div></div></div></div></div></div>`);
          } else {
            return [
              vue.createVNode("div", { class: "py-12 h-screen" }, [
                vue.createVNode("div", { class: "max-w-7xl mx-auto sm:px-6 lg:px-8 mt-36" }, [
                  vue.createVNode("div", { class: "bg-white shadow-xl sm:rounded-md p-6 text-black" }, [
                    vue.createVNode("h1", { class: "text-4xl font-bold animate-text bg-gradient-to-r from-teal-500 via-purple-500 to-orange-500 bg-clip-text text-transparent mb-3" }, " ~ Transfer Points "),
                    vue.createVNode("span", { class: "text-red-500 text-sm italic" }, "The Donations points will be automatically converted into Donation Coins and you will receive them through RODEX"),
                    vue.createVNode("br"),
                    vue.createVNode("span", { class: "text-red-500 text-sm italic" }, "To transfer Vote Points it is not necessary to select a character, they will be added to your selected account"),
                    vue.createVNode("div", null, [
                      vue.createVNode("h3", { class: "text-lg font-semibold" }, "YOUR POINTS:"),
                      vue.createVNode("div", { class: "flex justify-around bg-black mb-6 border-2 p-6 rounded-md text-white" }, [
                        vue.createVNode("div", { class: "flex flex-col items-center" }, [
                          vue.createVNode("p", { class: "text-lg font-semibold" }, " Donation Points: "),
                          vue.createVNode("p", { class: "text-5xl font-semibold" }, vue.toDisplayString(vue.unref(user_auth).donation_points), 1)
                        ]),
                        vue.createVNode("div", { class: "flex flex-col items-center" }, [
                          vue.createVNode("p", { class: "text-lg font-semibold" }, " Vote Points: "),
                          vue.createVNode("p", { class: "text-5xl font-semibold" }, vue.toDisplayString(vue.unref(user_auth).vote_points), 1)
                        ])
                      ]),
                      vue.createVNode("div", null, [
                        vue.createVNode("div", { class: "my-6 border-2 p-6 rounded-md bg-gray-100" }, [
                          vue.createVNode("h2", { class: "text-2xl font-semibold text-black mb-2" }, " Transfer "),
                          vue.createVNode("div", { class: "flex justify-between items-center" }, [
                            vue.createVNode("div", { class: "md:p-10 py-2 px-4 w-1/4" }, [
                              vue.createVNode(_sfc_main$T, {
                                options: vue.unref(selection_account),
                                label: "Select Account",
                                required: true,
                                placeholder: "Select Account",
                                onGetSelected: handelSelectedAccount
                              }, null, 8, ["options"])
                            ]),
                            vue.createVNode("div", { class: "md:p-10 py-2 px-4 w-1/4" }, [
                              vue.createVNode(_sfc_main$T, {
                                options: points_type.value,
                                label: "Points Type",
                                required: true,
                                placeholder: "Points Type",
                                onGetSelected: handleSelectedPoints
                              }, null, 8, ["options"])
                            ]),
                            vue.createVNode("div", { class: "md:p-10 py-2 px-4 w-1/4" }, [
                              vue.createVNode(_sfc_main$T, {
                                options: vue.unref(selection_char),
                                label: "Select Character",
                                placeholder: "Select Character",
                                required: true,
                                disabled: disabled.value,
                                onGetSelected: handleSelectedChar
                              }, null, 8, ["options", "disabled"])
                            ]),
                            vue.createVNode("div", { class: "md:p-10 py-2 px-4 w-1/4" }, [
                              vue.createVNode("div", null, [
                                vue.createVNode("label", {
                                  for: "account-number",
                                  class: "block text-sm font-medium leading-6 text-gray-900"
                                }, [
                                  vue.createTextVNode("Amount "),
                                  vue.createVNode("span", { class: "text-red-500" }, "*")
                                ]),
                                vue.createVNode("div", { class: "relative mt-2 rounded-md shadow-sm" }, [
                                  vue.withDirectives(vue.createVNode("input", {
                                    type: "text",
                                    name: "account-number",
                                    id: "account-number",
                                    "onUpdate:modelValue": ($event) => vue.unref(form).amount = $event,
                                    class: "block w-full rounded-md border-0 py-1.5 pr-10 text-gray-900 ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6",
                                    placeholder: "0"
                                  }, null, 8, ["onUpdate:modelValue"]), [
                                    [vue.vModelText, vue.unref(form).amount]
                                  ]),
                                  vue.createVNode("div", { class: "pointer-events-none absolute inset-y-0 right-0 flex items-center pr-3" }, [
                                    vue.createVNode(_component_QuestionMarkCircleIcon, {
                                      class: "h-5 w-5 text-gray-400",
                                      "aria-hidden": "true"
                                    })
                                  ])
                                ])
                              ])
                            ])
                          ]),
                          vue.createVNode("div", { class: "mt-4 space-x-2" }, [
                            vue.createVNode(JetButton, {
                              class: "text-md px-6 bg-sky-500 font-bold py-3 rounded-md text-white",
                              onClick: ($event) => transfer_points(vue.unref(form).account_id)
                            }, {
                              default: vue.withCtx(() => [
                                vue.createTextVNode(" Transfer ")
                              ]),
                              _: 1
                            }, 8, ["onClick"])
                          ])
                        ])
                      ])
                    ])
                  ])
                ])
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$e = _sfc_main$e.setup;
_sfc_main$e.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Transfer/Index.vue");
  return _sfc_setup$e ? _sfc_setup$e(props, ctx) : void 0;
};
var Index$8 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": _sfc_main$e
}, Symbol.toStringTag, { value: "Module" }));
var Bg_vue_vue_type_style_index_0_scoped_true_lang = "";
const _sfc_main$d = vue.defineComponent({
  layout: RankingLayout,
  components: {
    RankingTable,
    RankingPanel: _sfc_main$x,
    Pagination: _sfc_main$1x,
    JetModalDialog,
    CountryFlag: CountryFlag__default["default"],
    JetButton,
    DataTable,
    Link: inertiaVue3.Link
  },
  setup() {
    const show_death_log = vue.ref(inertiaVue3.usePage().props.value.show_death_table);
    const show_kill_log = vue.ref(inertiaVue3.usePage().props.value.show_kill_table);
    const url = vue.ref({});
    const basic_info = inertiaVue3.usePage().props.value.basic_info;
    const char_id = inertiaVue3.usePage().props.value.char_id;
    const skill_count = inertiaVue3.usePage().props.value.skill_count;
    const kill_log = inertiaVue3.usePage().props.value.kill_log;
    const death_log = inertiaVue3.usePage().props.value.death_log;
    const modal = vue.ref(inertiaVue3.usePage().props.value.modal);
    const modal_skill = vue.ref(inertiaVue3.usePage().props.value.modal_skill);
    const compare_death_log = reactivity.computed(
      () => inertiaVue3.usePage().props.value.compare_death_log
    );
    const compare_kill_log = reactivity.computed(
      () => inertiaVue3.usePage().props.value.compare_kill_log
    );
    const comparative_name = reactivity.computed(
      () => inertiaVue3.usePage().props.value.comparative_name
    );
    const skill_rank = reactivity.computed(() => inertiaVue3.usePage().props.value.skill_rank);
    vue.onMounted(() => {
      basic_info.forEach((basic_info2) => {
        axios.get(`/emblem/${basic_info2.guild_id}`).then((res) => {
          if (res.data.url === "X")
            return;
          url.value[basic_info2.guild_id] = res.data.url;
        });
      });
    });
    function closeModal() {
      modal.value = false;
      modal_skill.value = false;
    }
    function compare_player(target_id, type) {
      switch (type) {
        case "death":
          inertia.Inertia.get(
            `/rankings/bg-profile/${char_id}`,
            {
              assasin: target_id
            },
            {
              preserveState: true,
              preserveScroll: true
            }
          );
          break;
        case "kill":
          inertia.Inertia.get(
            `/rankings/bg-profile/${char_id}`,
            {
              victim: target_id
            },
            {
              preserveState: true,
              preserveScroll: true
            }
          );
          break;
      }
    }
    function get_skill_rank(skill_id) {
      inertia.Inertia.get(
        `/rankings/bg-profile/${char_id}`,
        {
          sid: skill_id
        },
        {
          preserveState: true,
          preserveScroll: true
        }
      );
    }
    return {
      basic_info,
      skill_count,
      show_death_log,
      show_kill_log,
      closeModal,
      skill_rank,
      compare_death_log,
      death_log,
      kill_log,
      JetButton,
      get_job_name,
      getFormatNumber,
      compare_player,
      modal_skill,
      get_skill_rank,
      compare_kill_log,
      modal,
      get_skill_name,
      mapname2bgname,
      comparative_name,
      url
    };
  }
});
function _sfc_ssrRender$3(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_ranking_panel = vue.resolveComponent("ranking-panel");
  const _component_JetButton = vue.resolveComponent("JetButton");
  const _component_Link = vue.resolveComponent("Link");
  const _component_JetModalDialog = vue.resolveComponent("JetModalDialog");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(`<!--[-->`);
  _push(serverRenderer.ssrRenderComponent(_component_ranking_panel, { title: "User Profile" }, {
    default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex" data-v-ffdbcd08${_scopeId}><div class="w-1/3 flex flex-col items-center justify-center h-[13rem]" data-v-ffdbcd08${_scopeId}><div data-v-ffdbcd08${_scopeId}><span class="font-bold" data-v-ffdbcd08${_scopeId}> Job:</span> ${serverRenderer.ssrInterpolate(_ctx.get_job_name(_ctx.basic_info[0].class))} <br data-v-ffdbcd08${_scopeId}></div><div data-v-ffdbcd08${_scopeId}><span class="font-bold" data-v-ffdbcd08${_scopeId}>Mas HP: </span>${serverRenderer.ssrInterpolate(_ctx.getFormatNumber(_ctx.basic_info[0].max_hp))} <br data-v-ffdbcd08${_scopeId}></div><div data-v-ffdbcd08${_scopeId}><span class="font-bold" data-v-ffdbcd08${_scopeId}>Max SP: </span>${serverRenderer.ssrInterpolate(_ctx.getFormatNumber(_ctx.basic_info[0].max_sp))}</div></div><div class="w-1/3 flex items-center justify-center h-[13rem]" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}><img class=""${serverRenderer.ssrRenderAttr("src", `/rochar/character/${_ctx.basic_info[0].name}`)} alt="" data-v-ffdbcd08${_scopeId}></div><div data-v-ffdbcd08${_scopeId}><span class="font-bold" data-v-ffdbcd08${_scopeId}>Name: </span> ${serverRenderer.ssrInterpolate(_ctx.basic_info[0].name)}</div></div><div class="w-1/3 flex flex-col items-center justify-center h-[13rem]" data-v-ffdbcd08${_scopeId}><img class="mr-2"${serverRenderer.ssrRenderAttr("src", `/${_ctx.url[_ctx.basic_info[0].guild_id]} `)} alt="" data-v-ffdbcd08${_scopeId}><div data-v-ffdbcd08${_scopeId}><span class="font-bold" data-v-ffdbcd08${_scopeId}>Guild: </span> ${serverRenderer.ssrInterpolate(_ctx.basic_info[0].gName)} <br data-v-ffdbcd08${_scopeId}></div><div data-v-ffdbcd08${_scopeId}><span class="font-bold" data-v-ffdbcd08${_scopeId}>Rank Elo: </span> ${serverRenderer.ssrInterpolate(_ctx.basic_info[0].gName)} <br data-v-ffdbcd08${_scopeId}></div></div></div><div class="w-full flex" data-v-ffdbcd08${_scopeId}><div class="flex w-1/2 p-5" data-v-ffdbcd08${_scopeId}><div class="w-full" data-v-ffdbcd08${_scopeId}><table class="w-full" data-v-ffdbcd08${_scopeId}><thead class="bg-[#0d0d0d] border-b" data-v-ffdbcd08${_scopeId}><th colspan="3" class="p-4" data-v-ffdbcd08${_scopeId}>General Standings</th></thead><thead class="bg-[#0d0d0d]" data-v-ffdbcd08${_scopeId}><th class="p-2" data-v-ffdbcd08${_scopeId}><div class="flex items-center justify-center" data-v-ffdbcd08${_scopeId}><img class="mr-2" src="/img/item/7427.gif" alt="" data-v-ffdbcd08${_scopeId}> Wins </div></th><th class="p-2" data-v-ffdbcd08${_scopeId}><div class="flex items-center justify-center" data-v-ffdbcd08${_scopeId}><img class="mr-2" src="/img/item/7428.gif" alt="" data-v-ffdbcd08${_scopeId}> Tie </div></th><th class="p-2" data-v-ffdbcd08${_scopeId}><div class="flex items-center justify-center" data-v-ffdbcd08${_scopeId}><img class="mr-2" src="/img/item/7426.gif" alt="" data-v-ffdbcd08${_scopeId}><p data-v-ffdbcd08${_scopeId}>Lost</p></div></th></thead><tbody data-v-ffdbcd08${_scopeId}><tr class="" data-v-ffdbcd08${_scopeId}><td class="p-3 text-center" data-v-ffdbcd08${_scopeId}>0</td><td class="p-3 text-center" data-v-ffdbcd08${_scopeId}>0</td><td class="p-3 text-center" data-v-ffdbcd08${_scopeId}>0</td></tr></tbody></table></div></div><div class="flex w-1/2 p-5" data-v-ffdbcd08${_scopeId}><div class="w-full" data-v-ffdbcd08${_scopeId}><table class="w-full" data-v-ffdbcd08${_scopeId}><thead class="bg-[#0d0d0d] border-b" data-v-ffdbcd08${_scopeId}><th colspan="3" class="p-4" data-v-ffdbcd08${_scopeId}>Damage</th></thead><thead class="bg-[#0d0d0d]" data-v-ffdbcd08${_scopeId}><th class="p-2" data-v-ffdbcd08${_scopeId}><div class="flex items-center justify-center" data-v-ffdbcd08${_scopeId}><img class="mr-2" src="/img/item/1228.png" alt="" data-v-ffdbcd08${_scopeId}> Top </div></th><th class="p-2" data-v-ffdbcd08${_scopeId}><div class="flex items-center justify-center" data-v-ffdbcd08${_scopeId}><img class="mr-2" src="/img/item/1281.png" alt="" data-v-ffdbcd08${_scopeId}> Done </div></th><th class="p-2" data-v-ffdbcd08${_scopeId}><div class="flex items-center justify-center" data-v-ffdbcd08${_scopeId}><img class="mr-2" src="/img/item/7024.png" alt="" data-v-ffdbcd08${_scopeId}> Recv </div></th></thead><tbody data-v-ffdbcd08${_scopeId}><tr class="" data-v-ffdbcd08${_scopeId}><td class="p-3 text-center" data-v-ffdbcd08${_scopeId}>${serverRenderer.ssrInterpolate(_ctx.getFormatNumber(
          _ctx.basic_info[0].top_damage
        ))}</td><td class="p-3 text-center" data-v-ffdbcd08${_scopeId}>${serverRenderer.ssrInterpolate(_ctx.getFormatNumber(
          _ctx.basic_info[0].damage_done
        ))}</td><td class="p-3 text-center" data-v-ffdbcd08${_scopeId}>${serverRenderer.ssrInterpolate(_ctx.getFormatNumber(
          _ctx.basic_info[0].damage_received
        ))}</td></tr></tbody></table></div></div></div><div class="p-5" data-v-ffdbcd08${_scopeId}><table class="w-full" data-v-ffdbcd08${_scopeId}><thead class="bg-[#0d0d0d]" data-v-ffdbcd08${_scopeId}><th colspan="3" class="p-4 border-b" data-v-ffdbcd08${_scopeId}>Usable items</th></thead><tbody data-v-ffdbcd08${_scopeId}><tr class="spaceUnder hover:bg-gray-800/40 hover:transition hover:duration-150" data-v-ffdbcd08${_scopeId}><td class="w-1/3 p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}><img src="/img/item/522.png" alt="" class="mr-2" data-v-ffdbcd08${_scopeId}><div data-v-ffdbcd08${_scopeId}><span class="font-bold" data-v-ffdbcd08${_scopeId}>HP: </span> ${serverRenderer.ssrInterpolate(_ctx.getFormatNumber(
          _ctx.basic_info[0].hp_heal_potions
        ))}</div></div></td><td class="w-1/3 p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}><img src="/img/item/505.png" alt="" class="mr-2" data-v-ffdbcd08${_scopeId}><div data-v-ffdbcd08${_scopeId}><span class="font-bold" data-v-ffdbcd08${_scopeId}> SP: </span> ${serverRenderer.ssrInterpolate(_ctx.getFormatNumber(
          _ctx.basic_info[0].sp_heal_potions
        ))}</div></div></td><td class="w-1/3 p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}><img src="/img/item/676.png" alt="" class="mr-2" data-v-ffdbcd08${_scopeId}><div data-v-ffdbcd08${_scopeId}><span class="font-bold" data-v-ffdbcd08${_scopeId}> Zeny: </span> ${serverRenderer.ssrInterpolate(_ctx.getFormatNumber(_ctx.basic_info[0].zeny_used))}</div></div></td></tr><tr class="spaceUnder hover:bg-gray-800/40 hover:transition hover:duration-150" data-v-ffdbcd08${_scopeId}><td class="w-1/3 p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}><img src="/img/item/716.png" alt="" class="mr-2" data-v-ffdbcd08${_scopeId}><div data-v-ffdbcd08${_scopeId}><span class="font-bold" data-v-ffdbcd08${_scopeId}> Gems: </span> ${serverRenderer.ssrInterpolate(_ctx.getFormatNumber(
          _ctx.basic_info[0].red_gemstones
        ))}</div></div></td><td class="w-1/3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}><img src="/img/item/717.png" alt="" class="mr-2" data-v-ffdbcd08${_scopeId}><div data-v-ffdbcd08${_scopeId}><span class="font-bold" data-v-ffdbcd08${_scopeId}>Gems: </span> ${serverRenderer.ssrInterpolate(_ctx.getFormatNumber(
          _ctx.basic_info[0].blue_gemstones
        ))}</div></div></td><td class="w-1/3 p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}><img src="/img/item/715.png" alt="" class="mr-2" data-v-ffdbcd08${_scopeId}><div data-v-ffdbcd08${_scopeId}><span class="font-bold" data-v-ffdbcd08${_scopeId}> Gems: </span> ${serverRenderer.ssrInterpolate(_ctx.getFormatNumber(
          _ctx.basic_info[0].yellow_gemstones
        ))}</div></div></td></tr><tr class="spaceUnder hover:bg-gray-800/40 hover:transition hover:duration-150" data-v-ffdbcd08${_scopeId}><td class="w-1/3 p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}><img src="/img/item/1752.png" alt="" class="mr-2" data-v-ffdbcd08${_scopeId}><div data-v-ffdbcd08${_scopeId}><span class="font-bold" data-v-ffdbcd08${_scopeId}> Arrows: </span> ${serverRenderer.ssrInterpolate(_ctx.getFormatNumber(_ctx.basic_info[0].ammo_used))}</div></div></td><td class="w-1/3 p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}><img src="/img/item/7136.png" alt="" class="mr-2" data-v-ffdbcd08${_scopeId}><div data-v-ffdbcd08${_scopeId}><span class="font-bold" data-v-ffdbcd08${_scopeId}> Bottles: </span> ${serverRenderer.ssrInterpolate(_ctx.getFormatNumber(
          _ctx.basic_info[0].acid_demostration
        ))}</div></div></td><td class="w-1/3 p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}><img src="/img/item/678.png" alt="" class="mr-2" data-v-ffdbcd08${_scopeId}><div data-v-ffdbcd08${_scopeId}><span class="font-bold" data-v-ffdbcd08${_scopeId}> Bottles: </span> ${serverRenderer.ssrInterpolate(_ctx.getFormatNumber(
          _ctx.basic_info[0].poison_bottles
        ))}</div></div></td></tr></tbody></table></div><div class="p-5 flex" data-v-ffdbcd08${_scopeId}><table class="w-1/2 mt-5" data-v-ffdbcd08${_scopeId}><thead class="bg-[#0d0d0d] border-b" data-v-ffdbcd08${_scopeId}><th colspan="4" class="p-4" data-v-ffdbcd08${_scopeId}>Destroyed Structures</th></thead><tbody class="" data-v-ffdbcd08${_scopeId}><tr class="spaceUnder" data-v-ffdbcd08${_scopeId}><td class="w-1/4 p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}><img src="/img/item/714.png" alt="" class="mr-2" data-v-ffdbcd08${_scopeId}><div data-v-ffdbcd08${_scopeId}><span class="font-bold" data-v-ffdbcd08${_scopeId}> Emperium: </span> ${serverRenderer.ssrInterpolate(_ctx.getFormatNumber(
          _ctx.basic_info[0].cq_emperium_kill + _ctx.basic_info[0].cs_emperium_kill + _ctx.basic_info[0].dte_emperium_kill
        ))}</div></div></td><td class="w-1/4 p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}><img src="/img/item/14287.gif" alt="" class="mr-2" data-v-ffdbcd08${_scopeId}><div data-v-ffdbcd08${_scopeId}><span class="font-bold" data-v-ffdbcd08${_scopeId}> Barricade: </span> ${serverRenderer.ssrInterpolate(_ctx.getFormatNumber(
          _ctx.basic_info[0].cq_barricade_kill + _ctx.basic_info[0].cs_barricade_kill
        ))}</div></div></td><td class="w-1/4 p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}><img src="/img/item/7839.gif" alt="" class="mr-2" data-v-ffdbcd08${_scopeId}><div data-v-ffdbcd08${_scopeId}><span class="font-bold" data-v-ffdbcd08${_scopeId}> G. Stone: </span> ${serverRenderer.ssrInterpolate(_ctx.getFormatNumber(
          _ctx.basic_info[0].cq_gstone_kill + _ctx.basic_info[0].cs_gstone_kill
        ))}</div></div></td></tr></tbody></table><table class="w-1/2 ml-9 mt-5" data-v-ffdbcd08${_scopeId}><thead class="bg-[#0d0d0d] border-b" data-v-ffdbcd08${_scopeId}><th colspan="4" class="p-4" data-v-ffdbcd08${_scopeId}>Battleground Stadistics</th></thead><tbody class="" data-v-ffdbcd08${_scopeId}><tr class="spaceUnder" data-v-ffdbcd08${_scopeId}><td class="w-1/3 p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}><img src="/img/item/7253.gif" alt="" class="mr-2" data-v-ffdbcd08${_scopeId}><div data-v-ffdbcd08${_scopeId}><span class="font-bold" data-v-ffdbcd08${_scopeId}> G. win: </span> ${serverRenderer.ssrInterpolate(_ctx.getFormatNumber(
          _ctx.basic_info[0].cq_gstone_kill + _ctx.basic_info[0].cs_gstone_kill
        ))}</div></div></td><td class="w-1/3 p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}><img src="/img/item/7428.gif" alt="" class="mr-2" data-v-ffdbcd08${_scopeId}><div data-v-ffdbcd08${_scopeId}><span class="font-bold" data-v-ffdbcd08${_scopeId}> Tie </span> ${serverRenderer.ssrInterpolate(_ctx.getFormatNumber(
          _ctx.basic_info[0].cq_gstone_kill + _ctx.basic_info[0].cs_gstone_kill
        ))}</div></div></td><td class="w-1/3 p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}><img src="/img/item/7426.gif" alt="" class="mr-2" data-v-ffdbcd08${_scopeId}><div data-v-ffdbcd08${_scopeId}><span class="font-bold" data-v-ffdbcd08${_scopeId}> Lost: </span> ${serverRenderer.ssrInterpolate(_ctx.getFormatNumber(
          _ctx.basic_info[0].cq_gstone_kill + _ctx.basic_info[0].cs_gstone_kill
        ))}</div></div></td></tr></tbody></table></div><div class="p-5" data-v-ffdbcd08${_scopeId}><div class="" data-v-ffdbcd08${_scopeId}><h1 class="text-xl font-bold mb-5" data-v-ffdbcd08${_scopeId}>Kill Log - BG</h1>`);
        _push2(serverRenderer.ssrRenderComponent(_component_JetButton, {
          class: "bg-sky-500 hover:bg-sky-700 mb-5",
          onClick: ($event) => _ctx.show_kill_log = !_ctx.show_kill_log
        }, {
          default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Show More `);
            } else {
              return [
                vue.createTextVNode(" Show More ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
        if (_ctx.show_kill_log) {
          _push2(`<table class="w-full" data-v-ffdbcd08${_scopeId}><thead data-v-ffdbcd08${_scopeId}><tr class="spaceUnder font-bold bg-[#0d0d0d] border-1" data-v-ffdbcd08${_scopeId}><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}>Date/Time</div></td><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}>P</div></td><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}>C</div></td><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}>Victim</div></td><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}>Map</div></td><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}>Attack</div></td></tr></thead><tbody class="" data-v-ffdbcd08${_scopeId}><!--[-->`);
          serverRenderer.ssrRenderList(_ctx.kill_log, (kill) => {
            _push2(`<tr class="spaceUnder hover:bg-gray-800/40 hover:transition hover:duration-150" data-v-ffdbcd08${_scopeId}><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}>${serverRenderer.ssrInterpolate(kill.time)}</div></td><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(_component_Link, {
              href: _ctx.route("bg.profile", kill.killed_id)
            }, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<img src="/img/viewprofile.png" data-v-ffdbcd08${_scopeId2}>`);
                } else {
                  return [
                    vue.createVNode("img", { src: "/img/viewprofile.png" })
                  ];
                }
              }),
              _: 2
            }, _parent2, _scopeId));
            _push2(`</div></td><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center cursor-pointer" data-v-ffdbcd08${_scopeId}><img src="/img/compare.png" alt="" data-v-ffdbcd08${_scopeId}></div></td><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}><img${serverRenderer.ssrRenderAttr("src", `/rochar/characterhead/${kill.killed_id}`)} alt="" data-v-ffdbcd08${_scopeId}><div class="flex items-center" data-v-ffdbcd08${_scopeId}><span class="text-[#04aaff]" data-v-ffdbcd08${_scopeId}>${serverRenderer.ssrInterpolate(kill.killed)}</span> (${serverRenderer.ssrInterpolate(_ctx.get_job_name(kill.class))}) </div></div></td><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}>${serverRenderer.ssrInterpolate(_ctx.mapname2bgname(kill.map))}</div></td><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}><img${serverRenderer.ssrRenderAttr("src", `/img/skill_db/${kill.skill}.png`)} alt="" srcset="" data-v-ffdbcd08${_scopeId}></div></td></tr>`);
          });
          _push2(`<!--]--></tbody></table>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div><div class="p-5" data-v-ffdbcd08${_scopeId}><div class="" data-v-ffdbcd08${_scopeId}><h1 class="text-xl font-bold mb-5" data-v-ffdbcd08${_scopeId}>Death Log - BG</h1>`);
        _push2(serverRenderer.ssrRenderComponent(_component_JetButton, {
          class: "bg-sky-500 hover:bg-sky-700 mb-5",
          onClick: ($event) => _ctx.show_death_log = !_ctx.show_death_log
        }, {
          default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Show More `);
            } else {
              return [
                vue.createTextVNode(" Show More ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
        if (_ctx.show_death_log) {
          _push2(`<table class="w-full" data-v-ffdbcd08${_scopeId}><thead data-v-ffdbcd08${_scopeId}><tr class="spaceUnder font-bold bg-[#0d0d0d] border-1" data-v-ffdbcd08${_scopeId}><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}>Date/Time</div></td><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}>P</div></td><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}>C</div></td><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}>Killer</div></td><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}>Map</div></td><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}>Attack</div></td></tr></thead><tbody class="" data-v-ffdbcd08${_scopeId}><!--[-->`);
          serverRenderer.ssrRenderList(_ctx.death_log, (death) => {
            _push2(`<tr class="spaceUnder hover:bg-gray-800/40 hover:transition hover:duration-150" data-v-ffdbcd08${_scopeId}><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}>${serverRenderer.ssrInterpolate(death.time)}</div></td><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(_component_Link, {
              href: _ctx.route("bg.profile", death.killer_id)
            }, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<img src="/img/viewprofile.png" data-v-ffdbcd08${_scopeId2}>`);
                } else {
                  return [
                    vue.createVNode("img", { src: "/img/viewprofile.png" })
                  ];
                }
              }),
              _: 2
            }, _parent2, _scopeId));
            _push2(`</div></td><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center cursor-pointer" data-v-ffdbcd08${_scopeId}><img src="/img/compare.png" alt="" data-v-ffdbcd08${_scopeId}></div></td><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}><img${serverRenderer.ssrRenderAttr("src", `/rochar/characterhead/${death.killer_id}`)} alt="" data-v-ffdbcd08${_scopeId}><div data-v-ffdbcd08${_scopeId}><span class="text-[#04aaff]" data-v-ffdbcd08${_scopeId}>${serverRenderer.ssrInterpolate(death.killer)}</span> (${serverRenderer.ssrInterpolate(_ctx.get_job_name(death.class))}) </div></div></td><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}>${serverRenderer.ssrInterpolate(_ctx.mapname2bgname(death.map))}</div></td><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}><img${serverRenderer.ssrRenderAttr("src", `/img/skill_db/${death.skill}.png`)} alt="" srcset="" data-v-ffdbcd08${_scopeId}></div></td></tr>`);
          });
          _push2(`<!--]--></tbody></table>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div><div class="p-5" data-v-ffdbcd08${_scopeId}><table class="w-full" data-v-ffdbcd08${_scopeId}><thead class="bg-[#0d0d0d] border-b" data-v-ffdbcd08${_scopeId}><th colspan="3" class="p-4" data-v-ffdbcd08${_scopeId}>Top 10 Casted Skills</th></thead><thead data-v-ffdbcd08${_scopeId}><tr class="spaceUnder font-bold bg-[#0d0d0d] border-1" data-v-ffdbcd08${_scopeId}><td class="w-1/4 p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}>Skill Name</div></td><td class="w-1/4 p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}>T</div></td><td class="w-1/4 p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}>Count</div></td></tr></thead><tbody class="" data-v-ffdbcd08${_scopeId}><!--[-->`);
        serverRenderer.ssrRenderList(_ctx.skill_count, (skill) => {
          _push2(`<tr class="spaceUnder hover:bg-gray-800/40 hover:transition hover:duration-150" data-v-ffdbcd08${_scopeId}><td class="w-1/4 p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}><div data-v-ffdbcd08${_scopeId}><img${serverRenderer.ssrRenderAttr("src", `/img/skill_db/${skill.id}.png`)} alt="" class="mr-5" data-v-ffdbcd08${_scopeId}></div> ${serverRenderer.ssrInterpolate(_ctx.get_skill_name(skill.id))}</div></td><td class="w-1/4 p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center cursor-pointer" data-v-ffdbcd08${_scopeId}><img${serverRenderer.ssrRenderAttr("src", `/img/compare.png`)} alt="" data-v-ffdbcd08${_scopeId}></div></td><td class="w-1/4 p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}>${serverRenderer.ssrInterpolate(_ctx.getFormatNumber(skill.count))}</div></td></tr>`);
        });
        _push2(`<!--]--></tbody></table></div>`);
      } else {
        return [
          vue.createVNode("div", { class: "flex" }, [
            vue.createVNode("div", { class: "w-1/3 flex flex-col items-center justify-center h-[13rem]" }, [
              vue.createVNode("div", null, [
                vue.createVNode("span", { class: "font-bold" }, " Job:"),
                vue.createTextVNode(" " + vue.toDisplayString(_ctx.get_job_name(_ctx.basic_info[0].class)) + " ", 1),
                vue.createVNode("br")
              ]),
              vue.createVNode("div", null, [
                vue.createVNode("span", { class: "font-bold" }, "Mas HP: "),
                vue.createTextVNode(vue.toDisplayString(_ctx.getFormatNumber(_ctx.basic_info[0].max_hp)) + " ", 1),
                vue.createVNode("br")
              ]),
              vue.createVNode("div", null, [
                vue.createVNode("span", { class: "font-bold" }, "Max SP: "),
                vue.createTextVNode(vue.toDisplayString(_ctx.getFormatNumber(_ctx.basic_info[0].max_sp)), 1)
              ])
            ]),
            vue.createVNode("div", { class: "w-1/3 flex items-center justify-center h-[13rem]" }, [
              vue.createVNode("div", { class: "flex justify-center" }, [
                vue.createVNode("img", {
                  class: "",
                  src: `/rochar/character/${_ctx.basic_info[0].name}`,
                  alt: ""
                }, null, 8, ["src"])
              ]),
              vue.createVNode("div", null, [
                vue.createVNode("span", { class: "font-bold" }, "Name: "),
                vue.createTextVNode(" " + vue.toDisplayString(_ctx.basic_info[0].name), 1)
              ])
            ]),
            vue.createVNode("div", { class: "w-1/3 flex flex-col items-center justify-center h-[13rem]" }, [
              vue.createVNode("img", {
                class: "mr-2",
                src: `/${_ctx.url[_ctx.basic_info[0].guild_id]} `,
                alt: ""
              }, null, 8, ["src"]),
              vue.createVNode("div", null, [
                vue.createVNode("span", { class: "font-bold" }, "Guild: "),
                vue.createTextVNode(" " + vue.toDisplayString(_ctx.basic_info[0].gName) + " ", 1),
                vue.createVNode("br")
              ]),
              vue.createVNode("div", null, [
                vue.createVNode("span", { class: "font-bold" }, "Rank Elo: "),
                vue.createTextVNode(" " + vue.toDisplayString(_ctx.basic_info[0].gName) + " ", 1),
                vue.createVNode("br")
              ])
            ])
          ]),
          vue.createVNode("div", { class: "w-full flex" }, [
            vue.createVNode("div", { class: "flex w-1/2 p-5" }, [
              vue.createVNode("div", { class: "w-full" }, [
                vue.createVNode("table", { class: "w-full" }, [
                  vue.createVNode("thead", { class: "bg-[#0d0d0d] border-b" }, [
                    vue.createVNode("th", {
                      colspan: "3",
                      class: "p-4"
                    }, "General Standings")
                  ]),
                  vue.createVNode("thead", { class: "bg-[#0d0d0d]" }, [
                    vue.createVNode("th", { class: "p-2" }, [
                      vue.createVNode("div", { class: "flex items-center justify-center" }, [
                        vue.createVNode("img", {
                          class: "mr-2",
                          src: "/img/item/7427.gif",
                          alt: ""
                        }),
                        vue.createTextVNode(" Wins ")
                      ])
                    ]),
                    vue.createVNode("th", { class: "p-2" }, [
                      vue.createVNode("div", { class: "flex items-center justify-center" }, [
                        vue.createVNode("img", {
                          class: "mr-2",
                          src: "/img/item/7428.gif",
                          alt: ""
                        }),
                        vue.createTextVNode(" Tie ")
                      ])
                    ]),
                    vue.createVNode("th", { class: "p-2" }, [
                      vue.createVNode("div", { class: "flex items-center justify-center" }, [
                        vue.createVNode("img", {
                          class: "mr-2",
                          src: "/img/item/7426.gif",
                          alt: ""
                        }),
                        vue.createVNode("p", null, "Lost")
                      ])
                    ])
                  ]),
                  vue.createVNode("tbody", null, [
                    vue.createVNode("tr", { class: "" }, [
                      vue.createVNode("td", { class: "p-3 text-center" }, "0"),
                      vue.createVNode("td", { class: "p-3 text-center" }, "0"),
                      vue.createVNode("td", { class: "p-3 text-center" }, "0")
                    ])
                  ])
                ])
              ])
            ]),
            vue.createVNode("div", { class: "flex w-1/2 p-5" }, [
              vue.createVNode("div", { class: "w-full" }, [
                vue.createVNode("table", { class: "w-full" }, [
                  vue.createVNode("thead", { class: "bg-[#0d0d0d] border-b" }, [
                    vue.createVNode("th", {
                      colspan: "3",
                      class: "p-4"
                    }, "Damage")
                  ]),
                  vue.createVNode("thead", { class: "bg-[#0d0d0d]" }, [
                    vue.createVNode("th", { class: "p-2" }, [
                      vue.createVNode("div", { class: "flex items-center justify-center" }, [
                        vue.createVNode("img", {
                          class: "mr-2",
                          src: "/img/item/1228.png",
                          alt: ""
                        }),
                        vue.createTextVNode(" Top ")
                      ])
                    ]),
                    vue.createVNode("th", { class: "p-2" }, [
                      vue.createVNode("div", { class: "flex items-center justify-center" }, [
                        vue.createVNode("img", {
                          class: "mr-2",
                          src: "/img/item/1281.png",
                          alt: ""
                        }),
                        vue.createTextVNode(" Done ")
                      ])
                    ]),
                    vue.createVNode("th", { class: "p-2" }, [
                      vue.createVNode("div", { class: "flex items-center justify-center" }, [
                        vue.createVNode("img", {
                          class: "mr-2",
                          src: "/img/item/7024.png",
                          alt: ""
                        }),
                        vue.createTextVNode(" Recv ")
                      ])
                    ])
                  ]),
                  vue.createVNode("tbody", null, [
                    vue.createVNode("tr", { class: "" }, [
                      vue.createVNode("td", { class: "p-3 text-center" }, vue.toDisplayString(_ctx.getFormatNumber(
                        _ctx.basic_info[0].top_damage
                      )), 1),
                      vue.createVNode("td", { class: "p-3 text-center" }, vue.toDisplayString(_ctx.getFormatNumber(
                        _ctx.basic_info[0].damage_done
                      )), 1),
                      vue.createVNode("td", { class: "p-3 text-center" }, vue.toDisplayString(_ctx.getFormatNumber(
                        _ctx.basic_info[0].damage_received
                      )), 1)
                    ])
                  ])
                ])
              ])
            ])
          ]),
          vue.createVNode("div", { class: "p-5" }, [
            vue.createVNode("table", { class: "w-full" }, [
              vue.createVNode("thead", { class: "bg-[#0d0d0d]" }, [
                vue.createVNode("th", {
                  colspan: "3",
                  class: "p-4 border-b"
                }, "Usable items")
              ]),
              vue.createVNode("tbody", null, [
                vue.createVNode("tr", { class: "spaceUnder hover:bg-gray-800/40 hover:transition hover:duration-150" }, [
                  vue.createVNode("td", { class: "w-1/3 p-3" }, [
                    vue.createVNode("div", { class: "flex justify-center" }, [
                      vue.createVNode("img", {
                        src: "/img/item/522.png",
                        alt: "",
                        class: "mr-2"
                      }),
                      vue.createVNode("div", null, [
                        vue.createVNode("span", { class: "font-bold" }, "HP: "),
                        vue.createTextVNode(" " + vue.toDisplayString(_ctx.getFormatNumber(
                          _ctx.basic_info[0].hp_heal_potions
                        )), 1)
                      ])
                    ])
                  ]),
                  vue.createVNode("td", { class: "w-1/3 p-3" }, [
                    vue.createVNode("div", { class: "flex justify-center" }, [
                      vue.createVNode("img", {
                        src: "/img/item/505.png",
                        alt: "",
                        class: "mr-2"
                      }),
                      vue.createVNode("div", null, [
                        vue.createVNode("span", { class: "font-bold" }, " SP: "),
                        vue.createTextVNode(" " + vue.toDisplayString(_ctx.getFormatNumber(
                          _ctx.basic_info[0].sp_heal_potions
                        )), 1)
                      ])
                    ])
                  ]),
                  vue.createVNode("td", { class: "w-1/3 p-3" }, [
                    vue.createVNode("div", { class: "flex justify-center" }, [
                      vue.createVNode("img", {
                        src: "/img/item/676.png",
                        alt: "",
                        class: "mr-2"
                      }),
                      vue.createVNode("div", null, [
                        vue.createVNode("span", { class: "font-bold" }, " Zeny: "),
                        vue.createTextVNode(" " + vue.toDisplayString(_ctx.getFormatNumber(_ctx.basic_info[0].zeny_used)), 1)
                      ])
                    ])
                  ])
                ]),
                vue.createVNode("tr", { class: "spaceUnder hover:bg-gray-800/40 hover:transition hover:duration-150" }, [
                  vue.createVNode("td", { class: "w-1/3 p-3" }, [
                    vue.createVNode("div", { class: "flex justify-center" }, [
                      vue.createVNode("img", {
                        src: "/img/item/716.png",
                        alt: "",
                        class: "mr-2"
                      }),
                      vue.createVNode("div", null, [
                        vue.createVNode("span", { class: "font-bold" }, " Gems: "),
                        vue.createTextVNode(" " + vue.toDisplayString(_ctx.getFormatNumber(
                          _ctx.basic_info[0].red_gemstones
                        )), 1)
                      ])
                    ])
                  ]),
                  vue.createVNode("td", { class: "w-1/3" }, [
                    vue.createVNode("div", { class: "flex justify-center" }, [
                      vue.createVNode("img", {
                        src: "/img/item/717.png",
                        alt: "",
                        class: "mr-2"
                      }),
                      vue.createVNode("div", null, [
                        vue.createVNode("span", { class: "font-bold" }, "Gems: "),
                        vue.createTextVNode(" " + vue.toDisplayString(_ctx.getFormatNumber(
                          _ctx.basic_info[0].blue_gemstones
                        )), 1)
                      ])
                    ])
                  ]),
                  vue.createVNode("td", { class: "w-1/3 p-3" }, [
                    vue.createVNode("div", { class: "flex justify-center" }, [
                      vue.createVNode("img", {
                        src: "/img/item/715.png",
                        alt: "",
                        class: "mr-2"
                      }),
                      vue.createVNode("div", null, [
                        vue.createVNode("span", { class: "font-bold" }, " Gems: "),
                        vue.createTextVNode(" " + vue.toDisplayString(_ctx.getFormatNumber(
                          _ctx.basic_info[0].yellow_gemstones
                        )), 1)
                      ])
                    ])
                  ])
                ]),
                vue.createVNode("tr", { class: "spaceUnder hover:bg-gray-800/40 hover:transition hover:duration-150" }, [
                  vue.createVNode("td", { class: "w-1/3 p-3" }, [
                    vue.createVNode("div", { class: "flex justify-center" }, [
                      vue.createVNode("img", {
                        src: "/img/item/1752.png",
                        alt: "",
                        class: "mr-2"
                      }),
                      vue.createVNode("div", null, [
                        vue.createVNode("span", { class: "font-bold" }, " Arrows: "),
                        vue.createTextVNode(" " + vue.toDisplayString(_ctx.getFormatNumber(_ctx.basic_info[0].ammo_used)), 1)
                      ])
                    ])
                  ]),
                  vue.createVNode("td", { class: "w-1/3 p-3" }, [
                    vue.createVNode("div", { class: "flex justify-center" }, [
                      vue.createVNode("img", {
                        src: "/img/item/7136.png",
                        alt: "",
                        class: "mr-2"
                      }),
                      vue.createVNode("div", null, [
                        vue.createVNode("span", { class: "font-bold" }, " Bottles: "),
                        vue.createTextVNode(" " + vue.toDisplayString(_ctx.getFormatNumber(
                          _ctx.basic_info[0].acid_demostration
                        )), 1)
                      ])
                    ])
                  ]),
                  vue.createVNode("td", { class: "w-1/3 p-3" }, [
                    vue.createVNode("div", { class: "flex justify-center" }, [
                      vue.createVNode("img", {
                        src: "/img/item/678.png",
                        alt: "",
                        class: "mr-2"
                      }),
                      vue.createVNode("div", null, [
                        vue.createVNode("span", { class: "font-bold" }, " Bottles: "),
                        vue.createTextVNode(" " + vue.toDisplayString(_ctx.getFormatNumber(
                          _ctx.basic_info[0].poison_bottles
                        )), 1)
                      ])
                    ])
                  ])
                ])
              ])
            ])
          ]),
          vue.createVNode("div", { class: "p-5 flex" }, [
            vue.createVNode("table", { class: "w-1/2 mt-5" }, [
              vue.createVNode("thead", { class: "bg-[#0d0d0d] border-b" }, [
                vue.createVNode("th", {
                  colspan: "4",
                  class: "p-4"
                }, "Destroyed Structures")
              ]),
              vue.createVNode("tbody", { class: "" }, [
                vue.createVNode("tr", { class: "spaceUnder" }, [
                  vue.createVNode("td", { class: "w-1/4 p-3" }, [
                    vue.createVNode("div", { class: "flex justify-center" }, [
                      vue.createVNode("img", {
                        src: "/img/item/714.png",
                        alt: "",
                        class: "mr-2"
                      }),
                      vue.createVNode("div", null, [
                        vue.createVNode("span", { class: "font-bold" }, " Emperium: "),
                        vue.createTextVNode(" " + vue.toDisplayString(_ctx.getFormatNumber(
                          _ctx.basic_info[0].cq_emperium_kill + _ctx.basic_info[0].cs_emperium_kill + _ctx.basic_info[0].dte_emperium_kill
                        )), 1)
                      ])
                    ])
                  ]),
                  vue.createVNode("td", { class: "w-1/4 p-3" }, [
                    vue.createVNode("div", { class: "flex justify-center" }, [
                      vue.createVNode("img", {
                        src: "/img/item/14287.gif",
                        alt: "",
                        class: "mr-2"
                      }),
                      vue.createVNode("div", null, [
                        vue.createVNode("span", { class: "font-bold" }, " Barricade: "),
                        vue.createTextVNode(" " + vue.toDisplayString(_ctx.getFormatNumber(
                          _ctx.basic_info[0].cq_barricade_kill + _ctx.basic_info[0].cs_barricade_kill
                        )), 1)
                      ])
                    ])
                  ]),
                  vue.createVNode("td", { class: "w-1/4 p-3" }, [
                    vue.createVNode("div", { class: "flex justify-center" }, [
                      vue.createVNode("img", {
                        src: "/img/item/7839.gif",
                        alt: "",
                        class: "mr-2"
                      }),
                      vue.createVNode("div", null, [
                        vue.createVNode("span", { class: "font-bold" }, " G. Stone: "),
                        vue.createTextVNode(" " + vue.toDisplayString(_ctx.getFormatNumber(
                          _ctx.basic_info[0].cq_gstone_kill + _ctx.basic_info[0].cs_gstone_kill
                        )), 1)
                      ])
                    ])
                  ])
                ])
              ])
            ]),
            vue.createVNode("table", { class: "w-1/2 ml-9 mt-5" }, [
              vue.createVNode("thead", { class: "bg-[#0d0d0d] border-b" }, [
                vue.createVNode("th", {
                  colspan: "4",
                  class: "p-4"
                }, "Battleground Stadistics")
              ]),
              vue.createVNode("tbody", { class: "" }, [
                vue.createVNode("tr", { class: "spaceUnder" }, [
                  vue.createVNode("td", { class: "w-1/3 p-3" }, [
                    vue.createVNode("div", { class: "flex justify-center" }, [
                      vue.createVNode("img", {
                        src: "/img/item/7253.gif",
                        alt: "",
                        class: "mr-2"
                      }),
                      vue.createVNode("div", null, [
                        vue.createVNode("span", { class: "font-bold" }, " G. win: "),
                        vue.createTextVNode(" " + vue.toDisplayString(_ctx.getFormatNumber(
                          _ctx.basic_info[0].cq_gstone_kill + _ctx.basic_info[0].cs_gstone_kill
                        )), 1)
                      ])
                    ])
                  ]),
                  vue.createVNode("td", { class: "w-1/3 p-3" }, [
                    vue.createVNode("div", { class: "flex justify-center" }, [
                      vue.createVNode("img", {
                        src: "/img/item/7428.gif",
                        alt: "",
                        class: "mr-2"
                      }),
                      vue.createVNode("div", null, [
                        vue.createVNode("span", { class: "font-bold" }, " Tie "),
                        vue.createTextVNode(" " + vue.toDisplayString(_ctx.getFormatNumber(
                          _ctx.basic_info[0].cq_gstone_kill + _ctx.basic_info[0].cs_gstone_kill
                        )), 1)
                      ])
                    ])
                  ]),
                  vue.createVNode("td", { class: "w-1/3 p-3" }, [
                    vue.createVNode("div", { class: "flex justify-center" }, [
                      vue.createVNode("img", {
                        src: "/img/item/7426.gif",
                        alt: "",
                        class: "mr-2"
                      }),
                      vue.createVNode("div", null, [
                        vue.createVNode("span", { class: "font-bold" }, " Lost: "),
                        vue.createTextVNode(" " + vue.toDisplayString(_ctx.getFormatNumber(
                          _ctx.basic_info[0].cq_gstone_kill + _ctx.basic_info[0].cs_gstone_kill
                        )), 1)
                      ])
                    ])
                  ])
                ])
              ])
            ])
          ]),
          vue.createVNode("div", { class: "p-5" }, [
            vue.createVNode("div", { class: "" }, [
              vue.createVNode("h1", { class: "text-xl font-bold mb-5" }, "Kill Log - BG"),
              vue.createVNode(_component_JetButton, {
                class: "bg-sky-500 hover:bg-sky-700 mb-5",
                onClick: ($event) => _ctx.show_kill_log = !_ctx.show_kill_log
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Show More ")
                ]),
                _: 1
              }, 8, ["onClick"])
            ]),
            vue.createVNode(vue.Transition, {
              name: "fade",
              onEnter: _ctx.enter
            }, {
              default: vue.withCtx(() => [
                _ctx.show_kill_log ? (vue.openBlock(), vue.createBlock("table", {
                  key: 0,
                  class: "w-full"
                }, [
                  vue.createVNode("thead", null, [
                    vue.createVNode("tr", { class: "spaceUnder font-bold bg-[#0d0d0d] border-1" }, [
                      vue.createVNode("td", { class: "p-3" }, [
                        vue.createVNode("div", { class: "flex justify-center" }, "Date/Time")
                      ]),
                      vue.createVNode("td", { class: "p-3" }, [
                        vue.createVNode("div", { class: "flex justify-center" }, "P")
                      ]),
                      vue.createVNode("td", { class: "p-3" }, [
                        vue.createVNode("div", { class: "flex justify-center" }, "C")
                      ]),
                      vue.createVNode("td", { class: "p-3" }, [
                        vue.createVNode("div", { class: "flex justify-center" }, "Victim")
                      ]),
                      vue.createVNode("td", { class: "p-3" }, [
                        vue.createVNode("div", { class: "flex justify-center" }, "Map")
                      ]),
                      vue.createVNode("td", { class: "p-3" }, [
                        vue.createVNode("div", { class: "flex justify-center" }, "Attack")
                      ])
                    ])
                  ]),
                  vue.createVNode("tbody", { class: "" }, [
                    (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(_ctx.kill_log, (kill) => {
                      return vue.openBlock(), vue.createBlock("tr", { class: "spaceUnder hover:bg-gray-800/40 hover:transition hover:duration-150" }, [
                        vue.createVNode("td", { class: "p-3" }, [
                          vue.createVNode("div", { class: "flex justify-center" }, vue.toDisplayString(kill.time), 1)
                        ]),
                        vue.createVNode("td", { class: "p-3" }, [
                          vue.createVNode("div", { class: "flex justify-center" }, [
                            vue.createVNode(_component_Link, {
                              href: _ctx.route("bg.profile", kill.killed_id)
                            }, {
                              default: vue.withCtx(() => [
                                vue.createVNode("img", { src: "/img/viewprofile.png" })
                              ]),
                              _: 2
                            }, 1032, ["href"])
                          ])
                        ]),
                        vue.createVNode("td", { class: "p-3" }, [
                          vue.createVNode("div", { class: "flex justify-center cursor-pointer" }, [
                            vue.createVNode("img", {
                              src: "/img/compare.png",
                              alt: "",
                              onClick: ($event) => _ctx.compare_player(
                                kill.killed_id,
                                "kill"
                              )
                            }, null, 8, ["onClick"])
                          ])
                        ]),
                        vue.createVNode("td", { class: "p-3" }, [
                          vue.createVNode("div", { class: "flex justify-center" }, [
                            vue.createVNode("img", {
                              src: `/rochar/characterhead/${kill.killed_id}`,
                              alt: ""
                            }, null, 8, ["src"]),
                            vue.createVNode("div", { class: "flex items-center" }, [
                              vue.createVNode("span", { class: "text-[#04aaff]" }, vue.toDisplayString(kill.killed), 1),
                              vue.createTextVNode(" (" + vue.toDisplayString(_ctx.get_job_name(kill.class)) + ") ", 1)
                            ])
                          ])
                        ]),
                        vue.createVNode("td", { class: "p-3" }, [
                          vue.createVNode("div", { class: "flex justify-center" }, vue.toDisplayString(_ctx.mapname2bgname(kill.map)), 1)
                        ]),
                        vue.createVNode("td", { class: "p-3" }, [
                          vue.createVNode("div", { class: "flex justify-center" }, [
                            vue.createVNode("img", {
                              src: `/img/skill_db/${kill.skill}.png`,
                              alt: "",
                              srcset: ""
                            }, null, 8, ["src"])
                          ])
                        ])
                      ]);
                    }), 256))
                  ])
                ])) : vue.createCommentVNode("", true)
              ]),
              _: 1
            }, 8, ["onEnter"])
          ]),
          vue.createVNode("div", { class: "p-5" }, [
            vue.createVNode("div", { class: "" }, [
              vue.createVNode("h1", { class: "text-xl font-bold mb-5" }, "Death Log - BG"),
              vue.createVNode(_component_JetButton, {
                class: "bg-sky-500 hover:bg-sky-700 mb-5",
                onClick: ($event) => _ctx.show_death_log = !_ctx.show_death_log
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Show More ")
                ]),
                _: 1
              }, 8, ["onClick"])
            ]),
            vue.createVNode(vue.Transition, {
              name: "fade",
              onEnter: _ctx.enter
            }, {
              default: vue.withCtx(() => [
                _ctx.show_death_log ? (vue.openBlock(), vue.createBlock("table", {
                  key: 0,
                  class: "w-full"
                }, [
                  vue.createVNode("thead", null, [
                    vue.createVNode("tr", { class: "spaceUnder font-bold bg-[#0d0d0d] border-1" }, [
                      vue.createVNode("td", { class: "p-3" }, [
                        vue.createVNode("div", { class: "flex justify-center" }, "Date/Time")
                      ]),
                      vue.createVNode("td", { class: "p-3" }, [
                        vue.createVNode("div", { class: "flex justify-center" }, "P")
                      ]),
                      vue.createVNode("td", { class: "p-3" }, [
                        vue.createVNode("div", { class: "flex justify-center" }, "C")
                      ]),
                      vue.createVNode("td", { class: "p-3" }, [
                        vue.createVNode("div", { class: "flex justify-center" }, "Killer")
                      ]),
                      vue.createVNode("td", { class: "p-3" }, [
                        vue.createVNode("div", { class: "flex justify-center" }, "Map")
                      ]),
                      vue.createVNode("td", { class: "p-3" }, [
                        vue.createVNode("div", { class: "flex justify-center" }, "Attack")
                      ])
                    ])
                  ]),
                  vue.createVNode("tbody", { class: "" }, [
                    (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(_ctx.death_log, (death) => {
                      return vue.openBlock(), vue.createBlock("tr", { class: "spaceUnder hover:bg-gray-800/40 hover:transition hover:duration-150" }, [
                        vue.createVNode("td", { class: "p-3" }, [
                          vue.createVNode("div", { class: "flex justify-center" }, vue.toDisplayString(death.time), 1)
                        ]),
                        vue.createVNode("td", { class: "p-3" }, [
                          vue.createVNode("div", { class: "flex justify-center" }, [
                            vue.createVNode(_component_Link, {
                              href: _ctx.route("bg.profile", death.killer_id)
                            }, {
                              default: vue.withCtx(() => [
                                vue.createVNode("img", { src: "/img/viewprofile.png" })
                              ]),
                              _: 2
                            }, 1032, ["href"])
                          ])
                        ]),
                        vue.createVNode("td", { class: "p-3" }, [
                          vue.createVNode("div", { class: "flex justify-center cursor-pointer" }, [
                            vue.createVNode("img", {
                              src: "/img/compare.png",
                              alt: "",
                              onClick: ($event) => _ctx.compare_player(
                                death.killer_id,
                                "death"
                              )
                            }, null, 8, ["onClick"])
                          ])
                        ]),
                        vue.createVNode("td", { class: "p-3" }, [
                          vue.createVNode("div", { class: "flex justify-center" }, [
                            vue.createVNode("img", {
                              src: `/rochar/characterhead/${death.killer_id}`,
                              alt: ""
                            }, null, 8, ["src"]),
                            vue.createVNode("div", null, [
                              vue.createVNode("span", { class: "text-[#04aaff]" }, vue.toDisplayString(death.killer), 1),
                              vue.createTextVNode(" (" + vue.toDisplayString(_ctx.get_job_name(death.class)) + ") ", 1)
                            ])
                          ])
                        ]),
                        vue.createVNode("td", { class: "p-3" }, [
                          vue.createVNode("div", { class: "flex justify-center" }, vue.toDisplayString(_ctx.mapname2bgname(death.map)), 1)
                        ]),
                        vue.createVNode("td", { class: "p-3" }, [
                          vue.createVNode("div", { class: "flex justify-center" }, [
                            vue.createVNode("img", {
                              src: `/img/skill_db/${death.skill}.png`,
                              alt: "",
                              srcset: ""
                            }, null, 8, ["src"])
                          ])
                        ])
                      ]);
                    }), 256))
                  ])
                ])) : vue.createCommentVNode("", true)
              ]),
              _: 1
            }, 8, ["onEnter"])
          ]),
          vue.createVNode("div", { class: "p-5" }, [
            vue.createVNode("table", { class: "w-full" }, [
              vue.createVNode("thead", { class: "bg-[#0d0d0d] border-b" }, [
                vue.createVNode("th", {
                  colspan: "3",
                  class: "p-4"
                }, "Top 10 Casted Skills")
              ]),
              vue.createVNode("thead", null, [
                vue.createVNode("tr", { class: "spaceUnder font-bold bg-[#0d0d0d] border-1" }, [
                  vue.createVNode("td", { class: "w-1/4 p-3" }, [
                    vue.createVNode("div", { class: "flex justify-center" }, "Skill Name")
                  ]),
                  vue.createVNode("td", { class: "w-1/4 p-3" }, [
                    vue.createVNode("div", { class: "flex justify-center" }, "T")
                  ]),
                  vue.createVNode("td", { class: "w-1/4 p-3" }, [
                    vue.createVNode("div", { class: "flex justify-center" }, "Count")
                  ])
                ])
              ]),
              vue.createVNode("tbody", { class: "" }, [
                (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(_ctx.skill_count, (skill) => {
                  return vue.openBlock(), vue.createBlock("tr", { class: "spaceUnder hover:bg-gray-800/40 hover:transition hover:duration-150" }, [
                    vue.createVNode("td", { class: "w-1/4 p-3" }, [
                      vue.createVNode("div", { class: "flex justify-center" }, [
                        vue.createVNode("div", null, [
                          vue.createVNode("img", {
                            src: `/img/skill_db/${skill.id}.png`,
                            alt: "",
                            class: "mr-5"
                          }, null, 8, ["src"])
                        ]),
                        vue.createTextVNode(" " + vue.toDisplayString(_ctx.get_skill_name(skill.id)), 1)
                      ])
                    ]),
                    vue.createVNode("td", { class: "w-1/4 p-3" }, [
                      vue.createVNode("div", { class: "flex justify-center cursor-pointer" }, [
                        vue.createVNode("img", {
                          src: `/img/compare.png`,
                          alt: "",
                          onClick: ($event) => _ctx.get_skill_rank(skill.id)
                        }, null, 8, ["src", "onClick"])
                      ])
                    ]),
                    vue.createVNode("td", { class: "w-1/4 p-3" }, [
                      vue.createVNode("div", { class: "flex justify-center" }, vue.toDisplayString(_ctx.getFormatNumber(skill.count)), 1)
                    ])
                  ]);
                }), 256))
              ])
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_JetModalDialog, {
    show: _ctx.modal,
    class: ["text-black", "w-[35rem]"],
    onClose: _ctx.closeModal
  }, {
    title: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`${serverRenderer.ssrInterpolate(_ctx.comparative_name)} Log Comparative `);
      } else {
        return [
          vue.createTextVNode(vue.toDisplayString(_ctx.comparative_name) + " Log Comparative ", 1)
        ];
      }
    }),
    content: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<table class="w-full" data-v-ffdbcd08${_scopeId}><thead data-v-ffdbcd08${_scopeId}><tr class="spaceUnder font-bold bg-[#0d0d0d] border-1 text-white" data-v-ffdbcd08${_scopeId}><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}>Date/Time</div></td><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}>P</div></td>`);
        if (_ctx.compare_death_log) {
          _push2(`<td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}>Killer</div></td>`);
        } else {
          _push2(`<td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}>Victim</div></td>`);
        }
        _push2(`<td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}>Map</div></td><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}>Attack</div></td></tr></thead><tbody class="" data-v-ffdbcd08${_scopeId}>`);
        if (_ctx.compare_death_log) {
          _push2(`<!--[-->`);
          serverRenderer.ssrRenderList(_ctx.compare_death_log, (death) => {
            _push2(`<tr class="spaceUnder" data-v-ffdbcd08${_scopeId}><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}>${serverRenderer.ssrInterpolate(death.time)}</div></td><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(_component_Link, {
              href: _ctx.route("bg.profile", death.killer_id)
            }, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<img src="/img/viewprofile.png" data-v-ffdbcd08${_scopeId2}>`);
                } else {
                  return [
                    vue.createVNode("img", { src: "/img/viewprofile.png" })
                  ];
                }
              }),
              _: 2
            }, _parent2, _scopeId));
            _push2(`</div></td><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}><img${serverRenderer.ssrRenderAttr("src", `/rochar/characterhead/${death.killer_id}`)} alt="" data-v-ffdbcd08${_scopeId}><div data-v-ffdbcd08${_scopeId}><span class="text-[#04aaff]" data-v-ffdbcd08${_scopeId}>${serverRenderer.ssrInterpolate(death.killer)}</span> (${serverRenderer.ssrInterpolate(_ctx.get_job_name(death.class))}) </div></div></td><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}>${serverRenderer.ssrInterpolate(_ctx.mapname2bgname(death.map))}</div></td><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}><img${serverRenderer.ssrRenderAttr("src", `/img/skill_db/${death.skill}.png`)} alt="" srcset="" data-v-ffdbcd08${_scopeId}></div></td></tr>`);
          });
          _push2(`<!--]-->`);
        } else {
          _push2(`<!--[-->`);
          serverRenderer.ssrRenderList(_ctx.compare_kill_log, (kill) => {
            _push2(`<tr class="spaceUnder" data-v-ffdbcd08${_scopeId}><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}>${serverRenderer.ssrInterpolate(kill.time)}</div></td><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(_component_Link, {
              href: _ctx.route("bg.profile", kill.killer_id)
            }, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<img src="/img/viewprofile.png" data-v-ffdbcd08${_scopeId2}>`);
                } else {
                  return [
                    vue.createVNode("img", { src: "/img/viewprofile.png" })
                  ];
                }
              }),
              _: 2
            }, _parent2, _scopeId));
            _push2(`</div></td><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}><img${serverRenderer.ssrRenderAttr("src", `/rochar/characterhead/${kill.killer_id}`)} alt="" data-v-ffdbcd08${_scopeId}><div data-v-ffdbcd08${_scopeId}><span class="text-[#04aaff]" data-v-ffdbcd08${_scopeId}>${serverRenderer.ssrInterpolate(kill.killed)}</span> (${serverRenderer.ssrInterpolate(_ctx.get_job_name(kill.class))}) </div></div></td><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}>${serverRenderer.ssrInterpolate(_ctx.mapname2bgname(kill.map))}</div></td><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}><img${serverRenderer.ssrRenderAttr("src", `/img/skill_db/${kill.skill}.png`)} alt="" srcset="" data-v-ffdbcd08${_scopeId}></div></td></tr>`);
          });
          _push2(`<!--]-->`);
        }
        _push2(`</tbody></table>`);
      } else {
        return [
          vue.createVNode("table", { class: "w-full" }, [
            vue.createVNode("thead", null, [
              vue.createVNode("tr", { class: "spaceUnder font-bold bg-[#0d0d0d] border-1 text-white" }, [
                vue.createVNode("td", { class: "p-3" }, [
                  vue.createVNode("div", { class: "flex justify-center" }, "Date/Time")
                ]),
                vue.createVNode("td", { class: "p-3" }, [
                  vue.createVNode("div", { class: "flex justify-center" }, "P")
                ]),
                _ctx.compare_death_log ? (vue.openBlock(), vue.createBlock("td", {
                  key: 0,
                  class: "p-3"
                }, [
                  vue.createVNode("div", { class: "flex justify-center" }, "Killer")
                ])) : (vue.openBlock(), vue.createBlock("td", {
                  key: 1,
                  class: "p-3"
                }, [
                  vue.createVNode("div", { class: "flex justify-center" }, "Victim")
                ])),
                vue.createVNode("td", { class: "p-3" }, [
                  vue.createVNode("div", { class: "flex justify-center" }, "Map")
                ]),
                vue.createVNode("td", { class: "p-3" }, [
                  vue.createVNode("div", { class: "flex justify-center" }, "Attack")
                ])
              ])
            ]),
            vue.createVNode("tbody", { class: "" }, [
              _ctx.compare_death_log ? (vue.openBlock(true), vue.createBlock(vue.Fragment, { key: 0 }, vue.renderList(_ctx.compare_death_log, (death) => {
                return vue.openBlock(), vue.createBlock("tr", { class: "spaceUnder" }, [
                  vue.createVNode("td", { class: "p-3" }, [
                    vue.createVNode("div", { class: "flex justify-center" }, vue.toDisplayString(death.time), 1)
                  ]),
                  vue.createVNode("td", { class: "p-3" }, [
                    vue.createVNode("div", { class: "flex justify-center" }, [
                      vue.createVNode(_component_Link, {
                        href: _ctx.route("bg.profile", death.killer_id)
                      }, {
                        default: vue.withCtx(() => [
                          vue.createVNode("img", { src: "/img/viewprofile.png" })
                        ]),
                        _: 2
                      }, 1032, ["href"])
                    ])
                  ]),
                  vue.createVNode("td", { class: "p-3" }, [
                    vue.createVNode("div", { class: "flex justify-center" }, [
                      vue.createVNode("img", {
                        src: `/rochar/characterhead/${death.killer_id}`,
                        alt: ""
                      }, null, 8, ["src"]),
                      vue.createVNode("div", null, [
                        vue.createVNode("span", { class: "text-[#04aaff]" }, vue.toDisplayString(death.killer), 1),
                        vue.createTextVNode(" (" + vue.toDisplayString(_ctx.get_job_name(death.class)) + ") ", 1)
                      ])
                    ])
                  ]),
                  vue.createVNode("td", { class: "p-3" }, [
                    vue.createVNode("div", { class: "flex justify-center" }, vue.toDisplayString(_ctx.mapname2bgname(death.map)), 1)
                  ]),
                  vue.createVNode("td", { class: "p-3" }, [
                    vue.createVNode("div", { class: "flex justify-center" }, [
                      vue.createVNode("img", {
                        src: `/img/skill_db/${death.skill}.png`,
                        alt: "",
                        srcset: ""
                      }, null, 8, ["src"])
                    ])
                  ])
                ]);
              }), 256)) : (vue.openBlock(true), vue.createBlock(vue.Fragment, { key: 1 }, vue.renderList(_ctx.compare_kill_log, (kill) => {
                return vue.openBlock(), vue.createBlock("tr", { class: "spaceUnder" }, [
                  vue.createVNode("td", { class: "p-3" }, [
                    vue.createVNode("div", { class: "flex justify-center" }, vue.toDisplayString(kill.time), 1)
                  ]),
                  vue.createVNode("td", { class: "p-3" }, [
                    vue.createVNode("div", { class: "flex justify-center" }, [
                      vue.createVNode(_component_Link, {
                        href: _ctx.route("bg.profile", kill.killer_id)
                      }, {
                        default: vue.withCtx(() => [
                          vue.createVNode("img", { src: "/img/viewprofile.png" })
                        ]),
                        _: 2
                      }, 1032, ["href"])
                    ])
                  ]),
                  vue.createVNode("td", { class: "p-3" }, [
                    vue.createVNode("div", { class: "flex justify-center" }, [
                      vue.createVNode("img", {
                        src: `/rochar/characterhead/${kill.killer_id}`,
                        alt: ""
                      }, null, 8, ["src"]),
                      vue.createVNode("div", null, [
                        vue.createVNode("span", { class: "text-[#04aaff]" }, vue.toDisplayString(kill.killed), 1),
                        vue.createTextVNode(" (" + vue.toDisplayString(_ctx.get_job_name(kill.class)) + ") ", 1)
                      ])
                    ])
                  ]),
                  vue.createVNode("td", { class: "p-3" }, [
                    vue.createVNode("div", { class: "flex justify-center" }, vue.toDisplayString(_ctx.mapname2bgname(kill.map)), 1)
                  ]),
                  vue.createVNode("td", { class: "p-3" }, [
                    vue.createVNode("div", { class: "flex justify-center" }, [
                      vue.createVNode("img", {
                        src: `/img/skill_db/${kill.skill}.png`,
                        alt: "",
                        srcset: ""
                      }, null, 8, ["src"])
                    ])
                  ])
                ]);
              }), 256))
            ])
          ])
        ];
      }
    }),
    footer: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          class: "ml-3",
          onClick: _ctx.closeModal
        }, {
          default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Close`);
            } else {
              return [
                vue.createTextVNode("Close")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_button, {
            class: "ml-3",
            onClick: _ctx.closeModal
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Close")
            ]),
            _: 1
          }, 8, ["onClick"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_JetModalDialog, {
    show: _ctx.modal_skill,
    class: "text-black",
    onClose: _ctx.closeModal
  }, {
    title: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` TOP 10 Rank Skill`);
      } else {
        return [
          vue.createTextVNode(" TOP 10 Rank Skill")
        ];
      }
    }),
    content: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<table class="w-full" data-v-ffdbcd08${_scopeId}><thead data-v-ffdbcd08${_scopeId}><tr class="spaceUnder font-bold bg-[#0d0d0d] border-1 text-white" data-v-ffdbcd08${_scopeId}><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}>Pos</div></td><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}>P</div></td><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}>Caster</div></td><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}>Count</div></td><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}>Skill</div></td></tr></thead><tbody class="" data-v-ffdbcd08${_scopeId}><!--[-->`);
        serverRenderer.ssrRenderList(_ctx.skill_rank, (skill, index) => {
          _push2(`<tr class="spaceUnder" data-v-ffdbcd08${_scopeId}><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}>${serverRenderer.ssrInterpolate(index + 1)}</div></td><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_Link, {
            href: _ctx.route("bg.profile", skill.char_id)
          }, {
            default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`<img src="/img/viewprofile.png" data-v-ffdbcd08${_scopeId2}>`);
              } else {
                return [
                  vue.createVNode("img", { src: "/img/viewprofile.png" })
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
          _push2(`</div></td><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}><div data-v-ffdbcd08${_scopeId}><span class="text-[#04aaff]" data-v-ffdbcd08${_scopeId}>${serverRenderer.ssrInterpolate(skill.name)}</span> (${serverRenderer.ssrInterpolate(_ctx.get_job_name(skill.class))}) </div></div></td><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}>${serverRenderer.ssrInterpolate(_ctx.getFormatNumber(skill.count))}</div></td><td class="p-3" data-v-ffdbcd08${_scopeId}><div class="flex justify-center" data-v-ffdbcd08${_scopeId}><img${serverRenderer.ssrRenderAttr("src", `/img/skill_db/${skill.id}.png`)} alt="" srcset="" data-v-ffdbcd08${_scopeId}></div></td></tr>`);
        });
        _push2(`<!--]--></tbody></table>`);
      } else {
        return [
          vue.createVNode("table", { class: "w-full" }, [
            vue.createVNode("thead", null, [
              vue.createVNode("tr", { class: "spaceUnder font-bold bg-[#0d0d0d] border-1 text-white" }, [
                vue.createVNode("td", { class: "p-3" }, [
                  vue.createVNode("div", { class: "flex justify-center" }, "Pos")
                ]),
                vue.createVNode("td", { class: "p-3" }, [
                  vue.createVNode("div", { class: "flex justify-center" }, "P")
                ]),
                vue.createVNode("td", { class: "p-3" }, [
                  vue.createVNode("div", { class: "flex justify-center" }, "Caster")
                ]),
                vue.createVNode("td", { class: "p-3" }, [
                  vue.createVNode("div", { class: "flex justify-center" }, "Count")
                ]),
                vue.createVNode("td", { class: "p-3" }, [
                  vue.createVNode("div", { class: "flex justify-center" }, "Skill")
                ])
              ])
            ]),
            vue.createVNode("tbody", { class: "" }, [
              (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(_ctx.skill_rank, (skill, index) => {
                return vue.openBlock(), vue.createBlock("tr", { class: "spaceUnder" }, [
                  vue.createVNode("td", { class: "p-3" }, [
                    vue.createVNode("div", { class: "flex justify-center" }, vue.toDisplayString(index + 1), 1)
                  ]),
                  vue.createVNode("td", { class: "p-3" }, [
                    vue.createVNode("div", { class: "flex justify-center" }, [
                      vue.createVNode(_component_Link, {
                        href: _ctx.route("bg.profile", skill.char_id)
                      }, {
                        default: vue.withCtx(() => [
                          vue.createVNode("img", { src: "/img/viewprofile.png" })
                        ]),
                        _: 2
                      }, 1032, ["href"])
                    ])
                  ]),
                  vue.createVNode("td", { class: "p-3" }, [
                    vue.createVNode("div", { class: "flex justify-center" }, [
                      vue.createVNode("div", null, [
                        vue.createVNode("span", { class: "text-[#04aaff]" }, vue.toDisplayString(skill.name), 1),
                        vue.createTextVNode(" (" + vue.toDisplayString(_ctx.get_job_name(skill.class)) + ") ", 1)
                      ])
                    ])
                  ]),
                  vue.createVNode("td", { class: "p-3" }, [
                    vue.createVNode("div", { class: "flex justify-center" }, vue.toDisplayString(_ctx.getFormatNumber(skill.count)), 1)
                  ]),
                  vue.createVNode("td", { class: "p-3" }, [
                    vue.createVNode("div", { class: "flex justify-center" }, [
                      vue.createVNode("img", {
                        src: `/img/skill_db/${skill.id}.png`,
                        alt: "",
                        srcset: ""
                      }, null, 8, ["src"])
                    ])
                  ])
                ]);
              }), 256))
            ])
          ])
        ];
      }
    }),
    footer: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          class: "ml-3",
          onClick: _ctx.closeModal
        }, {
          default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Close`);
            } else {
              return [
                vue.createTextVNode("Close")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_button, {
            class: "ml-3",
            onClick: _ctx.closeModal
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Close")
            ]),
            _: 1
          }, 8, ["onClick"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<!--]-->`);
}
const _sfc_setup$d = _sfc_main$d.setup;
_sfc_main$d.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/UserProfile/Bg.vue");
  return _sfc_setup$d ? _sfc_setup$d(props, ctx) : void 0;
};
var Bg = /* @__PURE__ */ _export_sfc(_sfc_main$d, [["ssrRender", _sfc_ssrRender$3], ["__scopeId", "data-v-ffdbcd08"]]);
var Bg$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Bg
}, Symbol.toStringTag, { value: "Module" }));
var Woe_vue_vue_type_style_index_0_scoped_true_lang = "";
const __default__$6 = {
  layout: RankingLayout
};
const _sfc_main$c = /* @__PURE__ */ Object.assign(__default__$6, {
  __name: "Woe",
  __ssrInlineRender: true,
  setup(__props) {
    const show_death_log = vue.ref(inertiaVue3.usePage().props.value.show_death_table);
    const show_kill_log = vue.ref(inertiaVue3.usePage().props.value.show_kill_table);
    const url = vue.ref({});
    const basic_info = reactivity.computed(() => inertiaVue3.usePage().props.value.basic_info);
    const char_id = inertiaVue3.usePage().props.value.char_id;
    const skill_count = reactivity.computed(() => inertiaVue3.usePage().props.value.skill_count);
    const kill_log = reactivity.computed(() => inertiaVue3.usePage().props.value.kill_log);
    const death_log = reactivity.computed(() => inertiaVue3.usePage().props.value.death_log);
    const modal = vue.ref(inertiaVue3.usePage().props.value.modal);
    const dates_woe = inertiaVue3.usePage().props.value.woe_dates;
    const modal_skill = vue.ref(inertiaVue3.usePage().props.value.modal_skill);
    const compare_death_log = reactivity.computed(
      () => inertiaVue3.usePage().props.value.compare_death_log
    );
    const compare_kill_log = reactivity.computed(() => inertiaVue3.usePage().props.value.compare_kill_log);
    const comparative_name = reactivity.computed(() => inertiaVue3.usePage().props.value.comparative_name);
    const skill_rank = reactivity.computed(() => inertiaVue3.usePage().props.value.skill_rank);
    function closeModal() {
      modal.value = false;
      modal_skill.value = false;
    }
    function set_day() {
      const queryString = window.location.search;
      const urlParams = new URLSearchParams(queryString);
      var day = urlParams.get("woe_day");
      if (day === null) {
        console.log("woe_day null");
        day = dates_woe[0].date;
      }
      return day;
    }
    function compare_player(target_id, type) {
      switch (type) {
        case "death":
          inertia.Inertia.get(
            `/rankings/woe-profile/${char_id}`,
            {
              assasin: target_id,
              woe_day: set_day()
            },
            {
              preserveState: true,
              preserveScroll: true,
              onSuccess: () => {
                modal.value = true;
              }
            }
          );
          break;
        case "kill":
          inertia.Inertia.get(
            `/rankings/woe-profile/${char_id}`,
            {
              victim: target_id,
              woe_day: set_day()
            },
            {
              preserveState: true,
              preserveScroll: true,
              onSuccess: () => {
                modal.value = true;
              }
            }
          );
          break;
      }
    }
    function get_skill_rank(skill_id) {
      const queryString = window.location.search;
      const urlParams = new URLSearchParams(queryString);
      var day = urlParams.get("woe_day");
      if (day === null) {
        console.log("woe_day null");
        day = dates_woe[0].date;
      }
      inertia.Inertia.get(
        `/rankings/woe-profile/${char_id}`,
        {
          sid: skill_id,
          woe_day: set_day()
        },
        {
          preserveState: true,
          preserveScroll: true,
          onSuccess: () => {
            modal_skill.value = true;
          }
        }
      );
    }
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<!--[-->`);
      _push(serverRenderer.ssrRenderComponent(_sfc_main$x, {
        title: "User Profile",
        dates_woe: vue.unref(dates_woe),
        filter_type: "woe-profile",
        char_id: vue.unref(basic_info)[0].char_id
      }, {
        default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${serverRenderer.ssrInterpolate(vue.unref(basic_info)[0].char_name)} <div class="flex" data-v-e7a1b8e6${_scopeId}><div class="w-1/3 flex flex-col items-center justify-center h-[13rem]" data-v-e7a1b8e6${_scopeId}><div data-v-e7a1b8e6${_scopeId}><span class="font-bold" data-v-e7a1b8e6${_scopeId}> Job:</span> ${serverRenderer.ssrInterpolate(vue.unref(get_job_name)(vue.unref(basic_info)[0].class))} <br data-v-e7a1b8e6${_scopeId}></div><div data-v-e7a1b8e6${_scopeId}><span class="font-bold" data-v-e7a1b8e6${_scopeId}>Mas HP: </span>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(vue.unref(basic_info)[0].max_hp))} <br data-v-e7a1b8e6${_scopeId}></div><div data-v-e7a1b8e6${_scopeId}><span class="font-bold" data-v-e7a1b8e6${_scopeId}>Max SP: </span>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(vue.unref(basic_info)[0].max_sp))}</div></div><div class="w-1/3 flex items-center justify-center h-[13rem]" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}><img class=""${serverRenderer.ssrRenderAttr("src", `/rochar/character/${vue.unref(basic_info)[0].name}`)} alt="" data-v-e7a1b8e6${_scopeId}></div><div data-v-e7a1b8e6${_scopeId}><span class="font-bold" data-v-e7a1b8e6${_scopeId}>Name: </span> ${serverRenderer.ssrInterpolate(vue.unref(basic_info)[0].name)}</div></div><div class="w-1/3 flex flex-col items-center justify-center h-[13rem]" data-v-e7a1b8e6${_scopeId}><img class="mr-2"${serverRenderer.ssrRenderAttr("src", `/${url.value[vue.unref(basic_info)[0].guild_id]} `)} alt="" data-v-e7a1b8e6${_scopeId}><div data-v-e7a1b8e6${_scopeId}><span class="font-bold" data-v-e7a1b8e6${_scopeId}>Guild: </span> ${serverRenderer.ssrInterpolate(vue.unref(basic_info)[0].gName)} <br data-v-e7a1b8e6${_scopeId}></div><div data-v-e7a1b8e6${_scopeId}><span class="font-bold" data-v-e7a1b8e6${_scopeId}>Rank Elo: </span> ${serverRenderer.ssrInterpolate(vue.unref(basic_info)[0].gName)} <br data-v-e7a1b8e6${_scopeId}></div></div></div><div class="w-full flex" data-v-e7a1b8e6${_scopeId}><div class="flex w-1/2 p-5" data-v-e7a1b8e6${_scopeId}><div class="w-full" data-v-e7a1b8e6${_scopeId}><table class="w-full" data-v-e7a1b8e6${_scopeId}><thead class="bg-[#0d0d0d] border-b" data-v-e7a1b8e6${_scopeId}><th colspan="3" class="p-4" data-v-e7a1b8e6${_scopeId}>General Standings</th></thead><thead class="bg-[#0d0d0d]" data-v-e7a1b8e6${_scopeId}><th class="p-2" data-v-e7a1b8e6${_scopeId}><div class="flex items-center justify-center" data-v-e7a1b8e6${_scopeId}><img class="mr-2" src="/img/item/7427.gif" alt="" data-v-e7a1b8e6${_scopeId}> Wins </div></th><th class="p-2" data-v-e7a1b8e6${_scopeId}><div class="flex items-center justify-center" data-v-e7a1b8e6${_scopeId}><img class="mr-2" src="/img/item/7428.gif" alt="" data-v-e7a1b8e6${_scopeId}> Tie </div></th><th class="p-2" data-v-e7a1b8e6${_scopeId}><div class="flex items-center justify-center" data-v-e7a1b8e6${_scopeId}><img class="mr-2" src="/img/item/7426.gif" alt="" data-v-e7a1b8e6${_scopeId}><p data-v-e7a1b8e6${_scopeId}>Lost</p></div></th></thead><tbody data-v-e7a1b8e6${_scopeId}><tr class="" data-v-e7a1b8e6${_scopeId}><td class="p-3 text-center" data-v-e7a1b8e6${_scopeId}>0</td><td class="p-3 text-center" data-v-e7a1b8e6${_scopeId}>0</td><td class="p-3 text-center" data-v-e7a1b8e6${_scopeId}>0</td></tr></tbody></table></div></div><div class="flex w-1/2 p-5" data-v-e7a1b8e6${_scopeId}><div class="w-full" data-v-e7a1b8e6${_scopeId}><table class="w-full" data-v-e7a1b8e6${_scopeId}><thead class="bg-[#0d0d0d] border-b" data-v-e7a1b8e6${_scopeId}><th colspan="3" class="p-4" data-v-e7a1b8e6${_scopeId}>Damage</th></thead><thead class="bg-[#0d0d0d]" data-v-e7a1b8e6${_scopeId}><th class="p-2" data-v-e7a1b8e6${_scopeId}><div class="flex items-center justify-center" data-v-e7a1b8e6${_scopeId}><img class="mr-2" src="/img/item/1228.png" alt="" data-v-e7a1b8e6${_scopeId}> Top </div></th><th class="p-2" data-v-e7a1b8e6${_scopeId}><div class="flex items-center justify-center" data-v-e7a1b8e6${_scopeId}><img class="mr-2" src="/img/item/1281.png" alt="" data-v-e7a1b8e6${_scopeId}> Done </div></th><th class="p-2" data-v-e7a1b8e6${_scopeId}><div class="flex items-center justify-center" data-v-e7a1b8e6${_scopeId}><img class="mr-2" src="/img/item/7024.png" alt="" data-v-e7a1b8e6${_scopeId}> Recv </div></th></thead><tbody data-v-e7a1b8e6${_scopeId}><tr class="" data-v-e7a1b8e6${_scopeId}><td class="p-3 text-center" data-v-e7a1b8e6${_scopeId}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
              vue.unref(basic_info)[0].top_damage
            ))}</td><td class="p-3 text-center" data-v-e7a1b8e6${_scopeId}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
              vue.unref(basic_info)[0].damage_done
            ))}</td><td class="p-3 text-center" data-v-e7a1b8e6${_scopeId}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
              vue.unref(basic_info)[0].damage_received
            ))}</td></tr></tbody></table></div></div></div><div class="p-5" data-v-e7a1b8e6${_scopeId}><table class="w-full" data-v-e7a1b8e6${_scopeId}><thead class="bg-[#0d0d0d]" data-v-e7a1b8e6${_scopeId}><th colspan="3" class="p-4 border-b" data-v-e7a1b8e6${_scopeId}>Usable items</th></thead><tbody data-v-e7a1b8e6${_scopeId}><tr class="spaceUnder hover:bg-gray-800/40 hover:transition hover:duration-150" data-v-e7a1b8e6${_scopeId}><td class="w-1/3 p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}><img src="/img/item/522.png" alt="" class="mr-2" data-v-e7a1b8e6${_scopeId}><div data-v-e7a1b8e6${_scopeId}><span class="font-bold" data-v-e7a1b8e6${_scopeId}>HP: </span> ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
              vue.unref(basic_info)[0].hp_heal_potions
            ))}</div></div></td><td class="w-1/3 p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}><img src="/img/item/505.png" alt="" class="mr-2" data-v-e7a1b8e6${_scopeId}><div data-v-e7a1b8e6${_scopeId}><span class="font-bold" data-v-e7a1b8e6${_scopeId}> SP: </span> ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
              vue.unref(basic_info)[0].sp_heal_potions
            ))}</div></div></td><td class="w-1/3 p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}><img src="/img/item/676.png" alt="" class="mr-2" data-v-e7a1b8e6${_scopeId}><div data-v-e7a1b8e6${_scopeId}><span class="font-bold" data-v-e7a1b8e6${_scopeId}> Zeny: </span> ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(vue.unref(basic_info)[0].zeny_used))}</div></div></td></tr><tr class="spaceUnder hover:bg-gray-800/40 hover:transition hover:duration-150" data-v-e7a1b8e6${_scopeId}><td class="w-1/3 p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}><img src="/img/item/716.png" alt="" class="mr-2" data-v-e7a1b8e6${_scopeId}><div data-v-e7a1b8e6${_scopeId}><span class="font-bold" data-v-e7a1b8e6${_scopeId}> Gems: </span> ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
              vue.unref(basic_info)[0].red_gemstones
            ))}</div></div></td><td class="w-1/3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}><img src="/img/item/717.png" alt="" class="mr-2" data-v-e7a1b8e6${_scopeId}><div data-v-e7a1b8e6${_scopeId}><span class="font-bold" data-v-e7a1b8e6${_scopeId}>Gems: </span> ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
              vue.unref(basic_info)[0].blue_gemstones
            ))}</div></div></td><td class="w-1/3 p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}><img src="/img/item/715.png" alt="" class="mr-2" data-v-e7a1b8e6${_scopeId}><div data-v-e7a1b8e6${_scopeId}><span class="font-bold" data-v-e7a1b8e6${_scopeId}> Gems: </span> ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
              vue.unref(basic_info)[0].yellow_gemstones
            ))}</div></div></td></tr><tr class="spaceUnder hover:bg-gray-800/40 hover:transition hover:duration-150" data-v-e7a1b8e6${_scopeId}><td class="w-1/3 p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}><img src="/img/item/1752.png" alt="" class="mr-2" data-v-e7a1b8e6${_scopeId}><div data-v-e7a1b8e6${_scopeId}><span class="font-bold" data-v-e7a1b8e6${_scopeId}> Arrows: </span> ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(vue.unref(basic_info)[0].ammo_used))}</div></div></td><td class="w-1/3 p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}><img src="/img/item/7136.png" alt="" class="mr-2" data-v-e7a1b8e6${_scopeId}><div data-v-e7a1b8e6${_scopeId}><span class="font-bold" data-v-e7a1b8e6${_scopeId}> Bottles: </span> ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
              vue.unref(basic_info)[0].acid_demostration
            ))}</div></div></td><td class="w-1/3 p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}><img src="/img/item/678.png" alt="" class="mr-2" data-v-e7a1b8e6${_scopeId}><div data-v-e7a1b8e6${_scopeId}><span class="font-bold" data-v-e7a1b8e6${_scopeId}> Bottles: </span> ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
              vue.unref(basic_info)[0].poison_bottles
            ))}</div></div></td></tr></tbody></table></div><div class="p-5 flex" data-v-e7a1b8e6${_scopeId}><table class="w-1/2 mt-5" data-v-e7a1b8e6${_scopeId}><thead class="bg-[#0d0d0d] border-b" data-v-e7a1b8e6${_scopeId}><th colspan="4" class="p-4" data-v-e7a1b8e6${_scopeId}>Destroyed Structures</th></thead><tbody class="" data-v-e7a1b8e6${_scopeId}><tr class="spaceUnder" data-v-e7a1b8e6${_scopeId}><td class="w-1/4 p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}><img src="/img/item/714.png" alt="" class="mr-2" data-v-e7a1b8e6${_scopeId}><div data-v-e7a1b8e6${_scopeId}><span class="font-bold" data-v-e7a1b8e6${_scopeId}> Emperium: </span> ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
              vue.unref(basic_info)[0].cq_emperium_kill + vue.unref(basic_info)[0].cs_emperium_kill + vue.unref(basic_info)[0].dte_emperium_kill
            ))}</div></div></td><td class="w-1/4 p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}><img src="/img/item/14287.gif" alt="" class="mr-2" data-v-e7a1b8e6${_scopeId}><div data-v-e7a1b8e6${_scopeId}><span class="font-bold" data-v-e7a1b8e6${_scopeId}> Barricade: </span> ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
              vue.unref(basic_info)[0].cq_barricade_kill + vue.unref(basic_info)[0].cs_barricade_kill
            ))}</div></div></td><td class="w-1/4 p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}><img src="/img/item/7839.gif" alt="" class="mr-2" data-v-e7a1b8e6${_scopeId}><div data-v-e7a1b8e6${_scopeId}><span class="font-bold" data-v-e7a1b8e6${_scopeId}> G. Stone: </span> ${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(
              vue.unref(basic_info)[0].cq_gstone_kill + vue.unref(basic_info)[0].cs_gstone_kill
            ))}</div></div></td></tr></tbody></table></div><div class="p-5" data-v-e7a1b8e6${_scopeId}><div class="" data-v-e7a1b8e6${_scopeId}><h1 class="text-xl font-bold mb-5" data-v-e7a1b8e6${_scopeId}>Kill Log - WoE</h1>`);
            _push2(serverRenderer.ssrRenderComponent(JetButton, {
              class: "bg-sky-500 hover:bg-sky-700 mb-5",
              onClick: ($event) => show_kill_log.value = !show_kill_log.value
            }, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Show More `);
                } else {
                  return [
                    vue.createTextVNode(" Show More ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div>`);
            if (show_kill_log.value) {
              _push2(`<table class="w-full" data-v-e7a1b8e6${_scopeId}><thead data-v-e7a1b8e6${_scopeId}><tr class="spaceUnder font-bold bg-[#0d0d0d] border-1" data-v-e7a1b8e6${_scopeId}><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}>Date/Time</div></td><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}>P</div></td><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}>C</div></td><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}>Victim</div></td><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}>Map</div></td><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}>Attack</div></td></tr></thead><tbody class="" data-v-e7a1b8e6${_scopeId}><!--[-->`);
              serverRenderer.ssrRenderList(vue.unref(kill_log), (kill) => {
                _push2(`<tr class="spaceUnder hover:bg-gray-800/40 hover:transition hover:duration-150" data-v-e7a1b8e6${_scopeId}><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}>${serverRenderer.ssrInterpolate(kill.time)}</div></td><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}>`);
                _push2(serverRenderer.ssrRenderComponent(vue.unref(inertiaVue3.Link), {
                  href: _ctx.route("woe.profile", kill.killed_id)
                }, {
                  default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                    if (_push3) {
                      _push3(`<img src="/img/viewprofile.png" data-v-e7a1b8e6${_scopeId2}>`);
                    } else {
                      return [
                        vue.createVNode("img", { src: "/img/viewprofile.png" })
                      ];
                    }
                  }),
                  _: 2
                }, _parent2, _scopeId));
                _push2(`</div></td><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center cursor-pointer" data-v-e7a1b8e6${_scopeId}><img src="/img/compare.png" alt="" data-v-e7a1b8e6${_scopeId}></div></td><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}><img${serverRenderer.ssrRenderAttr("src", `/rochar/characterhead/${kill.killed_id}`)} alt="" data-v-e7a1b8e6${_scopeId}><div class="flex items-center" data-v-e7a1b8e6${_scopeId}><span class="text-[#04aaff]" data-v-e7a1b8e6${_scopeId}>${serverRenderer.ssrInterpolate(kill.killed)}</span> (${serverRenderer.ssrInterpolate(vue.unref(get_job_name)(kill.class))}) </div></div></td><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}>${serverRenderer.ssrInterpolate(kill.map)}</div></td><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}><img${serverRenderer.ssrRenderAttr("src", `/img/skill_db/${kill.skill}.png`)} alt="" srcset="" data-v-e7a1b8e6${_scopeId}></div></td></tr>`);
              });
              _push2(`<!--]--></tbody></table>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`</div><div class="p-5" data-v-e7a1b8e6${_scopeId}><div class="" data-v-e7a1b8e6${_scopeId}><h1 class="text-xl font-bold mb-5" data-v-e7a1b8e6${_scopeId}>Death Log - woE</h1>`);
            _push2(serverRenderer.ssrRenderComponent(JetButton, {
              class: "bg-sky-500 hover:bg-sky-700 mb-5",
              onClick: ($event) => show_death_log.value = !show_death_log.value
            }, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Show More `);
                } else {
                  return [
                    vue.createTextVNode(" Show More ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div>`);
            if (show_death_log.value) {
              _push2(`<table class="w-full" data-v-e7a1b8e6${_scopeId}><thead data-v-e7a1b8e6${_scopeId}><tr class="spaceUnder font-bold bg-[#0d0d0d] border-1" data-v-e7a1b8e6${_scopeId}><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}>Date/Time</div></td><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}>P</div></td><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}>C</div></td><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}>Killer</div></td><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}>Map</div></td><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}>Attack</div></td></tr></thead><tbody class="" data-v-e7a1b8e6${_scopeId}><!--[-->`);
              serverRenderer.ssrRenderList(vue.unref(death_log), (death) => {
                _push2(`<tr class="spaceUnder hover:bg-gray-800/40 hover:transition hover:duration-150" data-v-e7a1b8e6${_scopeId}><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}>${serverRenderer.ssrInterpolate(death.time)}</div></td><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}>`);
                _push2(serverRenderer.ssrRenderComponent(vue.unref(inertiaVue3.Link), {
                  href: _ctx.route(
                    "woe.profile",
                    death.killer_id
                  )
                }, {
                  default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                    if (_push3) {
                      _push3(`<img src="/img/viewprofile.png" data-v-e7a1b8e6${_scopeId2}>`);
                    } else {
                      return [
                        vue.createVNode("img", { src: "/img/viewprofile.png" })
                      ];
                    }
                  }),
                  _: 2
                }, _parent2, _scopeId));
                _push2(`</div></td><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center cursor-pointer" data-v-e7a1b8e6${_scopeId}><img src="/img/compare.png" alt="" data-v-e7a1b8e6${_scopeId}></div></td><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}><img${serverRenderer.ssrRenderAttr("src", `/rochar/characterhead/${death.killer_id}`)} alt="" data-v-e7a1b8e6${_scopeId}><div data-v-e7a1b8e6${_scopeId}><span class="text-[#04aaff]" data-v-e7a1b8e6${_scopeId}>${serverRenderer.ssrInterpolate(death.killer)}</span> (${serverRenderer.ssrInterpolate(vue.unref(get_job_name)(death.class))}) </div></div></td><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}>${serverRenderer.ssrInterpolate(vue.unref(mapname2bgname)(death.map))}</div></td><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}><img${serverRenderer.ssrRenderAttr("src", `/img/skill_db/${death.skill}.png`)} alt="" srcset="" data-v-e7a1b8e6${_scopeId}></div></td></tr>`);
              });
              _push2(`<!--]--></tbody></table>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`</div><div class="p-5" data-v-e7a1b8e6${_scopeId}><table class="w-full" data-v-e7a1b8e6${_scopeId}><thead class="bg-[#0d0d0d] border-b" data-v-e7a1b8e6${_scopeId}><th colspan="3" class="p-4" data-v-e7a1b8e6${_scopeId}>Top 10 Casted Skills</th></thead><thead data-v-e7a1b8e6${_scopeId}><tr class="spaceUnder font-bold bg-[#0d0d0d] border-1" data-v-e7a1b8e6${_scopeId}><td class="w-1/4 p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}>Skill Name</div></td><td class="w-1/4 p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}>T</div></td><td class="w-1/4 p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}>Count</div></td></tr></thead><tbody class="" data-v-e7a1b8e6${_scopeId}><!--[-->`);
            serverRenderer.ssrRenderList(vue.unref(skill_count), (skill) => {
              _push2(`<tr class="spaceUnder hover:bg-gray-800/40 hover:transition hover:duration-150" data-v-e7a1b8e6${_scopeId}><td class="w-1/4 p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}><div data-v-e7a1b8e6${_scopeId}><img${serverRenderer.ssrRenderAttr("src", `/img/skill_db/${skill.id}.png`)} alt="" class="mr-5" data-v-e7a1b8e6${_scopeId}></div> ${serverRenderer.ssrInterpolate(vue.unref(get_skill_name)(skill.id))}</div></td><td class="w-1/4 p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center cursor-pointer" data-v-e7a1b8e6${_scopeId}><img${serverRenderer.ssrRenderAttr("src", `/img/compare.png`)} alt="" data-v-e7a1b8e6${_scopeId}></div></td><td class="w-1/4 p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(skill.count))}</div></td></tr>`);
            });
            _push2(`<!--]--></tbody></table></div>`);
          } else {
            return [
              vue.createTextVNode(vue.toDisplayString(vue.unref(basic_info)[0].char_name) + " ", 1),
              vue.createVNode("div", { class: "flex" }, [
                vue.createVNode("div", { class: "w-1/3 flex flex-col items-center justify-center h-[13rem]" }, [
                  vue.createVNode("div", null, [
                    vue.createVNode("span", { class: "font-bold" }, " Job:"),
                    vue.createTextVNode(" " + vue.toDisplayString(vue.unref(get_job_name)(vue.unref(basic_info)[0].class)) + " ", 1),
                    vue.createVNode("br")
                  ]),
                  vue.createVNode("div", null, [
                    vue.createVNode("span", { class: "font-bold" }, "Mas HP: "),
                    vue.createTextVNode(vue.toDisplayString(vue.unref(getFormatNumber)(vue.unref(basic_info)[0].max_hp)) + " ", 1),
                    vue.createVNode("br")
                  ]),
                  vue.createVNode("div", null, [
                    vue.createVNode("span", { class: "font-bold" }, "Max SP: "),
                    vue.createTextVNode(vue.toDisplayString(vue.unref(getFormatNumber)(vue.unref(basic_info)[0].max_sp)), 1)
                  ])
                ]),
                vue.createVNode("div", { class: "w-1/3 flex items-center justify-center h-[13rem]" }, [
                  vue.createVNode("div", { class: "flex justify-center" }, [
                    vue.createVNode("img", {
                      class: "",
                      src: `/rochar/character/${vue.unref(basic_info)[0].name}`,
                      alt: ""
                    }, null, 8, ["src"])
                  ]),
                  vue.createVNode("div", null, [
                    vue.createVNode("span", { class: "font-bold" }, "Name: "),
                    vue.createTextVNode(" " + vue.toDisplayString(vue.unref(basic_info)[0].name), 1)
                  ])
                ]),
                vue.createVNode("div", { class: "w-1/3 flex flex-col items-center justify-center h-[13rem]" }, [
                  vue.createVNode("img", {
                    class: "mr-2",
                    src: `/${url.value[vue.unref(basic_info)[0].guild_id]} `,
                    alt: ""
                  }, null, 8, ["src"]),
                  vue.createVNode("div", null, [
                    vue.createVNode("span", { class: "font-bold" }, "Guild: "),
                    vue.createTextVNode(" " + vue.toDisplayString(vue.unref(basic_info)[0].gName) + " ", 1),
                    vue.createVNode("br")
                  ]),
                  vue.createVNode("div", null, [
                    vue.createVNode("span", { class: "font-bold" }, "Rank Elo: "),
                    vue.createTextVNode(" " + vue.toDisplayString(vue.unref(basic_info)[0].gName) + " ", 1),
                    vue.createVNode("br")
                  ])
                ])
              ]),
              vue.createVNode("div", { class: "w-full flex" }, [
                vue.createVNode("div", { class: "flex w-1/2 p-5" }, [
                  vue.createVNode("div", { class: "w-full" }, [
                    vue.createVNode("table", { class: "w-full" }, [
                      vue.createVNode("thead", { class: "bg-[#0d0d0d] border-b" }, [
                        vue.createVNode("th", {
                          colspan: "3",
                          class: "p-4"
                        }, "General Standings")
                      ]),
                      vue.createVNode("thead", { class: "bg-[#0d0d0d]" }, [
                        vue.createVNode("th", { class: "p-2" }, [
                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                            vue.createVNode("img", {
                              class: "mr-2",
                              src: "/img/item/7427.gif",
                              alt: ""
                            }),
                            vue.createTextVNode(" Wins ")
                          ])
                        ]),
                        vue.createVNode("th", { class: "p-2" }, [
                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                            vue.createVNode("img", {
                              class: "mr-2",
                              src: "/img/item/7428.gif",
                              alt: ""
                            }),
                            vue.createTextVNode(" Tie ")
                          ])
                        ]),
                        vue.createVNode("th", { class: "p-2" }, [
                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                            vue.createVNode("img", {
                              class: "mr-2",
                              src: "/img/item/7426.gif",
                              alt: ""
                            }),
                            vue.createVNode("p", null, "Lost")
                          ])
                        ])
                      ]),
                      vue.createVNode("tbody", null, [
                        vue.createVNode("tr", { class: "" }, [
                          vue.createVNode("td", { class: "p-3 text-center" }, "0"),
                          vue.createVNode("td", { class: "p-3 text-center" }, "0"),
                          vue.createVNode("td", { class: "p-3 text-center" }, "0")
                        ])
                      ])
                    ])
                  ])
                ]),
                vue.createVNode("div", { class: "flex w-1/2 p-5" }, [
                  vue.createVNode("div", { class: "w-full" }, [
                    vue.createVNode("table", { class: "w-full" }, [
                      vue.createVNode("thead", { class: "bg-[#0d0d0d] border-b" }, [
                        vue.createVNode("th", {
                          colspan: "3",
                          class: "p-4"
                        }, "Damage")
                      ]),
                      vue.createVNode("thead", { class: "bg-[#0d0d0d]" }, [
                        vue.createVNode("th", { class: "p-2" }, [
                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                            vue.createVNode("img", {
                              class: "mr-2",
                              src: "/img/item/1228.png",
                              alt: ""
                            }),
                            vue.createTextVNode(" Top ")
                          ])
                        ]),
                        vue.createVNode("th", { class: "p-2" }, [
                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                            vue.createVNode("img", {
                              class: "mr-2",
                              src: "/img/item/1281.png",
                              alt: ""
                            }),
                            vue.createTextVNode(" Done ")
                          ])
                        ]),
                        vue.createVNode("th", { class: "p-2" }, [
                          vue.createVNode("div", { class: "flex items-center justify-center" }, [
                            vue.createVNode("img", {
                              class: "mr-2",
                              src: "/img/item/7024.png",
                              alt: ""
                            }),
                            vue.createTextVNode(" Recv ")
                          ])
                        ])
                      ]),
                      vue.createVNode("tbody", null, [
                        vue.createVNode("tr", { class: "" }, [
                          vue.createVNode("td", { class: "p-3 text-center" }, vue.toDisplayString(vue.unref(getFormatNumber)(
                            vue.unref(basic_info)[0].top_damage
                          )), 1),
                          vue.createVNode("td", { class: "p-3 text-center" }, vue.toDisplayString(vue.unref(getFormatNumber)(
                            vue.unref(basic_info)[0].damage_done
                          )), 1),
                          vue.createVNode("td", { class: "p-3 text-center" }, vue.toDisplayString(vue.unref(getFormatNumber)(
                            vue.unref(basic_info)[0].damage_received
                          )), 1)
                        ])
                      ])
                    ])
                  ])
                ])
              ]),
              vue.createVNode("div", { class: "p-5" }, [
                vue.createVNode("table", { class: "w-full" }, [
                  vue.createVNode("thead", { class: "bg-[#0d0d0d]" }, [
                    vue.createVNode("th", {
                      colspan: "3",
                      class: "p-4 border-b"
                    }, "Usable items")
                  ]),
                  vue.createVNode("tbody", null, [
                    vue.createVNode("tr", { class: "spaceUnder hover:bg-gray-800/40 hover:transition hover:duration-150" }, [
                      vue.createVNode("td", { class: "w-1/3 p-3" }, [
                        vue.createVNode("div", { class: "flex justify-center" }, [
                          vue.createVNode("img", {
                            src: "/img/item/522.png",
                            alt: "",
                            class: "mr-2"
                          }),
                          vue.createVNode("div", null, [
                            vue.createVNode("span", { class: "font-bold" }, "HP: "),
                            vue.createTextVNode(" " + vue.toDisplayString(vue.unref(getFormatNumber)(
                              vue.unref(basic_info)[0].hp_heal_potions
                            )), 1)
                          ])
                        ])
                      ]),
                      vue.createVNode("td", { class: "w-1/3 p-3" }, [
                        vue.createVNode("div", { class: "flex justify-center" }, [
                          vue.createVNode("img", {
                            src: "/img/item/505.png",
                            alt: "",
                            class: "mr-2"
                          }),
                          vue.createVNode("div", null, [
                            vue.createVNode("span", { class: "font-bold" }, " SP: "),
                            vue.createTextVNode(" " + vue.toDisplayString(vue.unref(getFormatNumber)(
                              vue.unref(basic_info)[0].sp_heal_potions
                            )), 1)
                          ])
                        ])
                      ]),
                      vue.createVNode("td", { class: "w-1/3 p-3" }, [
                        vue.createVNode("div", { class: "flex justify-center" }, [
                          vue.createVNode("img", {
                            src: "/img/item/676.png",
                            alt: "",
                            class: "mr-2"
                          }),
                          vue.createVNode("div", null, [
                            vue.createVNode("span", { class: "font-bold" }, " Zeny: "),
                            vue.createTextVNode(" " + vue.toDisplayString(vue.unref(getFormatNumber)(vue.unref(basic_info)[0].zeny_used)), 1)
                          ])
                        ])
                      ])
                    ]),
                    vue.createVNode("tr", { class: "spaceUnder hover:bg-gray-800/40 hover:transition hover:duration-150" }, [
                      vue.createVNode("td", { class: "w-1/3 p-3" }, [
                        vue.createVNode("div", { class: "flex justify-center" }, [
                          vue.createVNode("img", {
                            src: "/img/item/716.png",
                            alt: "",
                            class: "mr-2"
                          }),
                          vue.createVNode("div", null, [
                            vue.createVNode("span", { class: "font-bold" }, " Gems: "),
                            vue.createTextVNode(" " + vue.toDisplayString(vue.unref(getFormatNumber)(
                              vue.unref(basic_info)[0].red_gemstones
                            )), 1)
                          ])
                        ])
                      ]),
                      vue.createVNode("td", { class: "w-1/3" }, [
                        vue.createVNode("div", { class: "flex justify-center" }, [
                          vue.createVNode("img", {
                            src: "/img/item/717.png",
                            alt: "",
                            class: "mr-2"
                          }),
                          vue.createVNode("div", null, [
                            vue.createVNode("span", { class: "font-bold" }, "Gems: "),
                            vue.createTextVNode(" " + vue.toDisplayString(vue.unref(getFormatNumber)(
                              vue.unref(basic_info)[0].blue_gemstones
                            )), 1)
                          ])
                        ])
                      ]),
                      vue.createVNode("td", { class: "w-1/3 p-3" }, [
                        vue.createVNode("div", { class: "flex justify-center" }, [
                          vue.createVNode("img", {
                            src: "/img/item/715.png",
                            alt: "",
                            class: "mr-2"
                          }),
                          vue.createVNode("div", null, [
                            vue.createVNode("span", { class: "font-bold" }, " Gems: "),
                            vue.createTextVNode(" " + vue.toDisplayString(vue.unref(getFormatNumber)(
                              vue.unref(basic_info)[0].yellow_gemstones
                            )), 1)
                          ])
                        ])
                      ])
                    ]),
                    vue.createVNode("tr", { class: "spaceUnder hover:bg-gray-800/40 hover:transition hover:duration-150" }, [
                      vue.createVNode("td", { class: "w-1/3 p-3" }, [
                        vue.createVNode("div", { class: "flex justify-center" }, [
                          vue.createVNode("img", {
                            src: "/img/item/1752.png",
                            alt: "",
                            class: "mr-2"
                          }),
                          vue.createVNode("div", null, [
                            vue.createVNode("span", { class: "font-bold" }, " Arrows: "),
                            vue.createTextVNode(" " + vue.toDisplayString(vue.unref(getFormatNumber)(vue.unref(basic_info)[0].ammo_used)), 1)
                          ])
                        ])
                      ]),
                      vue.createVNode("td", { class: "w-1/3 p-3" }, [
                        vue.createVNode("div", { class: "flex justify-center" }, [
                          vue.createVNode("img", {
                            src: "/img/item/7136.png",
                            alt: "",
                            class: "mr-2"
                          }),
                          vue.createVNode("div", null, [
                            vue.createVNode("span", { class: "font-bold" }, " Bottles: "),
                            vue.createTextVNode(" " + vue.toDisplayString(vue.unref(getFormatNumber)(
                              vue.unref(basic_info)[0].acid_demostration
                            )), 1)
                          ])
                        ])
                      ]),
                      vue.createVNode("td", { class: "w-1/3 p-3" }, [
                        vue.createVNode("div", { class: "flex justify-center" }, [
                          vue.createVNode("img", {
                            src: "/img/item/678.png",
                            alt: "",
                            class: "mr-2"
                          }),
                          vue.createVNode("div", null, [
                            vue.createVNode("span", { class: "font-bold" }, " Bottles: "),
                            vue.createTextVNode(" " + vue.toDisplayString(vue.unref(getFormatNumber)(
                              vue.unref(basic_info)[0].poison_bottles
                            )), 1)
                          ])
                        ])
                      ])
                    ])
                  ])
                ])
              ]),
              vue.createVNode("div", { class: "p-5 flex" }, [
                vue.createVNode("table", { class: "w-1/2 mt-5" }, [
                  vue.createVNode("thead", { class: "bg-[#0d0d0d] border-b" }, [
                    vue.createVNode("th", {
                      colspan: "4",
                      class: "p-4"
                    }, "Destroyed Structures")
                  ]),
                  vue.createVNode("tbody", { class: "" }, [
                    vue.createVNode("tr", { class: "spaceUnder" }, [
                      vue.createVNode("td", { class: "w-1/4 p-3" }, [
                        vue.createVNode("div", { class: "flex justify-center" }, [
                          vue.createVNode("img", {
                            src: "/img/item/714.png",
                            alt: "",
                            class: "mr-2"
                          }),
                          vue.createVNode("div", null, [
                            vue.createVNode("span", { class: "font-bold" }, " Emperium: "),
                            vue.createTextVNode(" " + vue.toDisplayString(vue.unref(getFormatNumber)(
                              vue.unref(basic_info)[0].cq_emperium_kill + vue.unref(basic_info)[0].cs_emperium_kill + vue.unref(basic_info)[0].dte_emperium_kill
                            )), 1)
                          ])
                        ])
                      ]),
                      vue.createVNode("td", { class: "w-1/4 p-3" }, [
                        vue.createVNode("div", { class: "flex justify-center" }, [
                          vue.createVNode("img", {
                            src: "/img/item/14287.gif",
                            alt: "",
                            class: "mr-2"
                          }),
                          vue.createVNode("div", null, [
                            vue.createVNode("span", { class: "font-bold" }, " Barricade: "),
                            vue.createTextVNode(" " + vue.toDisplayString(vue.unref(getFormatNumber)(
                              vue.unref(basic_info)[0].cq_barricade_kill + vue.unref(basic_info)[0].cs_barricade_kill
                            )), 1)
                          ])
                        ])
                      ]),
                      vue.createVNode("td", { class: "w-1/4 p-3" }, [
                        vue.createVNode("div", { class: "flex justify-center" }, [
                          vue.createVNode("img", {
                            src: "/img/item/7839.gif",
                            alt: "",
                            class: "mr-2"
                          }),
                          vue.createVNode("div", null, [
                            vue.createVNode("span", { class: "font-bold" }, " G. Stone: "),
                            vue.createTextVNode(" " + vue.toDisplayString(vue.unref(getFormatNumber)(
                              vue.unref(basic_info)[0].cq_gstone_kill + vue.unref(basic_info)[0].cs_gstone_kill
                            )), 1)
                          ])
                        ])
                      ])
                    ])
                  ])
                ])
              ]),
              vue.createVNode("div", { class: "p-5" }, [
                vue.createVNode("div", { class: "" }, [
                  vue.createVNode("h1", { class: "text-xl font-bold mb-5" }, "Kill Log - WoE"),
                  vue.createVNode(JetButton, {
                    class: "bg-sky-500 hover:bg-sky-700 mb-5",
                    onClick: ($event) => show_kill_log.value = !show_kill_log.value
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(" Show More ")
                    ]),
                    _: 1
                  }, 8, ["onClick"])
                ]),
                vue.createVNode(vue.Transition, {
                  name: "fade",
                  onEnter: _ctx.enter
                }, {
                  default: vue.withCtx(() => [
                    show_kill_log.value ? (vue.openBlock(), vue.createBlock("table", {
                      key: 0,
                      class: "w-full"
                    }, [
                      vue.createVNode("thead", null, [
                        vue.createVNode("tr", { class: "spaceUnder font-bold bg-[#0d0d0d] border-1" }, [
                          vue.createVNode("td", { class: "p-3" }, [
                            vue.createVNode("div", { class: "flex justify-center" }, "Date/Time")
                          ]),
                          vue.createVNode("td", { class: "p-3" }, [
                            vue.createVNode("div", { class: "flex justify-center" }, "P")
                          ]),
                          vue.createVNode("td", { class: "p-3" }, [
                            vue.createVNode("div", { class: "flex justify-center" }, "C")
                          ]),
                          vue.createVNode("td", { class: "p-3" }, [
                            vue.createVNode("div", { class: "flex justify-center" }, "Victim")
                          ]),
                          vue.createVNode("td", { class: "p-3" }, [
                            vue.createVNode("div", { class: "flex justify-center" }, "Map")
                          ]),
                          vue.createVNode("td", { class: "p-3" }, [
                            vue.createVNode("div", { class: "flex justify-center" }, "Attack")
                          ])
                        ])
                      ]),
                      vue.createVNode("tbody", { class: "" }, [
                        (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(vue.unref(kill_log), (kill) => {
                          return vue.openBlock(), vue.createBlock("tr", { class: "spaceUnder hover:bg-gray-800/40 hover:transition hover:duration-150" }, [
                            vue.createVNode("td", { class: "p-3" }, [
                              vue.createVNode("div", { class: "flex justify-center" }, vue.toDisplayString(kill.time), 1)
                            ]),
                            vue.createVNode("td", { class: "p-3" }, [
                              vue.createVNode("div", { class: "flex justify-center" }, [
                                vue.createVNode(vue.unref(inertiaVue3.Link), {
                                  href: _ctx.route("woe.profile", kill.killed_id)
                                }, {
                                  default: vue.withCtx(() => [
                                    vue.createVNode("img", { src: "/img/viewprofile.png" })
                                  ]),
                                  _: 2
                                }, 1032, ["href"])
                              ])
                            ]),
                            vue.createVNode("td", { class: "p-3" }, [
                              vue.createVNode("div", { class: "flex justify-center cursor-pointer" }, [
                                vue.createVNode("img", {
                                  src: "/img/compare.png",
                                  alt: "",
                                  onClick: ($event) => compare_player(
                                    kill.killed_id,
                                    "kill"
                                  )
                                }, null, 8, ["onClick"])
                              ])
                            ]),
                            vue.createVNode("td", { class: "p-3" }, [
                              vue.createVNode("div", { class: "flex justify-center" }, [
                                vue.createVNode("img", {
                                  src: `/rochar/characterhead/${kill.killed_id}`,
                                  alt: ""
                                }, null, 8, ["src"]),
                                vue.createVNode("div", { class: "flex items-center" }, [
                                  vue.createVNode("span", { class: "text-[#04aaff]" }, vue.toDisplayString(kill.killed), 1),
                                  vue.createTextVNode(" (" + vue.toDisplayString(vue.unref(get_job_name)(kill.class)) + ") ", 1)
                                ])
                              ])
                            ]),
                            vue.createVNode("td", { class: "p-3" }, [
                              vue.createVNode("div", { class: "flex justify-center" }, vue.toDisplayString(kill.map), 1)
                            ]),
                            vue.createVNode("td", { class: "p-3" }, [
                              vue.createVNode("div", { class: "flex justify-center" }, [
                                vue.createVNode("img", {
                                  src: `/img/skill_db/${kill.skill}.png`,
                                  alt: "",
                                  srcset: ""
                                }, null, 8, ["src"])
                              ])
                            ])
                          ]);
                        }), 256))
                      ])
                    ])) : vue.createCommentVNode("", true)
                  ]),
                  _: 1
                }, 8, ["onEnter"])
              ]),
              vue.createVNode("div", { class: "p-5" }, [
                vue.createVNode("div", { class: "" }, [
                  vue.createVNode("h1", { class: "text-xl font-bold mb-5" }, "Death Log - woE"),
                  vue.createVNode(JetButton, {
                    class: "bg-sky-500 hover:bg-sky-700 mb-5",
                    onClick: ($event) => show_death_log.value = !show_death_log.value
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(" Show More ")
                    ]),
                    _: 1
                  }, 8, ["onClick"])
                ]),
                vue.createVNode(vue.Transition, {
                  name: "fade",
                  onEnter: _ctx.enter
                }, {
                  default: vue.withCtx(() => [
                    show_death_log.value ? (vue.openBlock(), vue.createBlock("table", {
                      key: 0,
                      class: "w-full"
                    }, [
                      vue.createVNode("thead", null, [
                        vue.createVNode("tr", { class: "spaceUnder font-bold bg-[#0d0d0d] border-1" }, [
                          vue.createVNode("td", { class: "p-3" }, [
                            vue.createVNode("div", { class: "flex justify-center" }, "Date/Time")
                          ]),
                          vue.createVNode("td", { class: "p-3" }, [
                            vue.createVNode("div", { class: "flex justify-center" }, "P")
                          ]),
                          vue.createVNode("td", { class: "p-3" }, [
                            vue.createVNode("div", { class: "flex justify-center" }, "C")
                          ]),
                          vue.createVNode("td", { class: "p-3" }, [
                            vue.createVNode("div", { class: "flex justify-center" }, "Killer")
                          ]),
                          vue.createVNode("td", { class: "p-3" }, [
                            vue.createVNode("div", { class: "flex justify-center" }, "Map")
                          ]),
                          vue.createVNode("td", { class: "p-3" }, [
                            vue.createVNode("div", { class: "flex justify-center" }, "Attack")
                          ])
                        ])
                      ]),
                      vue.createVNode("tbody", { class: "" }, [
                        (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(vue.unref(death_log), (death) => {
                          return vue.openBlock(), vue.createBlock("tr", { class: "spaceUnder hover:bg-gray-800/40 hover:transition hover:duration-150" }, [
                            vue.createVNode("td", { class: "p-3" }, [
                              vue.createVNode("div", { class: "flex justify-center" }, vue.toDisplayString(death.time), 1)
                            ]),
                            vue.createVNode("td", { class: "p-3" }, [
                              vue.createVNode("div", { class: "flex justify-center" }, [
                                vue.createVNode(vue.unref(inertiaVue3.Link), {
                                  href: _ctx.route(
                                    "woe.profile",
                                    death.killer_id
                                  )
                                }, {
                                  default: vue.withCtx(() => [
                                    vue.createVNode("img", { src: "/img/viewprofile.png" })
                                  ]),
                                  _: 2
                                }, 1032, ["href"])
                              ])
                            ]),
                            vue.createVNode("td", { class: "p-3" }, [
                              vue.createVNode("div", { class: "flex justify-center cursor-pointer" }, [
                                vue.createVNode("img", {
                                  src: "/img/compare.png",
                                  alt: "",
                                  onClick: ($event) => compare_player(
                                    death.killer_id,
                                    "death"
                                  )
                                }, null, 8, ["onClick"])
                              ])
                            ]),
                            vue.createVNode("td", { class: "p-3" }, [
                              vue.createVNode("div", { class: "flex justify-center" }, [
                                vue.createVNode("img", {
                                  src: `/rochar/characterhead/${death.killer_id}`,
                                  alt: ""
                                }, null, 8, ["src"]),
                                vue.createVNode("div", null, [
                                  vue.createVNode("span", { class: "text-[#04aaff]" }, vue.toDisplayString(death.killer), 1),
                                  vue.createTextVNode(" (" + vue.toDisplayString(vue.unref(get_job_name)(death.class)) + ") ", 1)
                                ])
                              ])
                            ]),
                            vue.createVNode("td", { class: "p-3" }, [
                              vue.createVNode("div", { class: "flex justify-center" }, vue.toDisplayString(vue.unref(mapname2bgname)(death.map)), 1)
                            ]),
                            vue.createVNode("td", { class: "p-3" }, [
                              vue.createVNode("div", { class: "flex justify-center" }, [
                                vue.createVNode("img", {
                                  src: `/img/skill_db/${death.skill}.png`,
                                  alt: "",
                                  srcset: ""
                                }, null, 8, ["src"])
                              ])
                            ])
                          ]);
                        }), 256))
                      ])
                    ])) : vue.createCommentVNode("", true)
                  ]),
                  _: 1
                }, 8, ["onEnter"])
              ]),
              vue.createVNode("div", { class: "p-5" }, [
                vue.createVNode("table", { class: "w-full" }, [
                  vue.createVNode("thead", { class: "bg-[#0d0d0d] border-b" }, [
                    vue.createVNode("th", {
                      colspan: "3",
                      class: "p-4"
                    }, "Top 10 Casted Skills")
                  ]),
                  vue.createVNode("thead", null, [
                    vue.createVNode("tr", { class: "spaceUnder font-bold bg-[#0d0d0d] border-1" }, [
                      vue.createVNode("td", { class: "w-1/4 p-3" }, [
                        vue.createVNode("div", { class: "flex justify-center" }, "Skill Name")
                      ]),
                      vue.createVNode("td", { class: "w-1/4 p-3" }, [
                        vue.createVNode("div", { class: "flex justify-center" }, "T")
                      ]),
                      vue.createVNode("td", { class: "w-1/4 p-3" }, [
                        vue.createVNode("div", { class: "flex justify-center" }, "Count")
                      ])
                    ])
                  ]),
                  vue.createVNode("tbody", { class: "" }, [
                    (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(vue.unref(skill_count), (skill) => {
                      return vue.openBlock(), vue.createBlock("tr", { class: "spaceUnder hover:bg-gray-800/40 hover:transition hover:duration-150" }, [
                        vue.createVNode("td", { class: "w-1/4 p-3" }, [
                          vue.createVNode("div", { class: "flex justify-center" }, [
                            vue.createVNode("div", null, [
                              vue.createVNode("img", {
                                src: `/img/skill_db/${skill.id}.png`,
                                alt: "",
                                class: "mr-5"
                              }, null, 8, ["src"])
                            ]),
                            vue.createTextVNode(" " + vue.toDisplayString(vue.unref(get_skill_name)(skill.id)), 1)
                          ])
                        ]),
                        vue.createVNode("td", { class: "w-1/4 p-3" }, [
                          vue.createVNode("div", { class: "flex justify-center cursor-pointer" }, [
                            vue.createVNode("img", {
                              src: `/img/compare.png`,
                              alt: "",
                              onClick: ($event) => get_skill_rank(skill.id)
                            }, null, 8, ["src", "onClick"])
                          ])
                        ]),
                        vue.createVNode("td", { class: "w-1/4 p-3" }, [
                          vue.createVNode("div", { class: "flex justify-center" }, vue.toDisplayString(vue.unref(getFormatNumber)(skill.count)), 1)
                        ])
                      ]);
                    }), 256))
                  ])
                ])
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(serverRenderer.ssrRenderComponent(JetModalDialog, {
        show: modal.value,
        class: ["text-black", "w-[35rem]"],
        onClose: closeModal
      }, {
        title: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${serverRenderer.ssrInterpolate(vue.unref(comparative_name))} Log Comparative `);
          } else {
            return [
              vue.createTextVNode(vue.toDisplayString(vue.unref(comparative_name)) + " Log Comparative ", 1)
            ];
          }
        }),
        content: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<table class="w-full" data-v-e7a1b8e6${_scopeId}><thead data-v-e7a1b8e6${_scopeId}><tr class="spaceUnder font-bold bg-[#0d0d0d] border-1 text-white" data-v-e7a1b8e6${_scopeId}><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}>Date/Time</div></td><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}>P</div></td>`);
            if (vue.unref(compare_death_log)) {
              _push2(`<td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}>Killer</div></td>`);
            } else {
              _push2(`<td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}>Victim</div></td>`);
            }
            _push2(`<td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}>Map</div></td><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}>Attack</div></td></tr></thead><tbody class="" data-v-e7a1b8e6${_scopeId}>`);
            if (vue.unref(compare_death_log)) {
              _push2(`<!--[-->`);
              serverRenderer.ssrRenderList(vue.unref(compare_death_log), (death) => {
                _push2(`<tr class="spaceUnder" data-v-e7a1b8e6${_scopeId}><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}>${serverRenderer.ssrInterpolate(death.time)}</div></td><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}>`);
                _push2(serverRenderer.ssrRenderComponent(vue.unref(inertiaVue3.Link), {
                  href: _ctx.route("woe.profile", death.killer_id)
                }, {
                  default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                    if (_push3) {
                      _push3(`<img src="/img/viewprofile.png" data-v-e7a1b8e6${_scopeId2}>`);
                    } else {
                      return [
                        vue.createVNode("img", { src: "/img/viewprofile.png" })
                      ];
                    }
                  }),
                  _: 2
                }, _parent2, _scopeId));
                _push2(`</div></td><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}><img${serverRenderer.ssrRenderAttr("src", `/rochar/characterhead/${death.killer_id}`)} alt="" data-v-e7a1b8e6${_scopeId}><div data-v-e7a1b8e6${_scopeId}><span class="text-[#04aaff]" data-v-e7a1b8e6${_scopeId}>${serverRenderer.ssrInterpolate(death.killer)}</span> (${serverRenderer.ssrInterpolate(vue.unref(get_job_name)(death.class))}) </div></div></td><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}>${serverRenderer.ssrInterpolate(vue.unref(mapname2bgname)(death.map))}</div></td><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}><img${serverRenderer.ssrRenderAttr("src", `/img/skill_db/${death.skill}.png`)} alt="" srcset="" data-v-e7a1b8e6${_scopeId}></div></td></tr>`);
              });
              _push2(`<!--]-->`);
            } else {
              _push2(`<!--[-->`);
              serverRenderer.ssrRenderList(vue.unref(compare_kill_log), (kill) => {
                _push2(`<tr class="spaceUnder" data-v-e7a1b8e6${_scopeId}><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}>${serverRenderer.ssrInterpolate(kill.time)}</div></td><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}>`);
                _push2(serverRenderer.ssrRenderComponent(vue.unref(inertiaVue3.Link), {
                  href: _ctx.route("woe.profile", kill.killer_id)
                }, {
                  default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                    if (_push3) {
                      _push3(`<img src="/img/viewprofile.png" data-v-e7a1b8e6${_scopeId2}>`);
                    } else {
                      return [
                        vue.createVNode("img", { src: "/img/viewprofile.png" })
                      ];
                    }
                  }),
                  _: 2
                }, _parent2, _scopeId));
                _push2(`</div></td><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}><img${serverRenderer.ssrRenderAttr("src", `/rochar/characterhead/${kill.killer_id}`)} alt="" data-v-e7a1b8e6${_scopeId}><div data-v-e7a1b8e6${_scopeId}><span class="text-[#04aaff]" data-v-e7a1b8e6${_scopeId}>${serverRenderer.ssrInterpolate(kill.killed)}</span> (${serverRenderer.ssrInterpolate(vue.unref(get_job_name)(kill.class))}) </div></div></td><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}>${serverRenderer.ssrInterpolate(vue.unref(mapname2bgname)(kill.map))}</div></td><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}><img${serverRenderer.ssrRenderAttr("src", `/img/skill_db/${kill.skill}.png`)} alt="" srcset="" data-v-e7a1b8e6${_scopeId}></div></td></tr>`);
              });
              _push2(`<!--]-->`);
            }
            _push2(`</tbody></table>`);
          } else {
            return [
              vue.createVNode("table", { class: "w-full" }, [
                vue.createVNode("thead", null, [
                  vue.createVNode("tr", { class: "spaceUnder font-bold bg-[#0d0d0d] border-1 text-white" }, [
                    vue.createVNode("td", { class: "p-3" }, [
                      vue.createVNode("div", { class: "flex justify-center" }, "Date/Time")
                    ]),
                    vue.createVNode("td", { class: "p-3" }, [
                      vue.createVNode("div", { class: "flex justify-center" }, "P")
                    ]),
                    vue.unref(compare_death_log) ? (vue.openBlock(), vue.createBlock("td", {
                      key: 0,
                      class: "p-3"
                    }, [
                      vue.createVNode("div", { class: "flex justify-center" }, "Killer")
                    ])) : (vue.openBlock(), vue.createBlock("td", {
                      key: 1,
                      class: "p-3"
                    }, [
                      vue.createVNode("div", { class: "flex justify-center" }, "Victim")
                    ])),
                    vue.createVNode("td", { class: "p-3" }, [
                      vue.createVNode("div", { class: "flex justify-center" }, "Map")
                    ]),
                    vue.createVNode("td", { class: "p-3" }, [
                      vue.createVNode("div", { class: "flex justify-center" }, "Attack")
                    ])
                  ])
                ]),
                vue.createVNode("tbody", { class: "" }, [
                  vue.unref(compare_death_log) ? (vue.openBlock(true), vue.createBlock(vue.Fragment, { key: 0 }, vue.renderList(vue.unref(compare_death_log), (death) => {
                    return vue.openBlock(), vue.createBlock("tr", { class: "spaceUnder" }, [
                      vue.createVNode("td", { class: "p-3" }, [
                        vue.createVNode("div", { class: "flex justify-center" }, vue.toDisplayString(death.time), 1)
                      ]),
                      vue.createVNode("td", { class: "p-3" }, [
                        vue.createVNode("div", { class: "flex justify-center" }, [
                          vue.createVNode(vue.unref(inertiaVue3.Link), {
                            href: _ctx.route("woe.profile", death.killer_id)
                          }, {
                            default: vue.withCtx(() => [
                              vue.createVNode("img", { src: "/img/viewprofile.png" })
                            ]),
                            _: 2
                          }, 1032, ["href"])
                        ])
                      ]),
                      vue.createVNode("td", { class: "p-3" }, [
                        vue.createVNode("div", { class: "flex justify-center" }, [
                          vue.createVNode("img", {
                            src: `/rochar/characterhead/${death.killer_id}`,
                            alt: ""
                          }, null, 8, ["src"]),
                          vue.createVNode("div", null, [
                            vue.createVNode("span", { class: "text-[#04aaff]" }, vue.toDisplayString(death.killer), 1),
                            vue.createTextVNode(" (" + vue.toDisplayString(vue.unref(get_job_name)(death.class)) + ") ", 1)
                          ])
                        ])
                      ]),
                      vue.createVNode("td", { class: "p-3" }, [
                        vue.createVNode("div", { class: "flex justify-center" }, vue.toDisplayString(vue.unref(mapname2bgname)(death.map)), 1)
                      ]),
                      vue.createVNode("td", { class: "p-3" }, [
                        vue.createVNode("div", { class: "flex justify-center" }, [
                          vue.createVNode("img", {
                            src: `/img/skill_db/${death.skill}.png`,
                            alt: "",
                            srcset: ""
                          }, null, 8, ["src"])
                        ])
                      ])
                    ]);
                  }), 256)) : (vue.openBlock(true), vue.createBlock(vue.Fragment, { key: 1 }, vue.renderList(vue.unref(compare_kill_log), (kill) => {
                    return vue.openBlock(), vue.createBlock("tr", { class: "spaceUnder" }, [
                      vue.createVNode("td", { class: "p-3" }, [
                        vue.createVNode("div", { class: "flex justify-center" }, vue.toDisplayString(kill.time), 1)
                      ]),
                      vue.createVNode("td", { class: "p-3" }, [
                        vue.createVNode("div", { class: "flex justify-center" }, [
                          vue.createVNode(vue.unref(inertiaVue3.Link), {
                            href: _ctx.route("woe.profile", kill.killer_id)
                          }, {
                            default: vue.withCtx(() => [
                              vue.createVNode("img", { src: "/img/viewprofile.png" })
                            ]),
                            _: 2
                          }, 1032, ["href"])
                        ])
                      ]),
                      vue.createVNode("td", { class: "p-3" }, [
                        vue.createVNode("div", { class: "flex justify-center" }, [
                          vue.createVNode("img", {
                            src: `/rochar/characterhead/${kill.killer_id}`,
                            alt: ""
                          }, null, 8, ["src"]),
                          vue.createVNode("div", null, [
                            vue.createVNode("span", { class: "text-[#04aaff]" }, vue.toDisplayString(kill.killed), 1),
                            vue.createTextVNode(" (" + vue.toDisplayString(vue.unref(get_job_name)(kill.class)) + ") ", 1)
                          ])
                        ])
                      ]),
                      vue.createVNode("td", { class: "p-3" }, [
                        vue.createVNode("div", { class: "flex justify-center" }, vue.toDisplayString(vue.unref(mapname2bgname)(kill.map)), 1)
                      ]),
                      vue.createVNode("td", { class: "p-3" }, [
                        vue.createVNode("div", { class: "flex justify-center" }, [
                          vue.createVNode("img", {
                            src: `/img/skill_db/${kill.skill}.png`,
                            alt: "",
                            srcset: ""
                          }, null, 8, ["src"])
                        ])
                      ])
                    ]);
                  }), 256))
                ])
              ])
            ];
          }
        }),
        footer: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(JetButton, {
              class: "ml-3",
              onClick: closeModal
            }, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Close`);
                } else {
                  return [
                    vue.createTextVNode("Close")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(JetButton, {
                class: "ml-3",
                onClick: closeModal
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Close")
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(serverRenderer.ssrRenderComponent(JetModalDialog, {
        show: modal_skill.value,
        class: "text-black",
        onClose: closeModal
      }, {
        title: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` TOP 10 Rank Skill`);
          } else {
            return [
              vue.createTextVNode(" TOP 10 Rank Skill")
            ];
          }
        }),
        content: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<table class="w-full" data-v-e7a1b8e6${_scopeId}><thead data-v-e7a1b8e6${_scopeId}><tr class="spaceUnder font-bold bg-[#0d0d0d] border-1 text-white" data-v-e7a1b8e6${_scopeId}><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}>Pos</div></td><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}>P</div></td><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}>Caster</div></td><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}>Count</div></td><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}>Skill</div></td></tr></thead><tbody class="" data-v-e7a1b8e6${_scopeId}><!--[-->`);
            serverRenderer.ssrRenderList(vue.unref(skill_rank), (skill, index) => {
              _push2(`<tr class="spaceUnder" data-v-e7a1b8e6${_scopeId}>`);
              if (skill.char_id != null) {
                _push2(`<!--[--><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}>${serverRenderer.ssrInterpolate(index + 1)}</div></td><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}>`);
                _push2(serverRenderer.ssrRenderComponent(vue.unref(inertiaVue3.Link), {
                  href: _ctx.route("woe.profile", skill.char_id)
                }, {
                  default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                    if (_push3) {
                      _push3(`<img src="/img/viewprofile.png" data-v-e7a1b8e6${_scopeId2}>`);
                    } else {
                      return [
                        vue.createVNode("img", { src: "/img/viewprofile.png" })
                      ];
                    }
                  }),
                  _: 2
                }, _parent2, _scopeId));
                _push2(`</div></td><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}><div data-v-e7a1b8e6${_scopeId}><span class="text-[#04aaff]" data-v-e7a1b8e6${_scopeId}>${serverRenderer.ssrInterpolate(skill.name)}</span> (${serverRenderer.ssrInterpolate(vue.unref(get_job_name)(skill.class))}) </div></div></td><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}>${serverRenderer.ssrInterpolate(vue.unref(getFormatNumber)(skill.count))}</div></td><td class="p-3" data-v-e7a1b8e6${_scopeId}><div class="flex justify-center" data-v-e7a1b8e6${_scopeId}><img${serverRenderer.ssrRenderAttr("src", `/img/skill_db/${skill.id}.png`)} alt="" srcset="" data-v-e7a1b8e6${_scopeId}></div></td><!--]-->`);
              } else {
                _push2(`<!---->`);
              }
              _push2(`</tr>`);
            });
            _push2(`<!--]--></tbody></table>`);
          } else {
            return [
              vue.createVNode("table", { class: "w-full" }, [
                vue.createVNode("thead", null, [
                  vue.createVNode("tr", { class: "spaceUnder font-bold bg-[#0d0d0d] border-1 text-white" }, [
                    vue.createVNode("td", { class: "p-3" }, [
                      vue.createVNode("div", { class: "flex justify-center" }, "Pos")
                    ]),
                    vue.createVNode("td", { class: "p-3" }, [
                      vue.createVNode("div", { class: "flex justify-center" }, "P")
                    ]),
                    vue.createVNode("td", { class: "p-3" }, [
                      vue.createVNode("div", { class: "flex justify-center" }, "Caster")
                    ]),
                    vue.createVNode("td", { class: "p-3" }, [
                      vue.createVNode("div", { class: "flex justify-center" }, "Count")
                    ]),
                    vue.createVNode("td", { class: "p-3" }, [
                      vue.createVNode("div", { class: "flex justify-center" }, "Skill")
                    ])
                  ])
                ]),
                vue.createVNode("tbody", { class: "" }, [
                  (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(vue.unref(skill_rank), (skill, index) => {
                    return vue.openBlock(), vue.createBlock("tr", { class: "spaceUnder" }, [
                      skill.char_id != null ? (vue.openBlock(), vue.createBlock(vue.Fragment, { key: 0 }, [
                        vue.createVNode("td", { class: "p-3" }, [
                          vue.createVNode("div", { class: "flex justify-center" }, vue.toDisplayString(index + 1), 1)
                        ]),
                        vue.createVNode("td", { class: "p-3" }, [
                          vue.createVNode("div", { class: "flex justify-center" }, [
                            vue.createVNode(vue.unref(inertiaVue3.Link), {
                              href: _ctx.route("woe.profile", skill.char_id)
                            }, {
                              default: vue.withCtx(() => [
                                vue.createVNode("img", { src: "/img/viewprofile.png" })
                              ]),
                              _: 2
                            }, 1032, ["href"])
                          ])
                        ]),
                        vue.createVNode("td", { class: "p-3" }, [
                          vue.createVNode("div", { class: "flex justify-center" }, [
                            vue.createVNode("div", null, [
                              vue.createVNode("span", { class: "text-[#04aaff]" }, vue.toDisplayString(skill.name), 1),
                              vue.createTextVNode(" (" + vue.toDisplayString(vue.unref(get_job_name)(skill.class)) + ") ", 1)
                            ])
                          ])
                        ]),
                        vue.createVNode("td", { class: "p-3" }, [
                          vue.createVNode("div", { class: "flex justify-center" }, vue.toDisplayString(vue.unref(getFormatNumber)(skill.count)), 1)
                        ]),
                        vue.createVNode("td", { class: "p-3" }, [
                          vue.createVNode("div", { class: "flex justify-center" }, [
                            vue.createVNode("img", {
                              src: `/img/skill_db/${skill.id}.png`,
                              alt: "",
                              srcset: ""
                            }, null, 8, ["src"])
                          ])
                        ])
                      ], 64)) : vue.createCommentVNode("", true)
                    ]);
                  }), 256))
                ])
              ])
            ];
          }
        }),
        footer: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(JetButton, {
              class: "ml-3",
              onClick: closeModal
            }, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Close`);
                } else {
                  return [
                    vue.createTextVNode("Close")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(JetButton, {
                class: "ml-3",
                onClick: closeModal
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Close")
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<!--]-->`);
    };
  }
});
const _sfc_setup$c = _sfc_main$c.setup;
_sfc_main$c.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/UserProfile/Woe.vue");
  return _sfc_setup$c ? _sfc_setup$c(props, ctx) : void 0;
};
var Woe = /* @__PURE__ */ _export_sfc(_sfc_main$c, [["__scopeId", "data-v-e7a1b8e6"]]);
var Woe$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Woe
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$b = {
  components: {
    AppLayout,
    GamePanel: _sfc_main$J
  },
  setup() {
    const rankings_info = inertiaVue3.usePage().props.value.rankings_info;
    const vote_points = inertiaVue3.usePage().props.value.vote_points;
    const delay_expire = vue.computed(() => inertiaVue3.usePage().props.value.vote_delay);
    const date = new Date();
    const today = formatDate(date);
    function delay_diff(rank_id) {
      const timestamp = delay_expire.value.map((d2) => {
        if (rank_id == d2.rank_id) {
          const delay_expire2 = new Date(d2.delay_expire);
          const today2 = new Date();
          const diff = delay_expire2.getTime() - today2.getTime();
          return diff;
        }
      });
      return timestamp[rank_id];
    }
    function is_delayed(rank_id) {
      return delay_expire.value.some(
        (d2) => d2.rank_id == rank_id && d2.delay_expire > today
      );
    }
    function store(rank_id) {
      inertia.Inertia.post(route("vote4points.store"), {
        rank_id
      });
    }
    return {
      store,
      rankings_info,
      vote_points,
      delay_expire,
      is_delayed,
      delay_diff
    };
  }
};
function _sfc_ssrRender$2(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = vue.resolveComponent("app-layout");
  const _component_vue_countdown = vue.resolveComponent("vue-countdown");
  _push(serverRenderer.ssrRenderComponent(_component_app_layout, vue.mergeProps({ title: "Vote 4 Points" }, _attrs), {
    default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="py-12 h-screen"${_scopeId}><div class="max-w-7xl mx-auto sm:px-6 lg:px-8 mt-36"${_scopeId}><div class="bg-white overflow-hidden shadow-xl sm:rounded-lg"${_scopeId}><h1 class="text-center text-4xl font-bold p-4 text-black"${_scopeId}> Earn points for voting! </h1><div class="flex justify-center mb-4"${_scopeId}><img src="https://cdn.discordapp.com/attachments/902586549978423347/1085339717878431745/revenge.png" alt=""${_scopeId}></div><p class="italic text-center text-sm text-gray-400 w-1/2 mx-auto"${_scopeId}> Supporting the server has its rewards, when you click, you will be redirected to the chosen ranking. If validated, the voting point will be automatically awarded. <br${_scopeId}><br${_scopeId}><span class="text-gray-500"${_scopeId}> Now you have <span class="text-green-500"${_scopeId}>${serverRenderer.ssrInterpolate($setup.vote_points)}</span> points. </span></p><!--[-->`);
        serverRenderer.ssrRenderList($setup.rankings_info, (ranking, index) => {
          _push2(`<div class="my-5 flex animated fadeIn faster flex justify-center items-center outline-none focus:outline-none"${_scopeId}><div class="${serverRenderer.ssrRenderClass([{
            "bg-gray-200": $setup.is_delayed(ranking.id)
          }, "flex flex-col p-8 bg-white shadow-md hover:shodow-lg rounded-2xl"])}"${_scopeId}><div class="flex items-center justify-between"${_scopeId}><div class="flex items-center"${_scopeId}><img${serverRenderer.ssrRenderAttr("src", ranking.img_url)} class="mr-2"${_scopeId}><div class="flex flex-col ml-3"${_scopeId}><div class="font-medium leading-none text-bold"${_scopeId}>${serverRenderer.ssrInterpolate(ranking.name)}</div><p class="text-sm text-gray-600 leading-none mt-1"${_scopeId}> Help the server to keep growing, your vote is very important! </p></div></div>`);
          if ($setup.is_delayed(ranking.id)) {
            _push2(`<button disabled class="flex-no-shrink bg-gray-400 px-5 ml-4 py-2 text-sm shadow-sm font-medium tracking-wider border-2 border-gray-400 text-white rounded-full"${_scopeId}> Disabled <br${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(_component_vue_countdown, {
              time: $setup.delay_diff(ranking.id)
            }, {
              default: vue.withCtx(({ days, hours, minutes }, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`${serverRenderer.ssrInterpolate(days)}D ${serverRenderer.ssrInterpolate(hours)}:${serverRenderer.ssrInterpolate(minutes)}`);
                } else {
                  return [
                    vue.createTextVNode(vue.toDisplayString(days) + "D " + vue.toDisplayString(hours) + ":" + vue.toDisplayString(minutes), 1)
                  ];
                }
              }),
              _: 2
            }, _parent2, _scopeId));
            _push2(`</button>`);
          } else {
            _push2(`<a${serverRenderer.ssrRenderAttr("href", ranking.url)} target="_blank" class="flex-no-shrink cursor-pointer bg-green-500 px-5 ml-4 py-2 text-sm shadow-sm hover:shadow-lg font-medium tracking-wider border-2 border-green-500 text-white rounded-full"${_scopeId}> Vote Now! </a>`);
          }
          _push2(`</div></div></div>`);
        });
        _push2(`<!--]--></div></div></div>`);
      } else {
        return [
          vue.createVNode("div", { class: "py-12 h-screen" }, [
            vue.createVNode("div", { class: "max-w-7xl mx-auto sm:px-6 lg:px-8 mt-36" }, [
              vue.createVNode("div", { class: "bg-white overflow-hidden shadow-xl sm:rounded-lg" }, [
                vue.createVNode("h1", { class: "text-center text-4xl font-bold p-4 text-black" }, " Earn points for voting! "),
                vue.createVNode("div", { class: "flex justify-center mb-4" }, [
                  vue.createVNode("img", {
                    src: "https://cdn.discordapp.com/attachments/902586549978423347/1085339717878431745/revenge.png",
                    alt: ""
                  })
                ]),
                vue.createVNode("p", { class: "italic text-center text-sm text-gray-400 w-1/2 mx-auto" }, [
                  vue.createTextVNode(" Supporting the server has its rewards, when you click, you will be redirected to the chosen ranking. If validated, the voting point will be automatically awarded. "),
                  vue.createVNode("br"),
                  vue.createVNode("br"),
                  vue.createVNode("span", { class: "text-gray-500" }, [
                    vue.createTextVNode(" Now you have "),
                    vue.createVNode("span", { class: "text-green-500" }, vue.toDisplayString($setup.vote_points), 1),
                    vue.createTextVNode(" points. ")
                  ])
                ]),
                (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($setup.rankings_info, (ranking, index) => {
                  return vue.openBlock(), vue.createBlock("div", { class: "my-5 flex animated fadeIn faster flex justify-center items-center outline-none focus:outline-none" }, [
                    vue.createVNode("div", {
                      class: ["flex flex-col p-8 bg-white shadow-md hover:shodow-lg rounded-2xl", {
                        "bg-gray-200": $setup.is_delayed(ranking.id)
                      }]
                    }, [
                      vue.createVNode("div", { class: "flex items-center justify-between" }, [
                        vue.createVNode("div", { class: "flex items-center" }, [
                          vue.createVNode("img", {
                            src: ranking.img_url,
                            class: "mr-2"
                          }, null, 8, ["src"]),
                          vue.createVNode("div", { class: "flex flex-col ml-3" }, [
                            vue.createVNode("div", { class: "font-medium leading-none text-bold" }, vue.toDisplayString(ranking.name), 1),
                            vue.createVNode("p", { class: "text-sm text-gray-600 leading-none mt-1" }, " Help the server to keep growing, your vote is very important! ")
                          ])
                        ]),
                        $setup.is_delayed(ranking.id) ? (vue.openBlock(), vue.createBlock("button", {
                          key: 0,
                          disabled: "",
                          class: "flex-no-shrink bg-gray-400 px-5 ml-4 py-2 text-sm shadow-sm font-medium tracking-wider border-2 border-gray-400 text-white rounded-full"
                        }, [
                          vue.createTextVNode(" Disabled "),
                          vue.createVNode("br"),
                          vue.createVNode(_component_vue_countdown, {
                            time: $setup.delay_diff(ranking.id)
                          }, {
                            default: vue.withCtx(({ days, hours, minutes }) => [
                              vue.createTextVNode(vue.toDisplayString(days) + "D " + vue.toDisplayString(hours) + ":" + vue.toDisplayString(minutes), 1)
                            ]),
                            _: 2
                          }, 1032, ["time"])
                        ])) : (vue.openBlock(), vue.createBlock("a", {
                          key: 1,
                          href: ranking.url,
                          onClick: ($event) => $setup.store(ranking.id),
                          target: "_blank",
                          class: "flex-no-shrink cursor-pointer bg-green-500 px-5 ml-4 py-2 text-sm shadow-sm hover:shadow-lg font-medium tracking-wider border-2 border-green-500 text-white rounded-full"
                        }, " Vote Now! ", 8, ["href", "onClick"]))
                      ])
                    ], 2)
                  ]);
                }), 256))
              ])
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$b = _sfc_main$b.setup;
_sfc_main$b.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Vote4Points/Index.vue");
  return _sfc_setup$b ? _sfc_setup$b(props, ctx) : void 0;
};
var Index$6 = /* @__PURE__ */ _export_sfc(_sfc_main$b, [["ssrRender", _sfc_ssrRender$2]]);
var Index$7 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Index$6
}, Symbol.toStringTag, { value: "Module" }));
var WikiLayout_vue_vue_type_style_index_0_scoped_true_lang = "";
const _sfc_main$a = {
  __name: "WikiLayout",
  __ssrInlineRender: true,
  props: {
    title: {
      type: String,
      required: true
    }
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)} data-v-b820bf2e>`);
      _push(serverRenderer.ssrRenderComponent(vue.unref(inertiaVue3.Head), { title: __props.title }, null, _parent));
      _push(serverRenderer.ssrRenderComponent(JetBanner, null, null, _parent));
      _push(serverRenderer.ssrRenderComponent(xHeader, null, null, _parent));
      _push(`<div class="" data-v-b820bf2e><main class="mx-auto pt-14" data-v-b820bf2e><div class="w-full text-white" data-v-b820bf2e>`);
      serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</div></main>`);
      _push(serverRenderer.ssrRenderComponent(xFooter, null, null, _parent));
      _push(`</div></div>`);
    };
  }
};
const _sfc_setup$a = _sfc_main$a.setup;
_sfc_main$a.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Layouts/WikiLayout.vue");
  return _sfc_setup$a ? _sfc_setup$a(props, ctx) : void 0;
};
var WikiLayout = /* @__PURE__ */ _export_sfc(_sfc_main$a, [["__scopeId", "data-v-b820bf2e"]]);
const __default__$5 = vue.defineComponent({
  layout: WikiLayout
});
const _sfc_main$9 = /* @__PURE__ */ Object.assign(__default__$5, {
  __name: "Index",
  __ssrInlineRender: true,
  setup(__props) {
    vue.computed(() => inertiaVue3.usePage().props.value.wiki_post);
    const wiki_categories = inertiaVue3.usePage().props.value.wiki_categories;
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "h-screen flex" }, _attrs))}><aside class="bg-[#141414] w-1/6 flex flex-col h-full"><div class="h-full p-5 overflow-y-auto"><!--[-->`);
      serverRenderer.ssrRenderList(vue.unref(wiki_categories), (category) => {
        _push(`<div class="p-3 px-10 border-b border-black"><div class="font-semibold">${serverRenderer.ssrInterpolate(category.name)}</div><!--[-->`);
        serverRenderer.ssrRenderList(category.posts, (post) => {
          _push(`<div class="ml-5 flex justify-start w-4/5">`);
          _push(serverRenderer.ssrRenderComponent(vue.unref(inertiaVue3.Link), {
            href: `/wiki/${category.slug}/${post.slug}`
          }, {
            default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
              if (_push2) {
                _push2(` - ${serverRenderer.ssrInterpolate(post.title)}`);
              } else {
                return [
                  vue.createTextVNode(" - " + vue.toDisplayString(post.title), 1)
                ];
              }
            }),
            _: 2
          }, _parent));
          _push(`</div>`);
        });
        _push(`<!--]--></div>`);
      });
      _push(`<!--]--></div></aside><section class="w-5/6 p-3 h-full"><div class="container bg-[#191919] h-full rounded-md flex"><div></div></div></section></div>`);
    };
  }
});
const _sfc_setup$9 = _sfc_main$9.setup;
_sfc_main$9.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Wiki/Index.vue");
  return _sfc_setup$9 ? _sfc_setup$9(props, ctx) : void 0;
};
var Index$5 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": _sfc_main$9
}, Symbol.toStringTag, { value: "Module" }));
var WikiPage_vue_vue_type_style_index_0_lang = "";
const _sfc_main$8 = {
  __name: "WikiPage",
  __ssrInlineRender: true,
  props: ["post"],
  setup(__props) {
    const props = __props;
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<section${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "w-5/6 p-3 h-full" }, _attrs))}><div class="container bg-[#191919] h-full rounded-md flex"><div class="overflow-x-auto w-full">${props.post.body}</div></div></section>`);
    };
  }
};
const _sfc_setup$8 = _sfc_main$8.setup;
_sfc_main$8.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/WikiPage.vue");
  return _sfc_setup$8 ? _sfc_setup$8(props, ctx) : void 0;
};
const _sfc_main$7 = {
  __name: "Show",
  __ssrInlineRender: true,
  setup(__props) {
    const wiki_post = vue.computed(() => inertiaVue3.usePage().props.value.wiki_post);
    const wiki_categories = inertiaVue3.usePage().props.value.wiki_categories;
    return (_ctx, _push, _parent, _attrs) => {
      _push(serverRenderer.ssrRenderComponent(WikiLayout, vue.mergeProps({
        title: vue.unref(wiki_post).title
      }, _attrs), {
        default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="h-screen flex"${_scopeId}><aside class="bg-[#141414] w-1/6 flex flex-col h-full"${_scopeId}><div class="h-full p-5 overflow-y-auto"${_scopeId}><!--[-->`);
            serverRenderer.ssrRenderList(vue.unref(wiki_categories), (category) => {
              _push2(`<div class="p-3 px-10 border-b border-black"${_scopeId}><div class="font-semibold"${_scopeId}>${serverRenderer.ssrInterpolate(category.name)}</div><!--[-->`);
              serverRenderer.ssrRenderList(category.posts, (post) => {
                _push2(`<div class="ml-5 flex justify-start w-4/5"${_scopeId}>`);
                _push2(serverRenderer.ssrRenderComponent(vue.unref(inertiaVue3.Link), {
                  href: `/wiki/${category.slug}/${post.slug}`
                }, {
                  default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                    if (_push3) {
                      _push3(` - ${serverRenderer.ssrInterpolate(post.title)}`);
                    } else {
                      return [
                        vue.createTextVNode(" - " + vue.toDisplayString(post.title), 1)
                      ];
                    }
                  }),
                  _: 2
                }, _parent2, _scopeId));
                _push2(`</div>`);
              });
              _push2(`<!--]--></div>`);
            });
            _push2(`<!--]--></div></aside>`);
            _push2(serverRenderer.ssrRenderComponent(_sfc_main$8, { post: vue.unref(wiki_post) }, null, _parent2, _scopeId));
            _push2(`</div>`);
          } else {
            return [
              vue.createVNode("div", { class: "h-screen flex" }, [
                vue.createVNode("aside", { class: "bg-[#141414] w-1/6 flex flex-col h-full" }, [
                  vue.createVNode("div", { class: "h-full p-5 overflow-y-auto" }, [
                    (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(vue.unref(wiki_categories), (category) => {
                      return vue.openBlock(), vue.createBlock("div", { class: "p-3 px-10 border-b border-black" }, [
                        vue.createVNode("div", { class: "font-semibold" }, vue.toDisplayString(category.name), 1),
                        (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(category.posts, (post) => {
                          return vue.openBlock(), vue.createBlock("div", { class: "ml-5 flex justify-start w-4/5" }, [
                            vue.createVNode(vue.unref(inertiaVue3.Link), {
                              href: `/wiki/${category.slug}/${post.slug}`
                            }, {
                              default: vue.withCtx(() => [
                                vue.createTextVNode(" - " + vue.toDisplayString(post.title), 1)
                              ]),
                              _: 2
                            }, 1032, ["href"])
                          ]);
                        }), 256))
                      ]);
                    }), 256))
                  ])
                ]),
                vue.createVNode(_sfc_main$8, { post: vue.unref(wiki_post) }, null, 8, ["post"])
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$7 = _sfc_main$7.setup;
_sfc_main$7.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Wiki/Show.vue");
  return _sfc_setup$7 ? _sfc_setup$7(props, ctx) : void 0;
};
var Show = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": _sfc_main$7
}, Symbol.toStringTag, { value: "Module" }));
const __default__$4 = {
  layout: _sfc_main$1u
};
const _sfc_main$6 = /* @__PURE__ */ Object.assign(__default__$4, {
  __name: "Index",
  __ssrInlineRender: true,
  setup(__props) {
    const donations = vue.computed(() => inertiaVue3.usePage().props.value.donations);
    const rank_doners = inertiaVue3.usePage().props.value.rank_doners;
    const most_donated = inertiaVue3.usePage().props.value.most_donated;
    const donation = vue.ref({});
    const modal = vue.reactive({
      showDonation: false
    });
    const state2 = vue.reactive({
      title: "",
      message: "",
      group: "",
      duration: 5e3
    });
    function showDonation(id) {
      axios__default["default"].get(route("admin.donations.show", id)).then((response) => {
        donation.value = response.data.donation;
        modal.showDonation = true;
      }).catch((error) => {
        console.log(error);
      });
    }
    function closeDonation() {
      modal.showDonation = false;
    }
    function notifyMe() {
      Notifications.notify(
        {
          group: state2.group,
          title: state2.title.toUpperCase(),
          text: state2.message + " "
        },
        state2.duration
      );
    }
    function donationDestroy(id) {
      axios__default["default"].delete(route("admin.donations.destroy", id)).then((response) => {
        state2.title = "Success";
        state2.message = response.data.message;
        state2.group = "success";
        notifyMe();
        inertia.Inertia.reload();
      }).catch((error) => {
        console.log(error);
      });
    }
    function donationUpdate(id) {
      axios__default["default"].put(route("admin.donations.update", id), donation.value).then((response) => {
        state2.title = "Success";
        state2.message = response.data.message;
        state2.group = "success";
        notifyMe();
        inertia.Inertia.reload();
      });
    }
    return (_ctx, _push, _parent, _attrs) => {
      const _component_font_awesome_icon = vue.resolveComponent("font-awesome-icon");
      _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "space-y-4" }, _attrs))}><div class="flex flex-wrap"><div class="w-full"><div class="relative flex flex-col min-w-0 break-words w-full shadow-md rounded bg-white"><div class="rounded-t mb-0 px-4 py-3 border-0"><div class="flex flex-wrap items-center"><div class="relative w-full px-4 max-w-full flex-grow flex-1"><h3 class="font-semibold text-lg text-blueGray-700"> Donations </h3></div></div></div><div class="block w-full"><table class="items-center w-full bg-transparent border-collapse"><thead><tr><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-center bg-blueGray-50 text-blueGray-500 border-blueGray-100"> ID # </th><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left bg-blueGray-50 text-blueGray-500 border-blueGray-100"> Master Email </th><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left bg-blueGray-50 text-blueGray-500 border-blueGray-100"> Credits </th><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left bg-blueGray-50 text-blueGray-500 border-blueGray-100"> Gross </th><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left bg-blueGray-50 text-blueGray-500 border-blueGray-100"> Status </th><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left bg-blueGray-50 text-blueGray-500 border-blueGray-100"> Payment Date </th><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left bg-blueGray-50 text-blueGray-500 border-blueGray-100"> Tax </th><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left bg-blueGray-50 text-blueGray-500 border-blueGray-100"> T. ID </th><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left bg-blueGray-50 text-blueGray-500 border-blueGray-100"> Payer Email </th><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left bg-blueGray-50 text-blueGray-500 border-blueGray-100"></th></tr></thead><tbody><!--[-->`);
      serverRenderer.ssrRenderList(vue.unref(donations).data, (dona) => {
        _push(`<tr><th class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-left flex items-center"><span class="ml-3 font-bold text-blueGray-600">${serverRenderer.ssrInterpolate(dona.id)}</span></th><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4">${serverRenderer.ssrInterpolate(dona.email)}</td><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4">${serverRenderer.ssrInterpolate(dona.credits)}</td><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4">${serverRenderer.ssrInterpolate(dona.mc_gross)}</td><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4">`);
        if (dona.payment_status === "Completed") {
          _push(`<span class="inline-flex items-center gap-x-1.5 rounded-md bg-green-100 px-1.5 py-0.5 text-xs font-medium text-green-700"><svg class="h-1.5 w-1.5 fill-green-500" viewBox="0 0 6 6" aria-hidden="true"><circle cx="3" cy="3" r="3"></circle></svg> Completed </span>`);
        } else {
          _push(`<!---->`);
        }
        _push(`</td><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4"><div class="flex items-center"><span class="mr-2">${serverRenderer.ssrInterpolate(dona.payment_date)}</span></div></td><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4"><div class="flex items-center"><span class="mr-2">${serverRenderer.ssrInterpolate(dona.mc_fee)}</span></div></td><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4"><div class="flex items-center"><span class="mr-2">${serverRenderer.ssrInterpolate(dona.txn_id)}</span></div></td><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4"><div class="flex items-center"><span class="mr-2">${serverRenderer.ssrInterpolate(dona.payer_email)}</span></div></td><td class="px-5 py-5 bg-white text-sm text-right">`);
        _push(serverRenderer.ssrRenderComponent(JetDropdown, null, {
          trigger: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`<button type="button" class="inline-block hover:text-gray-700 z-10"${_scopeId}><svg class="inline-block h-6 w-6 fill-current" viewBox="0 0 24 24"${_scopeId}><path d="M12 6a2 2 0 110-4 2 2 0 010 4zm0 8a2 2 0 110-4 2 2 0 010 4zm-2 6a2 2 0 104 0 2 2 0 00-4 0z"${_scopeId}></path></svg></button>`);
            } else {
              return [
                vue.createVNode("button", {
                  type: "button",
                  class: "inline-block hover:text-gray-700 z-10"
                }, [
                  (vue.openBlock(), vue.createBlock("svg", {
                    class: "inline-block h-6 w-6 fill-current",
                    viewBox: "0 0 24 24"
                  }, [
                    vue.createVNode("path", { d: "M12 6a2 2 0 110-4 2 2 0 010 4zm0 8a2 2 0 110-4 2 2 0 010 4zm-2 6a2 2 0 104 0 2 2 0 00-4 0z" })
                  ]))
                ])
              ];
            }
          }),
          content: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`<div class="py-1" role="menu" aria-orientation="vertical" aria-labelledby="options-menu"${_scopeId}>`);
              _push2(serverRenderer.ssrRenderComponent(JetDropdownLink, {
                as: "button",
                onClick: ($event) => showDonation(
                  dona.xid
                ),
                class: "flex justify-start w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900"
              }, {
                default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                      icon: "edit",
                      class: "mr-2"
                    }, null, _parent3, _scopeId2));
                    _push3(` Edit `);
                  } else {
                    return [
                      vue.createVNode(_component_font_awesome_icon, {
                        icon: "edit",
                        class: "mr-2"
                      }),
                      vue.createTextVNode(" Edit ")
                    ];
                  }
                }),
                _: 2
              }, _parent2, _scopeId));
              _push2(serverRenderer.ssrRenderComponent(JetDropdownLink, {
                as: "button",
                onClick: ($event) => donationDestroy(
                  dona.xid
                ),
                class: "flex justify-start w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900"
              }, {
                default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                      icon: "trash",
                      class: "mr-2"
                    }, null, _parent3, _scopeId2));
                    _push3(` Destroy `);
                  } else {
                    return [
                      vue.createVNode(_component_font_awesome_icon, {
                        icon: "trash",
                        class: "mr-2"
                      }),
                      vue.createTextVNode(" Destroy ")
                    ];
                  }
                }),
                _: 2
              }, _parent2, _scopeId));
              _push2(`</div>`);
            } else {
              return [
                vue.createVNode("div", {
                  class: "py-1",
                  role: "menu",
                  "aria-orientation": "vertical",
                  "aria-labelledby": "options-menu"
                }, [
                  vue.createVNode(JetDropdownLink, {
                    as: "button",
                    onClick: ($event) => showDonation(
                      dona.xid
                    ),
                    class: "flex justify-start w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createVNode(_component_font_awesome_icon, {
                        icon: "edit",
                        class: "mr-2"
                      }),
                      vue.createTextVNode(" Edit ")
                    ]),
                    _: 2
                  }, 1032, ["onClick"]),
                  vue.createVNode(JetDropdownLink, {
                    as: "button",
                    onClick: ($event) => donationDestroy(
                      dona.xid
                    ),
                    class: "flex justify-start w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createVNode(_component_font_awesome_icon, {
                        icon: "trash",
                        class: "mr-2"
                      }),
                      vue.createTextVNode(" Destroy ")
                    ]),
                    _: 2
                  }, 1032, ["onClick"])
                ])
              ];
            }
          }),
          _: 2
        }, _parent));
        _push(`</td></tr>`);
      });
      _push(`<!--]--></tbody></table></div></div>`);
      _push(serverRenderer.ssrRenderComponent(_sfc_main$1x, {
        links: vue.unref(donations).links
      }, null, _parent));
      _push(`</div></div>`);
      _push(serverRenderer.ssrRenderComponent(JetModalDialog, {
        maxWidth: "4xl",
        show: modal.showDonation,
        onClose: closeDonation,
        class: "text-black"
      }, {
        title: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`Transaction ID: ${serverRenderer.ssrInterpolate(donation.value.txn_id)}`);
          } else {
            return [
              vue.createTextVNode("Transaction ID: " + vue.toDisplayString(donation.value.txn_id), 1)
            ];
          }
        }),
        content: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="flex flex-cols space-x-4"${_scopeId}><div class="w-1/2"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(JetLabel, null, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Email (Master Account)`);
                } else {
                  return [
                    vue.createTextVNode("Email (Master Account)")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(JetInput, {
              modelValue: donation.value.email,
              "onUpdate:modelValue": ($event) => donation.value.email = $event,
              class: "w-full"
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="w-1/2"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(JetLabel, null, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Transaction ID`);
                } else {
                  return [
                    vue.createTextVNode("Transaction ID")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(JetInput, {
              modelValue: donation.value.txn_id,
              "onUpdate:modelValue": ($event) => donation.value.txn_id = $event,
              class: "w-full"
            }, null, _parent2, _scopeId));
            _push2(`</div></div><div class="flex flex-cols space-x-4"${_scopeId}><div class="w-full"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(JetLabel, null, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Item`);
                } else {
                  return [
                    vue.createTextVNode("Item")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(JetInput, {
              modelValue: donation.value.item_name,
              "onUpdate:modelValue": ($event) => donation.value.item_name = $event,
              class: "w-full"
            }, null, _parent2, _scopeId));
            _push2(`</div></div><div class="flex flex-cols space-x-4"${_scopeId}><div class="w-1/2"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(JetLabel, null, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Quantity`);
                } else {
                  return [
                    vue.createTextVNode("Quantity")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(JetInput, {
              modelValue: donation.value.quantity,
              "onUpdate:modelValue": ($event) => donation.value.quantity = $event,
              class: "w-full"
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="w-1/2"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(JetLabel, null, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Payment Status`);
                } else {
                  return [
                    vue.createTextVNode("Payment Status")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<select class="w-full"${_scopeId}><option value="Completed"${_scopeId}>Completed</option><option value="Pending"${_scopeId}>Pending</option><option value="Canceled"${_scopeId}>Canceled</option></select></div></div><div class="flex flex-cols space-x-4"${_scopeId}><div class="w-1/2"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(JetLabel, null, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Payment Date`);
                } else {
                  return [
                    vue.createTextVNode("Payment Date")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(JetInput, {
              modelValue: donation.value.payment_date,
              "onUpdate:modelValue": ($event) => donation.value.payment_date = $event,
              class: "w-full"
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="w-1/2"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(JetLabel, null, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Mc gross`);
                } else {
                  return [
                    vue.createTextVNode("Mc gross")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(JetInput, {
              modelValue: donation.value.mc_gross,
              "onUpdate:modelValue": ($event) => donation.value.mc_gross = $event,
              class: "w-full"
            }, null, _parent2, _scopeId));
            _push2(`</div></div><div class="flex flex-cols space-x-4"${_scopeId}><div class="w-full"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(JetLabel, null, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Payer Email`);
                } else {
                  return [
                    vue.createTextVNode("Payer Email")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(JetInput, {
              modelValue: donation.value.payer_email,
              "onUpdate:modelValue": ($event) => donation.value.payer_email = $event,
              class: "w-full"
            }, null, _parent2, _scopeId));
            _push2(`</div></div><div class="flex flex-cols space-x-4"${_scopeId}><div class="w-1/2"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(JetLabel, null, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`First Name`);
                } else {
                  return [
                    vue.createTextVNode("First Name")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(JetInput, {
              modelValue: donation.value.first_name,
              "onUpdate:modelValue": ($event) => donation.value.first_name = $event,
              class: "w-full"
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="w-1/2"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(JetLabel, null, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Last Name`);
                } else {
                  return [
                    vue.createTextVNode("Last Name")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(JetInput, {
              modelValue: donation.value.last_name,
              "onUpdate:modelValue": ($event) => donation.value.last_name = $event,
              class: "w-full"
            }, null, _parent2, _scopeId));
            _push2(`</div></div>`);
          } else {
            return [
              vue.createVNode("div", { class: "flex flex-cols space-x-4" }, [
                vue.createVNode("div", { class: "w-1/2" }, [
                  vue.createVNode(JetLabel, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Email (Master Account)")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(JetInput, {
                    modelValue: donation.value.email,
                    "onUpdate:modelValue": ($event) => donation.value.email = $event,
                    class: "w-full"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"])
                ]),
                vue.createVNode("div", { class: "w-1/2" }, [
                  vue.createVNode(JetLabel, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Transaction ID")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(JetInput, {
                    modelValue: donation.value.txn_id,
                    "onUpdate:modelValue": ($event) => donation.value.txn_id = $event,
                    class: "w-full"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"])
                ])
              ]),
              vue.createVNode("div", { class: "flex flex-cols space-x-4" }, [
                vue.createVNode("div", { class: "w-full" }, [
                  vue.createVNode(JetLabel, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Item")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(JetInput, {
                    modelValue: donation.value.item_name,
                    "onUpdate:modelValue": ($event) => donation.value.item_name = $event,
                    class: "w-full"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"])
                ])
              ]),
              vue.createVNode("div", { class: "flex flex-cols space-x-4" }, [
                vue.createVNode("div", { class: "w-1/2" }, [
                  vue.createVNode(JetLabel, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Quantity")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(JetInput, {
                    modelValue: donation.value.quantity,
                    "onUpdate:modelValue": ($event) => donation.value.quantity = $event,
                    class: "w-full"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"])
                ]),
                vue.createVNode("div", { class: "w-1/2" }, [
                  vue.createVNode(JetLabel, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Payment Status")
                    ]),
                    _: 1
                  }),
                  vue.withDirectives(vue.createVNode("select", {
                    "onUpdate:modelValue": ($event) => donation.value.payment_status = $event,
                    class: "w-full"
                  }, [
                    vue.createVNode("option", { value: "Completed" }, "Completed"),
                    vue.createVNode("option", { value: "Pending" }, "Pending"),
                    vue.createVNode("option", { value: "Canceled" }, "Canceled")
                  ], 8, ["onUpdate:modelValue"]), [
                    [vue.vModelSelect, donation.value.payment_status]
                  ])
                ])
              ]),
              vue.createVNode("div", { class: "flex flex-cols space-x-4" }, [
                vue.createVNode("div", { class: "w-1/2" }, [
                  vue.createVNode(JetLabel, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Payment Date")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(JetInput, {
                    modelValue: donation.value.payment_date,
                    "onUpdate:modelValue": ($event) => donation.value.payment_date = $event,
                    class: "w-full"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"])
                ]),
                vue.createVNode("div", { class: "w-1/2" }, [
                  vue.createVNode(JetLabel, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Mc gross")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(JetInput, {
                    modelValue: donation.value.mc_gross,
                    "onUpdate:modelValue": ($event) => donation.value.mc_gross = $event,
                    class: "w-full"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"])
                ])
              ]),
              vue.createVNode("div", { class: "flex flex-cols space-x-4" }, [
                vue.createVNode("div", { class: "w-full" }, [
                  vue.createVNode(JetLabel, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Payer Email")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(JetInput, {
                    modelValue: donation.value.payer_email,
                    "onUpdate:modelValue": ($event) => donation.value.payer_email = $event,
                    class: "w-full"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"])
                ])
              ]),
              vue.createVNode("div", { class: "flex flex-cols space-x-4" }, [
                vue.createVNode("div", { class: "w-1/2" }, [
                  vue.createVNode(JetLabel, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("First Name")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(JetInput, {
                    modelValue: donation.value.first_name,
                    "onUpdate:modelValue": ($event) => donation.value.first_name = $event,
                    class: "w-full"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"])
                ]),
                vue.createVNode("div", { class: "w-1/2" }, [
                  vue.createVNode(JetLabel, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Last Name")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(JetInput, {
                    modelValue: donation.value.last_name,
                    "onUpdate:modelValue": ($event) => donation.value.last_name = $event,
                    class: "w-full"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"])
                ])
              ])
            ];
          }
        }),
        footer: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(JetButton, {
              class: "mr-2",
              onClick: ($event) => donationUpdate(donation.value.xid)
            }, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Edit`);
                } else {
                  return [
                    vue.createTextVNode("Edit")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(JetSecondaryButton, { onClick: closeDonation }, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Close `);
                } else {
                  return [
                    vue.createTextVNode(" Close ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(JetButton, {
                class: "mr-2",
                onClick: ($event) => donationUpdate(donation.value.xid)
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Edit")
                ]),
                _: 1
              }, 8, ["onClick"]),
              vue.createVNode(JetSecondaryButton, { onClick: closeDonation }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Close ")
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<div class="flex flex-wrap mt-4"><div class="w-full xl:w-8/12 xl:mb-0"><div class="relative flex flex-col min-w-0 break-words bg-white w-full shadow-md rounded"><div class="rounded-t mb-0 py-3 border-0"><div class="flex flex-wrap items-center p-3"><div class="relative w-full px-4 max-w-full flex-grow flex-1"><h3 class="font-semibold text-base text-blueGray-700 pb-3"> Most Donated Package </h3></div><table class="items-center w-full bg-transparent border-collapse"><thead><tr><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left bg-blueGray-50 text-blueGray-500 border-blueGray-100"> Package </th><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left bg-blueGray-50 text-blueGray-500 border-blueGray-100"> Total Donations </th><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left bg-blueGray-50 text-blueGray-500 border-blueGray-100"> Gross </th></tr></thead><tbody><!--[-->`);
      serverRenderer.ssrRenderList(vue.unref(most_donated), (dona) => {
        _push(`<tr><th class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-left flex items-center"><span class="ml-3 font-bold text-blueGray-600">${serverRenderer.ssrInterpolate(dona.mc_gross)}</span></th><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4">${serverRenderer.ssrInterpolate(dona.count)}</td><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4">${serverRenderer.ssrInterpolate(dona.total)}</td></tr>`);
      });
      _push(`<!--]--></tbody></table></div></div></div></div><div class="w-full xl:w-4/12 px-4"><div class="relative flex flex-col min-w-0 break-words bg-white w-full shadow-md rounded"><div class="rounded-t mb-0 px-4 py-3 border-0"><div class="flex flex-wrap items-center"><div class="relative w-full px-4 max-w-full flex-grow flex-1"><h3 class="font-semibold text-base text-blueGray-700"> Top Donators </h3></div></div></div><div class="block w-full overflow-x-auto"><table class="items-center w-full bg-transparent border-collapse"><thead><tr><th class="px-6 bg-blueGray-50 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left"> Email </th><th class="px-6 bg-blueGray-50 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left"> Count </th><th class="px-6 bg-blueGray-50 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left"> Total donated </th></tr></thead><tbody><!--[-->`);
      serverRenderer.ssrRenderList(vue.unref(rank_doners).data, (doner) => {
        _push(`<tr><th class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-left">${serverRenderer.ssrInterpolate(doner.email)}</th><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4">${serverRenderer.ssrInterpolate(doner.count_donations)}</td><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4">${serverRenderer.ssrInterpolate(doner.total_donated)}</td></tr>`);
      });
      _push(`<!--]--></tbody></table></div></div></div></div></div>`);
    };
  }
});
const _sfc_setup$6 = _sfc_main$6.setup;
_sfc_main$6.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Admin/Donations/Index.vue");
  return _sfc_setup$6 ? _sfc_setup$6(props, ctx) : void 0;
};
var Index$4 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": _sfc_main$6
}, Symbol.toStringTag, { value: "Module" }));
const __default__$3 = {
  layout: _sfc_main$1u
};
const _sfc_main$5 = /* @__PURE__ */ Object.assign(__default__$3, {
  __name: "Index",
  __ssrInlineRender: true,
  setup(__props) {
    const game_accounts = vue.computed(() => inertiaVue3.usePage().props.value.game_accounts);
    const gepard_banned = vue.computed(() => inertiaVue3.usePage().props.value.gepard_banned);
    inertiaVue3.usePage().props.value.most_donated;
    const donation = vue.ref({});
    const modal = vue.reactive({
      showAccount: false
    });
    const state2 = vue.reactive({
      title: "",
      message: "",
      group: "",
      duration: 5e3
    });
    function notifyMe() {
      Notifications.notify(
        {
          group: state2.group,
          title: state2.title.toUpperCase(),
          text: state2.message + " "
        },
        state2.duration
      );
    }
    function donationDestroy(id) {
      axios__default["default"].delete(route("admin.donations.destroy", id)).then((response) => {
        state2.title = "Success";
        state2.message = response.data.message;
        state2.group = "success";
        notifyMe();
        inertia.Inertia.reload();
      }).catch((error) => {
        console.log(error);
      });
    }
    function donationUpdate(id) {
      axios__default["default"].put(route("admin.donations.update", id), donation.value).then((response) => {
        state2.title = "Success";
        state2.message = response.data.message;
        state2.group = "success";
        notifyMe();
        inertia.Inertia.reload();
      });
    }
    return (_ctx, _push, _parent, _attrs) => {
      const _component_font_awesome_icon = vue.resolveComponent("font-awesome-icon");
      _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)}><div class="flex flex-wrap"><div class="w-full"><div class="relative flex flex-col min-w-0 break-words w-full mb-6 shadow-md rounded bg-white"><div class="rounded-t mb-0 px-4 py-3 border-0"><div class="flex items-center"><div class="relative w-full px-4 max-w-full flex-grow flex w-full"><h3 class="font-semibold text-lg text-blueGray-700"> Game Accounts </h3></div><div class="relative flex flex-grow items-stretch focus-within:z-10 w-1/2 sm:w-auto sm:ml-auto sm:mr-0 mx-auto"><div class="pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3">`);
      _push(serverRenderer.ssrRenderComponent(vue.unref(solid.UsersIcon), {
        class: "h-5 w-5 text-gray-400",
        "aria-hidden": "true"
      }, null, _parent));
      _push(`</div><input type="email"${serverRenderer.ssrRenderAttr("value", _ctx.query_search)} name="email" id="email" class="block w-full rounded-none rounded-l-md border-0 py-1.5 pl-10 text-gray-900 ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-sky-600 sm:text-sm sm:leading-6" placeholder="Search Player"></div></div></div><div class="block w-full overflow-x-auto"><table class="items-center w-full bg-transparent border-collapse"><thead><tr><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-center bg-blueGray-50 text-blueGray-500 border-blueGray-100"> Account ID </th><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-center bg-blueGray-50 text-blueGray-500 border-blueGray-100"> User ID </th><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-center bg-blueGray-50 text-blueGray-500 border-blueGray-100"> Email </th><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-center bg-blueGray-50 text-blueGray-500 border-blueGray-100"> Group ID </th><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-center bg-blueGray-50 text-blueGray-500 border-blueGray-100"> State </th><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-center bg-blueGray-50 text-blueGray-500 border-blueGray-100"> Unban Time </th><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-center bg-blueGray-50 text-blueGray-500 border-blueGray-100"> Expiration Time </th><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-center bg-blueGray-50 text-blueGray-500 border-blueGray-100"> Login Count </th><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-center bg-blueGray-50 text-blueGray-500 border-blueGray-100"> Last Login </th><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-center bg-blueGray-50 text-blueGray-500 border-blueGray-100"> Last IP </th><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-center bg-blueGray-50 text-blueGray-500 border-blueGray-100"> Character Slots </th><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-center bg-blueGray-50 text-blueGray-500 border-blueGray-100"> Pin Code </th><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-center bg-blueGray-50 text-blueGray-500 border-blueGray-100"> Pincode Change </th><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-center bg-blueGray-50 text-blueGray-500 border-blueGray-100"> Vip Time </th><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-center bg-blueGray-50 text-blueGray-500 border-blueGray-100"> Old Group </th><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-center bg-blueGray-50 text-blueGray-500 border-blueGray-100"> Web Auth Token </th><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-center bg-blueGray-50 text-blueGray-500 border-blueGray-100"> Web Auth Token Enabled </th><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-center bg-blueGray-50 text-blueGray-500 border-blueGray-100"> Master ID </th><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-center bg-blueGray-50 text-blueGray-500 border-blueGray-100"> Last UID </th><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-center bg-blueGray-50 text-blueGray-500 border-blueGray-100"> Bloqued UID </th><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-center bg-blueGray-50 text-blueGray-500 border-blueGray-100"></th></tr></thead><tbody><!--[-->`);
      serverRenderer.ssrRenderList(vue.unref(game_accounts).data, (game_account) => {
        _push(`<tr><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-center flex items-center"><span class="ml-3 font-bold text-blueGray-600">${serverRenderer.ssrInterpolate(game_account.account_id)}</span></td><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-center">${serverRenderer.ssrInterpolate(game_account.userid)}</td><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-center"><i class="fas fa-circle text-orange-500 mr-2"></i> ${serverRenderer.ssrInterpolate(game_account.email)}</td><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-center"><span class="mr-2">${serverRenderer.ssrInterpolate(game_account.group_id)}</span></td><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-center">`);
        if (game_account.state === 0) {
          _push(`<span class="inline-flex items-center gap-x-1.5 rounded-md bg-green-100 px-1.5 py-0.5 text-xs font-medium text-green-700"><svg class="h-1.5 w-1.5 fill-green-500" viewBox="0 0 6 6" aria-hidden="true"><circle cx="3" cy="3" r="3"></circle></svg> Active </span>`);
        } else {
          _push(`<span class="inline-flex items-center gap-x-1.5 rounded-md bg-red-100 px-2 py-1 text-xs font-medium text-red-700"><svg class="h-1.5 w-1.5 fill-red-500" viewBox="0 0 6 6" aria-hidden="true"><circle cx="3" cy="3" r="3"></circle></svg> Banned </span>`);
        }
        _push(`</td><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-center"><span class="mr-2">${serverRenderer.ssrInterpolate(game_account.unban_time)}</span></td><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-center"><span class="mr-2">${serverRenderer.ssrInterpolate(game_account.expiration_time)}</span></td><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-center"><span class="mr-2">${serverRenderer.ssrInterpolate(game_account.logincount)}</span></td><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-center"><span class="mr-2">${serverRenderer.ssrInterpolate(game_account.lastlogin)}</span></td><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-center"><span class="mr-2">${serverRenderer.ssrInterpolate(game_account.last_ip)}</span></td><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-center"><span class="mr-2">${serverRenderer.ssrInterpolate(game_account.character_slots)}</span></td><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-center"><span class="mr-2">${serverRenderer.ssrInterpolate(game_account.pincode)}</span></td><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-center"><span class="mr-2">${serverRenderer.ssrInterpolate(game_account.pincode_change)}</span></td><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-center"><span class="mr-2">${serverRenderer.ssrInterpolate(game_account.vip_time)}</span></td><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-center"><span class="mr-2">${serverRenderer.ssrInterpolate(game_account.old_group)}</span></td><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-center"><span class="mr-2">${serverRenderer.ssrInterpolate(game_account.web_auth_token)}</span></td><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-center"><span class="mr-2">${serverRenderer.ssrInterpolate(game_account.web_auth_token_enabled)}</span></td><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-center"><span class="mr-2">${serverRenderer.ssrInterpolate(game_account.master_acc_id)}</span></td><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-center"><span class="mr-2">${serverRenderer.ssrInterpolate(game_account.last_unique_id)}</span></td><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-center"><span class="mr-2">${serverRenderer.ssrInterpolate(game_account.blocked_unique_id)}</span></td><td class="px-5 py-5 bg-white text-sm text-right">`);
        _push(serverRenderer.ssrRenderComponent(JetDropdown, null, {
          trigger: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`<button type="button" class="inline-block hover:text-gray-700 z-10"${_scopeId}><svg class="inline-block h-6 w-6 fill-current" viewBox="0 0 24 24"${_scopeId}><path d="M12 6a2 2 0 110-4 2 2 0 010 4zm0 8a2 2 0 110-4 2 2 0 010 4zm-2 6a2 2 0 104 0 2 2 0 00-4 0z"${_scopeId}></path></svg></button>`);
            } else {
              return [
                vue.createVNode("button", {
                  type: "button",
                  class: "inline-block hover:text-gray-700 z-10"
                }, [
                  (vue.openBlock(), vue.createBlock("svg", {
                    class: "inline-block h-6 w-6 fill-current",
                    viewBox: "0 0 24 24"
                  }, [
                    vue.createVNode("path", { d: "M12 6a2 2 0 110-4 2 2 0 010 4zm0 8a2 2 0 110-4 2 2 0 010 4zm-2 6a2 2 0 104 0 2 2 0 00-4 0z" })
                  ]))
                ])
              ];
            }
          }),
          content: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`<div class="py-1" role="menu" aria-orientation="vertical" aria-labelledby="options-menu"${_scopeId}>`);
              _push2(serverRenderer.ssrRenderComponent(JetDropdownLink, {
                as: "button",
                onClick: ($event) => _ctx.showDonation(
                  _ctx.dona.xid
                ),
                class: "flex justify-start w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900"
              }, {
                default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                      icon: "edit",
                      class: "mr-2"
                    }, null, _parent3, _scopeId2));
                    _push3(` Edit `);
                  } else {
                    return [
                      vue.createVNode(_component_font_awesome_icon, {
                        icon: "edit",
                        class: "mr-2"
                      }),
                      vue.createTextVNode(" Edit ")
                    ];
                  }
                }),
                _: 2
              }, _parent2, _scopeId));
              _push2(serverRenderer.ssrRenderComponent(JetDropdownLink, {
                as: "button",
                onClick: ($event) => donationDestroy(
                  _ctx.dona.xid
                ),
                class: "flex justify-start w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900"
              }, {
                default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                      icon: "trash",
                      class: "mr-2"
                    }, null, _parent3, _scopeId2));
                    _push3(` Destroy `);
                  } else {
                    return [
                      vue.createVNode(_component_font_awesome_icon, {
                        icon: "trash",
                        class: "mr-2"
                      }),
                      vue.createTextVNode(" Destroy ")
                    ];
                  }
                }),
                _: 2
              }, _parent2, _scopeId));
              _push2(serverRenderer.ssrRenderComponent(JetDropdownLink, {
                href: "",
                class: "flex justify-start w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900"
              }, {
                default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                      icon: "archive",
                      class: "mr-2"
                    }, null, _parent3, _scopeId2));
                    _push3(` Archive `);
                  } else {
                    return [
                      vue.createVNode(_component_font_awesome_icon, {
                        icon: "archive",
                        class: "mr-2"
                      }),
                      vue.createTextVNode(" Archive ")
                    ];
                  }
                }),
                _: 2
              }, _parent2, _scopeId));
              _push2(`</div>`);
            } else {
              return [
                vue.createVNode("div", {
                  class: "py-1",
                  role: "menu",
                  "aria-orientation": "vertical",
                  "aria-labelledby": "options-menu"
                }, [
                  vue.createVNode(JetDropdownLink, {
                    as: "button",
                    onClick: ($event) => _ctx.showDonation(
                      _ctx.dona.xid
                    ),
                    class: "flex justify-start w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createVNode(_component_font_awesome_icon, {
                        icon: "edit",
                        class: "mr-2"
                      }),
                      vue.createTextVNode(" Edit ")
                    ]),
                    _: 1
                  }, 8, ["onClick"]),
                  vue.createVNode(JetDropdownLink, {
                    as: "button",
                    onClick: ($event) => donationDestroy(
                      _ctx.dona.xid
                    ),
                    class: "flex justify-start w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createVNode(_component_font_awesome_icon, {
                        icon: "trash",
                        class: "mr-2"
                      }),
                      vue.createTextVNode(" Destroy ")
                    ]),
                    _: 1
                  }, 8, ["onClick"]),
                  vue.createVNode(JetDropdownLink, {
                    href: "",
                    class: "flex justify-start w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createVNode(_component_font_awesome_icon, {
                        icon: "archive",
                        class: "mr-2"
                      }),
                      vue.createTextVNode(" Archive ")
                    ]),
                    _: 1
                  })
                ])
              ];
            }
          }),
          _: 2
        }, _parent));
        _push(`</td></tr>`);
      });
      _push(`<!--]--></tbody></table>`);
      _push(serverRenderer.ssrRenderComponent(_sfc_main$1x, {
        class: "p-3",
        links: vue.unref(game_accounts).links
      }, null, _parent));
      _push(`</div></div></div></div>`);
      _push(serverRenderer.ssrRenderComponent(JetModalDialog, {
        maxWidth: "4xl",
        show: modal.showDonation,
        onClose: _ctx.closeDonation,
        class: "text-black"
      }, {
        title: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`Transaction ID: ${serverRenderer.ssrInterpolate(donation.value.txn_id)}`);
          } else {
            return [
              vue.createTextVNode("Transaction ID: " + vue.toDisplayString(donation.value.txn_id), 1)
            ];
          }
        }),
        content: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="flex flex-cols space-x-4"${_scopeId}><div class="w-1/2"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(JetLabel, null, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Email (Master Account)`);
                } else {
                  return [
                    vue.createTextVNode("Email (Master Account)")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(JetInput, {
              modelValue: donation.value.email,
              "onUpdate:modelValue": ($event) => donation.value.email = $event,
              class: "w-full"
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="w-1/2"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(JetLabel, null, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Transaction ID`);
                } else {
                  return [
                    vue.createTextVNode("Transaction ID")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(JetInput, {
              modelValue: donation.value.txn_id,
              "onUpdate:modelValue": ($event) => donation.value.txn_id = $event,
              class: "w-full"
            }, null, _parent2, _scopeId));
            _push2(`</div></div><div class="flex flex-cols space-x-4"${_scopeId}><div class="w-full"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(JetLabel, null, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Item`);
                } else {
                  return [
                    vue.createTextVNode("Item")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(JetInput, {
              modelValue: donation.value.item_name,
              "onUpdate:modelValue": ($event) => donation.value.item_name = $event,
              class: "w-full"
            }, null, _parent2, _scopeId));
            _push2(`</div></div><div class="flex flex-cols space-x-4"${_scopeId}><div class="w-1/2"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(JetLabel, null, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Quantity`);
                } else {
                  return [
                    vue.createTextVNode("Quantity")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(JetInput, {
              modelValue: donation.value.quantity,
              "onUpdate:modelValue": ($event) => donation.value.quantity = $event,
              class: "w-full"
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="w-1/2"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(JetLabel, null, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Payment Status`);
                } else {
                  return [
                    vue.createTextVNode("Payment Status")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<select class="w-full"${_scopeId}><option value="Completed"${_scopeId}>Completed</option><option value="Pending"${_scopeId}>Pending</option><option value="Canceled"${_scopeId}>Canceled</option></select></div></div><div class="flex flex-cols space-x-4"${_scopeId}><div class="w-1/2"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(JetLabel, null, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Payment Date`);
                } else {
                  return [
                    vue.createTextVNode("Payment Date")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(JetInput, {
              modelValue: donation.value.payment_date,
              "onUpdate:modelValue": ($event) => donation.value.payment_date = $event,
              class: "w-full"
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="w-1/2"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(JetLabel, null, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Mc gross`);
                } else {
                  return [
                    vue.createTextVNode("Mc gross")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(JetInput, {
              modelValue: donation.value.mc_gross,
              "onUpdate:modelValue": ($event) => donation.value.mc_gross = $event,
              class: "w-full"
            }, null, _parent2, _scopeId));
            _push2(`</div></div><div class="flex flex-cols space-x-4"${_scopeId}><div class="w-full"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(JetLabel, null, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Payer Email`);
                } else {
                  return [
                    vue.createTextVNode("Payer Email")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(JetInput, {
              modelValue: donation.value.payer_email,
              "onUpdate:modelValue": ($event) => donation.value.payer_email = $event,
              class: "w-full"
            }, null, _parent2, _scopeId));
            _push2(`</div></div><div class="flex flex-cols space-x-4"${_scopeId}><div class="w-1/2"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(JetLabel, null, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`First Name`);
                } else {
                  return [
                    vue.createTextVNode("First Name")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(JetInput, {
              modelValue: donation.value.first_name,
              "onUpdate:modelValue": ($event) => donation.value.first_name = $event,
              class: "w-full"
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="w-1/2"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(JetLabel, null, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Last Name`);
                } else {
                  return [
                    vue.createTextVNode("Last Name")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(JetInput, {
              modelValue: donation.value.last_name,
              "onUpdate:modelValue": ($event) => donation.value.last_name = $event,
              class: "w-full"
            }, null, _parent2, _scopeId));
            _push2(`</div></div>`);
          } else {
            return [
              vue.createVNode("div", { class: "flex flex-cols space-x-4" }, [
                vue.createVNode("div", { class: "w-1/2" }, [
                  vue.createVNode(JetLabel, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Email (Master Account)")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(JetInput, {
                    modelValue: donation.value.email,
                    "onUpdate:modelValue": ($event) => donation.value.email = $event,
                    class: "w-full"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"])
                ]),
                vue.createVNode("div", { class: "w-1/2" }, [
                  vue.createVNode(JetLabel, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Transaction ID")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(JetInput, {
                    modelValue: donation.value.txn_id,
                    "onUpdate:modelValue": ($event) => donation.value.txn_id = $event,
                    class: "w-full"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"])
                ])
              ]),
              vue.createVNode("div", { class: "flex flex-cols space-x-4" }, [
                vue.createVNode("div", { class: "w-full" }, [
                  vue.createVNode(JetLabel, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Item")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(JetInput, {
                    modelValue: donation.value.item_name,
                    "onUpdate:modelValue": ($event) => donation.value.item_name = $event,
                    class: "w-full"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"])
                ])
              ]),
              vue.createVNode("div", { class: "flex flex-cols space-x-4" }, [
                vue.createVNode("div", { class: "w-1/2" }, [
                  vue.createVNode(JetLabel, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Quantity")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(JetInput, {
                    modelValue: donation.value.quantity,
                    "onUpdate:modelValue": ($event) => donation.value.quantity = $event,
                    class: "w-full"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"])
                ]),
                vue.createVNode("div", { class: "w-1/2" }, [
                  vue.createVNode(JetLabel, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Payment Status")
                    ]),
                    _: 1
                  }),
                  vue.withDirectives(vue.createVNode("select", {
                    "onUpdate:modelValue": ($event) => donation.value.payment_status = $event,
                    class: "w-full"
                  }, [
                    vue.createVNode("option", { value: "Completed" }, "Completed"),
                    vue.createVNode("option", { value: "Pending" }, "Pending"),
                    vue.createVNode("option", { value: "Canceled" }, "Canceled")
                  ], 8, ["onUpdate:modelValue"]), [
                    [vue.vModelSelect, donation.value.payment_status]
                  ])
                ])
              ]),
              vue.createVNode("div", { class: "flex flex-cols space-x-4" }, [
                vue.createVNode("div", { class: "w-1/2" }, [
                  vue.createVNode(JetLabel, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Payment Date")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(JetInput, {
                    modelValue: donation.value.payment_date,
                    "onUpdate:modelValue": ($event) => donation.value.payment_date = $event,
                    class: "w-full"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"])
                ]),
                vue.createVNode("div", { class: "w-1/2" }, [
                  vue.createVNode(JetLabel, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Mc gross")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(JetInput, {
                    modelValue: donation.value.mc_gross,
                    "onUpdate:modelValue": ($event) => donation.value.mc_gross = $event,
                    class: "w-full"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"])
                ])
              ]),
              vue.createVNode("div", { class: "flex flex-cols space-x-4" }, [
                vue.createVNode("div", { class: "w-full" }, [
                  vue.createVNode(JetLabel, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Payer Email")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(JetInput, {
                    modelValue: donation.value.payer_email,
                    "onUpdate:modelValue": ($event) => donation.value.payer_email = $event,
                    class: "w-full"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"])
                ])
              ]),
              vue.createVNode("div", { class: "flex flex-cols space-x-4" }, [
                vue.createVNode("div", { class: "w-1/2" }, [
                  vue.createVNode(JetLabel, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("First Name")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(JetInput, {
                    modelValue: donation.value.first_name,
                    "onUpdate:modelValue": ($event) => donation.value.first_name = $event,
                    class: "w-full"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"])
                ]),
                vue.createVNode("div", { class: "w-1/2" }, [
                  vue.createVNode(JetLabel, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Last Name")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(JetInput, {
                    modelValue: donation.value.last_name,
                    "onUpdate:modelValue": ($event) => donation.value.last_name = $event,
                    class: "w-full"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"])
                ])
              ])
            ];
          }
        }),
        footer: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(JetButton, {
              class: "mr-2",
              onClick: ($event) => donationUpdate(donation.value.xid)
            }, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Edit`);
                } else {
                  return [
                    vue.createTextVNode("Edit")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(JetSecondaryButton, { onClick: _ctx.closeDonation }, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Close `);
                } else {
                  return [
                    vue.createTextVNode(" Close ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(JetButton, {
                class: "mr-2",
                onClick: ($event) => donationUpdate(donation.value.xid)
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Edit")
                ]),
                _: 1
              }, 8, ["onClick"]),
              vue.createVNode(JetSecondaryButton, { onClick: _ctx.closeDonation }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Close ")
                ]),
                _: 1
              }, 8, ["onClick"])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<div class="flex flex-wrap"><div class="w-full xl:w-8/12 xl:mb-0"><div class="relative flex flex-col min-w-0 break-words bg-white w-full mb-6 shadow-md rounded"><div class="rounded-t mb-0 py-3 border-0"><div class="flex flex-wrap items-center"><div class="relative w-full max-w-full flex-grow flex-1 px-4 py-3"><h3 class="font-semibold text-base text-blueGray-700"> Gepard Banned </h3></div><table class="items-center w-full bg-transparent border-collapse"><thead><tr><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-center bg-blueGray-50 text-blueGray-500 border-blueGray-100"> Unique ID </th><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-center bg-blueGray-50 text-blueGray-500 border-blueGray-100"> Unban Time </th><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-center bg-blueGray-50 text-blueGray-500 border-blueGray-100"> Reason </th><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-center bg-blueGray-50 text-blueGray-500 border-blueGray-100"></th></tr></thead><tbody><!--[-->`);
      serverRenderer.ssrRenderList(vue.unref(gepard_banned).data, (gepard_info) => {
        _push(`<tr><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-center"><span class="ml-3 font-bold text-blueGray-600">${serverRenderer.ssrInterpolate(gepard_info.unique_id)}</span></td><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-center">${serverRenderer.ssrInterpolate(gepard_info.unban_time)}</td><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-center">${serverRenderer.ssrInterpolate(gepard_info.reason)}</td><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-center">`);
        _push(serverRenderer.ssrRenderComponent(JetDropdown, null, {
          trigger: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`<button type="button" class="inline-block hover:text-gray-700 z-10"${_scopeId}><svg class="inline-block h-6 w-6 fill-current" viewBox="0 0 24 24"${_scopeId}><path d="M12 6a2 2 0 110-4 2 2 0 010 4zm0 8a2 2 0 110-4 2 2 0 010 4zm-2 6a2 2 0 104 0 2 2 0 00-4 0z"${_scopeId}></path></svg></button>`);
            } else {
              return [
                vue.createVNode("button", {
                  type: "button",
                  class: "inline-block hover:text-gray-700 z-10"
                }, [
                  (vue.openBlock(), vue.createBlock("svg", {
                    class: "inline-block h-6 w-6 fill-current",
                    viewBox: "0 0 24 24"
                  }, [
                    vue.createVNode("path", { d: "M12 6a2 2 0 110-4 2 2 0 010 4zm0 8a2 2 0 110-4 2 2 0 010 4zm-2 6a2 2 0 104 0 2 2 0 00-4 0z" })
                  ]))
                ])
              ];
            }
          }),
          content: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`<div class="py-1" role="menu" aria-orientation="vertical" aria-labelledby="options-menu"${_scopeId}>`);
              _push2(serverRenderer.ssrRenderComponent(JetDropdownLink, {
                as: "button",
                onClick: ($event) => _ctx.showDonation(
                  _ctx.dona.xid
                ),
                class: "flex justify-start w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900"
              }, {
                default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                      icon: "edit",
                      class: "mr-2"
                    }, null, _parent3, _scopeId2));
                    _push3(` Unban `);
                  } else {
                    return [
                      vue.createVNode(_component_font_awesome_icon, {
                        icon: "edit",
                        class: "mr-2"
                      }),
                      vue.createTextVNode(" Unban ")
                    ];
                  }
                }),
                _: 2
              }, _parent2, _scopeId));
              _push2(`</div>`);
            } else {
              return [
                vue.createVNode("div", {
                  class: "py-1",
                  role: "menu",
                  "aria-orientation": "vertical",
                  "aria-labelledby": "options-menu"
                }, [
                  vue.createVNode(JetDropdownLink, {
                    as: "button",
                    onClick: ($event) => _ctx.showDonation(
                      _ctx.dona.xid
                    ),
                    class: "flex justify-start w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createVNode(_component_font_awesome_icon, {
                        icon: "edit",
                        class: "mr-2"
                      }),
                      vue.createTextVNode(" Unban ")
                    ]),
                    _: 1
                  }, 8, ["onClick"])
                ])
              ];
            }
          }),
          _: 2
        }, _parent));
        _push(`</td></tr>`);
      });
      _push(`<!--]--></tbody></table></div></div><div class="block w-full overflow-x-auto"></div></div></div><div class="w-full xl:w-4/12 px-4"><div class="relative flex flex-col min-w-0 break-words bg-white w-full mb-6 shadow-md rounded"><div class="rounded-t mb-0 px-4 py-3 border-0"><div class="flex flex-wrap items-center"><div class="relative w-full px-4 max-w-full flex-grow flex-1"><h3 class="font-semibold text-base text-blueGray-700"> Top Logins per day </h3></div><div class="relative w-full px-4 max-w-full flex-grow flex-1 text-right"><button class="bg-indigo-500 text-white active:bg-indigo-600 text-xs font-bold uppercase px-3 py-1 rounded outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150" type="button"> See all </button></div></div></div><div class="block w-full overflow-x-auto"><div class="h-[20rem]"></div></div></div></div></div></div>`);
    };
  }
});
const _sfc_setup$5 = _sfc_main$5.setup;
_sfc_main$5.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Admin/GameAccounts/Index.vue");
  return _sfc_setup$5 ? _sfc_setup$5(props, ctx) : void 0;
};
var Index$3 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": _sfc_main$5
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$4 = {};
function _sfc_ssrRender$1(_ctx, _push, _parent, _attrs) {
}
const _sfc_setup$4 = _sfc_main$4.setup;
_sfc_main$4.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Admin/MasterAccounts/Index.vue");
  return _sfc_setup$4 ? _sfc_setup$4(props, ctx) : void 0;
};
var Index$1 = /* @__PURE__ */ _export_sfc(_sfc_main$4, [["ssrRender", _sfc_ssrRender$1]]);
var Index$2 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Index$1
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$3 = vue.defineComponent({
  layout: RankingLayout,
  components: {
    RankingTable,
    RankingPanel: _sfc_main$x,
    Pagination: _sfc_main$1x
  },
  props: {
    cash_points: Object
  },
  setup(props) {
    const cash_points = props.cash_points;
    const url = vue.ref({});
    const rank_attributes = vue.ref([
      "Player",
      "Guild",
      "Level",
      "Online",
      "Points"
    ]);
    vue.onMounted(() => {
      cash_points.data.forEach((cash_points2) => {
        axios.get(`/emblem/${cash_points2.guild_id}`).then((res) => {
          if (res.data.url === "X")
            return;
          url.value[cash_points2.guild_id] = res.data.url;
        });
      });
    });
    return {
      cash_points,
      rank_attributes,
      getFormatNumber,
      get_job_name,
      isOnline,
      url
    };
  }
});
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_ranking_panel = vue.resolveComponent("ranking-panel");
  const _component_ranking_table = vue.resolveComponent("ranking-table");
  const _component_font_awesome_icon = vue.resolveComponent("font-awesome-icon");
  const _component_pagination = vue.resolveComponent("pagination");
  _push(serverRenderer.ssrRenderComponent(_component_ranking_panel, vue.mergeProps({ title: "Cash Points" }, _attrs), {
    default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_ranking_table, { rank_attributes: _ctx.rank_attributes }, {
          row: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<!--[-->`);
              serverRenderer.ssrRenderList(_ctx.cash_points.data, (cash_point, index) => {
                _push3(`<tr class="spaceUnder hover:bg-gray-800/40"${_scopeId2}>`);
                if (index == 0) {
                  _push3(`<td class="px-5 py-3"${_scopeId2}>`);
                  _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                    class: "text-2xl p-1 w-9 hover:text-yellow-600",
                    icon: "fa-solid fa-trophy"
                  }, null, _parent3, _scopeId2));
                  _push3(`</td>`);
                } else {
                  _push3(`<td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(index + 1)}</td>`);
                }
                _push3(`<td class="px-5 py-3"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><img${serverRenderer.ssrRenderAttr("src", `/rochar/characterhead/${cash_point.name}`)} alt=""${_scopeId2}><a href=""${_scopeId2}><span class="text-[#04aaff]"${_scopeId2}>${serverRenderer.ssrInterpolate(cash_point.name)}</span> (${serverRenderer.ssrInterpolate(_ctx.get_job_name(cash_point.job))}) </a></div></td><td class="px-5 py-3"${_scopeId2}><div class="flex items-center justify-center"${_scopeId2}><div class="flex items-center"${_scopeId2}><img class="mr-2"${serverRenderer.ssrRenderAttr("src", `/${_ctx.url[cash_point.guild_id]} `)} alt=""${_scopeId2}> ${serverRenderer.ssrInterpolate(cash_point.GName)}</div></div></td><td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(cash_point.lvl)} / ${serverRenderer.ssrInterpolate(cash_point.blvl)}</td><td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(_ctx.isOnline(cash_point.online))}</td><td class="px-5 py-3"${_scopeId2}>${serverRenderer.ssrInterpolate(_ctx.getFormatNumber(cash_point.points))}</td></tr>`);
              });
              _push3(`<!--]-->`);
            } else {
              return [
                (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(_ctx.cash_points.data, (cash_point, index) => {
                  return vue.openBlock(), vue.createBlock("tr", {
                    class: "spaceUnder hover:bg-gray-800/40",
                    key: index
                  }, [
                    index == 0 ? (vue.openBlock(), vue.createBlock("td", {
                      key: 0,
                      class: "px-5 py-3"
                    }, [
                      vue.createVNode(_component_font_awesome_icon, {
                        class: "text-2xl p-1 w-9 hover:text-yellow-600",
                        icon: "fa-solid fa-trophy"
                      })
                    ])) : (vue.openBlock(), vue.createBlock("td", {
                      key: 1,
                      class: "px-5 py-3"
                    }, vue.toDisplayString(index + 1), 1)),
                    vue.createVNode("td", { class: "px-5 py-3" }, [
                      vue.createVNode("div", { class: "flex items-center justify-center" }, [
                        vue.createVNode("img", {
                          src: `/rochar/characterhead/${cash_point.name}`,
                          alt: ""
                        }, null, 8, ["src"]),
                        vue.createVNode("a", { href: "" }, [
                          vue.createVNode("span", { class: "text-[#04aaff]" }, vue.toDisplayString(cash_point.name), 1),
                          vue.createTextVNode(" (" + vue.toDisplayString(_ctx.get_job_name(cash_point.job)) + ") ", 1)
                        ])
                      ])
                    ]),
                    vue.createVNode("td", { class: "px-5 py-3" }, [
                      vue.createVNode("div", { class: "flex items-center justify-center" }, [
                        vue.createVNode("div", { class: "flex items-center" }, [
                          vue.createVNode("img", {
                            class: "mr-2",
                            src: `/${_ctx.url[cash_point.guild_id]} `,
                            alt: ""
                          }, null, 8, ["src"]),
                          vue.createTextVNode(" " + vue.toDisplayString(cash_point.GName), 1)
                        ])
                      ])
                    ]),
                    vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(cash_point.lvl) + " / " + vue.toDisplayString(cash_point.blvl), 1),
                    vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(_ctx.isOnline(cash_point.online)), 1),
                    vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(_ctx.getFormatNumber(cash_point.points)), 1)
                  ]);
                }), 128))
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_pagination, {
          class: "p-3",
          links: _ctx.cash_points.links
        }, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_ranking_table, { rank_attributes: _ctx.rank_attributes }, {
            row: vue.withCtx(() => [
              (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(_ctx.cash_points.data, (cash_point, index) => {
                return vue.openBlock(), vue.createBlock("tr", {
                  class: "spaceUnder hover:bg-gray-800/40",
                  key: index
                }, [
                  index == 0 ? (vue.openBlock(), vue.createBlock("td", {
                    key: 0,
                    class: "px-5 py-3"
                  }, [
                    vue.createVNode(_component_font_awesome_icon, {
                      class: "text-2xl p-1 w-9 hover:text-yellow-600",
                      icon: "fa-solid fa-trophy"
                    })
                  ])) : (vue.openBlock(), vue.createBlock("td", {
                    key: 1,
                    class: "px-5 py-3"
                  }, vue.toDisplayString(index + 1), 1)),
                  vue.createVNode("td", { class: "px-5 py-3" }, [
                    vue.createVNode("div", { class: "flex items-center justify-center" }, [
                      vue.createVNode("img", {
                        src: `/rochar/characterhead/${cash_point.name}`,
                        alt: ""
                      }, null, 8, ["src"]),
                      vue.createVNode("a", { href: "" }, [
                        vue.createVNode("span", { class: "text-[#04aaff]" }, vue.toDisplayString(cash_point.name), 1),
                        vue.createTextVNode(" (" + vue.toDisplayString(_ctx.get_job_name(cash_point.job)) + ") ", 1)
                      ])
                    ])
                  ]),
                  vue.createVNode("td", { class: "px-5 py-3" }, [
                    vue.createVNode("div", { class: "flex items-center justify-center" }, [
                      vue.createVNode("div", { class: "flex items-center" }, [
                        vue.createVNode("img", {
                          class: "mr-2",
                          src: `/${_ctx.url[cash_point.guild_id]} `,
                          alt: ""
                        }, null, 8, ["src"]),
                        vue.createTextVNode(" " + vue.toDisplayString(cash_point.GName), 1)
                      ])
                    ])
                  ]),
                  vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(cash_point.lvl) + " / " + vue.toDisplayString(cash_point.blvl), 1),
                  vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(_ctx.isOnline(cash_point.online)), 1),
                  vue.createVNode("td", { class: "px-5 py-3" }, vue.toDisplayString(_ctx.getFormatNumber(cash_point.points)), 1)
                ]);
              }), 128))
            ]),
            _: 1
          }, 8, ["rank_attributes"]),
          vue.createVNode(_component_pagination, {
            class: "p-3",
            links: _ctx.cash_points.links
          }, null, 8, ["links"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$3 = _sfc_main$3.setup;
_sfc_main$3.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Admin/Rankings/CashPoints.vue");
  return _sfc_setup$3 ? _sfc_setup$3(props, ctx) : void 0;
};
var CashPoints = /* @__PURE__ */ _export_sfc(_sfc_main$3, [["ssrRender", _sfc_ssrRender]]);
var CashPoints$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": CashPoints
}, Symbol.toStringTag, { value: "Module" }));
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
function getUserAgent() {
  try {
    return navigator.userAgent.toLowerCase();
  } catch (e2) {
    return "";
  }
}
const userAgent = getUserAgent();
const env = {
  isMac: isMac(userAgent),
  isWindows: isWindows(userAgent),
  isGecko: isGecko(userAgent),
  isSafari: isSafari(userAgent),
  isiOS: isiOS(userAgent),
  isAndroid: isAndroid(userAgent),
  isBlink: isBlink(userAgent),
  features: {
    isRegExpUnicodePropertySupported: isRegExpUnicodePropertySupported()
  }
};
function isMac(userAgent2) {
  return userAgent2.indexOf("macintosh") > -1;
}
function isWindows(userAgent2) {
  return userAgent2.indexOf("windows") > -1;
}
function isGecko(userAgent2) {
  return !!userAgent2.match(/gecko\/\d+/);
}
function isSafari(userAgent2) {
  return userAgent2.indexOf(" applewebkit/") > -1 && userAgent2.indexOf("chrome") === -1;
}
function isiOS(userAgent2) {
  return !!userAgent2.match(/iphone|ipad/i) || isMac(userAgent2) && navigator.maxTouchPoints > 0;
}
function isAndroid(userAgent2) {
  return userAgent2.indexOf("android") > -1;
}
function isBlink(userAgent2) {
  return userAgent2.indexOf("chrome/") > -1 && userAgent2.indexOf("edge/") < 0;
}
function isRegExpUnicodePropertySupported() {
  let isSupported = false;
  try {
    isSupported = "\u0107".search(new RegExp("[\\p{L}]", "u")) === 0;
  } catch (error) {
  }
  return isSupported;
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
function mix(baseClass, ...mixins) {
  mixins.forEach((mixin) => {
    const propertyNames = Object.getOwnPropertyNames(mixin);
    const propertySymbols = Object.getOwnPropertySymbols(mixin);
    propertyNames.concat(propertySymbols).forEach((key) => {
      if (key in baseClass.prototype) {
        return;
      }
      if (typeof mixin == "function" && (key == "length" || key == "name" || key == "prototype")) {
        return;
      }
      const sourceDescriptor = Object.getOwnPropertyDescriptor(mixin, key);
      sourceDescriptor.enumerable = false;
      Object.defineProperty(baseClass.prototype, key, sourceDescriptor);
    });
  });
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
function spy() {
  return function spy2() {
    spy2.called = true;
  };
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class EventInfo {
  constructor(source, name) {
    this.source = source;
    this.name = name;
    this.path = [];
    this.stop = spy();
    this.off = spy();
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
const HEX_NUMBERS = new Array(256).fill("").map((_2, index) => ("0" + index.toString(16)).slice(-2));
function uid() {
  const r1 = Math.random() * 4294967296 >>> 0;
  const r2 = Math.random() * 4294967296 >>> 0;
  const r3 = Math.random() * 4294967296 >>> 0;
  const r4 = Math.random() * 4294967296 >>> 0;
  return "e" + HEX_NUMBERS[r1 >> 0 & 255] + HEX_NUMBERS[r1 >> 8 & 255] + HEX_NUMBERS[r1 >> 16 & 255] + HEX_NUMBERS[r1 >> 24 & 255] + HEX_NUMBERS[r2 >> 0 & 255] + HEX_NUMBERS[r2 >> 8 & 255] + HEX_NUMBERS[r2 >> 16 & 255] + HEX_NUMBERS[r2 >> 24 & 255] + HEX_NUMBERS[r3 >> 0 & 255] + HEX_NUMBERS[r3 >> 8 & 255] + HEX_NUMBERS[r3 >> 16 & 255] + HEX_NUMBERS[r3 >> 24 & 255] + HEX_NUMBERS[r4 >> 0 & 255] + HEX_NUMBERS[r4 >> 8 & 255] + HEX_NUMBERS[r4 >> 16 & 255] + HEX_NUMBERS[r4 >> 24 & 255];
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
const priorities = {
  get(priority = "normal") {
    if (typeof priority != "number") {
      return this[priority] || this.normal;
    } else {
      return priority;
    }
  },
  highest: 1e5,
  high: 1e3,
  normal: 0,
  low: -1e3,
  lowest: -1e5
};
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
function insertToPriorityArray(objects, objectToInsert) {
  const priority = priorities.get(objectToInsert.priority);
  for (let i2 = 0; i2 < objects.length; i2++) {
    if (priorities.get(objects[i2].priority) < priority) {
      objects.splice(i2, 0, objectToInsert);
      return;
    }
  }
  objects.push(objectToInsert);
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
const DOCUMENTATION_URL = "https://ckeditor.com/docs/ckeditor5/latest/support/error-codes.html";
class CKEditorError extends Error {
  constructor(errorName, context, data) {
    super(getErrorMessage(errorName, data));
    this.name = "CKEditorError";
    this.context = context;
    this.data = data;
  }
  is(type) {
    return type === "CKEditorError";
  }
  static rethrowUnexpectedError(err, context) {
    if (err.is && err.is("CKEditorError")) {
      throw err;
    }
    const error = new CKEditorError(err.message, context);
    error.stack = err.stack;
    throw error;
  }
}
function logWarning(errorName, data) {
  console.warn(...formatConsoleArguments(errorName, data));
}
function getLinkToDocumentationMessage(errorName) {
  return `
Read more: ${DOCUMENTATION_URL}#error-${errorName}`;
}
function getErrorMessage(errorName, data) {
  const processedObjects = /* @__PURE__ */ new WeakSet();
  const circularReferencesReplacer = (key, value) => {
    if (typeof value === "object" && value !== null) {
      if (processedObjects.has(value)) {
        return `[object ${value.constructor.name}]`;
      }
      processedObjects.add(value);
    }
    return value;
  };
  const stringifiedData = data ? ` ${JSON.stringify(data, circularReferencesReplacer)}` : "";
  const documentationLink = getLinkToDocumentationMessage(errorName);
  return errorName + stringifiedData + documentationLink;
}
function formatConsoleArguments(errorName, data) {
  const documentationMessage = getLinkToDocumentationMessage(errorName);
  return data ? [errorName, data, documentationMessage] : [errorName, documentationMessage];
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
const version = "36.0.1";
const windowOrGlobal = typeof window === "object" ? window : global;
if (windowOrGlobal.CKEDITOR_VERSION) {
  throw new CKEditorError("ckeditor-duplicated-modules", null);
} else {
  windowOrGlobal.CKEDITOR_VERSION = version;
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
const _listeningTo = Symbol("listeningTo");
const _emitterId = Symbol("emitterId");
const _delegations = Symbol("delegations");
const defaultEmitterClass$1 = EmitterMixin(Object);
function EmitterMixin(base) {
  if (!base) {
    return defaultEmitterClass$1;
  }
  class Mixin extends base {
    on(event, callback, options) {
      this.listenTo(this, event, callback, options);
    }
    once(event, callback, options) {
      let wasFired = false;
      const onceCallback = (event2, ...args) => {
        if (!wasFired) {
          wasFired = true;
          event2.off();
          callback.call(this, event2, ...args);
        }
      };
      this.listenTo(this, event, onceCallback, options);
    }
    off(event, callback) {
      this.stopListening(this, event, callback);
    }
    listenTo(emitter, event, callback, options = {}) {
      let emitterInfo, eventCallbacks;
      if (!this[_listeningTo]) {
        this[_listeningTo] = {};
      }
      const emitters = this[_listeningTo];
      if (!_getEmitterId(emitter)) {
        _setEmitterId(emitter);
      }
      const emitterId = _getEmitterId(emitter);
      if (!(emitterInfo = emitters[emitterId])) {
        emitterInfo = emitters[emitterId] = {
          emitter,
          callbacks: {}
        };
      }
      if (!(eventCallbacks = emitterInfo.callbacks[event])) {
        eventCallbacks = emitterInfo.callbacks[event] = [];
      }
      eventCallbacks.push(callback);
      addEventListener(this, emitter, event, callback, options);
    }
    stopListening(emitter, event, callback) {
      const emitters = this[_listeningTo];
      let emitterId = emitter && _getEmitterId(emitter);
      const emitterInfo = emitters && emitterId ? emitters[emitterId] : void 0;
      const eventCallbacks = emitterInfo && event ? emitterInfo.callbacks[event] : void 0;
      if (!emitters || emitter && !emitterInfo || event && !eventCallbacks) {
        return;
      }
      if (callback) {
        removeEventListener(this, emitter, event, callback);
        const index = eventCallbacks.indexOf(callback);
        if (index !== -1) {
          if (eventCallbacks.length === 1) {
            delete emitterInfo.callbacks[event];
          } else {
            removeEventListener(this, emitter, event, callback);
          }
        }
      } else if (eventCallbacks) {
        while (callback = eventCallbacks.pop()) {
          removeEventListener(this, emitter, event, callback);
        }
        delete emitterInfo.callbacks[event];
      } else if (emitterInfo) {
        for (event in emitterInfo.callbacks) {
          this.stopListening(emitter, event);
        }
        delete emitters[emitterId];
      } else {
        for (emitterId in emitters) {
          this.stopListening(emitters[emitterId].emitter);
        }
        delete this[_listeningTo];
      }
    }
    fire(eventOrInfo, ...args) {
      try {
        const eventInfo = eventOrInfo instanceof EventInfo ? eventOrInfo : new EventInfo(this, eventOrInfo);
        const event = eventInfo.name;
        let callbacks = getCallbacksForEvent(this, event);
        eventInfo.path.push(this);
        if (callbacks) {
          const callbackArgs = [eventInfo, ...args];
          callbacks = Array.from(callbacks);
          for (let i2 = 0; i2 < callbacks.length; i2++) {
            callbacks[i2].callback.apply(this, callbackArgs);
            if (eventInfo.off.called) {
              delete eventInfo.off.called;
              this._removeEventListener(event, callbacks[i2].callback);
            }
            if (eventInfo.stop.called) {
              break;
            }
          }
        }
        const delegations = this[_delegations];
        if (delegations) {
          const destinations = delegations.get(event);
          const passAllDestinations = delegations.get("*");
          if (destinations) {
            fireDelegatedEvents(destinations, eventInfo, args);
          }
          if (passAllDestinations) {
            fireDelegatedEvents(passAllDestinations, eventInfo, args);
          }
        }
        return eventInfo.return;
      } catch (err) {
        CKEditorError.rethrowUnexpectedError(err, this);
      }
    }
    delegate(...events) {
      return {
        to: (emitter, nameOrFunction) => {
          if (!this[_delegations]) {
            this[_delegations] = /* @__PURE__ */ new Map();
          }
          events.forEach((eventName) => {
            const destinations = this[_delegations].get(eventName);
            if (!destinations) {
              this[_delegations].set(eventName, /* @__PURE__ */ new Map([[emitter, nameOrFunction]]));
            } else {
              destinations.set(emitter, nameOrFunction);
            }
          });
        }
      };
    }
    stopDelegating(event, emitter) {
      if (!this[_delegations]) {
        return;
      }
      if (!event) {
        this[_delegations].clear();
      } else if (!emitter) {
        this[_delegations].delete(event);
      } else {
        const destinations = this[_delegations].get(event);
        if (destinations) {
          destinations.delete(emitter);
        }
      }
    }
    _addEventListener(event, callback, options) {
      createEventNamespace(this, event);
      const lists = getCallbacksListsForNamespace(this, event);
      const priority = priorities.get(options.priority);
      const callbackDefinition = {
        callback,
        priority
      };
      for (const callbacks of lists) {
        insertToPriorityArray(callbacks, callbackDefinition);
      }
    }
    _removeEventListener(event, callback) {
      const lists = getCallbacksListsForNamespace(this, event);
      for (const callbacks of lists) {
        for (let i2 = 0; i2 < callbacks.length; i2++) {
          if (callbacks[i2].callback == callback) {
            callbacks.splice(i2, 1);
            i2--;
          }
        }
      }
    }
  }
  return Mixin;
}
[
  "on",
  "once",
  "off",
  "listenTo",
  "stopListening",
  "fire",
  "delegate",
  "stopDelegating",
  "_addEventListener",
  "_removeEventListener"
].forEach((key) => {
  EmitterMixin[key] = defaultEmitterClass$1.prototype[key];
});
function _getEmitterListenedTo(listeningEmitter, listenedToEmitterId) {
  const listeningTo = listeningEmitter[_listeningTo];
  if (listeningTo && listeningTo[listenedToEmitterId]) {
    return listeningTo[listenedToEmitterId].emitter;
  }
  return null;
}
function _setEmitterId(emitter, id) {
  if (!emitter[_emitterId]) {
    emitter[_emitterId] = id || uid();
  }
}
function _getEmitterId(emitter) {
  return emitter[_emitterId];
}
function getEvents(source) {
  if (!source._events) {
    Object.defineProperty(source, "_events", {
      value: {}
    });
  }
  return source._events;
}
function makeEventNode() {
  return {
    callbacks: [],
    childEvents: []
  };
}
function createEventNamespace(source, eventName) {
  const events = getEvents(source);
  if (events[eventName]) {
    return;
  }
  let name = eventName;
  let childEventName = null;
  const newEventNodes = [];
  while (name !== "") {
    if (events[name]) {
      break;
    }
    events[name] = makeEventNode();
    newEventNodes.push(events[name]);
    if (childEventName) {
      events[name].childEvents.push(childEventName);
    }
    childEventName = name;
    name = name.substr(0, name.lastIndexOf(":"));
  }
  if (name !== "") {
    for (const node of newEventNodes) {
      node.callbacks = events[name].callbacks.slice();
    }
    events[name].childEvents.push(childEventName);
  }
}
function getCallbacksListsForNamespace(source, eventName) {
  const eventNode = getEvents(source)[eventName];
  if (!eventNode) {
    return [];
  }
  let callbacksLists = [eventNode.callbacks];
  for (let i2 = 0; i2 < eventNode.childEvents.length; i2++) {
    const childCallbacksLists = getCallbacksListsForNamespace(source, eventNode.childEvents[i2]);
    callbacksLists = callbacksLists.concat(childCallbacksLists);
  }
  return callbacksLists;
}
function getCallbacksForEvent(source, eventName) {
  let event;
  if (!source._events || !(event = source._events[eventName]) || !event.callbacks.length) {
    if (eventName.indexOf(":") > -1) {
      return getCallbacksForEvent(source, eventName.substr(0, eventName.lastIndexOf(":")));
    } else {
      return null;
    }
  }
  return event.callbacks;
}
function fireDelegatedEvents(destinations, eventInfo, fireArgs) {
  for (let [emitter, name] of destinations) {
    if (!name) {
      name = eventInfo.name;
    } else if (typeof name == "function") {
      name = name(eventInfo.name);
    }
    const delegatedInfo = new EventInfo(eventInfo.source, name);
    delegatedInfo.path = [...eventInfo.path];
    emitter.fire(delegatedInfo, ...fireArgs);
  }
}
function addEventListener(listener, emitter, event, callback, options) {
  if (emitter._addEventListener) {
    emitter._addEventListener(event, callback, options);
  } else {
    listener._addEventListener.call(emitter, event, callback, options);
  }
}
function removeEventListener(listener, emitter, event, callback) {
  if (emitter._removeEventListener) {
    emitter._removeEventListener(event, callback);
  } else {
    listener._removeEventListener.call(emitter, event, callback);
  }
}
var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
var freeGlobal$1 = freeGlobal;
var freeSelf = typeof self == "object" && self && self.Object === Object && self;
var root = freeGlobal$1 || freeSelf || Function("return this")();
var root$1 = root;
var Symbol$1 = root$1.Symbol;
var Symbol$2 = Symbol$1;
var objectProto$f = Object.prototype;
var hasOwnProperty$c = objectProto$f.hasOwnProperty;
var nativeObjectToString$1 = objectProto$f.toString;
var symToStringTag$1 = Symbol$2 ? Symbol$2.toStringTag : void 0;
function getRawTag(value) {
  var isOwn = hasOwnProperty$c.call(value, symToStringTag$1), tag = value[symToStringTag$1];
  try {
    value[symToStringTag$1] = void 0;
    var unmasked = true;
  } catch (e2) {
  }
  var result = nativeObjectToString$1.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag$1] = tag;
    } else {
      delete value[symToStringTag$1];
    }
  }
  return result;
}
var objectProto$e = Object.prototype;
var nativeObjectToString = objectProto$e.toString;
function objectToString(value) {
  return nativeObjectToString.call(value);
}
var nullTag = "[object Null]", undefinedTag = "[object Undefined]";
var symToStringTag = Symbol$2 ? Symbol$2.toStringTag : void 0;
function baseGetTag(value) {
  if (value == null) {
    return value === void 0 ? undefinedTag : nullTag;
  }
  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
}
function isObjectLike(value) {
  return value != null && typeof value == "object";
}
var symbolTag$3 = "[object Symbol]";
function isSymbol(value) {
  return typeof value == "symbol" || isObjectLike(value) && baseGetTag(value) == symbolTag$3;
}
function arrayMap(array, iteratee) {
  var index = -1, length = array == null ? 0 : array.length, result = Array(length);
  while (++index < length) {
    result[index] = iteratee(array[index], index, array);
  }
  return result;
}
var isArray = Array.isArray;
var isArray$1 = isArray;
var INFINITY$1 = 1 / 0;
var symbolProto$2 = Symbol$2 ? Symbol$2.prototype : void 0, symbolToString = symbolProto$2 ? symbolProto$2.toString : void 0;
function baseToString(value) {
  if (typeof value == "string") {
    return value;
  }
  if (isArray$1(value)) {
    return arrayMap(value, baseToString) + "";
  }
  if (isSymbol(value)) {
    return symbolToString ? symbolToString.call(value) : "";
  }
  var result = value + "";
  return result == "0" && 1 / value == -INFINITY$1 ? "-0" : result;
}
var reWhitespace = /\s/;
function trimmedEndIndex(string) {
  var index = string.length;
  while (index-- && reWhitespace.test(string.charAt(index))) {
  }
  return index;
}
var reTrimStart = /^\s+/;
function baseTrim(string) {
  return string ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, "") : string;
}
function isObject(value) {
  var type = typeof value;
  return value != null && (type == "object" || type == "function");
}
var NAN = 0 / 0;
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
var reIsBinary = /^0b[01]+$/i;
var reIsOctal = /^0o[0-7]+$/i;
var freeParseInt = parseInt;
function toNumber(value) {
  if (typeof value == "number") {
    return value;
  }
  if (isSymbol(value)) {
    return NAN;
  }
  if (isObject(value)) {
    var other = typeof value.valueOf == "function" ? value.valueOf() : value;
    value = isObject(other) ? other + "" : other;
  }
  if (typeof value != "string") {
    return value === 0 ? value : +value;
  }
  value = baseTrim(value);
  var isBinary = reIsBinary.test(value);
  return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
}
function identity(value) {
  return value;
}
var asyncTag = "[object AsyncFunction]", funcTag$2 = "[object Function]", genTag$1 = "[object GeneratorFunction]", proxyTag = "[object Proxy]";
function isFunction(value) {
  if (!isObject(value)) {
    return false;
  }
  var tag = baseGetTag(value);
  return tag == funcTag$2 || tag == genTag$1 || tag == asyncTag || tag == proxyTag;
}
var coreJsData = root$1["__core-js_shared__"];
var coreJsData$1 = coreJsData;
var maskSrcKey = function() {
  var uid2 = /[^.]+$/.exec(coreJsData$1 && coreJsData$1.keys && coreJsData$1.keys.IE_PROTO || "");
  return uid2 ? "Symbol(src)_1." + uid2 : "";
}();
function isMasked(func) {
  return !!maskSrcKey && maskSrcKey in func;
}
var funcProto$2 = Function.prototype;
var funcToString$2 = funcProto$2.toString;
function toSource(func) {
  if (func != null) {
    try {
      return funcToString$2.call(func);
    } catch (e2) {
    }
    try {
      return func + "";
    } catch (e2) {
    }
  }
  return "";
}
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
var reIsHostCtor = /^\[object .+?Constructor\]$/;
var funcProto$1 = Function.prototype, objectProto$d = Object.prototype;
var funcToString$1 = funcProto$1.toString;
var hasOwnProperty$b = objectProto$d.hasOwnProperty;
var reIsNative = RegExp(
  "^" + funcToString$1.call(hasOwnProperty$b).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
);
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}
function getValue(object, key) {
  return object == null ? void 0 : object[key];
}
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : void 0;
}
var WeakMap$1 = getNative(root$1, "WeakMap");
var WeakMap$2 = WeakMap$1;
var objectCreate = Object.create;
var baseCreate = function() {
  function object() {
  }
  return function(proto) {
    if (!isObject(proto)) {
      return {};
    }
    if (objectCreate) {
      return objectCreate(proto);
    }
    object.prototype = proto;
    var result = new object();
    object.prototype = void 0;
    return result;
  };
}();
var baseCreate$1 = baseCreate;
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0:
      return func.call(thisArg);
    case 1:
      return func.call(thisArg, args[0]);
    case 2:
      return func.call(thisArg, args[0], args[1]);
    case 3:
      return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}
function copyArray(source, array) {
  var index = -1, length = source.length;
  array || (array = Array(length));
  while (++index < length) {
    array[index] = source[index];
  }
  return array;
}
var HOT_COUNT = 800, HOT_SPAN = 16;
var nativeNow = Date.now;
function shortOut(func) {
  var count2 = 0, lastCalled = 0;
  return function() {
    var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
    lastCalled = stamp;
    if (remaining > 0) {
      if (++count2 >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count2 = 0;
    }
    return func.apply(void 0, arguments);
  };
}
function constant(value) {
  return function() {
    return value;
  };
}
var defineProperty = function() {
  try {
    var func = getNative(Object, "defineProperty");
    func({}, "", {});
    return func;
  } catch (e2) {
  }
}();
var defineProperty$1 = defineProperty;
var baseSetToString = !defineProperty$1 ? identity : function(func, string) {
  return defineProperty$1(func, "toString", {
    "configurable": true,
    "enumerable": false,
    "value": constant(string),
    "writable": true
  });
};
var baseSetToString$1 = baseSetToString;
var setToString = shortOut(baseSetToString$1);
var setToString$1 = setToString;
function arrayEach(array, iteratee) {
  var index = -1, length = array == null ? 0 : array.length;
  while (++index < length) {
    if (iteratee(array[index], index, array) === false) {
      break;
    }
  }
  return array;
}
var MAX_SAFE_INTEGER$1 = 9007199254740991;
var reIsUint = /^(?:0|[1-9]\d*)$/;
function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER$1 : length;
  return !!length && (type == "number" || type != "symbol" && reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
}
function baseAssignValue(object, key, value) {
  if (key == "__proto__" && defineProperty$1) {
    defineProperty$1(object, key, {
      "configurable": true,
      "enumerable": true,
      "value": value,
      "writable": true
    });
  } else {
    object[key] = value;
  }
}
function eq(value, other) {
  return value === other || value !== value && other !== other;
}
var objectProto$c = Object.prototype;
var hasOwnProperty$a = objectProto$c.hasOwnProperty;
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty$a.call(object, key) && eq(objValue, value)) || value === void 0 && !(key in object)) {
    baseAssignValue(object, key, value);
  }
}
function copyObject(source, props, object, customizer) {
  var isNew = !object;
  object || (object = {});
  var index = -1, length = props.length;
  while (++index < length) {
    var key = props[index];
    var newValue = customizer ? customizer(object[key], source[key], key, object, source) : void 0;
    if (newValue === void 0) {
      newValue = source[key];
    }
    if (isNew) {
      baseAssignValue(object, key, newValue);
    } else {
      assignValue(object, key, newValue);
    }
  }
  return object;
}
var nativeMax$1 = Math.max;
function overRest(func, start, transform2) {
  start = nativeMax$1(start === void 0 ? func.length - 1 : start, 0);
  return function() {
    var args = arguments, index = -1, length = nativeMax$1(args.length - start, 0), array = Array(length);
    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = transform2(array);
    return apply(func, this, otherArgs);
  };
}
function baseRest(func, start) {
  return setToString$1(overRest(func, start, identity), func + "");
}
var MAX_SAFE_INTEGER = 9007199254740991;
function isLength$1(value) {
  return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}
function isArrayLike(value) {
  return value != null && isLength$1(value.length) && !isFunction(value);
}
function isIterateeCall(value, index, object) {
  if (!isObject(object)) {
    return false;
  }
  var type = typeof index;
  if (type == "number" ? isArrayLike(object) && isIndex(index, object.length) : type == "string" && index in object) {
    return eq(object[index], value);
  }
  return false;
}
function createAssigner(assigner) {
  return baseRest(function(object, sources) {
    var index = -1, length = sources.length, customizer = length > 1 ? sources[length - 1] : void 0, guard = length > 2 ? sources[2] : void 0;
    customizer = assigner.length > 3 && typeof customizer == "function" ? (length--, customizer) : void 0;
    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
      customizer = length < 3 ? void 0 : customizer;
      length = 1;
    }
    object = Object(object);
    while (++index < length) {
      var source = sources[index];
      if (source) {
        assigner(object, source, index, customizer);
      }
    }
    return object;
  });
}
var objectProto$b = Object.prototype;
function isPrototype(value) {
  var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto$b;
  return value === proto;
}
function baseTimes(n2, iteratee) {
  var index = -1, result = Array(n2);
  while (++index < n2) {
    result[index] = iteratee(index);
  }
  return result;
}
var argsTag$3 = "[object Arguments]";
function baseIsArguments(value) {
  return isObjectLike(value) && baseGetTag(value) == argsTag$3;
}
var objectProto$a = Object.prototype;
var hasOwnProperty$9 = objectProto$a.hasOwnProperty;
var propertyIsEnumerable$1 = objectProto$a.propertyIsEnumerable;
var isArguments = baseIsArguments(function() {
  return arguments;
}()) ? baseIsArguments : function(value) {
  return isObjectLike(value) && hasOwnProperty$9.call(value, "callee") && !propertyIsEnumerable$1.call(value, "callee");
};
var isArguments$1 = isArguments;
function stubFalse() {
  return false;
}
var freeExports$2 = typeof exports == "object" && exports && !exports.nodeType && exports;
var freeModule$2 = freeExports$2 && typeof module == "object" && module && !module.nodeType && module;
var moduleExports$2 = freeModule$2 && freeModule$2.exports === freeExports$2;
var Buffer$1 = moduleExports$2 ? root$1.Buffer : void 0;
var nativeIsBuffer = Buffer$1 ? Buffer$1.isBuffer : void 0;
var isBuffer = nativeIsBuffer || stubFalse;
var isBuffer$1 = isBuffer;
var argsTag$2 = "[object Arguments]", arrayTag$2 = "[object Array]", boolTag$3 = "[object Boolean]", dateTag$3 = "[object Date]", errorTag$2 = "[object Error]", funcTag$1 = "[object Function]", mapTag$5 = "[object Map]", numberTag$3 = "[object Number]", objectTag$4 = "[object Object]", regexpTag$3 = "[object RegExp]", setTag$5 = "[object Set]", stringTag$3 = "[object String]", weakMapTag$2 = "[object WeakMap]";
var arrayBufferTag$3 = "[object ArrayBuffer]", dataViewTag$4 = "[object DataView]", float32Tag$2 = "[object Float32Array]", float64Tag$2 = "[object Float64Array]", int8Tag$2 = "[object Int8Array]", int16Tag$2 = "[object Int16Array]", int32Tag$2 = "[object Int32Array]", uint8Tag$2 = "[object Uint8Array]", uint8ClampedTag$2 = "[object Uint8ClampedArray]", uint16Tag$2 = "[object Uint16Array]", uint32Tag$2 = "[object Uint32Array]";
var typedArrayTags = {};
typedArrayTags[float32Tag$2] = typedArrayTags[float64Tag$2] = typedArrayTags[int8Tag$2] = typedArrayTags[int16Tag$2] = typedArrayTags[int32Tag$2] = typedArrayTags[uint8Tag$2] = typedArrayTags[uint8ClampedTag$2] = typedArrayTags[uint16Tag$2] = typedArrayTags[uint32Tag$2] = true;
typedArrayTags[argsTag$2] = typedArrayTags[arrayTag$2] = typedArrayTags[arrayBufferTag$3] = typedArrayTags[boolTag$3] = typedArrayTags[dataViewTag$4] = typedArrayTags[dateTag$3] = typedArrayTags[errorTag$2] = typedArrayTags[funcTag$1] = typedArrayTags[mapTag$5] = typedArrayTags[numberTag$3] = typedArrayTags[objectTag$4] = typedArrayTags[regexpTag$3] = typedArrayTags[setTag$5] = typedArrayTags[stringTag$3] = typedArrayTags[weakMapTag$2] = false;
function baseIsTypedArray(value) {
  return isObjectLike(value) && isLength$1(value.length) && !!typedArrayTags[baseGetTag(value)];
}
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}
var freeExports$1 = typeof exports == "object" && exports && !exports.nodeType && exports;
var freeModule$1 = freeExports$1 && typeof module == "object" && module && !module.nodeType && module;
var moduleExports$1 = freeModule$1 && freeModule$1.exports === freeExports$1;
var freeProcess = moduleExports$1 && freeGlobal$1.process;
var nodeUtil = function() {
  try {
    var types = freeModule$1 && freeModule$1.require && freeModule$1.require("util").types;
    if (types) {
      return types;
    }
    return freeProcess && freeProcess.binding && freeProcess.binding("util");
  } catch (e2) {
  }
}();
var nodeUtil$1 = nodeUtil;
var nodeIsTypedArray = nodeUtil$1 && nodeUtil$1.isTypedArray;
var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
var isTypedArray$1 = isTypedArray;
var objectProto$9 = Object.prototype;
var hasOwnProperty$8 = objectProto$9.hasOwnProperty;
function arrayLikeKeys(value, inherited) {
  var isArr = isArray$1(value), isArg = !isArr && isArguments$1(value), isBuff = !isArr && !isArg && isBuffer$1(value), isType = !isArr && !isArg && !isBuff && isTypedArray$1(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length = result.length;
  for (var key in value) {
    if ((inherited || hasOwnProperty$8.call(value, key)) && !(skipIndexes && (key == "length" || isBuff && (key == "offset" || key == "parent") || isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || isIndex(key, length)))) {
      result.push(key);
    }
  }
  return result;
}
function overArg(func, transform2) {
  return function(arg) {
    return func(transform2(arg));
  };
}
var nativeKeys = overArg(Object.keys, Object);
var nativeKeys$1 = nativeKeys;
var objectProto$8 = Object.prototype;
var hasOwnProperty$7 = objectProto$8.hasOwnProperty;
function baseKeys(object) {
  if (!isPrototype(object)) {
    return nativeKeys$1(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty$7.call(object, key) && key != "constructor") {
      result.push(key);
    }
  }
  return result;
}
function keys(object) {
  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}
function nativeKeysIn(object) {
  var result = [];
  if (object != null) {
    for (var key in Object(object)) {
      result.push(key);
    }
  }
  return result;
}
var objectProto$7 = Object.prototype;
var hasOwnProperty$6 = objectProto$7.hasOwnProperty;
function baseKeysIn(object) {
  if (!isObject(object)) {
    return nativeKeysIn(object);
  }
  var isProto = isPrototype(object), result = [];
  for (var key in object) {
    if (!(key == "constructor" && (isProto || !hasOwnProperty$6.call(object, key)))) {
      result.push(key);
    }
  }
  return result;
}
function keysIn(object) {
  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
}
var assignIn = createAssigner(function(object, source) {
  copyObject(source, keysIn(source), object);
});
var extend = assignIn;
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, reIsPlainProp = /^\w*$/;
function isKey(value, object) {
  if (isArray$1(value)) {
    return false;
  }
  var type = typeof value;
  if (type == "number" || type == "symbol" || type == "boolean" || value == null || isSymbol(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
}
var nativeCreate = getNative(Object, "create");
var nativeCreate$1 = nativeCreate;
function hashClear() {
  this.__data__ = nativeCreate$1 ? nativeCreate$1(null) : {};
  this.size = 0;
}
function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}
var HASH_UNDEFINED$2 = "__lodash_hash_undefined__";
var objectProto$6 = Object.prototype;
var hasOwnProperty$5 = objectProto$6.hasOwnProperty;
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate$1) {
    var result = data[key];
    return result === HASH_UNDEFINED$2 ? void 0 : result;
  }
  return hasOwnProperty$5.call(data, key) ? data[key] : void 0;
}
var objectProto$5 = Object.prototype;
var hasOwnProperty$4 = objectProto$5.hasOwnProperty;
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate$1 ? data[key] !== void 0 : hasOwnProperty$4.call(data, key);
}
var HASH_UNDEFINED$1 = "__lodash_hash_undefined__";
function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = nativeCreate$1 && value === void 0 ? HASH_UNDEFINED$1 : value;
  return this;
}
function Hash(entries) {
  var index = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}
Hash.prototype.clear = hashClear;
Hash.prototype["delete"] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}
var arrayProto = Array.prototype;
var splice = arrayProto.splice;
function listCacheDelete(key) {
  var data = this.__data__, index = assocIndexOf(data, key);
  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}
function listCacheGet(key) {
  var data = this.__data__, index = assocIndexOf(data, key);
  return index < 0 ? void 0 : data[index][1];
}
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}
function listCacheSet(key, value) {
  var data = this.__data__, index = assocIndexOf(data, key);
  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}
function ListCache(entries) {
  var index = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}
ListCache.prototype.clear = listCacheClear;
ListCache.prototype["delete"] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;
var Map$1 = getNative(root$1, "Map");
var Map$2 = Map$1;
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    "hash": new Hash(),
    "map": new (Map$2 || ListCache)(),
    "string": new Hash()
  };
}
function isKeyable(value) {
  var type = typeof value;
  return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
}
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
}
function mapCacheDelete(key) {
  var result = getMapData(this, key)["delete"](key);
  this.size -= result ? 1 : 0;
  return result;
}
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}
function mapCacheSet(key, value) {
  var data = getMapData(this, key), size = data.size;
  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}
function MapCache(entries) {
  var index = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype["delete"] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;
var FUNC_ERROR_TEXT$1 = "Expected a function";
function memoize(func, resolver) {
  if (typeof func != "function" || resolver != null && typeof resolver != "function") {
    throw new TypeError(FUNC_ERROR_TEXT$1);
  }
  var memoized = function() {
    var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result) || cache;
    return result;
  };
  memoized.cache = new (memoize.Cache || MapCache)();
  return memoized;
}
memoize.Cache = MapCache;
var MAX_MEMOIZE_SIZE = 500;
function memoizeCapped(func) {
  var result = memoize(func, function(key) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }
    return key;
  });
  var cache = result.cache;
  return result;
}
var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
var reEscapeChar = /\\(\\)?/g;
var stringToPath = memoizeCapped(function(string) {
  var result = [];
  if (string.charCodeAt(0) === 46) {
    result.push("");
  }
  string.replace(rePropName, function(match, number, quote2, subString) {
    result.push(quote2 ? subString.replace(reEscapeChar, "$1") : number || match);
  });
  return result;
});
var stringToPath$1 = stringToPath;
function toString(value) {
  return value == null ? "" : baseToString(value);
}
function castPath(value, object) {
  if (isArray$1(value)) {
    return value;
  }
  return isKey(value, object) ? [value] : stringToPath$1(toString(value));
}
var INFINITY = 1 / 0;
function toKey(value) {
  if (typeof value == "string" || isSymbol(value)) {
    return value;
  }
  var result = value + "";
  return result == "0" && 1 / value == -INFINITY ? "-0" : result;
}
function baseGet(object, path) {
  path = castPath(path, object);
  var index = 0, length = path.length;
  while (object != null && index < length) {
    object = object[toKey(path[index++])];
  }
  return index && index == length ? object : void 0;
}
function get(object, path, defaultValue) {
  var result = object == null ? void 0 : baseGet(object, path);
  return result === void 0 ? defaultValue : result;
}
function arrayPush(array, values) {
  var index = -1, length = values.length, offset = array.length;
  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}
var getPrototype = overArg(Object.getPrototypeOf, Object);
var getPrototype$1 = getPrototype;
var objectTag$3 = "[object Object]";
var funcProto = Function.prototype, objectProto$4 = Object.prototype;
var funcToString = funcProto.toString;
var hasOwnProperty$3 = objectProto$4.hasOwnProperty;
var objectCtorString = funcToString.call(Object);
function isPlainObject(value) {
  if (!isObjectLike(value) || baseGetTag(value) != objectTag$3) {
    return false;
  }
  var proto = getPrototype$1(value);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty$3.call(proto, "constructor") && proto.constructor;
  return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
}
function baseSlice(array, start, end) {
  var index = -1, length = array.length;
  if (start < 0) {
    start = -start > length ? 0 : length + start;
  }
  end = end > length ? length : end;
  if (end < 0) {
    end += length;
  }
  length = start > end ? 0 : end - start >>> 0;
  start >>>= 0;
  var result = Array(length);
  while (++index < length) {
    result[index] = array[index + start];
  }
  return result;
}
function stackClear() {
  this.__data__ = new ListCache();
  this.size = 0;
}
function stackDelete(key) {
  var data = this.__data__, result = data["delete"](key);
  this.size = data.size;
  return result;
}
function stackGet(key) {
  return this.__data__.get(key);
}
function stackHas(key) {
  return this.__data__.has(key);
}
var LARGE_ARRAY_SIZE = 200;
function stackSet(key, value) {
  var data = this.__data__;
  if (data instanceof ListCache) {
    var pairs = data.__data__;
    if (!Map$2 || pairs.length < LARGE_ARRAY_SIZE - 1) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new MapCache(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}
function Stack(entries) {
  var data = this.__data__ = new ListCache(entries);
  this.size = data.size;
}
Stack.prototype.clear = stackClear;
Stack.prototype["delete"] = stackDelete;
Stack.prototype.get = stackGet;
Stack.prototype.has = stackHas;
Stack.prototype.set = stackSet;
function baseAssign(object, source) {
  return object && copyObject(source, keys(source), object);
}
function baseAssignIn(object, source) {
  return object && copyObject(source, keysIn(source), object);
}
var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
var moduleExports = freeModule && freeModule.exports === freeExports;
var Buffer = moduleExports ? root$1.Buffer : void 0, allocUnsafe = Buffer ? Buffer.allocUnsafe : void 0;
function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }
  var length = buffer.length, result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
  buffer.copy(result);
  return result;
}
function arrayFilter(array, predicate) {
  var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result[resIndex++] = value;
    }
  }
  return result;
}
function stubArray() {
  return [];
}
var objectProto$3 = Object.prototype;
var propertyIsEnumerable = objectProto$3.propertyIsEnumerable;
var nativeGetSymbols$1 = Object.getOwnPropertySymbols;
var getSymbols = !nativeGetSymbols$1 ? stubArray : function(object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return arrayFilter(nativeGetSymbols$1(object), function(symbol) {
    return propertyIsEnumerable.call(object, symbol);
  });
};
var getSymbols$1 = getSymbols;
function copySymbols(source, object) {
  return copyObject(source, getSymbols$1(source), object);
}
var nativeGetSymbols = Object.getOwnPropertySymbols;
var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
  var result = [];
  while (object) {
    arrayPush(result, getSymbols$1(object));
    object = getPrototype$1(object);
  }
  return result;
};
var getSymbolsIn$1 = getSymbolsIn;
function copySymbolsIn(source, object) {
  return copyObject(source, getSymbolsIn$1(source), object);
}
function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray$1(object) ? result : arrayPush(result, symbolsFunc(object));
}
function getAllKeys(object) {
  return baseGetAllKeys(object, keys, getSymbols$1);
}
function getAllKeysIn(object) {
  return baseGetAllKeys(object, keysIn, getSymbolsIn$1);
}
var DataView = getNative(root$1, "DataView");
var DataView$1 = DataView;
var Promise$1 = getNative(root$1, "Promise");
var Promise$2 = Promise$1;
var Set$1 = getNative(root$1, "Set");
var Set$2 = Set$1;
var mapTag$4 = "[object Map]", objectTag$2 = "[object Object]", promiseTag = "[object Promise]", setTag$4 = "[object Set]", weakMapTag$1 = "[object WeakMap]";
var dataViewTag$3 = "[object DataView]";
var dataViewCtorString = toSource(DataView$1), mapCtorString = toSource(Map$2), promiseCtorString = toSource(Promise$2), setCtorString = toSource(Set$2), weakMapCtorString = toSource(WeakMap$2);
var getTag = baseGetTag;
if (DataView$1 && getTag(new DataView$1(new ArrayBuffer(1))) != dataViewTag$3 || Map$2 && getTag(new Map$2()) != mapTag$4 || Promise$2 && getTag(Promise$2.resolve()) != promiseTag || Set$2 && getTag(new Set$2()) != setTag$4 || WeakMap$2 && getTag(new WeakMap$2()) != weakMapTag$1) {
  getTag = function(value) {
    var result = baseGetTag(value), Ctor = result == objectTag$2 ? value.constructor : void 0, ctorString = Ctor ? toSource(Ctor) : "";
    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString:
          return dataViewTag$3;
        case mapCtorString:
          return mapTag$4;
        case promiseCtorString:
          return promiseTag;
        case setCtorString:
          return setTag$4;
        case weakMapCtorString:
          return weakMapTag$1;
      }
    }
    return result;
  };
}
var getTag$1 = getTag;
var objectProto$2 = Object.prototype;
var hasOwnProperty$2 = objectProto$2.hasOwnProperty;
function initCloneArray(array) {
  var length = array.length, result = new array.constructor(length);
  if (length && typeof array[0] == "string" && hasOwnProperty$2.call(array, "index")) {
    result.index = array.index;
    result.input = array.input;
  }
  return result;
}
var Uint8Array = root$1.Uint8Array;
var Uint8Array$1 = Uint8Array;
function cloneArrayBuffer(arrayBuffer) {
  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new Uint8Array$1(result).set(new Uint8Array$1(arrayBuffer));
  return result;
}
function cloneDataView(dataView, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
}
var reFlags = /\w*$/;
function cloneRegExp(regexp) {
  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
  result.lastIndex = regexp.lastIndex;
  return result;
}
var symbolProto$1 = Symbol$2 ? Symbol$2.prototype : void 0, symbolValueOf$1 = symbolProto$1 ? symbolProto$1.valueOf : void 0;
function cloneSymbol(symbol) {
  return symbolValueOf$1 ? Object(symbolValueOf$1.call(symbol)) : {};
}
function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}
var boolTag$2 = "[object Boolean]", dateTag$2 = "[object Date]", mapTag$3 = "[object Map]", numberTag$2 = "[object Number]", regexpTag$2 = "[object RegExp]", setTag$3 = "[object Set]", stringTag$2 = "[object String]", symbolTag$2 = "[object Symbol]";
var arrayBufferTag$2 = "[object ArrayBuffer]", dataViewTag$2 = "[object DataView]", float32Tag$1 = "[object Float32Array]", float64Tag$1 = "[object Float64Array]", int8Tag$1 = "[object Int8Array]", int16Tag$1 = "[object Int16Array]", int32Tag$1 = "[object Int32Array]", uint8Tag$1 = "[object Uint8Array]", uint8ClampedTag$1 = "[object Uint8ClampedArray]", uint16Tag$1 = "[object Uint16Array]", uint32Tag$1 = "[object Uint32Array]";
function initCloneByTag(object, tag, isDeep) {
  var Ctor = object.constructor;
  switch (tag) {
    case arrayBufferTag$2:
      return cloneArrayBuffer(object);
    case boolTag$2:
    case dateTag$2:
      return new Ctor(+object);
    case dataViewTag$2:
      return cloneDataView(object, isDeep);
    case float32Tag$1:
    case float64Tag$1:
    case int8Tag$1:
    case int16Tag$1:
    case int32Tag$1:
    case uint8Tag$1:
    case uint8ClampedTag$1:
    case uint16Tag$1:
    case uint32Tag$1:
      return cloneTypedArray(object, isDeep);
    case mapTag$3:
      return new Ctor();
    case numberTag$2:
    case stringTag$2:
      return new Ctor(object);
    case regexpTag$2:
      return cloneRegExp(object);
    case setTag$3:
      return new Ctor();
    case symbolTag$2:
      return cloneSymbol(object);
  }
}
function initCloneObject(object) {
  return typeof object.constructor == "function" && !isPrototype(object) ? baseCreate$1(getPrototype$1(object)) : {};
}
var mapTag$2 = "[object Map]";
function baseIsMap(value) {
  return isObjectLike(value) && getTag$1(value) == mapTag$2;
}
var nodeIsMap = nodeUtil$1 && nodeUtil$1.isMap;
var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;
var isMap$1 = isMap;
var setTag$2 = "[object Set]";
function baseIsSet(value) {
  return isObjectLike(value) && getTag$1(value) == setTag$2;
}
var nodeIsSet = nodeUtil$1 && nodeUtil$1.isSet;
var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
var isSet$1 = isSet;
var CLONE_DEEP_FLAG$1 = 1, CLONE_FLAT_FLAG = 2, CLONE_SYMBOLS_FLAG$2 = 4;
var argsTag$1 = "[object Arguments]", arrayTag$1 = "[object Array]", boolTag$1 = "[object Boolean]", dateTag$1 = "[object Date]", errorTag$1 = "[object Error]", funcTag = "[object Function]", genTag = "[object GeneratorFunction]", mapTag$1 = "[object Map]", numberTag$1 = "[object Number]", objectTag$1 = "[object Object]", regexpTag$1 = "[object RegExp]", setTag$1 = "[object Set]", stringTag$1 = "[object String]", symbolTag$1 = "[object Symbol]", weakMapTag = "[object WeakMap]";
var arrayBufferTag$1 = "[object ArrayBuffer]", dataViewTag$1 = "[object DataView]", float32Tag = "[object Float32Array]", float64Tag = "[object Float64Array]", int8Tag = "[object Int8Array]", int16Tag = "[object Int16Array]", int32Tag = "[object Int32Array]", uint8Tag = "[object Uint8Array]", uint8ClampedTag = "[object Uint8ClampedArray]", uint16Tag = "[object Uint16Array]", uint32Tag = "[object Uint32Array]";
var cloneableTags = {};
cloneableTags[argsTag$1] = cloneableTags[arrayTag$1] = cloneableTags[arrayBufferTag$1] = cloneableTags[dataViewTag$1] = cloneableTags[boolTag$1] = cloneableTags[dateTag$1] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag$1] = cloneableTags[numberTag$1] = cloneableTags[objectTag$1] = cloneableTags[regexpTag$1] = cloneableTags[setTag$1] = cloneableTags[stringTag$1] = cloneableTags[symbolTag$1] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
cloneableTags[errorTag$1] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
function baseClone(value, bitmask, customizer, key, object, stack) {
  var result, isDeep = bitmask & CLONE_DEEP_FLAG$1, isFlat = bitmask & CLONE_FLAT_FLAG, isFull = bitmask & CLONE_SYMBOLS_FLAG$2;
  if (customizer) {
    result = object ? customizer(value, key, object, stack) : customizer(value);
  }
  if (result !== void 0) {
    return result;
  }
  if (!isObject(value)) {
    return value;
  }
  var isArr = isArray$1(value);
  if (isArr) {
    result = initCloneArray(value);
    if (!isDeep) {
      return copyArray(value, result);
    }
  } else {
    var tag = getTag$1(value), isFunc = tag == funcTag || tag == genTag;
    if (isBuffer$1(value)) {
      return cloneBuffer(value, isDeep);
    }
    if (tag == objectTag$1 || tag == argsTag$1 || isFunc && !object) {
      result = isFlat || isFunc ? {} : initCloneObject(value);
      if (!isDeep) {
        return isFlat ? copySymbolsIn(value, baseAssignIn(result, value)) : copySymbols(value, baseAssign(result, value));
      }
    } else {
      if (!cloneableTags[tag]) {
        return object ? value : {};
      }
      result = initCloneByTag(value, tag, isDeep);
    }
  }
  stack || (stack = new Stack());
  var stacked = stack.get(value);
  if (stacked) {
    return stacked;
  }
  stack.set(value, result);
  if (isSet$1(value)) {
    value.forEach(function(subValue) {
      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
    });
  } else if (isMap$1(value)) {
    value.forEach(function(subValue, key2) {
      result.set(key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
    });
  }
  var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;
  var props = isArr ? void 0 : keysFunc(value);
  arrayEach(props || value, function(subValue, key2) {
    if (props) {
      key2 = subValue;
      subValue = value[key2];
    }
    assignValue(result, key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
  });
  return result;
}
var CLONE_SYMBOLS_FLAG$1 = 4;
function clone$1(value) {
  return baseClone(value, CLONE_SYMBOLS_FLAG$1);
}
var CLONE_DEEP_FLAG = 1, CLONE_SYMBOLS_FLAG = 4;
function cloneDeepWith(value, customizer) {
  customizer = typeof customizer == "function" ? customizer : void 0;
  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
}
var HASH_UNDEFINED = "__lodash_hash_undefined__";
function setCacheAdd(value) {
  this.__data__.set(value, HASH_UNDEFINED);
  return this;
}
function setCacheHas(value) {
  return this.__data__.has(value);
}
function SetCache(values) {
  var index = -1, length = values == null ? 0 : values.length;
  this.__data__ = new MapCache();
  while (++index < length) {
    this.add(values[index]);
  }
}
SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
SetCache.prototype.has = setCacheHas;
function arraySome(array, predicate) {
  var index = -1, length = array == null ? 0 : array.length;
  while (++index < length) {
    if (predicate(array[index], index, array)) {
      return true;
    }
  }
  return false;
}
function cacheHas(cache, key) {
  return cache.has(key);
}
var COMPARE_PARTIAL_FLAG$3 = 1, COMPARE_UNORDERED_FLAG$1 = 2;
function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG$3, arrLength = array.length, othLength = other.length;
  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  var arrStacked = stack.get(array);
  var othStacked = stack.get(other);
  if (arrStacked && othStacked) {
    return arrStacked == other && othStacked == array;
  }
  var index = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG$1 ? new SetCache() : void 0;
  stack.set(array, other);
  stack.set(other, array);
  while (++index < arrLength) {
    var arrValue = array[index], othValue = other[index];
    if (customizer) {
      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
    }
    if (compared !== void 0) {
      if (compared) {
        continue;
      }
      result = false;
      break;
    }
    if (seen) {
      if (!arraySome(other, function(othValue2, othIndex) {
        if (!cacheHas(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
          return seen.push(othIndex);
        }
      })) {
        result = false;
        break;
      }
    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
      result = false;
      break;
    }
  }
  stack["delete"](array);
  stack["delete"](other);
  return result;
}
function mapToArray(map) {
  var index = -1, result = Array(map.size);
  map.forEach(function(value, key) {
    result[++index] = [key, value];
  });
  return result;
}
function setToArray(set) {
  var index = -1, result = Array(set.size);
  set.forEach(function(value) {
    result[++index] = value;
  });
  return result;
}
var COMPARE_PARTIAL_FLAG$2 = 1, COMPARE_UNORDERED_FLAG = 2;
var boolTag = "[object Boolean]", dateTag = "[object Date]", errorTag = "[object Error]", mapTag = "[object Map]", numberTag = "[object Number]", regexpTag = "[object RegExp]", setTag = "[object Set]", stringTag = "[object String]", symbolTag = "[object Symbol]";
var arrayBufferTag = "[object ArrayBuffer]", dataViewTag = "[object DataView]";
var symbolProto = Symbol$2 ? Symbol$2.prototype : void 0, symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag:
      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
        return false;
      }
      object = object.buffer;
      other = other.buffer;
    case arrayBufferTag:
      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array$1(object), new Uint8Array$1(other))) {
        return false;
      }
      return true;
    case boolTag:
    case dateTag:
    case numberTag:
      return eq(+object, +other);
    case errorTag:
      return object.name == other.name && object.message == other.message;
    case regexpTag:
    case stringTag:
      return object == other + "";
    case mapTag:
      var convert = mapToArray;
    case setTag:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG$2;
      convert || (convert = setToArray);
      if (object.size != other.size && !isPartial) {
        return false;
      }
      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG;
      stack.set(object, other);
      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
      stack["delete"](object);
      return result;
    case symbolTag:
      if (symbolValueOf) {
        return symbolValueOf.call(object) == symbolValueOf.call(other);
      }
  }
  return false;
}
var COMPARE_PARTIAL_FLAG$1 = 1;
var objectProto$1 = Object.prototype;
var hasOwnProperty$1 = objectProto$1.hasOwnProperty;
function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG$1, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index = objLength;
  while (index--) {
    var key = objProps[index];
    if (!(isPartial ? key in other : hasOwnProperty$1.call(other, key))) {
      return false;
    }
  }
  var objStacked = stack.get(object);
  var othStacked = stack.get(other);
  if (objStacked && othStacked) {
    return objStacked == other && othStacked == object;
  }
  var result = true;
  stack.set(object, other);
  stack.set(other, object);
  var skipCtor = isPartial;
  while (++index < objLength) {
    key = objProps[index];
    var objValue = object[key], othValue = other[key];
    if (customizer) {
      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
    }
    if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
      result = false;
      break;
    }
    skipCtor || (skipCtor = key == "constructor");
  }
  if (result && !skipCtor) {
    var objCtor = object.constructor, othCtor = other.constructor;
    if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
      result = false;
    }
  }
  stack["delete"](object);
  stack["delete"](other);
  return result;
}
var COMPARE_PARTIAL_FLAG = 1;
var argsTag = "[object Arguments]", arrayTag = "[object Array]", objectTag = "[object Object]";
var objectProto = Object.prototype;
var hasOwnProperty = objectProto.hasOwnProperty;
function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = isArray$1(object), othIsArr = isArray$1(other), objTag = objIsArr ? arrayTag : getTag$1(object), othTag = othIsArr ? arrayTag : getTag$1(other);
  objTag = objTag == argsTag ? objectTag : objTag;
  othTag = othTag == argsTag ? objectTag : othTag;
  var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
  if (isSameTag && isBuffer$1(object)) {
    if (!isBuffer$1(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new Stack());
    return objIsArr || isTypedArray$1(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
    var objIsWrapped = objIsObj && hasOwnProperty.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty.call(other, "__wrapped__");
    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
      stack || (stack = new Stack());
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new Stack());
  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
}
function baseIsEqual(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }
  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
    return value !== value && other !== other;
  }
  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
}
var now = function() {
  return root$1.Date.now();
};
var now$1 = now;
var FUNC_ERROR_TEXT = "Expected a function";
var nativeMax = Math.max, nativeMin = Math.min;
function debounce(func, wait, options) {
  var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  wait = toNumber(wait) || 0;
  if (isObject(options)) {
    leading = !!options.leading;
    maxing = "maxWait" in options;
    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
    trailing = "trailing" in options ? !!options.trailing : trailing;
  }
  function invokeFunc(time) {
    var args = lastArgs, thisArg = lastThis;
    lastArgs = lastThis = void 0;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }
  function leadingEdge(time) {
    lastInvokeTime = time;
    timerId = setTimeout(timerExpired, wait);
    return leading ? invokeFunc(time) : result;
  }
  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
    return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
  }
  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
    return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
  }
  function timerExpired() {
    var time = now$1();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    timerId = setTimeout(timerExpired, remainingWait(time));
  }
  function trailingEdge(time) {
    timerId = void 0;
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = void 0;
    return result;
  }
  function cancel2() {
    if (timerId !== void 0) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = void 0;
  }
  function flush() {
    return timerId === void 0 ? result : trailingEdge(now$1());
  }
  function debounced() {
    var time = now$1(), isInvoking = shouldInvoke(time);
    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;
    if (isInvoking) {
      if (timerId === void 0) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        clearTimeout(timerId);
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === void 0) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel2;
  debounced.flush = flush;
  return debounced;
}
function last(array) {
  var length = array == null ? 0 : array.length;
  return length ? array[length - 1] : void 0;
}
function parent(object, path) {
  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
}
function isElement(value) {
  return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
}
function isEqual(value, other) {
  return baseIsEqual(value, other);
}
function baseUnset(object, path) {
  path = castPath(path, object);
  object = parent(object, path);
  return object == null || delete object[toKey(last(path))];
}
function unset(object, path) {
  return object == null ? true : baseUnset(object, path);
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
const observablePropertiesSymbol = Symbol("observableProperties");
const boundObservablesSymbol = Symbol("boundObservables");
const boundPropertiesSymbol = Symbol("boundProperties");
const decoratedMethods = Symbol("decoratedMethods");
const decoratedOriginal = Symbol("decoratedOriginal");
const defaultObservableClass = ObservableMixin(EmitterMixin());
function ObservableMixin(base) {
  if (!base) {
    return defaultObservableClass;
  }
  class Mixin extends base {
    set(name, value) {
      if (isObject(name)) {
        Object.keys(name).forEach((property) => {
          this.set(property, name[property]);
        }, this);
        return;
      }
      initObservable(this);
      const properties = this[observablePropertiesSymbol];
      if (name in this && !properties.has(name)) {
        throw new CKEditorError("observable-set-cannot-override", this);
      }
      Object.defineProperty(this, name, {
        enumerable: true,
        configurable: true,
        get() {
          return properties.get(name);
        },
        set(value2) {
          const oldValue = properties.get(name);
          let newValue = this.fire(`set:${name}`, name, value2, oldValue);
          if (newValue === void 0) {
            newValue = value2;
          }
          if (oldValue !== newValue || !properties.has(name)) {
            properties.set(name, newValue);
            this.fire(`change:${name}`, name, newValue, oldValue);
          }
        }
      });
      this[name] = value;
    }
    bind(...bindProperties) {
      if (!bindProperties.length || !isStringArray$1(bindProperties)) {
        throw new CKEditorError("observable-bind-wrong-properties", this);
      }
      if (new Set(bindProperties).size !== bindProperties.length) {
        throw new CKEditorError("observable-bind-duplicate-properties", this);
      }
      initObservable(this);
      const boundProperties = this[boundPropertiesSymbol];
      bindProperties.forEach((propertyName) => {
        if (boundProperties.has(propertyName)) {
          throw new CKEditorError("observable-bind-rebind", this);
        }
      });
      const bindings = /* @__PURE__ */ new Map();
      bindProperties.forEach((a2) => {
        const binding = { property: a2, to: [] };
        boundProperties.set(a2, binding);
        bindings.set(a2, binding);
      });
      return {
        to: bindTo,
        toMany: bindToMany,
        _observable: this,
        _bindProperties: bindProperties,
        _to: [],
        _bindings: bindings
      };
    }
    unbind(...unbindProperties) {
      if (!this[observablePropertiesSymbol]) {
        return;
      }
      const boundProperties = this[boundPropertiesSymbol];
      const boundObservables = this[boundObservablesSymbol];
      if (unbindProperties.length) {
        if (!isStringArray$1(unbindProperties)) {
          throw new CKEditorError("observable-unbind-wrong-properties", this);
        }
        unbindProperties.forEach((propertyName) => {
          const binding = boundProperties.get(propertyName);
          if (!binding) {
            return;
          }
          binding.to.forEach(([toObservable, toProperty]) => {
            const toProperties = boundObservables.get(toObservable);
            const toPropertyBindings = toProperties[toProperty];
            toPropertyBindings.delete(binding);
            if (!toPropertyBindings.size) {
              delete toProperties[toProperty];
            }
            if (!Object.keys(toProperties).length) {
              boundObservables.delete(toObservable);
              this.stopListening(toObservable, "change");
            }
          });
          boundProperties.delete(propertyName);
        });
      } else {
        boundObservables.forEach((bindings, boundObservable) => {
          this.stopListening(boundObservable, "change");
        });
        boundObservables.clear();
        boundProperties.clear();
      }
    }
    decorate(methodName) {
      initObservable(this);
      const originalMethod = this[methodName];
      if (!originalMethod) {
        throw new CKEditorError("observablemixin-cannot-decorate-undefined", this, { object: this, methodName });
      }
      this.on(methodName, (evt, args) => {
        evt.return = originalMethod.apply(this, args);
      });
      this[methodName] = function(...args) {
        return this.fire(methodName, args);
      };
      this[methodName][decoratedOriginal] = originalMethod;
      if (!this[decoratedMethods]) {
        this[decoratedMethods] = [];
      }
      this[decoratedMethods].push(methodName);
    }
    stopListening(emitter, event, callback) {
      if (!emitter && this[decoratedMethods]) {
        for (const methodName of this[decoratedMethods]) {
          this[methodName] = this[methodName][decoratedOriginal];
        }
        delete this[decoratedMethods];
      }
      super.stopListening(emitter, event, callback);
    }
  }
  return Mixin;
}
[
  "set",
  "bind",
  "unbind",
  "decorate",
  "on",
  "once",
  "off",
  "listenTo",
  "stopListening",
  "fire",
  "delegate",
  "stopDelegating",
  "_addEventListener",
  "_removeEventListener"
].forEach((key) => {
  ObservableMixin[key] = defaultObservableClass.prototype[key];
});
function initObservable(observable) {
  if (observable[observablePropertiesSymbol]) {
    return;
  }
  Object.defineProperty(observable, observablePropertiesSymbol, {
    value: /* @__PURE__ */ new Map()
  });
  Object.defineProperty(observable, boundObservablesSymbol, {
    value: /* @__PURE__ */ new Map()
  });
  Object.defineProperty(observable, boundPropertiesSymbol, {
    value: /* @__PURE__ */ new Map()
  });
}
function bindTo(...args) {
  const parsedArgs = parseBindToArgs(...args);
  const bindingsKeys = Array.from(this._bindings.keys());
  const numberOfBindings = bindingsKeys.length;
  if (!parsedArgs.callback && parsedArgs.to.length > 1) {
    throw new CKEditorError("observable-bind-to-no-callback", this);
  }
  if (numberOfBindings > 1 && parsedArgs.callback) {
    throw new CKEditorError("observable-bind-to-extra-callback", this);
  }
  parsedArgs.to.forEach((to) => {
    if (to.properties.length && to.properties.length !== numberOfBindings) {
      throw new CKEditorError("observable-bind-to-properties-length", this);
    }
    if (!to.properties.length) {
      to.properties = this._bindProperties;
    }
  });
  this._to = parsedArgs.to;
  if (parsedArgs.callback) {
    this._bindings.get(bindingsKeys[0]).callback = parsedArgs.callback;
  }
  attachBindToListeners(this._observable, this._to);
  updateBindToBound(this);
  this._bindProperties.forEach((propertyName) => {
    updateBoundObservableProperty(this._observable, propertyName);
  });
}
function bindToMany(observables, attribute, callback) {
  if (this._bindings.size > 1) {
    throw new CKEditorError("observable-bind-to-many-not-one-binding", this);
  }
  this.to(
    ...getBindingTargets(observables, attribute),
    callback
  );
}
function getBindingTargets(observables, attribute) {
  const observableAndAttributePairs = observables.map((observable) => [observable, attribute]);
  return Array.prototype.concat.apply([], observableAndAttributePairs);
}
function isStringArray$1(arr) {
  return arr.every((a2) => typeof a2 == "string");
}
function parseBindToArgs(...args) {
  if (!args.length) {
    throw new CKEditorError("observable-bind-to-parse-error", null);
  }
  const parsed = { to: [] };
  let lastObservable;
  if (typeof args[args.length - 1] == "function") {
    parsed.callback = args.pop();
  }
  args.forEach((a2) => {
    if (typeof a2 == "string") {
      lastObservable.properties.push(a2);
    } else if (typeof a2 == "object") {
      lastObservable = { observable: a2, properties: [] };
      parsed.to.push(lastObservable);
    } else {
      throw new CKEditorError("observable-bind-to-parse-error", null);
    }
  });
  return parsed;
}
function updateBoundObservables(observable, binding, toObservable, toPropertyName) {
  const boundObservables = observable[boundObservablesSymbol];
  const bindingsToObservable = boundObservables.get(toObservable);
  const bindings = bindingsToObservable || {};
  if (!bindings[toPropertyName]) {
    bindings[toPropertyName] = /* @__PURE__ */ new Set();
  }
  bindings[toPropertyName].add(binding);
  if (!bindingsToObservable) {
    boundObservables.set(toObservable, bindings);
  }
}
function updateBindToBound(chain) {
  let toProperty;
  chain._bindings.forEach((binding, propertyName) => {
    chain._to.forEach((to) => {
      toProperty = to.properties[binding.callback ? 0 : chain._bindProperties.indexOf(propertyName)];
      binding.to.push([to.observable, toProperty]);
      updateBoundObservables(chain._observable, binding, to.observable, toProperty);
    });
  });
}
function updateBoundObservableProperty(observable, propertyName) {
  const boundProperties = observable[boundPropertiesSymbol];
  const binding = boundProperties.get(propertyName);
  let propertyValue;
  if (binding.callback) {
    propertyValue = binding.callback.apply(observable, binding.to.map((to) => to[0][to[1]]));
  } else {
    propertyValue = binding.to[0];
    propertyValue = propertyValue[0][propertyValue[1]];
  }
  if (Object.prototype.hasOwnProperty.call(observable, propertyName)) {
    observable[propertyName] = propertyValue;
  } else {
    observable.set(propertyName, propertyValue);
  }
}
function attachBindToListeners(observable, toBindings) {
  toBindings.forEach((to) => {
    const boundObservables = observable[boundObservablesSymbol];
    let bindings;
    if (!boundObservables.get(to.observable)) {
      observable.listenTo(to.observable, "change", (evt, propertyName) => {
        bindings = boundObservables.get(to.observable)[propertyName];
        if (bindings) {
          bindings.forEach((binding) => {
            updateBoundObservableProperty(observable, binding.property);
          });
        }
      });
    }
  });
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
function count(iterable) {
  let count2 = 0;
  for (const _2 of iterable) {
    count2++;
  }
  return count2;
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
function compareArrays(a2, b2) {
  const minLen = Math.min(a2.length, b2.length);
  for (let i2 = 0; i2 < minLen; i2++) {
    if (a2[i2] != b2[i2]) {
      return i2;
    }
  }
  if (a2.length == b2.length) {
    return "same";
  } else if (a2.length < b2.length) {
    return "prefix";
  } else {
    return "extension";
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
function isIterable(value) {
  return !!(value && value[Symbol.iterator]);
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
function isNode(obj) {
  if (obj) {
    if (obj.defaultView) {
      return obj instanceof obj.defaultView.Document;
    } else if (obj.ownerDocument && obj.ownerDocument.defaultView) {
      return obj instanceof obj.ownerDocument.defaultView.Node;
    }
  }
  return false;
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
function isWindow(obj) {
  const stringifiedObject = Object.prototype.toString.apply(obj);
  if (stringifiedObject == "[object Window]") {
    return true;
  }
  if (stringifiedObject == "[object global]") {
    return true;
  }
  return false;
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
const defaultEmitterClass = DomEmitterMixin(EmitterMixin());
function DomEmitterMixin(base) {
  if (!base) {
    return defaultEmitterClass;
  }
  class Mixin extends base {
    listenTo(emitter, event, callback, options = {}) {
      if (isNode(emitter) || isWindow(emitter)) {
        const proxyOptions = {
          capture: !!options.useCapture,
          passive: !!options.usePassive
        };
        const proxyEmitter = this._getProxyEmitter(emitter, proxyOptions) || new ProxyEmitter(emitter, proxyOptions);
        this.listenTo(proxyEmitter, event, callback, options);
      } else {
        super.listenTo(emitter, event, callback, options);
      }
    }
    stopListening(emitter, event, callback) {
      if (isNode(emitter) || isWindow(emitter)) {
        const proxyEmitters = this._getAllProxyEmitters(emitter);
        for (const proxy of proxyEmitters) {
          this.stopListening(proxy, event, callback);
        }
      } else {
        super.stopListening(emitter, event, callback);
      }
    }
    _getProxyEmitter(node, options) {
      return _getEmitterListenedTo(this, getProxyEmitterId(node, options));
    }
    _getAllProxyEmitters(node) {
      return [
        { capture: false, passive: false },
        { capture: false, passive: true },
        { capture: true, passive: false },
        { capture: true, passive: true }
      ].map((options) => this._getProxyEmitter(node, options)).filter((proxy) => !!proxy);
    }
  }
  return Mixin;
}
[
  "_getProxyEmitter",
  "_getAllProxyEmitters",
  "on",
  "once",
  "off",
  "listenTo",
  "stopListening",
  "fire",
  "delegate",
  "stopDelegating",
  "_addEventListener",
  "_removeEventListener"
].forEach((key) => {
  DomEmitterMixin[key] = defaultEmitterClass.prototype[key];
});
class ProxyEmitter extends EmitterMixin() {
  constructor(node, options) {
    super();
    _setEmitterId(this, getProxyEmitterId(node, options));
    this._domNode = node;
    this._options = options;
  }
  attach(event) {
    if (this._domListeners && this._domListeners[event]) {
      return;
    }
    const domListener = this._createDomListener(event);
    this._domNode.addEventListener(event, domListener, this._options);
    if (!this._domListeners) {
      this._domListeners = {};
    }
    this._domListeners[event] = domListener;
  }
  detach(event) {
    let events;
    if (this._domListeners[event] && (!(events = this._events[event]) || !events.callbacks.length)) {
      this._domListeners[event].removeListener();
    }
  }
  _addEventListener(event, callback, options) {
    this.attach(event);
    EmitterMixin().prototype._addEventListener.call(this, event, callback, options);
  }
  _removeEventListener(event, callback) {
    EmitterMixin().prototype._removeEventListener.call(this, event, callback);
    this.detach(event);
  }
  _createDomListener(event) {
    const domListener = (domEvt) => {
      this.fire(event, domEvt);
    };
    domListener.removeListener = () => {
      this._domNode.removeEventListener(event, domListener, this._options);
      delete this._domListeners[event];
    };
    return domListener;
  }
}
function getNodeUID(node) {
  return node["data-ck-expando"] || (node["data-ck-expando"] = uid());
}
function getProxyEmitterId(node, options) {
  let id = getNodeUID(node);
  for (const option of Object.keys(options).sort()) {
    if (options[option]) {
      id += "-" + option;
    }
  }
  return id;
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
let globalVar;
try {
  globalVar = { window, document };
} catch (e2) {
  globalVar = { window: {}, document: {} };
}
var global$1 = globalVar;
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
function getAncestors(node) {
  const nodes = [];
  let currentNode = node;
  while (currentNode && currentNode.nodeType != Node.DOCUMENT_NODE) {
    nodes.unshift(currentNode);
    currentNode = currentNode.parentNode;
  }
  return nodes;
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
function isText(obj) {
  return Object.prototype.toString.call(obj) == "[object Text]";
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
function isRange(obj) {
  return Object.prototype.toString.apply(obj) == "[object Range]";
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
function getBorderWidths(element) {
  const style = element.ownerDocument.defaultView.getComputedStyle(element);
  return {
    top: parseInt(style.borderTopWidth, 10),
    right: parseInt(style.borderRightWidth, 10),
    bottom: parseInt(style.borderBottomWidth, 10),
    left: parseInt(style.borderLeftWidth, 10)
  };
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
const rectProperties = ["top", "right", "bottom", "left", "width", "height"];
class Rect {
  constructor(source) {
    const isSourceRange = isRange(source);
    Object.defineProperty(this, "_source", {
      value: source._source || source,
      writable: true,
      enumerable: false
    });
    if (isDomElement(source) || isSourceRange) {
      if (isSourceRange) {
        const rangeRects = Rect.getDomRangeRects(source);
        copyRectProperties(this, Rect.getBoundingRect(rangeRects));
      } else {
        copyRectProperties(this, source.getBoundingClientRect());
      }
    } else if (isWindow(source)) {
      const { innerWidth, innerHeight } = source;
      copyRectProperties(this, {
        top: 0,
        right: innerWidth,
        bottom: innerHeight,
        left: 0,
        width: innerWidth,
        height: innerHeight
      });
    } else {
      copyRectProperties(this, source);
    }
  }
  clone() {
    return new Rect(this);
  }
  moveTo(x2, y2) {
    this.top = y2;
    this.right = x2 + this.width;
    this.bottom = y2 + this.height;
    this.left = x2;
    return this;
  }
  moveBy(x2, y2) {
    this.top += y2;
    this.right += x2;
    this.left += x2;
    this.bottom += y2;
    return this;
  }
  getIntersection(anotherRect) {
    const rect = {
      top: Math.max(this.top, anotherRect.top),
      right: Math.min(this.right, anotherRect.right),
      bottom: Math.min(this.bottom, anotherRect.bottom),
      left: Math.max(this.left, anotherRect.left),
      width: 0,
      height: 0
    };
    rect.width = rect.right - rect.left;
    rect.height = rect.bottom - rect.top;
    if (rect.width < 0 || rect.height < 0) {
      return null;
    } else {
      return new Rect(rect);
    }
  }
  getIntersectionArea(anotherRect) {
    const rect = this.getIntersection(anotherRect);
    if (rect) {
      return rect.getArea();
    } else {
      return 0;
    }
  }
  getArea() {
    return this.width * this.height;
  }
  getVisible() {
    const source = this._source;
    let visibleRect = this.clone();
    if (!isBody(source)) {
      let parent2 = source.parentNode || source.commonAncestorContainer;
      while (parent2 && !isBody(parent2)) {
        const parentRect = new Rect(parent2);
        const intersectionRect = visibleRect.getIntersection(parentRect);
        if (intersectionRect) {
          if (intersectionRect.getArea() < visibleRect.getArea()) {
            visibleRect = intersectionRect;
          }
        } else {
          return null;
        }
        parent2 = parent2.parentNode;
      }
    }
    return visibleRect;
  }
  isEqual(anotherRect) {
    for (const prop of rectProperties) {
      if (this[prop] !== anotherRect[prop]) {
        return false;
      }
    }
    return true;
  }
  contains(anotherRect) {
    const intersectRect = this.getIntersection(anotherRect);
    return !!(intersectRect && intersectRect.isEqual(anotherRect));
  }
  excludeScrollbarsAndBorders() {
    const source = this._source;
    let scrollBarWidth, scrollBarHeight, direction;
    if (isWindow(source)) {
      scrollBarWidth = source.innerWidth - source.document.documentElement.clientWidth;
      scrollBarHeight = source.innerHeight - source.document.documentElement.clientHeight;
      direction = source.getComputedStyle(source.document.documentElement).direction;
    } else {
      const borderWidths = getBorderWidths(source);
      scrollBarWidth = source.offsetWidth - source.clientWidth - borderWidths.left - borderWidths.right;
      scrollBarHeight = source.offsetHeight - source.clientHeight - borderWidths.top - borderWidths.bottom;
      direction = source.ownerDocument.defaultView.getComputedStyle(source).direction;
      this.left += borderWidths.left;
      this.top += borderWidths.top;
      this.right -= borderWidths.right;
      this.bottom -= borderWidths.bottom;
      this.width = this.right - this.left;
      this.height = this.bottom - this.top;
    }
    this.width -= scrollBarWidth;
    if (direction === "ltr") {
      this.right -= scrollBarWidth;
    } else {
      this.left += scrollBarWidth;
    }
    this.height -= scrollBarHeight;
    this.bottom -= scrollBarHeight;
    return this;
  }
  static getDomRangeRects(range) {
    const rects = [];
    const clientRects = Array.from(range.getClientRects());
    if (clientRects.length) {
      for (const rect of clientRects) {
        rects.push(new Rect(rect));
      }
    } else {
      let startContainer = range.startContainer;
      if (isText(startContainer)) {
        startContainer = startContainer.parentNode;
      }
      const rect = new Rect(startContainer.getBoundingClientRect());
      rect.right = rect.left;
      rect.width = 0;
      rects.push(rect);
    }
    return rects;
  }
  static getBoundingRect(rects) {
    const boundingRectData = {
      left: Number.POSITIVE_INFINITY,
      top: Number.POSITIVE_INFINITY,
      right: Number.NEGATIVE_INFINITY,
      bottom: Number.NEGATIVE_INFINITY,
      width: 0,
      height: 0
    };
    let rectangleCount = 0;
    for (const rect of rects) {
      rectangleCount++;
      boundingRectData.left = Math.min(boundingRectData.left, rect.left);
      boundingRectData.top = Math.min(boundingRectData.top, rect.top);
      boundingRectData.right = Math.max(boundingRectData.right, rect.right);
      boundingRectData.bottom = Math.max(boundingRectData.bottom, rect.bottom);
    }
    if (rectangleCount == 0) {
      return null;
    }
    boundingRectData.width = boundingRectData.right - boundingRectData.left;
    boundingRectData.height = boundingRectData.bottom - boundingRectData.top;
    return new Rect(boundingRectData);
  }
}
function copyRectProperties(rect, source) {
  for (const p2 of rectProperties) {
    rect[p2] = source[p2];
  }
}
function isBody(value) {
  if (!isDomElement(value)) {
    return false;
  }
  return value === value.ownerDocument.body;
}
function isDomElement(value) {
  return value !== null && typeof value === "object" && value.nodeType === 1 && typeof value.getBoundingClientRect === "function";
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class ResizeObserver {
  constructor(element, callback) {
    if (!ResizeObserver._observerInstance) {
      ResizeObserver._createObserver();
    }
    this._element = element;
    this._callback = callback;
    ResizeObserver._addElementCallback(element, callback);
    ResizeObserver._observerInstance.observe(element);
  }
  destroy() {
    ResizeObserver._deleteElementCallback(this._element, this._callback);
  }
  static _addElementCallback(element, callback) {
    if (!ResizeObserver._elementCallbacks) {
      ResizeObserver._elementCallbacks = /* @__PURE__ */ new Map();
    }
    let callbacks = ResizeObserver._elementCallbacks.get(element);
    if (!callbacks) {
      callbacks = /* @__PURE__ */ new Set();
      ResizeObserver._elementCallbacks.set(element, callbacks);
    }
    callbacks.add(callback);
  }
  static _deleteElementCallback(element, callback) {
    const callbacks = ResizeObserver._getElementCallbacks(element);
    if (callbacks) {
      callbacks.delete(callback);
      if (!callbacks.size) {
        ResizeObserver._elementCallbacks.delete(element);
        ResizeObserver._observerInstance.unobserve(element);
      }
    }
    if (ResizeObserver._elementCallbacks && !ResizeObserver._elementCallbacks.size) {
      ResizeObserver._observerInstance = null;
      ResizeObserver._elementCallbacks = null;
    }
  }
  static _getElementCallbacks(element) {
    if (!ResizeObserver._elementCallbacks) {
      return null;
    }
    return ResizeObserver._elementCallbacks.get(element);
  }
  static _createObserver() {
    ResizeObserver._observerInstance = new global$1.window.ResizeObserver((entries) => {
      for (const entry of entries) {
        const callbacks = ResizeObserver._getElementCallbacks(entry.target);
        if (callbacks) {
          for (const callback of callbacks) {
            callback(entry);
          }
        }
      }
    });
  }
}
ResizeObserver._observerInstance = null;
ResizeObserver._elementCallbacks = null;
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
function toUnit(unit) {
  return (value) => value + unit;
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
function indexOf(node) {
  let index = 0;
  while (node.previousSibling) {
    node = node.previousSibling;
    index++;
  }
  return index;
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
function isComment(obj) {
  return obj && obj.nodeType === Node.COMMENT_NODE;
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
function isVisible(element) {
  return !!(element && element.getClientRects && element.getClientRects().length);
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
function getPositionedAncestor(element) {
  if (!element || !element.parentNode) {
    return null;
  }
  if (element.offsetParent === global$1.document.body) {
    return null;
  }
  return element.offsetParent;
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
function getOptimalPosition({ element, target, positions, limiter, fitInViewport, viewportOffsetConfig }) {
  if (isFunction(target)) {
    target = target();
  }
  if (isFunction(limiter)) {
    limiter = limiter();
  }
  const positionedElementAncestor = getPositionedAncestor(element);
  const elementRect = new Rect(element);
  const targetRect = new Rect(target);
  let bestPosition;
  const viewportRect = fitInViewport && getConstrainedViewportRect(viewportOffsetConfig) || null;
  const positionOptions = { targetRect, elementRect, positionedElementAncestor, viewportRect };
  if (!limiter && !fitInViewport) {
    bestPosition = new PositionObject(positions[0], positionOptions);
  } else {
    const limiterRect = limiter && new Rect(limiter).getVisible();
    Object.assign(positionOptions, { limiterRect, viewportRect });
    bestPosition = getBestPosition(positions, positionOptions) || new PositionObject(positions[0], positionOptions);
  }
  return bestPosition;
}
function getConstrainedViewportRect(viewportOffsetConfig) {
  viewportOffsetConfig = Object.assign({ top: 0, bottom: 0, left: 0, right: 0 }, viewportOffsetConfig);
  const viewportRect = new Rect(global$1.window);
  viewportRect.top += viewportOffsetConfig.top;
  viewportRect.height -= viewportOffsetConfig.top;
  viewportRect.bottom -= viewportOffsetConfig.bottom;
  viewportRect.height -= viewportOffsetConfig.bottom;
  return viewportRect;
}
function getBestPosition(positions, options) {
  const { elementRect } = options;
  const elementRectArea = elementRect.getArea();
  const positionInstances = positions.map((positioningFunction) => new PositionObject(positioningFunction, options)).filter((position) => !!position.name);
  let maxFitFactor = 0;
  let bestPosition = null;
  for (const position of positionInstances) {
    const { limiterIntersectionArea, viewportIntersectionArea } = position;
    if (limiterIntersectionArea === elementRectArea) {
      return position;
    }
    const fitFactor = viewportIntersectionArea ** 2 + limiterIntersectionArea ** 2;
    if (fitFactor > maxFitFactor) {
      maxFitFactor = fitFactor;
      bestPosition = position;
    }
  }
  return bestPosition;
}
function shiftRectToCompensatePositionedAncestor(rect, positionedElementAncestor) {
  const ancestorPosition = getRectForAbsolutePositioning(new Rect(positionedElementAncestor));
  const ancestorBorderWidths = getBorderWidths(positionedElementAncestor);
  let moveX = 0;
  let moveY = 0;
  moveX -= ancestorPosition.left;
  moveY -= ancestorPosition.top;
  moveX += positionedElementAncestor.scrollLeft;
  moveY += positionedElementAncestor.scrollTop;
  moveX -= ancestorBorderWidths.left;
  moveY -= ancestorBorderWidths.top;
  rect.moveBy(moveX, moveY);
}
function getRectForAbsolutePositioning(rect) {
  const { scrollX, scrollY } = global$1.window;
  return rect.clone().moveBy(scrollX, scrollY);
}
class PositionObject {
  constructor(positioningFunction, options) {
    const positioningFunctionOutput = positioningFunction(options.targetRect, options.elementRect, options.viewportRect);
    if (!positioningFunctionOutput) {
      return;
    }
    const { left, top, name, config } = positioningFunctionOutput;
    this.name = name;
    this.config = config;
    this._positioningFunctionCorrdinates = { left, top };
    this._options = options;
  }
  get left() {
    return this._absoluteRect.left;
  }
  get top() {
    return this._absoluteRect.top;
  }
  get limiterIntersectionArea() {
    const limiterRect = this._options.limiterRect;
    if (limiterRect) {
      const viewportRect = this._options.viewportRect;
      if (viewportRect) {
        const limiterViewportIntersectRect = limiterRect.getIntersection(viewportRect);
        if (limiterViewportIntersectRect) {
          return limiterViewportIntersectRect.getIntersectionArea(this._rect);
        }
      } else {
        return limiterRect.getIntersectionArea(this._rect);
      }
    }
    return 0;
  }
  get viewportIntersectionArea() {
    const viewportRect = this._options.viewportRect;
    if (viewportRect) {
      return viewportRect.getIntersectionArea(this._rect);
    }
    return 0;
  }
  get _rect() {
    if (this._cachedRect) {
      return this._cachedRect;
    }
    this._cachedRect = this._options.elementRect.clone().moveTo(this._positioningFunctionCorrdinates.left, this._positioningFunctionCorrdinates.top);
    return this._cachedRect;
  }
  get _absoluteRect() {
    if (this._cachedAbsoluteRect) {
      return this._cachedAbsoluteRect;
    }
    this._cachedAbsoluteRect = getRectForAbsolutePositioning(this._rect);
    if (this._options.positionedElementAncestor) {
      shiftRectToCompensatePositionedAncestor(this._cachedAbsoluteRect, this._options.positionedElementAncestor);
    }
    return this._cachedAbsoluteRect;
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
const modifiersToGlyphsMac = {
  ctrl: "\u2303",
  cmd: "\u2318",
  alt: "\u2325",
  shift: "\u21E7"
};
const modifiersToGlyphsNonMac = {
  ctrl: "Ctrl+",
  alt: "Alt+",
  shift: "Shift+"
};
const keyCodes = generateKnownKeyCodes();
const keyCodeNames = Object.fromEntries(Object.entries(keyCodes).map(([name, code]) => [code, name.charAt(0).toUpperCase() + name.slice(1)]));
function getCode(key) {
  let keyCode;
  if (typeof key == "string") {
    keyCode = keyCodes[key.toLowerCase()];
    if (!keyCode) {
      throw new CKEditorError("keyboard-unknown-key", null, { key });
    }
  } else {
    keyCode = key.keyCode + (key.altKey ? keyCodes.alt : 0) + (key.ctrlKey ? keyCodes.ctrl : 0) + (key.shiftKey ? keyCodes.shift : 0) + (key.metaKey ? keyCodes.cmd : 0);
  }
  return keyCode;
}
function parseKeystroke(keystroke) {
  if (typeof keystroke == "string") {
    keystroke = splitKeystrokeText(keystroke);
  }
  return keystroke.map((key) => typeof key == "string" ? getEnvKeyCode(key) : key).reduce((key, sum) => sum + key, 0);
}
function getEnvKeystrokeText(keystroke) {
  let keystrokeCode = parseKeystroke(keystroke);
  const modifiersToGlyphs = Object.entries(env.isMac ? modifiersToGlyphsMac : modifiersToGlyphsNonMac);
  const modifiers = modifiersToGlyphs.reduce((modifiers2, [name, glyph]) => {
    if ((keystrokeCode & keyCodes[name]) != 0) {
      keystrokeCode &= ~keyCodes[name];
      modifiers2 += glyph;
    }
    return modifiers2;
  }, "");
  return modifiers + (keystrokeCode ? keyCodeNames[keystrokeCode] : "");
}
function getEnvKeyCode(key) {
  if (key.endsWith("!")) {
    return getCode(key.slice(0, -1));
  }
  const code = getCode(key);
  return env.isMac && code == keyCodes.ctrl ? keyCodes.cmd : code;
}
function generateKnownKeyCodes() {
  const keyCodes2 = {
    arrowleft: 37,
    arrowup: 38,
    arrowright: 39,
    arrowdown: 40,
    backspace: 8,
    delete: 46,
    enter: 13,
    space: 32,
    esc: 27,
    tab: 9,
    ctrl: 1114112,
    shift: 2228224,
    alt: 4456448,
    cmd: 8912896
  };
  for (let code = 65; code <= 90; code++) {
    const letter = String.fromCharCode(code);
    keyCodes2[letter.toLowerCase()] = code;
  }
  for (let code = 48; code <= 57; code++) {
    keyCodes2[code - 48] = code;
  }
  for (let code = 112; code <= 123; code++) {
    keyCodes2["f" + (code - 111)] = code;
  }
  for (const char of "`-=[];',./\\") {
    keyCodes2[char] = char.charCodeAt(0);
  }
  return keyCodes2;
}
function splitKeystrokeText(keystroke) {
  return keystroke.split("+").map((key) => key.trim());
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
function toArray(data) {
  return Array.isArray(data) ? data : [data];
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
if (!global$1.window.CKEDITOR_TRANSLATIONS) {
  global$1.window.CKEDITOR_TRANSLATIONS = {};
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class Collection extends EmitterMixin() {
  constructor(initialItemsOrOptions = {}, options = {}) {
    super();
    const hasInitialItems = isIterable(initialItemsOrOptions);
    if (!hasInitialItems) {
      options = initialItemsOrOptions;
    }
    this._items = [];
    this._itemMap = /* @__PURE__ */ new Map();
    this._idProperty = options.idProperty || "id";
    this._bindToExternalToInternalMap = /* @__PURE__ */ new WeakMap();
    this._bindToInternalToExternalMap = /* @__PURE__ */ new WeakMap();
    this._skippedIndexesFromExternal = [];
    if (hasInitialItems) {
      for (const item of initialItemsOrOptions) {
        this._items.push(item);
        this._itemMap.set(this._getItemIdBeforeAdding(item), item);
      }
    }
  }
  get length() {
    return this._items.length;
  }
  get first() {
    return this._items[0] || null;
  }
  get last() {
    return this._items[this.length - 1] || null;
  }
  add(item, index) {
    return this.addMany([item], index);
  }
  addMany(items, index) {
    if (index === void 0) {
      index = this._items.length;
    } else if (index > this._items.length || index < 0) {
      throw new CKEditorError("collection-add-item-invalid-index", this);
    }
    let offset = 0;
    for (const item of items) {
      const itemId = this._getItemIdBeforeAdding(item);
      const currentItemIndex = index + offset;
      this._items.splice(currentItemIndex, 0, item);
      this._itemMap.set(itemId, item);
      this.fire("add", item, currentItemIndex);
      offset++;
    }
    this.fire("change", {
      added: items,
      removed: [],
      index
    });
    return this;
  }
  get(idOrIndex) {
    let item;
    if (typeof idOrIndex == "string") {
      item = this._itemMap.get(idOrIndex);
    } else if (typeof idOrIndex == "number") {
      item = this._items[idOrIndex];
    } else {
      throw new CKEditorError("collection-get-invalid-arg", this);
    }
    return item || null;
  }
  has(itemOrId) {
    if (typeof itemOrId == "string") {
      return this._itemMap.has(itemOrId);
    } else {
      const idProperty = this._idProperty;
      const id = itemOrId[idProperty];
      return id && this._itemMap.has(id);
    }
  }
  getIndex(itemOrId) {
    let item;
    if (typeof itemOrId == "string") {
      item = this._itemMap.get(itemOrId);
    } else {
      item = itemOrId;
    }
    return item ? this._items.indexOf(item) : -1;
  }
  remove(subject) {
    const [item, index] = this._remove(subject);
    this.fire("change", {
      added: [],
      removed: [item],
      index
    });
    return item;
  }
  map(callback, ctx) {
    return this._items.map(callback, ctx);
  }
  find(callback, ctx) {
    return this._items.find(callback, ctx);
  }
  filter(callback, ctx) {
    return this._items.filter(callback, ctx);
  }
  clear() {
    if (this._bindToCollection) {
      this.stopListening(this._bindToCollection);
      this._bindToCollection = null;
    }
    const removedItems = Array.from(this._items);
    while (this.length) {
      this._remove(0);
    }
    this.fire("change", {
      added: [],
      removed: removedItems,
      index: 0
    });
  }
  bindTo(externalCollection) {
    if (this._bindToCollection) {
      throw new CKEditorError("collection-bind-to-rebind", this);
    }
    this._bindToCollection = externalCollection;
    return {
      as: (Class) => {
        this._setUpBindToBinding((item) => new Class(item));
      },
      using: (callbackOrProperty) => {
        if (typeof callbackOrProperty == "function") {
          this._setUpBindToBinding(callbackOrProperty);
        } else {
          this._setUpBindToBinding((item) => item[callbackOrProperty]);
        }
      }
    };
  }
  _setUpBindToBinding(factory) {
    const externalCollection = this._bindToCollection;
    const addItem = (evt, externalItem, index) => {
      const isExternalBoundToThis = externalCollection._bindToCollection == this;
      const externalItemBound = externalCollection._bindToInternalToExternalMap.get(externalItem);
      if (isExternalBoundToThis && externalItemBound) {
        this._bindToExternalToInternalMap.set(externalItem, externalItemBound);
        this._bindToInternalToExternalMap.set(externalItemBound, externalItem);
      } else {
        const item = factory(externalItem);
        if (!item) {
          this._skippedIndexesFromExternal.push(index);
          return;
        }
        let finalIndex = index;
        for (const skipped of this._skippedIndexesFromExternal) {
          if (index > skipped) {
            finalIndex--;
          }
        }
        for (const skipped of externalCollection._skippedIndexesFromExternal) {
          if (finalIndex >= skipped) {
            finalIndex++;
          }
        }
        this._bindToExternalToInternalMap.set(externalItem, item);
        this._bindToInternalToExternalMap.set(item, externalItem);
        this.add(item, finalIndex);
        for (let i2 = 0; i2 < externalCollection._skippedIndexesFromExternal.length; i2++) {
          if (finalIndex <= externalCollection._skippedIndexesFromExternal[i2]) {
            externalCollection._skippedIndexesFromExternal[i2]++;
          }
        }
      }
    };
    for (const externalItem of externalCollection) {
      addItem(null, externalItem, externalCollection.getIndex(externalItem));
    }
    this.listenTo(externalCollection, "add", addItem);
    this.listenTo(externalCollection, "remove", (evt, externalItem, index) => {
      const item = this._bindToExternalToInternalMap.get(externalItem);
      if (item) {
        this.remove(item);
      }
      this._skippedIndexesFromExternal = this._skippedIndexesFromExternal.reduce((result, skipped) => {
        if (index < skipped) {
          result.push(skipped - 1);
        }
        if (index > skipped) {
          result.push(skipped);
        }
        return result;
      }, []);
    });
  }
  _getItemIdBeforeAdding(item) {
    const idProperty = this._idProperty;
    let itemId;
    if (idProperty in item) {
      itemId = item[idProperty];
      if (typeof itemId != "string") {
        throw new CKEditorError("collection-add-invalid-id", this);
      }
      if (this.get(itemId)) {
        throw new CKEditorError("collection-add-item-already-exists", this);
      }
    } else {
      item[idProperty] = itemId = uid();
    }
    return itemId;
  }
  _remove(subject) {
    let index, id, item;
    let itemDoesNotExist = false;
    const idProperty = this._idProperty;
    if (typeof subject == "string") {
      id = subject;
      item = this._itemMap.get(id);
      itemDoesNotExist = !item;
      if (item) {
        index = this._items.indexOf(item);
      }
    } else if (typeof subject == "number") {
      index = subject;
      item = this._items[index];
      itemDoesNotExist = !item;
      if (item) {
        id = item[idProperty];
      }
    } else {
      item = subject;
      id = item[idProperty];
      index = this._items.indexOf(item);
      itemDoesNotExist = index == -1 || !this._itemMap.get(id);
    }
    if (itemDoesNotExist) {
      throw new CKEditorError("collection-remove-404", this);
    }
    this._items.splice(index, 1);
    this._itemMap.delete(id);
    const externalItem = this._bindToInternalToExternalMap.get(item);
    this._bindToInternalToExternalMap.delete(item);
    this._bindToExternalToInternalMap.delete(externalItem);
    this.fire("remove", item, index);
    return [item, index];
  }
  [Symbol.iterator]() {
    return this._items[Symbol.iterator]();
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
function first(iterator) {
  const iteratorItem = iterator.next();
  if (iteratorItem.done) {
    return null;
  }
  return iteratorItem.value;
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class FocusTracker extends DomEmitterMixin(ObservableMixin()) {
  constructor() {
    super();
    this._elements = /* @__PURE__ */ new Set();
    this._nextEventLoopTimeout = null;
    this.set("isFocused", false);
    this.set("focusedElement", null);
  }
  add(element) {
    if (this._elements.has(element)) {
      throw new CKEditorError("focustracker-add-element-already-exist", this);
    }
    this.listenTo(element, "focus", () => this._focus(element), { useCapture: true });
    this.listenTo(element, "blur", () => this._blur(), { useCapture: true });
    this._elements.add(element);
  }
  remove(element) {
    if (element === this.focusedElement) {
      this._blur();
    }
    if (this._elements.has(element)) {
      this.stopListening(element);
      this._elements.delete(element);
    }
  }
  destroy() {
    this.stopListening();
  }
  _focus(element) {
    clearTimeout(this._nextEventLoopTimeout);
    this.focusedElement = element;
    this.isFocused = true;
  }
  _blur() {
    clearTimeout(this._nextEventLoopTimeout);
    this._nextEventLoopTimeout = setTimeout(() => {
      this.focusedElement = null;
      this.isFocused = false;
    }, 0);
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class KeystrokeHandler {
  constructor() {
    this._listener = new (DomEmitterMixin())();
  }
  listenTo(emitter) {
    this._listener.listenTo(emitter, "keydown", (evt, keyEvtData) => {
      this._listener.fire("_keydown:" + getCode(keyEvtData), keyEvtData);
    });
  }
  set(keystroke, callback, options = {}) {
    const keyCode = parseKeystroke(keystroke);
    const priority = options.priority;
    this._listener.listenTo(this._listener, "_keydown:" + keyCode, (evt, keyEvtData) => {
      callback(keyEvtData, () => {
        keyEvtData.preventDefault();
        keyEvtData.stopPropagation();
        evt.stop();
      });
      evt.return = true;
    }, { priority });
  }
  press(keyEvtData) {
    return !!this._listener.fire("_keydown:" + getCode(keyEvtData), keyEvtData);
  }
  destroy() {
    this._listener.stopListening();
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
function objectToMap(obj) {
  const map = /* @__PURE__ */ new Map();
  for (const key in obj) {
    map.set(key, obj[key]);
  }
  return map;
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
function toMap(data) {
  if (isIterable(data)) {
    return new Map(data);
  } else {
    return objectToMap(data);
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
const BIG_CHUNK_SIZE = 1e4;
function spliceArray(target, source, start, count2) {
  if (Math.max(source.length, target.length) > BIG_CHUNK_SIZE) {
    return target.slice(0, start).concat(source).concat(target.slice(start + count2, target.length));
  } else {
    const newTarget = Array.from(target);
    newTarget.splice(start, count2, ...source);
    return newTarget;
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
function isCombiningMark(character) {
  return !!character && character.length == 1 && /[\u0300-\u036f\u1ab0-\u1aff\u1dc0-\u1dff\u20d0-\u20ff\ufe20-\ufe2f]/.test(character);
}
function isHighSurrogateHalf(character) {
  return !!character && character.length == 1 && /[\ud800-\udbff]/.test(character);
}
function isLowSurrogateHalf(character) {
  return !!character && character.length == 1 && /[\udc00-\udfff]/.test(character);
}
function isInsideSurrogatePair(string, offset) {
  return isHighSurrogateHalf(string.charAt(offset - 1)) && isLowSurrogateHalf(string.charAt(offset));
}
function isInsideCombinedSymbol(string, offset) {
  return isCombiningMark(string.charAt(offset));
}
buildEmojiRegexp();
function buildEmojiRegexp() {
  const parts = [
    /\p{Emoji}[\u{E0020}-\u{E007E}]+\u{E007F}/u,
    /\p{Emoji}\u{FE0F}?\u{20E3}/u,
    /\p{Emoji}\u{FE0F}/u,
    /(?=\p{General_Category=Other_Symbol})\p{Emoji}\p{Emoji_Modifier}*/u
  ];
  const flagSequence = /\p{Regional_Indicator}{2}/u.source;
  const emoji = "(?:" + parts.map((part) => part.source).join("|") + ")";
  const sequence = `${flagSequence}|${emoji}(?:\u200D${emoji})*`;
  return new RegExp(sequence, "ug");
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class Plugin extends ObservableMixin() {
  constructor(editor) {
    super();
    this.editor = editor;
    this.set("isEnabled", true);
    this._disableStack = /* @__PURE__ */ new Set();
  }
  forceDisabled(id) {
    this._disableStack.add(id);
    if (this._disableStack.size == 1) {
      this.on("set:isEnabled", forceDisable$1, { priority: "highest" });
      this.isEnabled = false;
    }
  }
  clearForceDisabled(id) {
    this._disableStack.delete(id);
    if (this._disableStack.size == 0) {
      this.off("set:isEnabled", forceDisable$1);
      this.isEnabled = true;
    }
  }
  destroy() {
    this.stopListening();
  }
  static get isContextPlugin() {
    return false;
  }
}
function forceDisable$1(evt) {
  evt.return = false;
  evt.stop();
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class Command extends ObservableMixin() {
  constructor(editor) {
    super();
    this.editor = editor;
    this.set("value", void 0);
    this.set("isEnabled", false);
    this._affectsData = true;
    this._disableStack = /* @__PURE__ */ new Set();
    this.decorate("execute");
    this.listenTo(this.editor.model.document, "change", () => {
      this.refresh();
    });
    this.on("execute", (evt) => {
      if (!this.isEnabled) {
        evt.stop();
      }
    }, { priority: "high" });
    this.listenTo(editor, "change:isReadOnly", (evt, name, value) => {
      if (value && this.affectsData) {
        this.forceDisabled("readOnlyMode");
      } else {
        this.clearForceDisabled("readOnlyMode");
      }
    });
  }
  get affectsData() {
    return this._affectsData;
  }
  set affectsData(affectsData) {
    this._affectsData = affectsData;
  }
  refresh() {
    this.isEnabled = true;
  }
  forceDisabled(id) {
    this._disableStack.add(id);
    if (this._disableStack.size == 1) {
      this.on("set:isEnabled", forceDisable, { priority: "highest" });
      this.isEnabled = false;
    }
  }
  clearForceDisabled(id) {
    this._disableStack.delete(id);
    if (this._disableStack.size == 0) {
      this.off("set:isEnabled", forceDisable);
      this.refresh();
    }
  }
  execute(...args) {
    return void 0;
  }
  destroy() {
    this.stopListening();
  }
}
function forceDisable(evt) {
  evt.return = false;
  evt.stop();
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class PluginCollection extends EmitterMixin() {
  constructor(context, availablePlugins = [], contextPlugins = []) {
    super();
    this._context = context;
    this._plugins = /* @__PURE__ */ new Map();
    this._availablePlugins = /* @__PURE__ */ new Map();
    for (const PluginConstructor of availablePlugins) {
      if (PluginConstructor.pluginName) {
        this._availablePlugins.set(PluginConstructor.pluginName, PluginConstructor);
      }
    }
    this._contextPlugins = /* @__PURE__ */ new Map();
    for (const [PluginConstructor, pluginInstance] of contextPlugins) {
      this._contextPlugins.set(PluginConstructor, pluginInstance);
      this._contextPlugins.set(pluginInstance, PluginConstructor);
      if (PluginConstructor.pluginName) {
        this._availablePlugins.set(PluginConstructor.pluginName, PluginConstructor);
      }
    }
  }
  *[Symbol.iterator]() {
    for (const entry of this._plugins) {
      if (typeof entry[0] == "function") {
        yield entry;
      }
    }
  }
  get(key) {
    const plugin = this._plugins.get(key);
    if (!plugin) {
      let pluginName = key;
      if (typeof key == "function") {
        pluginName = key.pluginName || key.name;
      }
      throw new CKEditorError("plugincollection-plugin-not-loaded", this._context, { plugin: pluginName });
    }
    return plugin;
  }
  has(key) {
    return this._plugins.has(key);
  }
  init(plugins, pluginsToRemove = [], pluginsSubstitutions = []) {
    const that = this;
    const context = this._context;
    findAvailablePluginConstructors(plugins);
    validatePlugins(plugins);
    const pluginsToLoad = plugins.filter((plugin) => !isPluginRemoved(plugin, pluginsToRemove));
    const pluginConstructors = [...getPluginConstructors(pluginsToLoad)];
    substitutePlugins(pluginConstructors, pluginsSubstitutions);
    const pluginInstances = loadPlugins(pluginConstructors);
    return initPlugins(pluginInstances, "init").then(() => initPlugins(pluginInstances, "afterInit")).then(() => pluginInstances);
    function isPluginConstructor(plugin) {
      return typeof plugin === "function";
    }
    function isContextPlugin(plugin) {
      return isPluginConstructor(plugin) && plugin.isContextPlugin;
    }
    function isPluginRemoved(plugin, pluginsToRemove2) {
      return pluginsToRemove2.some((removedPlugin) => {
        if (removedPlugin === plugin) {
          return true;
        }
        if (getPluginName(plugin) === removedPlugin) {
          return true;
        }
        if (getPluginName(removedPlugin) === plugin) {
          return true;
        }
        return false;
      });
    }
    function getPluginName(plugin) {
      return isPluginConstructor(plugin) ? plugin.pluginName || plugin.name : plugin;
    }
    function findAvailablePluginConstructors(plugins2, processed = /* @__PURE__ */ new Set()) {
      plugins2.forEach((plugin) => {
        if (!isPluginConstructor(plugin)) {
          return;
        }
        if (processed.has(plugin)) {
          return;
        }
        processed.add(plugin);
        if (plugin.pluginName && !that._availablePlugins.has(plugin.pluginName)) {
          that._availablePlugins.set(plugin.pluginName, plugin);
        }
        if (plugin.requires) {
          findAvailablePluginConstructors(plugin.requires, processed);
        }
      });
    }
    function getPluginConstructors(plugins2, processed = /* @__PURE__ */ new Set()) {
      return plugins2.map((plugin) => {
        return isPluginConstructor(plugin) ? plugin : that._availablePlugins.get(plugin);
      }).reduce((result, plugin) => {
        if (processed.has(plugin)) {
          return result;
        }
        processed.add(plugin);
        if (plugin.requires) {
          validatePlugins(plugin.requires, plugin);
          getPluginConstructors(plugin.requires, processed).forEach((plugin2) => result.add(plugin2));
        }
        return result.add(plugin);
      }, /* @__PURE__ */ new Set());
    }
    function validatePlugins(plugins2, parentPluginConstructor = null) {
      plugins2.map((plugin) => {
        return isPluginConstructor(plugin) ? plugin : that._availablePlugins.get(plugin) || plugin;
      }).forEach((plugin) => {
        checkMissingPlugin(plugin, parentPluginConstructor);
        checkContextPlugin(plugin, parentPluginConstructor);
        checkRemovedPlugin(plugin, parentPluginConstructor);
      });
    }
    function checkMissingPlugin(plugin, parentPluginConstructor) {
      if (isPluginConstructor(plugin)) {
        return;
      }
      if (parentPluginConstructor) {
        throw new CKEditorError("plugincollection-soft-required", context, { missingPlugin: plugin, requiredBy: getPluginName(parentPluginConstructor) });
      }
      throw new CKEditorError("plugincollection-plugin-not-found", context, { plugin });
    }
    function checkContextPlugin(plugin, parentPluginConstructor) {
      if (!isContextPlugin(parentPluginConstructor)) {
        return;
      }
      if (isContextPlugin(plugin)) {
        return;
      }
      throw new CKEditorError("plugincollection-context-required", context, { plugin: getPluginName(plugin), requiredBy: getPluginName(parentPluginConstructor) });
    }
    function checkRemovedPlugin(plugin, parentPluginConstructor) {
      if (!parentPluginConstructor) {
        return;
      }
      if (!isPluginRemoved(plugin, pluginsToRemove)) {
        return;
      }
      throw new CKEditorError("plugincollection-required", context, { plugin: getPluginName(plugin), requiredBy: getPluginName(parentPluginConstructor) });
    }
    function loadPlugins(pluginConstructors2) {
      return pluginConstructors2.map((PluginConstructor) => {
        let pluginInstance = that._contextPlugins.get(PluginConstructor);
        pluginInstance = pluginInstance || new PluginConstructor(context);
        that._add(PluginConstructor, pluginInstance);
        return pluginInstance;
      });
    }
    function initPlugins(pluginInstances2, method) {
      return pluginInstances2.reduce((promise, plugin) => {
        if (!plugin[method]) {
          return promise;
        }
        if (that._contextPlugins.has(plugin)) {
          return promise;
        }
        return promise.then(plugin[method].bind(plugin));
      }, Promise.resolve());
    }
    function substitutePlugins(pluginConstructors2, pluginsSubstitutions2) {
      for (const pluginItem of pluginsSubstitutions2) {
        if (typeof pluginItem != "function") {
          throw new CKEditorError("plugincollection-replace-plugin-invalid-type", null, { pluginItem });
        }
        const pluginName = pluginItem.pluginName;
        if (!pluginName) {
          throw new CKEditorError("plugincollection-replace-plugin-missing-name", null, { pluginItem });
        }
        if (pluginItem.requires && pluginItem.requires.length) {
          throw new CKEditorError("plugincollection-plugin-for-replacing-cannot-have-dependencies", null, { pluginName });
        }
        const pluginToReplace = that._availablePlugins.get(pluginName);
        if (!pluginToReplace) {
          throw new CKEditorError("plugincollection-plugin-for-replacing-not-exist", null, { pluginName });
        }
        const indexInPluginConstructors = pluginConstructors2.indexOf(pluginToReplace);
        if (indexInPluginConstructors === -1) {
          if (that._contextPlugins.has(pluginToReplace)) {
            return;
          }
          throw new CKEditorError("plugincollection-plugin-for-replacing-not-loaded", null, { pluginName });
        }
        if (pluginToReplace.requires && pluginToReplace.requires.length) {
          throw new CKEditorError("plugincollection-replaced-plugin-cannot-have-dependencies", null, { pluginName });
        }
        pluginConstructors2.splice(indexInPluginConstructors, 1, pluginItem);
        that._availablePlugins.set(pluginName, pluginItem);
      }
    }
  }
  destroy() {
    const promises = [];
    for (const [, pluginInstance] of this) {
      if (typeof pluginInstance.destroy == "function" && !this._contextPlugins.has(pluginInstance)) {
        promises.push(pluginInstance.destroy());
      }
    }
    return Promise.all(promises);
  }
  _add(PluginConstructor, plugin) {
    this._plugins.set(PluginConstructor, plugin);
    const pluginName = PluginConstructor.pluginName;
    if (!pluginName) {
      return;
    }
    if (this._plugins.has(pluginName)) {
      throw new CKEditorError("plugincollection-plugin-name-conflict", null, { pluginName, plugin1: this._plugins.get(pluginName).constructor, plugin2: PluginConstructor });
    }
    this._plugins.set(pluginName, plugin);
  }
}
var placeholder = "";
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class TypeCheckable$1 {
  is() {
    throw new Error("is() method is abstract");
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class Node$2 extends EmitterMixin(TypeCheckable$1) {
  constructor(document2) {
    super();
    this.document = document2;
    this.parent = null;
  }
  get index() {
    let pos;
    if (!this.parent) {
      return null;
    }
    if ((pos = this.parent.getChildIndex(this)) == -1) {
      throw new CKEditorError("view-node-not-found-in-parent", this);
    }
    return pos;
  }
  get nextSibling() {
    const index = this.index;
    return index !== null && this.parent.getChild(index + 1) || null;
  }
  get previousSibling() {
    const index = this.index;
    return index !== null && this.parent.getChild(index - 1) || null;
  }
  get root() {
    let root2 = this;
    while (root2.parent) {
      root2 = root2.parent;
    }
    return root2;
  }
  isAttached() {
    return this.root.is("rootElement");
  }
  getPath() {
    const path = [];
    let node = this;
    while (node.parent) {
      path.unshift(node.index);
      node = node.parent;
    }
    return path;
  }
  getAncestors(options = {}) {
    const ancestors = [];
    let parent2 = options.includeSelf ? this : this.parent;
    while (parent2) {
      ancestors[options.parentFirst ? "push" : "unshift"](parent2);
      parent2 = parent2.parent;
    }
    return ancestors;
  }
  getCommonAncestor(node, options = {}) {
    const ancestorsA = this.getAncestors(options);
    const ancestorsB = node.getAncestors(options);
    let i2 = 0;
    while (ancestorsA[i2] == ancestorsB[i2] && ancestorsA[i2]) {
      i2++;
    }
    return i2 === 0 ? null : ancestorsA[i2 - 1];
  }
  isBefore(node) {
    if (this == node) {
      return false;
    }
    if (this.root !== node.root) {
      return false;
    }
    const thisPath = this.getPath();
    const nodePath = node.getPath();
    const result = compareArrays(thisPath, nodePath);
    switch (result) {
      case "prefix":
        return true;
      case "extension":
        return false;
      default:
        return thisPath[result] < nodePath[result];
    }
  }
  isAfter(node) {
    if (this == node) {
      return false;
    }
    if (this.root !== node.root) {
      return false;
    }
    return !this.isBefore(node);
  }
  _remove() {
    this.parent._removeChildren(this.index);
  }
  _fireChange(type, node) {
    this.fire(`change:${type}`, node);
    if (this.parent) {
      this.parent._fireChange(type, node);
    }
  }
  toJSON() {
    const json = clone$1(this);
    delete json.parent;
    return json;
  }
}
Node$2.prototype.is = function(type) {
  return type === "node" || type === "view:node";
};
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class Text$2 extends Node$2 {
  constructor(document2, data) {
    super(document2);
    this._textData = data;
  }
  get data() {
    return this._textData;
  }
  get _data() {
    return this.data;
  }
  set _data(data) {
    this._fireChange("text", this);
    this._textData = data;
  }
  isSimilar(otherNode) {
    if (!(otherNode instanceof Text$2)) {
      return false;
    }
    return this === otherNode || this.data === otherNode.data;
  }
  _clone() {
    return new Text$2(this.document, this.data);
  }
}
Text$2.prototype.is = function(type) {
  return type === "$text" || type === "view:$text" || type === "text" || type === "view:text" || type === "node" || type === "view:node";
};
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class TextProxy$1 extends TypeCheckable$1 {
  constructor(textNode, offsetInText, length) {
    super();
    this.textNode = textNode;
    if (offsetInText < 0 || offsetInText > textNode.data.length) {
      throw new CKEditorError("view-textproxy-wrong-offsetintext", this);
    }
    if (length < 0 || offsetInText + length > textNode.data.length) {
      throw new CKEditorError("view-textproxy-wrong-length", this);
    }
    this.data = textNode.data.substring(offsetInText, offsetInText + length);
    this.offsetInText = offsetInText;
  }
  get offsetSize() {
    return this.data.length;
  }
  get isPartial() {
    return this.data.length !== this.textNode.data.length;
  }
  get parent() {
    return this.textNode.parent;
  }
  get root() {
    return this.textNode.root;
  }
  get document() {
    return this.textNode.document;
  }
  getAncestors(options = {}) {
    const ancestors = [];
    let parent2 = options.includeSelf ? this.textNode : this.parent;
    while (parent2 !== null) {
      ancestors[options.parentFirst ? "push" : "unshift"](parent2);
      parent2 = parent2.parent;
    }
    return ancestors;
  }
}
TextProxy$1.prototype.is = function(type) {
  return type === "$textProxy" || type === "view:$textProxy" || type === "textProxy" || type === "view:textProxy";
};
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class Matcher {
  constructor(...pattern) {
    this._patterns = [];
    this.add(...pattern);
  }
  add(...pattern) {
    for (let item of pattern) {
      if (typeof item == "string" || item instanceof RegExp) {
        item = { name: item };
      }
      this._patterns.push(item);
    }
  }
  match(...element) {
    for (const singleElement of element) {
      for (const pattern of this._patterns) {
        const match = isElementMatching(singleElement, pattern);
        if (match) {
          return {
            element: singleElement,
            pattern,
            match
          };
        }
      }
    }
    return null;
  }
  matchAll(...element) {
    const results = [];
    for (const singleElement of element) {
      for (const pattern of this._patterns) {
        const match = isElementMatching(singleElement, pattern);
        if (match) {
          results.push({
            element: singleElement,
            pattern,
            match
          });
        }
      }
    }
    return results.length > 0 ? results : null;
  }
  getElementName() {
    if (this._patterns.length !== 1) {
      return null;
    }
    const pattern = this._patterns[0];
    const name = pattern.name;
    return typeof pattern != "function" && name && !(name instanceof RegExp) ? name : null;
  }
}
function isElementMatching(element, pattern) {
  if (typeof pattern == "function") {
    return pattern(element);
  }
  const match = {};
  if (pattern.name) {
    match.name = matchName(pattern.name, element.name);
    if (!match.name) {
      return null;
    }
  }
  if (pattern.attributes) {
    match.attributes = matchAttributes(pattern.attributes, element);
    if (!match.attributes) {
      return null;
    }
  }
  if (pattern.classes) {
    match.classes = matchClasses(pattern.classes, element);
    if (!match.classes) {
      return null;
    }
  }
  if (pattern.styles) {
    match.styles = matchStyles(pattern.styles, element);
    if (!match.styles) {
      return null;
    }
  }
  return match;
}
function matchName(pattern, name) {
  if (pattern instanceof RegExp) {
    return !!name.match(pattern);
  }
  return pattern === name;
}
function matchPatterns(patterns, keys2, valueGetter) {
  const normalizedPatterns = normalizePatterns(patterns);
  const normalizedItems = Array.from(keys2);
  const match = [];
  normalizedPatterns.forEach(([patternKey, patternValue]) => {
    normalizedItems.forEach((itemKey) => {
      if (isKeyMatched(patternKey, itemKey) && isValueMatched(patternValue, itemKey, valueGetter)) {
        match.push(itemKey);
      }
    });
  });
  if (!normalizedPatterns.length || match.length < normalizedPatterns.length) {
    return void 0;
  }
  return match;
}
function normalizePatterns(patterns) {
  if (Array.isArray(patterns)) {
    return patterns.map((pattern) => {
      if (isPlainObject(pattern)) {
        if (pattern.key === void 0 || pattern.value === void 0) {
          logWarning("matcher-pattern-missing-key-or-value", pattern);
        }
        return [pattern.key, pattern.value];
      }
      return [pattern, true];
    });
  }
  if (isPlainObject(patterns)) {
    return Object.entries(patterns);
  }
  return [[patterns, true]];
}
function isKeyMatched(patternKey, itemKey) {
  return patternKey === true || patternKey === itemKey || patternKey instanceof RegExp && itemKey.match(patternKey);
}
function isValueMatched(patternValue, itemKey, valueGetter) {
  if (patternValue === true) {
    return true;
  }
  const itemValue = valueGetter(itemKey);
  return patternValue === itemValue || patternValue instanceof RegExp && !!String(itemValue).match(patternValue);
}
function matchAttributes(patterns, element) {
  const attributeKeys = new Set(element.getAttributeKeys());
  if (isPlainObject(patterns)) {
    if (patterns.style !== void 0) {
      logWarning("matcher-pattern-deprecated-attributes-style-key", patterns);
    }
    if (patterns.class !== void 0) {
      logWarning("matcher-pattern-deprecated-attributes-class-key", patterns);
    }
  } else {
    attributeKeys.delete("style");
    attributeKeys.delete("class");
  }
  return matchPatterns(patterns, attributeKeys, (key) => element.getAttribute(key));
}
function matchClasses(patterns, element) {
  return matchPatterns(patterns, element.getClassNames(), () => {
  });
}
function matchStyles(patterns, element) {
  return matchPatterns(patterns, element.getStyleNames(true), (key) => element.getStyle(key));
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class StylesMap {
  constructor(styleProcessor) {
    this._styles = {};
    this._styleProcessor = styleProcessor;
  }
  get isEmpty() {
    const entries = Object.entries(this._styles);
    const from = Array.from(entries);
    return !from.length;
  }
  get size() {
    if (this.isEmpty) {
      return 0;
    }
    return this.getStyleNames().length;
  }
  setTo(inlineStyle) {
    this.clear();
    const parsedStyles = Array.from(parseInlineStyles(inlineStyle).entries());
    for (const [key, value] of parsedStyles) {
      this._styleProcessor.toNormalizedForm(key, value, this._styles);
    }
  }
  has(name) {
    if (this.isEmpty) {
      return false;
    }
    const styles2 = this._styleProcessor.getReducedForm(name, this._styles);
    const propertyDescriptor = styles2.find(([property]) => property === name);
    return Array.isArray(propertyDescriptor);
  }
  set(nameOrObject, valueOrObject) {
    if (isObject(nameOrObject)) {
      for (const [key, value] of Object.entries(nameOrObject)) {
        this._styleProcessor.toNormalizedForm(key, value, this._styles);
      }
    } else {
      this._styleProcessor.toNormalizedForm(nameOrObject, valueOrObject, this._styles);
    }
  }
  remove(name) {
    const path = toPath(name);
    unset(this._styles, path);
    delete this._styles[name];
    this._cleanEmptyObjectsOnPath(path);
  }
  getNormalized(name) {
    return this._styleProcessor.getNormalized(name, this._styles);
  }
  toString() {
    if (this.isEmpty) {
      return "";
    }
    return this._getStylesEntries().map((arr) => arr.join(":")).sort().join(";") + ";";
  }
  getAsString(propertyName) {
    if (this.isEmpty) {
      return;
    }
    if (this._styles[propertyName] && !isObject(this._styles[propertyName])) {
      return this._styles[propertyName];
    }
    const styles2 = this._styleProcessor.getReducedForm(propertyName, this._styles);
    const propertyDescriptor = styles2.find(([property]) => property === propertyName);
    if (Array.isArray(propertyDescriptor)) {
      return propertyDescriptor[1];
    }
  }
  getStyleNames(expand = false) {
    if (this.isEmpty) {
      return [];
    }
    if (expand) {
      return this._styleProcessor.getStyleNames(this._styles);
    }
    const entries = this._getStylesEntries();
    return entries.map(([key]) => key);
  }
  clear() {
    this._styles = {};
  }
  _getStylesEntries() {
    const parsed = [];
    const keys2 = Object.keys(this._styles);
    for (const key of keys2) {
      parsed.push(...this._styleProcessor.getReducedForm(key, this._styles));
    }
    return parsed;
  }
  _cleanEmptyObjectsOnPath(path) {
    const pathParts = path.split(".");
    const isChildPath = pathParts.length > 1;
    if (!isChildPath) {
      return;
    }
    const parentPath = pathParts.splice(0, pathParts.length - 1).join(".");
    const parentObject = get(this._styles, parentPath);
    if (!parentObject) {
      return;
    }
    const isParentEmpty = !Array.from(Object.keys(parentObject)).length;
    if (isParentEmpty) {
      this.remove(parentPath);
    }
  }
}
function parseInlineStyles(stylesString) {
  let quoteType = null;
  let propertyNameStart = 0;
  let propertyValueStart = 0;
  let propertyName = null;
  const stylesMap = /* @__PURE__ */ new Map();
  if (stylesString === "") {
    return stylesMap;
  }
  if (stylesString.charAt(stylesString.length - 1) != ";") {
    stylesString = stylesString + ";";
  }
  for (let i2 = 0; i2 < stylesString.length; i2++) {
    const char = stylesString.charAt(i2);
    if (quoteType === null) {
      switch (char) {
        case ":":
          if (!propertyName) {
            propertyName = stylesString.substr(propertyNameStart, i2 - propertyNameStart);
            propertyValueStart = i2 + 1;
          }
          break;
        case '"':
        case "'":
          quoteType = char;
          break;
        case ";": {
          const propertyValue = stylesString.substr(propertyValueStart, i2 - propertyValueStart);
          if (propertyName) {
            stylesMap.set(propertyName.trim(), propertyValue.trim());
          }
          propertyName = null;
          propertyNameStart = i2 + 1;
          break;
        }
      }
    } else if (char === quoteType) {
      quoteType = null;
    }
  }
  return stylesMap;
}
function toPath(name) {
  return name.replace("-", ".");
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class Element$1 extends Node$2 {
  constructor(document2, name, attrs, children) {
    super(document2);
    this.name = name;
    this._attrs = parseAttributes(attrs);
    this._children = [];
    if (children) {
      this._insertChild(0, children);
    }
    this._classes = /* @__PURE__ */ new Set();
    if (this._attrs.has("class")) {
      const classString = this._attrs.get("class");
      parseClasses(this._classes, classString);
      this._attrs.delete("class");
    }
    this._styles = new StylesMap(this.document.stylesProcessor);
    if (this._attrs.has("style")) {
      this._styles.setTo(this._attrs.get("style"));
      this._attrs.delete("style");
    }
    this._customProperties = /* @__PURE__ */ new Map();
    this._unsafeAttributesToRender = [];
  }
  get childCount() {
    return this._children.length;
  }
  get isEmpty() {
    return this._children.length === 0;
  }
  getChild(index) {
    return this._children[index];
  }
  getChildIndex(node) {
    return this._children.indexOf(node);
  }
  getChildren() {
    return this._children[Symbol.iterator]();
  }
  *getAttributeKeys() {
    if (this._classes.size > 0) {
      yield "class";
    }
    if (!this._styles.isEmpty) {
      yield "style";
    }
    yield* this._attrs.keys();
  }
  *getAttributes() {
    yield* this._attrs.entries();
    if (this._classes.size > 0) {
      yield ["class", this.getAttribute("class")];
    }
    if (!this._styles.isEmpty) {
      yield ["style", this.getAttribute("style")];
    }
  }
  getAttribute(key) {
    if (key == "class") {
      if (this._classes.size > 0) {
        return [...this._classes].join(" ");
      }
      return void 0;
    }
    if (key == "style") {
      const inlineStyle = this._styles.toString();
      return inlineStyle == "" ? void 0 : inlineStyle;
    }
    return this._attrs.get(key);
  }
  hasAttribute(key) {
    if (key == "class") {
      return this._classes.size > 0;
    }
    if (key == "style") {
      return !this._styles.isEmpty;
    }
    return this._attrs.has(key);
  }
  isSimilar(otherElement) {
    if (!(otherElement instanceof Element$1)) {
      return false;
    }
    if (this === otherElement) {
      return true;
    }
    if (this.name != otherElement.name) {
      return false;
    }
    if (this._attrs.size !== otherElement._attrs.size || this._classes.size !== otherElement._classes.size || this._styles.size !== otherElement._styles.size) {
      return false;
    }
    for (const [key, value] of this._attrs) {
      if (!otherElement._attrs.has(key) || otherElement._attrs.get(key) !== value) {
        return false;
      }
    }
    for (const className of this._classes) {
      if (!otherElement._classes.has(className)) {
        return false;
      }
    }
    for (const property of this._styles.getStyleNames()) {
      if (!otherElement._styles.has(property) || otherElement._styles.getAsString(property) !== this._styles.getAsString(property)) {
        return false;
      }
    }
    return true;
  }
  hasClass(...className) {
    for (const name of className) {
      if (!this._classes.has(name)) {
        return false;
      }
    }
    return true;
  }
  getClassNames() {
    return this._classes.keys();
  }
  getStyle(property) {
    return this._styles.getAsString(property);
  }
  getNormalizedStyle(property) {
    return this._styles.getNormalized(property);
  }
  getStyleNames(expand) {
    return this._styles.getStyleNames(expand);
  }
  hasStyle(...property) {
    for (const name of property) {
      if (!this._styles.has(name)) {
        return false;
      }
    }
    return true;
  }
  findAncestor(...patterns) {
    const matcher = new Matcher(...patterns);
    let parent2 = this.parent;
    while (parent2 && !parent2.is("documentFragment")) {
      if (matcher.match(parent2)) {
        return parent2;
      }
      parent2 = parent2.parent;
    }
    return null;
  }
  getCustomProperty(key) {
    return this._customProperties.get(key);
  }
  *getCustomProperties() {
    yield* this._customProperties.entries();
  }
  getIdentity() {
    const classes = Array.from(this._classes).sort().join(",");
    const styles2 = this._styles.toString();
    const attributes = Array.from(this._attrs).map((i2) => `${i2[0]}="${i2[1]}"`).sort().join(" ");
    return this.name + (classes == "" ? "" : ` class="${classes}"`) + (!styles2 ? "" : ` style="${styles2}"`) + (attributes == "" ? "" : ` ${attributes}`);
  }
  shouldRenderUnsafeAttribute(attributeName) {
    return this._unsafeAttributesToRender.includes(attributeName);
  }
  _clone(deep = false) {
    const childrenClone = [];
    if (deep) {
      for (const child of this.getChildren()) {
        childrenClone.push(child._clone(deep));
      }
    }
    const cloned = new this.constructor(this.document, this.name, this._attrs, childrenClone);
    cloned._classes = new Set(this._classes);
    cloned._styles.set(this._styles.getNormalized());
    cloned._customProperties = new Map(this._customProperties);
    cloned.getFillerOffset = this.getFillerOffset;
    cloned._unsafeAttributesToRender = this._unsafeAttributesToRender;
    return cloned;
  }
  _appendChild(items) {
    return this._insertChild(this.childCount, items);
  }
  _insertChild(index, items) {
    this._fireChange("children", this);
    let count2 = 0;
    const nodes = normalize$4(this.document, items);
    for (const node of nodes) {
      if (node.parent !== null) {
        node._remove();
      }
      node.parent = this;
      node.document = this.document;
      this._children.splice(index, 0, node);
      index++;
      count2++;
    }
    return count2;
  }
  _removeChildren(index, howMany = 1) {
    this._fireChange("children", this);
    for (let i2 = index; i2 < index + howMany; i2++) {
      this._children[i2].parent = null;
    }
    return this._children.splice(index, howMany);
  }
  _setAttribute(key, value) {
    const stringValue = String(value);
    this._fireChange("attributes", this);
    if (key == "class") {
      parseClasses(this._classes, stringValue);
    } else if (key == "style") {
      this._styles.setTo(stringValue);
    } else {
      this._attrs.set(key, stringValue);
    }
  }
  _removeAttribute(key) {
    this._fireChange("attributes", this);
    if (key == "class") {
      if (this._classes.size > 0) {
        this._classes.clear();
        return true;
      }
      return false;
    }
    if (key == "style") {
      if (!this._styles.isEmpty) {
        this._styles.clear();
        return true;
      }
      return false;
    }
    return this._attrs.delete(key);
  }
  _addClass(className) {
    this._fireChange("attributes", this);
    for (const name of toArray(className)) {
      this._classes.add(name);
    }
  }
  _removeClass(className) {
    this._fireChange("attributes", this);
    for (const name of toArray(className)) {
      this._classes.delete(name);
    }
  }
  _setStyle(property, value) {
    this._fireChange("attributes", this);
    if (isPlainObject(property)) {
      this._styles.set(property);
    } else {
      this._styles.set(property, value);
    }
  }
  _removeStyle(property) {
    this._fireChange("attributes", this);
    for (const name of toArray(property)) {
      this._styles.remove(name);
    }
  }
  _setCustomProperty(key, value) {
    this._customProperties.set(key, value);
  }
  _removeCustomProperty(key) {
    return this._customProperties.delete(key);
  }
}
Element$1.prototype.is = function(type, name) {
  if (!name) {
    return type === "element" || type === "view:element" || type === "node" || type === "view:node";
  } else {
    return name === this.name && (type === "element" || type === "view:element");
  }
};
function parseAttributes(attrs) {
  const attrsMap = toMap(attrs);
  for (const [key, value] of attrsMap) {
    if (value === null) {
      attrsMap.delete(key);
    } else if (typeof value != "string") {
      attrsMap.set(key, String(value));
    }
  }
  return attrsMap;
}
function parseClasses(classesSet, classesString) {
  const classArray = classesString.split(/\s+/);
  classesSet.clear();
  classArray.forEach((name) => classesSet.add(name));
}
function normalize$4(document2, nodes) {
  if (typeof nodes == "string") {
    return [new Text$2(document2, nodes)];
  }
  if (!isIterable(nodes)) {
    nodes = [nodes];
  }
  return Array.from(nodes).map((node) => {
    if (typeof node == "string") {
      return new Text$2(document2, node);
    }
    if (node instanceof TextProxy$1) {
      return new Text$2(document2, node.data);
    }
    return node;
  });
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class ContainerElement extends Element$1 {
  constructor(...args) {
    super(...args);
    this.getFillerOffset = getFillerOffset$4;
  }
}
ContainerElement.prototype.is = function(type, name) {
  if (!name) {
    return type === "containerElement" || type === "view:containerElement" || type === "element" || type === "view:element" || type === "node" || type === "view:node";
  } else {
    return name === this.name && (type === "containerElement" || type === "view:containerElement" || type === "element" || type === "view:element");
  }
};
function getFillerOffset$4() {
  const children = [...this.getChildren()];
  const lastChild = children[this.childCount - 1];
  if (lastChild && lastChild.is("element", "br")) {
    return this.childCount;
  }
  for (const child of children) {
    if (!child.is("uiElement")) {
      return null;
    }
  }
  return this.childCount;
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class EditableElement extends ObservableMixin(ContainerElement) {
  constructor(...args) {
    super(...args);
    const document2 = args[0];
    this.set("isReadOnly", false);
    this.set("isFocused", false);
    this.bind("isReadOnly").to(document2);
    this.bind("isFocused").to(document2, "isFocused", (isFocused) => isFocused && document2.selection.editableElement == this);
    this.listenTo(document2.selection, "change", () => {
      this.isFocused = document2.isFocused && document2.selection.editableElement == this;
    });
  }
  destroy() {
    this.stopListening();
  }
}
EditableElement.prototype.is = function(type, name) {
  if (!name) {
    return type === "editableElement" || type === "view:editableElement" || type === "containerElement" || type === "view:containerElement" || type === "element" || type === "view:element" || type === "node" || type === "view:node";
  } else {
    return name === this.name && (type === "editableElement" || type === "view:editableElement" || type === "containerElement" || type === "view:containerElement" || type === "element" || type === "view:element");
  }
};
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
const rootNameSymbol = Symbol("rootName");
class RootEditableElement extends EditableElement {
  constructor(document2, name) {
    super(document2, name);
    this.rootName = "main";
  }
  get rootName() {
    return this.getCustomProperty(rootNameSymbol);
  }
  set rootName(rootName) {
    this._setCustomProperty(rootNameSymbol, rootName);
  }
  set _name(name) {
    this.name = name;
  }
}
RootEditableElement.prototype.is = function(type, name) {
  if (!name) {
    return type === "rootElement" || type === "view:rootElement" || type === "editableElement" || type === "view:editableElement" || type === "containerElement" || type === "view:containerElement" || type === "element" || type === "view:element" || type === "node" || type === "view:node";
  } else {
    return name === this.name && (type === "rootElement" || type === "view:rootElement" || type === "editableElement" || type === "view:editableElement" || type === "containerElement" || type === "view:containerElement" || type === "element" || type === "view:element");
  }
};
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class TreeWalker$1 {
  constructor(options = {}) {
    if (!options.boundaries && !options.startPosition) {
      throw new CKEditorError("view-tree-walker-no-start-position", null);
    }
    if (options.direction && options.direction != "forward" && options.direction != "backward") {
      throw new CKEditorError("view-tree-walker-unknown-direction", options.startPosition, { direction: options.direction });
    }
    this.boundaries = options.boundaries || null;
    if (options.startPosition) {
      this.position = Position$1._createAt(options.startPosition);
    } else {
      this.position = Position$1._createAt(options.boundaries[options.direction == "backward" ? "end" : "start"]);
    }
    this.direction = options.direction || "forward";
    this.singleCharacters = !!options.singleCharacters;
    this.shallow = !!options.shallow;
    this.ignoreElementEnd = !!options.ignoreElementEnd;
    this._boundaryStartParent = this.boundaries ? this.boundaries.start.parent : null;
    this._boundaryEndParent = this.boundaries ? this.boundaries.end.parent : null;
  }
  [Symbol.iterator]() {
    return this;
  }
  skip(skip) {
    let done, value, prevPosition;
    do {
      prevPosition = this.position;
      ({ done, value } = this.next());
    } while (!done && skip(value));
    if (!done) {
      this.position = prevPosition;
    }
  }
  next() {
    if (this.direction == "forward") {
      return this._next();
    } else {
      return this._previous();
    }
  }
  _next() {
    let position = this.position.clone();
    const previousPosition = this.position;
    const parent2 = position.parent;
    if (parent2.parent === null && position.offset === parent2.childCount) {
      return { done: true, value: void 0 };
    }
    if (parent2 === this._boundaryEndParent && position.offset == this.boundaries.end.offset) {
      return { done: true, value: void 0 };
    }
    let node;
    if (parent2 instanceof Text$2) {
      if (position.isAtEnd) {
        this.position = Position$1._createAfter(parent2);
        return this._next();
      }
      node = parent2.data[position.offset];
    } else {
      node = parent2.getChild(position.offset);
    }
    if (node instanceof Element$1) {
      if (!this.shallow) {
        position = new Position$1(node, 0);
      } else {
        position.offset++;
      }
      this.position = position;
      return this._formatReturnValue("elementStart", node, previousPosition, position, 1);
    } else if (node instanceof Text$2) {
      if (this.singleCharacters) {
        position = new Position$1(node, 0);
        this.position = position;
        return this._next();
      } else {
        let charactersCount = node.data.length;
        let item;
        if (node == this._boundaryEndParent) {
          charactersCount = this.boundaries.end.offset;
          item = new TextProxy$1(node, 0, charactersCount);
          position = Position$1._createAfter(item);
        } else {
          item = new TextProxy$1(node, 0, node.data.length);
          position.offset++;
        }
        this.position = position;
        return this._formatReturnValue("text", item, previousPosition, position, charactersCount);
      }
    } else if (typeof node == "string") {
      let textLength;
      if (this.singleCharacters) {
        textLength = 1;
      } else {
        const endOffset = parent2 === this._boundaryEndParent ? this.boundaries.end.offset : parent2.data.length;
        textLength = endOffset - position.offset;
      }
      const textProxy = new TextProxy$1(parent2, position.offset, textLength);
      position.offset += textLength;
      this.position = position;
      return this._formatReturnValue("text", textProxy, previousPosition, position, textLength);
    } else {
      position = Position$1._createAfter(parent2);
      this.position = position;
      if (this.ignoreElementEnd) {
        return this._next();
      } else {
        return this._formatReturnValue("elementEnd", parent2, previousPosition, position);
      }
    }
  }
  _previous() {
    let position = this.position.clone();
    const previousPosition = this.position;
    const parent2 = position.parent;
    if (parent2.parent === null && position.offset === 0) {
      return { done: true, value: void 0 };
    }
    if (parent2 == this._boundaryStartParent && position.offset == this.boundaries.start.offset) {
      return { done: true, value: void 0 };
    }
    let node;
    if (parent2 instanceof Text$2) {
      if (position.isAtStart) {
        this.position = Position$1._createBefore(parent2);
        return this._previous();
      }
      node = parent2.data[position.offset - 1];
    } else {
      node = parent2.getChild(position.offset - 1);
    }
    if (node instanceof Element$1) {
      if (!this.shallow) {
        position = new Position$1(node, node.childCount);
        this.position = position;
        if (this.ignoreElementEnd) {
          return this._previous();
        } else {
          return this._formatReturnValue("elementEnd", node, previousPosition, position);
        }
      } else {
        position.offset--;
        this.position = position;
        return this._formatReturnValue("elementStart", node, previousPosition, position, 1);
      }
    } else if (node instanceof Text$2) {
      if (this.singleCharacters) {
        position = new Position$1(node, node.data.length);
        this.position = position;
        return this._previous();
      } else {
        let charactersCount = node.data.length;
        let item;
        if (node == this._boundaryStartParent) {
          const offset = this.boundaries.start.offset;
          item = new TextProxy$1(node, offset, node.data.length - offset);
          charactersCount = item.data.length;
          position = Position$1._createBefore(item);
        } else {
          item = new TextProxy$1(node, 0, node.data.length);
          position.offset--;
        }
        this.position = position;
        return this._formatReturnValue("text", item, previousPosition, position, charactersCount);
      }
    } else if (typeof node == "string") {
      let textLength;
      if (!this.singleCharacters) {
        const startOffset = parent2 === this._boundaryStartParent ? this.boundaries.start.offset : 0;
        textLength = position.offset - startOffset;
      } else {
        textLength = 1;
      }
      position.offset -= textLength;
      const textProxy = new TextProxy$1(parent2, position.offset, textLength);
      this.position = position;
      return this._formatReturnValue("text", textProxy, previousPosition, position, textLength);
    } else {
      position = Position$1._createBefore(parent2);
      this.position = position;
      return this._formatReturnValue("elementStart", parent2, previousPosition, position, 1);
    }
  }
  _formatReturnValue(type, item, previousPosition, nextPosition, length) {
    if (item instanceof TextProxy$1) {
      if (item.offsetInText + item.data.length == item.textNode.data.length) {
        if (this.direction == "forward" && !(this.boundaries && this.boundaries.end.isEqual(this.position))) {
          nextPosition = Position$1._createAfter(item.textNode);
          this.position = nextPosition;
        } else {
          previousPosition = Position$1._createAfter(item.textNode);
        }
      }
      if (item.offsetInText === 0) {
        if (this.direction == "backward" && !(this.boundaries && this.boundaries.start.isEqual(this.position))) {
          nextPosition = Position$1._createBefore(item.textNode);
          this.position = nextPosition;
        } else {
          previousPosition = Position$1._createBefore(item.textNode);
        }
      }
    }
    return {
      done: false,
      value: {
        type,
        item,
        previousPosition,
        nextPosition,
        length
      }
    };
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class Position$1 extends TypeCheckable$1 {
  constructor(parent2, offset) {
    super();
    this.parent = parent2;
    this.offset = offset;
  }
  get nodeAfter() {
    if (this.parent.is("$text")) {
      return null;
    }
    return this.parent.getChild(this.offset) || null;
  }
  get nodeBefore() {
    if (this.parent.is("$text")) {
      return null;
    }
    return this.parent.getChild(this.offset - 1) || null;
  }
  get isAtStart() {
    return this.offset === 0;
  }
  get isAtEnd() {
    const endOffset = this.parent.is("$text") ? this.parent.data.length : this.parent.childCount;
    return this.offset === endOffset;
  }
  get root() {
    return this.parent.root;
  }
  get editableElement() {
    let editable = this.parent;
    while (!(editable instanceof EditableElement)) {
      if (editable.parent) {
        editable = editable.parent;
      } else {
        return null;
      }
    }
    return editable;
  }
  getShiftedBy(shift) {
    const shifted = Position$1._createAt(this);
    const offset = shifted.offset + shift;
    shifted.offset = offset < 0 ? 0 : offset;
    return shifted;
  }
  getLastMatchingPosition(skip, options = {}) {
    options.startPosition = this;
    const treeWalker = new TreeWalker$1(options);
    treeWalker.skip(skip);
    return treeWalker.position;
  }
  getAncestors() {
    if (this.parent.is("documentFragment")) {
      return [this.parent];
    } else {
      return this.parent.getAncestors({ includeSelf: true });
    }
  }
  getCommonAncestor(position) {
    const ancestorsA = this.getAncestors();
    const ancestorsB = position.getAncestors();
    let i2 = 0;
    while (ancestorsA[i2] == ancestorsB[i2] && ancestorsA[i2]) {
      i2++;
    }
    return i2 === 0 ? null : ancestorsA[i2 - 1];
  }
  isEqual(otherPosition) {
    return this.parent == otherPosition.parent && this.offset == otherPosition.offset;
  }
  isBefore(otherPosition) {
    return this.compareWith(otherPosition) == "before";
  }
  isAfter(otherPosition) {
    return this.compareWith(otherPosition) == "after";
  }
  compareWith(otherPosition) {
    if (this.root !== otherPosition.root) {
      return "different";
    }
    if (this.isEqual(otherPosition)) {
      return "same";
    }
    const thisPath = this.parent.is("node") ? this.parent.getPath() : [];
    const otherPath = otherPosition.parent.is("node") ? otherPosition.parent.getPath() : [];
    thisPath.push(this.offset);
    otherPath.push(otherPosition.offset);
    const result = compareArrays(thisPath, otherPath);
    switch (result) {
      case "prefix":
        return "before";
      case "extension":
        return "after";
      default:
        return thisPath[result] < otherPath[result] ? "before" : "after";
    }
  }
  getWalker(options = {}) {
    options.startPosition = this;
    return new TreeWalker$1(options);
  }
  clone() {
    return new Position$1(this.parent, this.offset);
  }
  static _createAt(itemOrPosition, offset) {
    if (itemOrPosition instanceof Position$1) {
      return new this(itemOrPosition.parent, itemOrPosition.offset);
    } else {
      const node = itemOrPosition;
      if (offset == "end") {
        offset = node.is("$text") ? node.data.length : node.childCount;
      } else if (offset == "before") {
        return this._createBefore(node);
      } else if (offset == "after") {
        return this._createAfter(node);
      } else if (offset !== 0 && !offset) {
        throw new CKEditorError("view-createpositionat-offset-required", node);
      }
      return new Position$1(node, offset);
    }
  }
  static _createAfter(item) {
    if (item.is("$textProxy")) {
      return new Position$1(item.textNode, item.offsetInText + item.data.length);
    }
    if (!item.parent) {
      throw new CKEditorError("view-position-after-root", item, { root: item });
    }
    return new Position$1(item.parent, item.index + 1);
  }
  static _createBefore(item) {
    if (item.is("$textProxy")) {
      return new Position$1(item.textNode, item.offsetInText);
    }
    if (!item.parent) {
      throw new CKEditorError("view-position-before-root", item, { root: item });
    }
    return new Position$1(item.parent, item.index);
  }
}
Position$1.prototype.is = function(type) {
  return type === "position" || type === "view:position";
};
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class Range$1 extends TypeCheckable$1 {
  constructor(start, end = null) {
    super();
    this.start = start.clone();
    this.end = end ? end.clone() : start.clone();
  }
  *[Symbol.iterator]() {
    yield* new TreeWalker$1({ boundaries: this, ignoreElementEnd: true });
  }
  get isCollapsed() {
    return this.start.isEqual(this.end);
  }
  get isFlat() {
    return this.start.parent === this.end.parent;
  }
  get root() {
    return this.start.root;
  }
  getEnlarged() {
    let start = this.start.getLastMatchingPosition(enlargeTrimSkip, { direction: "backward" });
    let end = this.end.getLastMatchingPosition(enlargeTrimSkip);
    if (start.parent.is("$text") && start.isAtStart) {
      start = Position$1._createBefore(start.parent);
    }
    if (end.parent.is("$text") && end.isAtEnd) {
      end = Position$1._createAfter(end.parent);
    }
    return new Range$1(start, end);
  }
  getTrimmed() {
    let start = this.start.getLastMatchingPosition(enlargeTrimSkip);
    if (start.isAfter(this.end) || start.isEqual(this.end)) {
      return new Range$1(start, start);
    }
    let end = this.end.getLastMatchingPosition(enlargeTrimSkip, { direction: "backward" });
    const nodeAfterStart = start.nodeAfter;
    const nodeBeforeEnd = end.nodeBefore;
    if (nodeAfterStart && nodeAfterStart.is("$text")) {
      start = new Position$1(nodeAfterStart, 0);
    }
    if (nodeBeforeEnd && nodeBeforeEnd.is("$text")) {
      end = new Position$1(nodeBeforeEnd, nodeBeforeEnd.data.length);
    }
    return new Range$1(start, end);
  }
  isEqual(otherRange) {
    return this == otherRange || this.start.isEqual(otherRange.start) && this.end.isEqual(otherRange.end);
  }
  containsPosition(position) {
    return position.isAfter(this.start) && position.isBefore(this.end);
  }
  containsRange(otherRange, loose = false) {
    if (otherRange.isCollapsed) {
      loose = false;
    }
    const containsStart = this.containsPosition(otherRange.start) || loose && this.start.isEqual(otherRange.start);
    const containsEnd = this.containsPosition(otherRange.end) || loose && this.end.isEqual(otherRange.end);
    return containsStart && containsEnd;
  }
  getDifference(otherRange) {
    const ranges = [];
    if (this.isIntersecting(otherRange)) {
      if (this.containsPosition(otherRange.start)) {
        ranges.push(new Range$1(this.start, otherRange.start));
      }
      if (this.containsPosition(otherRange.end)) {
        ranges.push(new Range$1(otherRange.end, this.end));
      }
    } else {
      ranges.push(this.clone());
    }
    return ranges;
  }
  getIntersection(otherRange) {
    if (this.isIntersecting(otherRange)) {
      let commonRangeStart = this.start;
      let commonRangeEnd = this.end;
      if (this.containsPosition(otherRange.start)) {
        commonRangeStart = otherRange.start;
      }
      if (this.containsPosition(otherRange.end)) {
        commonRangeEnd = otherRange.end;
      }
      return new Range$1(commonRangeStart, commonRangeEnd);
    }
    return null;
  }
  getWalker(options = {}) {
    options.boundaries = this;
    return new TreeWalker$1(options);
  }
  getCommonAncestor() {
    return this.start.getCommonAncestor(this.end);
  }
  getContainedElement() {
    if (this.isCollapsed) {
      return null;
    }
    let nodeAfterStart = this.start.nodeAfter;
    let nodeBeforeEnd = this.end.nodeBefore;
    if (this.start.parent.is("$text") && this.start.isAtEnd && this.start.parent.nextSibling) {
      nodeAfterStart = this.start.parent.nextSibling;
    }
    if (this.end.parent.is("$text") && this.end.isAtStart && this.end.parent.previousSibling) {
      nodeBeforeEnd = this.end.parent.previousSibling;
    }
    if (nodeAfterStart && nodeAfterStart.is("element") && nodeAfterStart === nodeBeforeEnd) {
      return nodeAfterStart;
    }
    return null;
  }
  clone() {
    return new Range$1(this.start, this.end);
  }
  *getItems(options = {}) {
    options.boundaries = this;
    options.ignoreElementEnd = true;
    const treeWalker = new TreeWalker$1(options);
    for (const value of treeWalker) {
      yield value.item;
    }
  }
  *getPositions(options = {}) {
    options.boundaries = this;
    const treeWalker = new TreeWalker$1(options);
    yield treeWalker.position;
    for (const value of treeWalker) {
      yield value.nextPosition;
    }
  }
  isIntersecting(otherRange) {
    return this.start.isBefore(otherRange.end) && this.end.isAfter(otherRange.start);
  }
  static _createFromParentsAndOffsets(startElement, startOffset, endElement, endOffset) {
    return new this(new Position$1(startElement, startOffset), new Position$1(endElement, endOffset));
  }
  static _createFromPositionAndShift(position, shift) {
    const start = position;
    const end = position.getShiftedBy(shift);
    return shift > 0 ? new this(start, end) : new this(end, start);
  }
  static _createIn(element) {
    return this._createFromParentsAndOffsets(element, 0, element, element.childCount);
  }
  static _createOn(item) {
    const size = item.is("$textProxy") ? item.offsetSize : 1;
    return this._createFromPositionAndShift(Position$1._createBefore(item), size);
  }
}
Range$1.prototype.is = function(type) {
  return type === "range" || type === "view:range";
};
function enlargeTrimSkip(value) {
  if (value.item.is("attributeElement") || value.item.is("uiElement")) {
    return true;
  }
  return false;
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class Selection$1 extends EmitterMixin(TypeCheckable$1) {
  constructor(...args) {
    super();
    this._ranges = [];
    this._lastRangeBackward = false;
    this._isFake = false;
    this._fakeSelectionLabel = "";
    if (args.length) {
      this.setTo(...args);
    }
  }
  get isFake() {
    return this._isFake;
  }
  get fakeSelectionLabel() {
    return this._fakeSelectionLabel;
  }
  get anchor() {
    if (!this._ranges.length) {
      return null;
    }
    const range = this._ranges[this._ranges.length - 1];
    const anchor = this._lastRangeBackward ? range.end : range.start;
    return anchor.clone();
  }
  get focus() {
    if (!this._ranges.length) {
      return null;
    }
    const range = this._ranges[this._ranges.length - 1];
    const focus = this._lastRangeBackward ? range.start : range.end;
    return focus.clone();
  }
  get isCollapsed() {
    return this.rangeCount === 1 && this._ranges[0].isCollapsed;
  }
  get rangeCount() {
    return this._ranges.length;
  }
  get isBackward() {
    return !this.isCollapsed && this._lastRangeBackward;
  }
  get editableElement() {
    if (this.anchor) {
      return this.anchor.editableElement;
    }
    return null;
  }
  *getRanges() {
    for (const range of this._ranges) {
      yield range.clone();
    }
  }
  getFirstRange() {
    let first2 = null;
    for (const range of this._ranges) {
      if (!first2 || range.start.isBefore(first2.start)) {
        first2 = range;
      }
    }
    return first2 ? first2.clone() : null;
  }
  getLastRange() {
    let last2 = null;
    for (const range of this._ranges) {
      if (!last2 || range.end.isAfter(last2.end)) {
        last2 = range;
      }
    }
    return last2 ? last2.clone() : null;
  }
  getFirstPosition() {
    const firstRange = this.getFirstRange();
    return firstRange ? firstRange.start.clone() : null;
  }
  getLastPosition() {
    const lastRange = this.getLastRange();
    return lastRange ? lastRange.end.clone() : null;
  }
  isEqual(otherSelection) {
    if (this.isFake != otherSelection.isFake) {
      return false;
    }
    if (this.isFake && this.fakeSelectionLabel != otherSelection.fakeSelectionLabel) {
      return false;
    }
    if (this.rangeCount != otherSelection.rangeCount) {
      return false;
    } else if (this.rangeCount === 0) {
      return true;
    }
    if (!this.anchor.isEqual(otherSelection.anchor) || !this.focus.isEqual(otherSelection.focus)) {
      return false;
    }
    for (const thisRange of this._ranges) {
      let found = false;
      for (const otherRange of otherSelection._ranges) {
        if (thisRange.isEqual(otherRange)) {
          found = true;
          break;
        }
      }
      if (!found) {
        return false;
      }
    }
    return true;
  }
  isSimilar(otherSelection) {
    if (this.isBackward != otherSelection.isBackward) {
      return false;
    }
    const numOfRangesA = count(this.getRanges());
    const numOfRangesB = count(otherSelection.getRanges());
    if (numOfRangesA != numOfRangesB) {
      return false;
    }
    if (numOfRangesA == 0) {
      return true;
    }
    for (let rangeA of this.getRanges()) {
      rangeA = rangeA.getTrimmed();
      let found = false;
      for (let rangeB of otherSelection.getRanges()) {
        rangeB = rangeB.getTrimmed();
        if (rangeA.start.isEqual(rangeB.start) && rangeA.end.isEqual(rangeB.end)) {
          found = true;
          break;
        }
      }
      if (!found) {
        return false;
      }
    }
    return true;
  }
  getSelectedElement() {
    if (this.rangeCount !== 1) {
      return null;
    }
    return this.getFirstRange().getContainedElement();
  }
  setTo(...args) {
    let [selectable, placeOrOffset, options] = args;
    if (typeof placeOrOffset == "object") {
      options = placeOrOffset;
      placeOrOffset = void 0;
    }
    if (selectable === null) {
      this._setRanges([]);
      this._setFakeOptions(options);
    } else if (selectable instanceof Selection$1 || selectable instanceof DocumentSelection$1) {
      this._setRanges(selectable.getRanges(), selectable.isBackward);
      this._setFakeOptions({ fake: selectable.isFake, label: selectable.fakeSelectionLabel });
    } else if (selectable instanceof Range$1) {
      this._setRanges([selectable], options && options.backward);
      this._setFakeOptions(options);
    } else if (selectable instanceof Position$1) {
      this._setRanges([new Range$1(selectable)]);
      this._setFakeOptions(options);
    } else if (selectable instanceof Node$2) {
      const backward = !!options && !!options.backward;
      let range;
      if (placeOrOffset === void 0) {
        throw new CKEditorError("view-selection-setto-required-second-parameter", this);
      } else if (placeOrOffset == "in") {
        range = Range$1._createIn(selectable);
      } else if (placeOrOffset == "on") {
        range = Range$1._createOn(selectable);
      } else {
        range = new Range$1(Position$1._createAt(selectable, placeOrOffset));
      }
      this._setRanges([range], backward);
      this._setFakeOptions(options);
    } else if (isIterable(selectable)) {
      this._setRanges(selectable, options && options.backward);
      this._setFakeOptions(options);
    } else {
      throw new CKEditorError("view-selection-setto-not-selectable", this);
    }
    this.fire("change");
  }
  setFocus(itemOrPosition, offset) {
    if (this.anchor === null) {
      throw new CKEditorError("view-selection-setfocus-no-ranges", this);
    }
    const newFocus = Position$1._createAt(itemOrPosition, offset);
    if (newFocus.compareWith(this.focus) == "same") {
      return;
    }
    const anchor = this.anchor;
    this._ranges.pop();
    if (newFocus.compareWith(anchor) == "before") {
      this._addRange(new Range$1(newFocus, anchor), true);
    } else {
      this._addRange(new Range$1(anchor, newFocus));
    }
    this.fire("change");
  }
  _setRanges(newRanges, isLastBackward = false) {
    newRanges = Array.from(newRanges);
    this._ranges = [];
    for (const range of newRanges) {
      this._addRange(range);
    }
    this._lastRangeBackward = !!isLastBackward;
  }
  _setFakeOptions(options = {}) {
    this._isFake = !!options.fake;
    this._fakeSelectionLabel = options.fake ? options.label || "" : "";
  }
  _addRange(range, isBackward = false) {
    if (!(range instanceof Range$1)) {
      throw new CKEditorError("view-selection-add-range-not-range", this);
    }
    this._pushRange(range);
    this._lastRangeBackward = !!isBackward;
  }
  _pushRange(range) {
    for (const storedRange of this._ranges) {
      if (range.isIntersecting(storedRange)) {
        throw new CKEditorError("view-selection-range-intersects", this, { addedRange: range, intersectingRange: storedRange });
      }
    }
    this._ranges.push(new Range$1(range.start, range.end));
  }
}
Selection$1.prototype.is = function(type) {
  return type === "selection" || type === "view:selection";
};
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class DocumentSelection$1 extends EmitterMixin(TypeCheckable$1) {
  constructor(...args) {
    super();
    this._selection = new Selection$1();
    this._selection.delegate("change").to(this);
    if (args.length) {
      this._selection.setTo(...args);
    }
  }
  get isFake() {
    return this._selection.isFake;
  }
  get fakeSelectionLabel() {
    return this._selection.fakeSelectionLabel;
  }
  get anchor() {
    return this._selection.anchor;
  }
  get focus() {
    return this._selection.focus;
  }
  get isCollapsed() {
    return this._selection.isCollapsed;
  }
  get rangeCount() {
    return this._selection.rangeCount;
  }
  get isBackward() {
    return this._selection.isBackward;
  }
  get editableElement() {
    return this._selection.editableElement;
  }
  get _ranges() {
    return this._selection._ranges;
  }
  *getRanges() {
    yield* this._selection.getRanges();
  }
  getFirstRange() {
    return this._selection.getFirstRange();
  }
  getLastRange() {
    return this._selection.getLastRange();
  }
  getFirstPosition() {
    return this._selection.getFirstPosition();
  }
  getLastPosition() {
    return this._selection.getLastPosition();
  }
  getSelectedElement() {
    return this._selection.getSelectedElement();
  }
  isEqual(otherSelection) {
    return this._selection.isEqual(otherSelection);
  }
  isSimilar(otherSelection) {
    return this._selection.isSimilar(otherSelection);
  }
  _setTo(...args) {
    this._selection.setTo(...args);
  }
  _setFocus(itemOrPosition, offset) {
    this._selection.setFocus(itemOrPosition, offset);
  }
}
DocumentSelection$1.prototype.is = function(type) {
  return type === "selection" || type == "documentSelection" || type == "view:selection" || type == "view:documentSelection";
};
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class BubblingEventInfo extends EventInfo {
  constructor(source, name, startRange) {
    super(source, name);
    this.startRange = startRange;
    this._eventPhase = "none";
    this._currentTarget = null;
  }
  get eventPhase() {
    return this._eventPhase;
  }
  get currentTarget() {
    return this._currentTarget;
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
const contextsSymbol = Symbol("bubbling contexts");
function BubblingEmitterMixin(base) {
  class Mixin extends base {
    fire(eventOrInfo, ...eventArgs) {
      try {
        const eventInfo = eventOrInfo instanceof EventInfo ? eventOrInfo : new EventInfo(this, eventOrInfo);
        const eventContexts = getBubblingContexts(this);
        if (!eventContexts.size) {
          return;
        }
        updateEventInfo(eventInfo, "capturing", this);
        if (fireListenerFor(eventContexts, "$capture", eventInfo, ...eventArgs)) {
          return eventInfo.return;
        }
        const startRange = eventInfo.startRange || this.selection.getFirstRange();
        const selectedElement = startRange ? startRange.getContainedElement() : null;
        const isCustomContext = selectedElement ? Boolean(getCustomContext(eventContexts, selectedElement)) : false;
        let node = selectedElement || getDeeperRangeParent(startRange);
        updateEventInfo(eventInfo, "atTarget", node);
        if (!isCustomContext) {
          if (fireListenerFor(eventContexts, "$text", eventInfo, ...eventArgs)) {
            return eventInfo.return;
          }
          updateEventInfo(eventInfo, "bubbling", node);
        }
        while (node) {
          if (node.is("rootElement")) {
            if (fireListenerFor(eventContexts, "$root", eventInfo, ...eventArgs)) {
              return eventInfo.return;
            }
          } else if (node.is("element")) {
            if (fireListenerFor(eventContexts, node.name, eventInfo, ...eventArgs)) {
              return eventInfo.return;
            }
          }
          if (fireListenerFor(eventContexts, node, eventInfo, ...eventArgs)) {
            return eventInfo.return;
          }
          node = node.parent;
          updateEventInfo(eventInfo, "bubbling", node);
        }
        updateEventInfo(eventInfo, "bubbling", this);
        fireListenerFor(eventContexts, "$document", eventInfo, ...eventArgs);
        return eventInfo.return;
      } catch (err) {
        CKEditorError.rethrowUnexpectedError(err, this);
      }
    }
    _addEventListener(event, callback, options) {
      const contexts = toArray(options.context || "$document");
      const eventContexts = getBubblingContexts(this);
      for (const context of contexts) {
        let emitter = eventContexts.get(context);
        if (!emitter) {
          emitter = new (EmitterMixin())();
          eventContexts.set(context, emitter);
        }
        this.listenTo(emitter, event, callback, options);
      }
    }
    _removeEventListener(event, callback) {
      const eventContexts = getBubblingContexts(this);
      for (const emitter of eventContexts.values()) {
        this.stopListening(emitter, event, callback);
      }
    }
  }
  return Mixin;
}
{
  const mixin = BubblingEmitterMixin(Object);
  ["fire", "_addEventListener", "_removeEventListener"].forEach((key) => {
    BubblingEmitterMixin[key] = mixin.prototype[key];
  });
}
function updateEventInfo(eventInfo, eventPhase, currentTarget) {
  if (eventInfo instanceof BubblingEventInfo) {
    eventInfo._eventPhase = eventPhase;
    eventInfo._currentTarget = currentTarget;
  }
}
function fireListenerFor(eventContexts, context, eventInfo, ...eventArgs) {
  const emitter = typeof context == "string" ? eventContexts.get(context) : getCustomContext(eventContexts, context);
  if (!emitter) {
    return false;
  }
  emitter.fire(eventInfo, ...eventArgs);
  return eventInfo.stop.called;
}
function getCustomContext(eventContexts, node) {
  for (const [context, emitter] of eventContexts) {
    if (typeof context == "function" && context(node)) {
      return emitter;
    }
  }
  return null;
}
function getBubblingContexts(source) {
  if (!source[contextsSymbol]) {
    source[contextsSymbol] = /* @__PURE__ */ new Map();
  }
  return source[contextsSymbol];
}
function getDeeperRangeParent(range) {
  if (!range) {
    return null;
  }
  const startParent = range.start.parent;
  const endParent = range.end.parent;
  const startPath = startParent.getPath();
  const endPath = endParent.getPath();
  return startPath.length > endPath.length ? startParent : endParent;
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class Document$1 extends BubblingEmitterMixin(ObservableMixin()) {
  constructor(stylesProcessor) {
    super();
    this.selection = new DocumentSelection$1();
    this.roots = new Collection({ idProperty: "rootName" });
    this.stylesProcessor = stylesProcessor;
    this.set("isReadOnly", false);
    this.set("isFocused", false);
    this.set("isSelecting", false);
    this.set("isComposing", false);
    this._postFixers = /* @__PURE__ */ new Set();
  }
  getRoot(name = "main") {
    return this.roots.get(name);
  }
  registerPostFixer(postFixer) {
    this._postFixers.add(postFixer);
  }
  destroy() {
    this.roots.map((root2) => root2.destroy());
    this.stopListening();
  }
  _callPostFixers(writer) {
    let wasFixed = false;
    do {
      for (const callback of this._postFixers) {
        wasFixed = callback(writer);
        if (wasFixed) {
          break;
        }
      }
    } while (wasFixed);
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
const DEFAULT_PRIORITY = 10;
class AttributeElement extends Element$1 {
  constructor(...args) {
    super(...args);
    this.getFillerOffset = getFillerOffset$3;
    this._priority = DEFAULT_PRIORITY;
    this._id = null;
    this._clonesGroup = null;
  }
  get priority() {
    return this._priority;
  }
  get id() {
    return this._id;
  }
  getElementsWithSameId() {
    if (this.id === null) {
      throw new CKEditorError("attribute-element-get-elements-with-same-id-no-id", this);
    }
    return new Set(this._clonesGroup);
  }
  isSimilar(otherElement) {
    if (this.id !== null || otherElement.id !== null) {
      return this.id === otherElement.id;
    }
    return super.isSimilar(otherElement) && this.priority == otherElement.priority;
  }
  _clone(deep = false) {
    const cloned = super._clone(deep);
    cloned._priority = this._priority;
    cloned._id = this._id;
    return cloned;
  }
}
AttributeElement.DEFAULT_PRIORITY = DEFAULT_PRIORITY;
AttributeElement.prototype.is = function(type, name) {
  if (!name) {
    return type === "attributeElement" || type === "view:attributeElement" || type === "element" || type === "view:element" || type === "node" || type === "view:node";
  } else {
    return name === this.name && (type === "attributeElement" || type === "view:attributeElement" || type === "element" || type === "view:element");
  }
};
function getFillerOffset$3() {
  if (nonUiChildrenCount(this)) {
    return null;
  }
  let element = this.parent;
  while (element && element.is("attributeElement")) {
    if (nonUiChildrenCount(element) > 1) {
      return null;
    }
    element = element.parent;
  }
  if (!element || nonUiChildrenCount(element) > 1) {
    return null;
  }
  return this.childCount;
}
function nonUiChildrenCount(element) {
  return Array.from(element.getChildren()).filter((element2) => !element2.is("uiElement")).length;
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class EmptyElement extends Element$1 {
  constructor(document2, name, attributes, children) {
    super(document2, name, attributes, children);
    this.getFillerOffset = getFillerOffset$2;
  }
  _insertChild(index, items) {
    if (items && (items instanceof Node$2 || Array.from(items).length > 0)) {
      throw new CKEditorError("view-emptyelement-cannot-add", [this, items]);
    }
    return 0;
  }
}
EmptyElement.prototype.is = function(type, name) {
  if (!name) {
    return type === "emptyElement" || type === "view:emptyElement" || type === "element" || type === "view:element" || type === "node" || type === "view:node";
  } else {
    return name === this.name && (type === "emptyElement" || type === "view:emptyElement" || type === "element" || type === "view:element");
  }
};
function getFillerOffset$2() {
  return null;
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class UIElement extends Element$1 {
  constructor(...args) {
    super(...args);
    this.getFillerOffset = getFillerOffset$1;
  }
  _insertChild(index, items) {
    if (items && (items instanceof Node$2 || Array.from(items).length > 0)) {
      throw new CKEditorError("view-uielement-cannot-add", [this, items]);
    }
    return 0;
  }
  render(domDocument, domConverter) {
    return this.toDomElement(domDocument);
  }
  toDomElement(domDocument) {
    const domElement = domDocument.createElement(this.name);
    for (const key of this.getAttributeKeys()) {
      domElement.setAttribute(key, this.getAttribute(key));
    }
    return domElement;
  }
}
UIElement.prototype.is = function(type, name) {
  if (!name) {
    return type === "uiElement" || type === "view:uiElement" || type === "element" || type === "view:element" || type === "node" || type === "view:node";
  } else {
    return name === this.name && (type === "uiElement" || type === "view:uiElement" || type === "element" || type === "view:element");
  }
};
function getFillerOffset$1() {
  return null;
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class RawElement extends Element$1 {
  constructor(...args) {
    super(...args);
    this.getFillerOffset = getFillerOffset;
  }
  _insertChild(index, items) {
    if (items && (items instanceof Node$2 || Array.from(items).length > 0)) {
      throw new CKEditorError("view-rawelement-cannot-add", [this, items]);
    }
    return 0;
  }
  render() {
  }
}
RawElement.prototype.is = function(type, name) {
  if (!name) {
    return type === "rawElement" || type === "view:rawElement" || type === this.name || type === "view:" + this.name || type === "element" || type === "view:element" || type === "node" || type === "view:node";
  } else {
    return name === this.name && (type === "rawElement" || type === "view:rawElement" || type === "element" || type === "view:element");
  }
};
function getFillerOffset() {
  return null;
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class DocumentFragment$1 extends EmitterMixin(TypeCheckable$1) {
  constructor(document2, children) {
    super();
    this.document = document2;
    this._children = [];
    if (children) {
      this._insertChild(0, children);
    }
    this._customProperties = /* @__PURE__ */ new Map();
  }
  [Symbol.iterator]() {
    return this._children[Symbol.iterator]();
  }
  get childCount() {
    return this._children.length;
  }
  get isEmpty() {
    return this.childCount === 0;
  }
  get root() {
    return this;
  }
  get parent() {
    return null;
  }
  getCustomProperty(key) {
    return this._customProperties.get(key);
  }
  *getCustomProperties() {
    yield* this._customProperties.entries();
  }
  _appendChild(items) {
    return this._insertChild(this.childCount, items);
  }
  getChild(index) {
    return this._children[index];
  }
  getChildIndex(node) {
    return this._children.indexOf(node);
  }
  getChildren() {
    return this._children[Symbol.iterator]();
  }
  _insertChild(index, items) {
    this._fireChange("children", this);
    let count2 = 0;
    const nodes = normalize$3(this.document, items);
    for (const node of nodes) {
      if (node.parent !== null) {
        node._remove();
      }
      node.parent = this;
      this._children.splice(index, 0, node);
      index++;
      count2++;
    }
    return count2;
  }
  _removeChildren(index, howMany = 1) {
    this._fireChange("children", this);
    for (let i2 = index; i2 < index + howMany; i2++) {
      this._children[i2].parent = null;
    }
    return this._children.splice(index, howMany);
  }
  _fireChange(type, node) {
    this.fire("change:" + type, node);
  }
  _setCustomProperty(key, value) {
    this._customProperties.set(key, value);
  }
  _removeCustomProperty(key) {
    return this._customProperties.delete(key);
  }
}
DocumentFragment$1.prototype.is = function(type) {
  return type === "documentFragment" || type === "view:documentFragment";
};
function normalize$3(document2, nodes) {
  if (typeof nodes == "string") {
    return [new Text$2(document2, nodes)];
  }
  if (!isIterable(nodes)) {
    nodes = [nodes];
  }
  return Array.from(nodes).map((node) => {
    if (typeof node == "string") {
      return new Text$2(document2, node);
    }
    if (node instanceof TextProxy$1) {
      return new Text$2(document2, node.data);
    }
    return node;
  });
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class DowncastWriter {
  constructor(document2) {
    this.document = document2;
    this._cloneGroups = /* @__PURE__ */ new Map();
    this._slotFactory = null;
  }
  setSelection(...args) {
    this.document.selection._setTo(...args);
  }
  setSelectionFocus(...args) {
    this.document.selection._setFocus(...args);
  }
  createDocumentFragment(children) {
    return new DocumentFragment$1(this.document, children);
  }
  createText(data) {
    return new Text$2(this.document, data);
  }
  createAttributeElement(name, attributes, options = {}) {
    const attributeElement = new AttributeElement(this.document, name, attributes);
    if (typeof options.priority === "number") {
      attributeElement._priority = options.priority;
    }
    if (options.id) {
      attributeElement._id = options.id;
    }
    if (options.renderUnsafeAttributes) {
      attributeElement._unsafeAttributesToRender.push(...options.renderUnsafeAttributes);
    }
    return attributeElement;
  }
  createContainerElement(name, attributes, childrenOrOptions = {}, options = {}) {
    let children = null;
    if (isPlainObject(childrenOrOptions)) {
      options = childrenOrOptions;
    } else {
      children = childrenOrOptions;
    }
    const containerElement = new ContainerElement(this.document, name, attributes, children);
    if (options.renderUnsafeAttributes) {
      containerElement._unsafeAttributesToRender.push(...options.renderUnsafeAttributes);
    }
    return containerElement;
  }
  createEditableElement(name, attributes, options = {}) {
    const editableElement = new EditableElement(this.document, name, attributes);
    if (options.renderUnsafeAttributes) {
      editableElement._unsafeAttributesToRender.push(...options.renderUnsafeAttributes);
    }
    return editableElement;
  }
  createEmptyElement(name, attributes, options = {}) {
    const emptyElement = new EmptyElement(this.document, name, attributes);
    if (options.renderUnsafeAttributes) {
      emptyElement._unsafeAttributesToRender.push(...options.renderUnsafeAttributes);
    }
    return emptyElement;
  }
  createUIElement(name, attributes, renderFunction) {
    const uiElement = new UIElement(this.document, name, attributes);
    if (renderFunction) {
      uiElement.render = renderFunction;
    }
    return uiElement;
  }
  createRawElement(name, attributes, renderFunction, options = {}) {
    const rawElement = new RawElement(this.document, name, attributes);
    if (renderFunction) {
      rawElement.render = renderFunction;
    }
    if (options.renderUnsafeAttributes) {
      rawElement._unsafeAttributesToRender.push(...options.renderUnsafeAttributes);
    }
    return rawElement;
  }
  setAttribute(key, value, element) {
    element._setAttribute(key, value);
  }
  removeAttribute(key, element) {
    element._removeAttribute(key);
  }
  addClass(className, element) {
    element._addClass(className);
  }
  removeClass(className, element) {
    element._removeClass(className);
  }
  setStyle(property, value, element) {
    if (isPlainObject(property) && element === void 0) {
      value._setStyle(property);
    } else {
      element._setStyle(property, value);
    }
  }
  removeStyle(property, element) {
    element._removeStyle(property);
  }
  setCustomProperty(key, value, element) {
    element._setCustomProperty(key, value);
  }
  removeCustomProperty(key, element) {
    return element._removeCustomProperty(key);
  }
  breakAttributes(positionOrRange) {
    if (positionOrRange instanceof Position$1) {
      return this._breakAttributes(positionOrRange);
    } else {
      return this._breakAttributesRange(positionOrRange);
    }
  }
  breakContainer(position) {
    const element = position.parent;
    if (!element.is("containerElement")) {
      throw new CKEditorError("view-writer-break-non-container-element", this.document);
    }
    if (!element.parent) {
      throw new CKEditorError("view-writer-break-root", this.document);
    }
    if (position.isAtStart) {
      return Position$1._createBefore(element);
    } else if (!position.isAtEnd) {
      const newElement = element._clone(false);
      this.insert(Position$1._createAfter(element), newElement);
      const sourceRange = new Range$1(position, Position$1._createAt(element, "end"));
      const targetPosition = new Position$1(newElement, 0);
      this.move(sourceRange, targetPosition);
    }
    return Position$1._createAfter(element);
  }
  mergeAttributes(position) {
    const positionOffset = position.offset;
    const positionParent = position.parent;
    if (positionParent.is("$text")) {
      return position;
    }
    if (positionParent.is("attributeElement") && positionParent.childCount === 0) {
      const parent2 = positionParent.parent;
      const offset = positionParent.index;
      positionParent._remove();
      this._removeFromClonedElementsGroup(positionParent);
      return this.mergeAttributes(new Position$1(parent2, offset));
    }
    const nodeBefore = positionParent.getChild(positionOffset - 1);
    const nodeAfter = positionParent.getChild(positionOffset);
    if (!nodeBefore || !nodeAfter) {
      return position;
    }
    if (nodeBefore.is("$text") && nodeAfter.is("$text")) {
      return mergeTextNodes(nodeBefore, nodeAfter);
    } else if (nodeBefore.is("attributeElement") && nodeAfter.is("attributeElement") && nodeBefore.isSimilar(nodeAfter)) {
      const count2 = nodeBefore.childCount;
      nodeBefore._appendChild(nodeAfter.getChildren());
      nodeAfter._remove();
      this._removeFromClonedElementsGroup(nodeAfter);
      return this.mergeAttributes(new Position$1(nodeBefore, count2));
    }
    return position;
  }
  mergeContainers(position) {
    const prev = position.nodeBefore;
    const next = position.nodeAfter;
    if (!prev || !next || !prev.is("containerElement") || !next.is("containerElement")) {
      throw new CKEditorError("view-writer-merge-containers-invalid-position", this.document);
    }
    const lastChild = prev.getChild(prev.childCount - 1);
    const newPosition = lastChild instanceof Text$2 ? Position$1._createAt(lastChild, "end") : Position$1._createAt(prev, "end");
    this.move(Range$1._createIn(next), Position$1._createAt(prev, "end"));
    this.remove(Range$1._createOn(next));
    return newPosition;
  }
  insert(position, nodes) {
    nodes = isIterable(nodes) ? [...nodes] : [nodes];
    validateNodesToInsert(nodes, this.document);
    const nodeGroups = nodes.reduce((groups, node) => {
      const lastGroup = groups[groups.length - 1];
      const breakAttributes = !node.is("uiElement");
      if (!lastGroup || lastGroup.breakAttributes != breakAttributes) {
        groups.push({
          breakAttributes,
          nodes: [node]
        });
      } else {
        lastGroup.nodes.push(node);
      }
      return groups;
    }, []);
    let start = null;
    let end = position;
    for (const { nodes: nodes2, breakAttributes } of nodeGroups) {
      const range = this._insertNodes(end, nodes2, breakAttributes);
      if (!start) {
        start = range.start;
      }
      end = range.end;
    }
    if (!start) {
      return new Range$1(position);
    }
    return new Range$1(start, end);
  }
  remove(rangeOrItem) {
    const range = rangeOrItem instanceof Range$1 ? rangeOrItem : Range$1._createOn(rangeOrItem);
    validateRangeContainer(range, this.document);
    if (range.isCollapsed) {
      return new DocumentFragment$1(this.document);
    }
    const { start: breakStart, end: breakEnd } = this._breakAttributesRange(range, true);
    const parentContainer = breakStart.parent;
    const count2 = breakEnd.offset - breakStart.offset;
    const removed = parentContainer._removeChildren(breakStart.offset, count2);
    for (const node of removed) {
      this._removeFromClonedElementsGroup(node);
    }
    const mergePosition = this.mergeAttributes(breakStart);
    range.start = mergePosition;
    range.end = mergePosition.clone();
    return new DocumentFragment$1(this.document, removed);
  }
  clear(range, element) {
    validateRangeContainer(range, this.document);
    const walker = range.getWalker({
      direction: "backward",
      ignoreElementEnd: true
    });
    for (const current of walker) {
      const item = current.item;
      let rangeToRemove;
      if (item.is("element") && element.isSimilar(item)) {
        rangeToRemove = Range$1._createOn(item);
      } else if (!current.nextPosition.isAfter(range.start) && item.is("$textProxy")) {
        const parentElement = item.getAncestors().find((ancestor) => {
          return ancestor.is("element") && element.isSimilar(ancestor);
        });
        if (parentElement) {
          rangeToRemove = Range$1._createIn(parentElement);
        }
      }
      if (rangeToRemove) {
        if (rangeToRemove.end.isAfter(range.end)) {
          rangeToRemove.end = range.end;
        }
        if (rangeToRemove.start.isBefore(range.start)) {
          rangeToRemove.start = range.start;
        }
        this.remove(rangeToRemove);
      }
    }
  }
  move(sourceRange, targetPosition) {
    let nodes;
    if (targetPosition.isAfter(sourceRange.end)) {
      targetPosition = this._breakAttributes(targetPosition, true);
      const parent2 = targetPosition.parent;
      const countBefore = parent2.childCount;
      sourceRange = this._breakAttributesRange(sourceRange, true);
      nodes = this.remove(sourceRange);
      targetPosition.offset += parent2.childCount - countBefore;
    } else {
      nodes = this.remove(sourceRange);
    }
    return this.insert(targetPosition, nodes);
  }
  wrap(range, attribute) {
    if (!(attribute instanceof AttributeElement)) {
      throw new CKEditorError("view-writer-wrap-invalid-attribute", this.document);
    }
    validateRangeContainer(range, this.document);
    if (!range.isCollapsed) {
      return this._wrapRange(range, attribute);
    } else {
      let position = range.start;
      if (position.parent.is("element") && !_hasNonUiChildren(position.parent)) {
        position = position.getLastMatchingPosition((value) => value.item.is("uiElement"));
      }
      position = this._wrapPosition(position, attribute);
      const viewSelection = this.document.selection;
      if (viewSelection.isCollapsed && viewSelection.getFirstPosition().isEqual(range.start)) {
        this.setSelection(position);
      }
      return new Range$1(position);
    }
  }
  unwrap(range, attribute) {
    if (!(attribute instanceof AttributeElement)) {
      throw new CKEditorError("view-writer-unwrap-invalid-attribute", this.document);
    }
    validateRangeContainer(range, this.document);
    if (range.isCollapsed) {
      return range;
    }
    const { start: breakStart, end: breakEnd } = this._breakAttributesRange(range, true);
    const parentContainer = breakStart.parent;
    const newRange = this._unwrapChildren(parentContainer, breakStart.offset, breakEnd.offset, attribute);
    const start = this.mergeAttributes(newRange.start);
    if (!start.isEqual(newRange.start)) {
      newRange.end.offset--;
    }
    const end = this.mergeAttributes(newRange.end);
    return new Range$1(start, end);
  }
  rename(newName, viewElement) {
    const newElement = new ContainerElement(this.document, newName, viewElement.getAttributes());
    this.insert(Position$1._createAfter(viewElement), newElement);
    this.move(Range$1._createIn(viewElement), Position$1._createAt(newElement, 0));
    this.remove(Range$1._createOn(viewElement));
    return newElement;
  }
  clearClonedElementsGroup(groupName) {
    this._cloneGroups.delete(groupName);
  }
  createPositionAt(itemOrPosition, offset) {
    return Position$1._createAt(itemOrPosition, offset);
  }
  createPositionAfter(item) {
    return Position$1._createAfter(item);
  }
  createPositionBefore(item) {
    return Position$1._createBefore(item);
  }
  createRange(...args) {
    return new Range$1(...args);
  }
  createRangeOn(item) {
    return Range$1._createOn(item);
  }
  createRangeIn(element) {
    return Range$1._createIn(element);
  }
  createSelection(...args) {
    return new Selection$1(...args);
  }
  createSlot(modeOrFilter) {
    if (!this._slotFactory) {
      throw new CKEditorError("view-writer-invalid-create-slot-context", this.document);
    }
    return this._slotFactory(this, modeOrFilter);
  }
  _registerSlotFactory(slotFactory) {
    this._slotFactory = slotFactory;
  }
  _clearSlotFactory() {
    this._slotFactory = null;
  }
  _insertNodes(position, nodes, breakAttributes) {
    let parentElement;
    if (breakAttributes) {
      parentElement = getParentContainer(position);
    } else {
      parentElement = position.parent.is("$text") ? position.parent.parent : position.parent;
    }
    if (!parentElement) {
      throw new CKEditorError("view-writer-invalid-position-container", this.document);
    }
    let insertionPosition;
    if (breakAttributes) {
      insertionPosition = this._breakAttributes(position, true);
    } else {
      insertionPosition = position.parent.is("$text") ? breakTextNode(position) : position;
    }
    const length = parentElement._insertChild(insertionPosition.offset, nodes);
    for (const node of nodes) {
      this._addToClonedElementsGroup(node);
    }
    const endPosition = insertionPosition.getShiftedBy(length);
    const start = this.mergeAttributes(insertionPosition);
    if (!start.isEqual(insertionPosition)) {
      endPosition.offset--;
    }
    const end = this.mergeAttributes(endPosition);
    return new Range$1(start, end);
  }
  _wrapChildren(parent2, startOffset, endOffset, wrapElement) {
    let i2 = startOffset;
    const wrapPositions = [];
    while (i2 < endOffset) {
      const child = parent2.getChild(i2);
      const isText2 = child.is("$text");
      const isAttribute = child.is("attributeElement");
      if (isAttribute && this._wrapAttributeElement(wrapElement, child)) {
        wrapPositions.push(new Position$1(parent2, i2));
      } else if (isText2 || !isAttribute || shouldABeOutsideB(wrapElement, child)) {
        const newAttribute = wrapElement._clone();
        child._remove();
        newAttribute._appendChild(child);
        parent2._insertChild(i2, newAttribute);
        this._addToClonedElementsGroup(newAttribute);
        wrapPositions.push(new Position$1(parent2, i2));
      } else {
        this._wrapChildren(child, 0, child.childCount, wrapElement);
      }
      i2++;
    }
    let offsetChange = 0;
    for (const position of wrapPositions) {
      position.offset -= offsetChange;
      if (position.offset == startOffset) {
        continue;
      }
      const newPosition = this.mergeAttributes(position);
      if (!newPosition.isEqual(position)) {
        offsetChange++;
        endOffset--;
      }
    }
    return Range$1._createFromParentsAndOffsets(parent2, startOffset, parent2, endOffset);
  }
  _unwrapChildren(parent2, startOffset, endOffset, unwrapElement) {
    let i2 = startOffset;
    const unwrapPositions = [];
    while (i2 < endOffset) {
      const child = parent2.getChild(i2);
      if (!child.is("attributeElement")) {
        i2++;
        continue;
      }
      if (child.isSimilar(unwrapElement)) {
        const unwrapped = child.getChildren();
        const count2 = child.childCount;
        child._remove();
        parent2._insertChild(i2, unwrapped);
        this._removeFromClonedElementsGroup(child);
        unwrapPositions.push(new Position$1(parent2, i2), new Position$1(parent2, i2 + count2));
        i2 += count2;
        endOffset += count2 - 1;
        continue;
      }
      if (this._unwrapAttributeElement(unwrapElement, child)) {
        unwrapPositions.push(new Position$1(parent2, i2), new Position$1(parent2, i2 + 1));
        i2++;
        continue;
      }
      this._unwrapChildren(child, 0, child.childCount, unwrapElement);
      i2++;
    }
    let offsetChange = 0;
    for (const position of unwrapPositions) {
      position.offset -= offsetChange;
      if (position.offset == startOffset || position.offset == endOffset) {
        continue;
      }
      const newPosition = this.mergeAttributes(position);
      if (!newPosition.isEqual(position)) {
        offsetChange++;
        endOffset--;
      }
    }
    return Range$1._createFromParentsAndOffsets(parent2, startOffset, parent2, endOffset);
  }
  _wrapRange(range, attribute) {
    const { start: breakStart, end: breakEnd } = this._breakAttributesRange(range, true);
    const parentContainer = breakStart.parent;
    const newRange = this._wrapChildren(parentContainer, breakStart.offset, breakEnd.offset, attribute);
    const start = this.mergeAttributes(newRange.start);
    if (!start.isEqual(newRange.start)) {
      newRange.end.offset--;
    }
    const end = this.mergeAttributes(newRange.end);
    return new Range$1(start, end);
  }
  _wrapPosition(position, attribute) {
    if (attribute.isSimilar(position.parent)) {
      return movePositionToTextNode(position.clone());
    }
    if (position.parent.is("$text")) {
      position = breakTextNode(position);
    }
    const fakeElement = this.createAttributeElement("_wrapPosition-fake-element");
    fakeElement._priority = Number.POSITIVE_INFINITY;
    fakeElement.isSimilar = () => false;
    position.parent._insertChild(position.offset, fakeElement);
    const wrapRange = new Range$1(position, position.getShiftedBy(1));
    this.wrap(wrapRange, attribute);
    const newPosition = new Position$1(fakeElement.parent, fakeElement.index);
    fakeElement._remove();
    const nodeBefore = newPosition.nodeBefore;
    const nodeAfter = newPosition.nodeAfter;
    if (nodeBefore instanceof Text$2 && nodeAfter instanceof Text$2) {
      return mergeTextNodes(nodeBefore, nodeAfter);
    }
    return movePositionToTextNode(newPosition);
  }
  _wrapAttributeElement(wrapper, toWrap) {
    if (!canBeJoined(wrapper, toWrap)) {
      return false;
    }
    if (wrapper.name !== toWrap.name || wrapper.priority !== toWrap.priority) {
      return false;
    }
    for (const key of wrapper.getAttributeKeys()) {
      if (key === "class" || key === "style") {
        continue;
      }
      if (toWrap.hasAttribute(key) && toWrap.getAttribute(key) !== wrapper.getAttribute(key)) {
        return false;
      }
    }
    for (const key of wrapper.getStyleNames()) {
      if (toWrap.hasStyle(key) && toWrap.getStyle(key) !== wrapper.getStyle(key)) {
        return false;
      }
    }
    for (const key of wrapper.getAttributeKeys()) {
      if (key === "class" || key === "style") {
        continue;
      }
      if (!toWrap.hasAttribute(key)) {
        this.setAttribute(key, wrapper.getAttribute(key), toWrap);
      }
    }
    for (const key of wrapper.getStyleNames()) {
      if (!toWrap.hasStyle(key)) {
        this.setStyle(key, wrapper.getStyle(key), toWrap);
      }
    }
    for (const key of wrapper.getClassNames()) {
      if (!toWrap.hasClass(key)) {
        this.addClass(key, toWrap);
      }
    }
    return true;
  }
  _unwrapAttributeElement(wrapper, toUnwrap) {
    if (!canBeJoined(wrapper, toUnwrap)) {
      return false;
    }
    if (wrapper.name !== toUnwrap.name || wrapper.priority !== toUnwrap.priority) {
      return false;
    }
    for (const key of wrapper.getAttributeKeys()) {
      if (key === "class" || key === "style") {
        continue;
      }
      if (!toUnwrap.hasAttribute(key) || toUnwrap.getAttribute(key) !== wrapper.getAttribute(key)) {
        return false;
      }
    }
    if (!toUnwrap.hasClass(...wrapper.getClassNames())) {
      return false;
    }
    for (const key of wrapper.getStyleNames()) {
      if (!toUnwrap.hasStyle(key) || toUnwrap.getStyle(key) !== wrapper.getStyle(key)) {
        return false;
      }
    }
    for (const key of wrapper.getAttributeKeys()) {
      if (key === "class" || key === "style") {
        continue;
      }
      this.removeAttribute(key, toUnwrap);
    }
    this.removeClass(Array.from(wrapper.getClassNames()), toUnwrap);
    this.removeStyle(Array.from(wrapper.getStyleNames()), toUnwrap);
    return true;
  }
  _breakAttributesRange(range, forceSplitText = false) {
    const rangeStart = range.start;
    const rangeEnd = range.end;
    validateRangeContainer(range, this.document);
    if (range.isCollapsed) {
      const position = this._breakAttributes(range.start, forceSplitText);
      return new Range$1(position, position);
    }
    const breakEnd = this._breakAttributes(rangeEnd, forceSplitText);
    const count2 = breakEnd.parent.childCount;
    const breakStart = this._breakAttributes(rangeStart, forceSplitText);
    breakEnd.offset += breakEnd.parent.childCount - count2;
    return new Range$1(breakStart, breakEnd);
  }
  _breakAttributes(position, forceSplitText = false) {
    const positionOffset = position.offset;
    const positionParent = position.parent;
    if (position.parent.is("emptyElement")) {
      throw new CKEditorError("view-writer-cannot-break-empty-element", this.document);
    }
    if (position.parent.is("uiElement")) {
      throw new CKEditorError("view-writer-cannot-break-ui-element", this.document);
    }
    if (position.parent.is("rawElement")) {
      throw new CKEditorError("view-writer-cannot-break-raw-element", this.document);
    }
    if (!forceSplitText && positionParent.is("$text") && isContainerOrFragment(positionParent.parent)) {
      return position.clone();
    }
    if (isContainerOrFragment(positionParent)) {
      return position.clone();
    }
    if (positionParent.is("$text")) {
      return this._breakAttributes(breakTextNode(position), forceSplitText);
    }
    const length = positionParent.childCount;
    if (positionOffset == length) {
      const newPosition = new Position$1(positionParent.parent, positionParent.index + 1);
      return this._breakAttributes(newPosition, forceSplitText);
    } else {
      if (positionOffset === 0) {
        const newPosition = new Position$1(positionParent.parent, positionParent.index);
        return this._breakAttributes(newPosition, forceSplitText);
      } else {
        const offsetAfter = positionParent.index + 1;
        const clonedNode = positionParent._clone();
        positionParent.parent._insertChild(offsetAfter, clonedNode);
        this._addToClonedElementsGroup(clonedNode);
        const count2 = positionParent.childCount - positionOffset;
        const nodesToMove = positionParent._removeChildren(positionOffset, count2);
        clonedNode._appendChild(nodesToMove);
        const newPosition = new Position$1(positionParent.parent, offsetAfter);
        return this._breakAttributes(newPosition, forceSplitText);
      }
    }
  }
  _addToClonedElementsGroup(element) {
    if (!element.root.is("rootElement")) {
      return;
    }
    if (element.is("element")) {
      for (const child of element.getChildren()) {
        this._addToClonedElementsGroup(child);
      }
    }
    const id = element.id;
    if (!id) {
      return;
    }
    let group = this._cloneGroups.get(id);
    if (!group) {
      group = /* @__PURE__ */ new Set();
      this._cloneGroups.set(id, group);
    }
    group.add(element);
    element._clonesGroup = group;
  }
  _removeFromClonedElementsGroup(element) {
    if (element.is("element")) {
      for (const child of element.getChildren()) {
        this._removeFromClonedElementsGroup(child);
      }
    }
    const id = element.id;
    if (!id) {
      return;
    }
    const group = this._cloneGroups.get(id);
    if (!group) {
      return;
    }
    group.delete(element);
  }
}
function _hasNonUiChildren(parent2) {
  return Array.from(parent2.getChildren()).some((child) => !child.is("uiElement"));
}
function getParentContainer(position) {
  let parent2 = position.parent;
  while (!isContainerOrFragment(parent2)) {
    if (!parent2) {
      return void 0;
    }
    parent2 = parent2.parent;
  }
  return parent2;
}
function shouldABeOutsideB(a2, b2) {
  if (a2.priority < b2.priority) {
    return true;
  } else if (a2.priority > b2.priority) {
    return false;
  }
  return a2.getIdentity() < b2.getIdentity();
}
function movePositionToTextNode(position) {
  const nodeBefore = position.nodeBefore;
  if (nodeBefore && nodeBefore.is("$text")) {
    return new Position$1(nodeBefore, nodeBefore.data.length);
  }
  const nodeAfter = position.nodeAfter;
  if (nodeAfter && nodeAfter.is("$text")) {
    return new Position$1(nodeAfter, 0);
  }
  return position;
}
function breakTextNode(position) {
  if (position.offset == position.parent.data.length) {
    return new Position$1(position.parent.parent, position.parent.index + 1);
  }
  if (position.offset === 0) {
    return new Position$1(position.parent.parent, position.parent.index);
  }
  const textToMove = position.parent.data.slice(position.offset);
  position.parent._data = position.parent.data.slice(0, position.offset);
  position.parent.parent._insertChild(position.parent.index + 1, new Text$2(position.root.document, textToMove));
  return new Position$1(position.parent.parent, position.parent.index + 1);
}
function mergeTextNodes(t1, t22) {
  const nodeBeforeLength = t1.data.length;
  t1._data += t22.data;
  t22._remove();
  return new Position$1(t1, nodeBeforeLength);
}
const validNodesToInsert = [Text$2, AttributeElement, ContainerElement, EmptyElement, RawElement, UIElement];
function validateNodesToInsert(nodes, errorContext) {
  for (const node of nodes) {
    if (!validNodesToInsert.some((validNode) => node instanceof validNode)) {
      throw new CKEditorError("view-writer-insert-invalid-node-type", errorContext);
    }
    if (!node.is("$text")) {
      validateNodesToInsert(node.getChildren(), errorContext);
    }
  }
}
function isContainerOrFragment(node) {
  return node && (node.is("containerElement") || node.is("documentFragment"));
}
function validateRangeContainer(range, errorContext) {
  const startContainer = getParentContainer(range.start);
  const endContainer = getParentContainer(range.end);
  if (!startContainer || !endContainer || startContainer !== endContainer) {
    throw new CKEditorError("view-writer-invalid-range-container", errorContext);
  }
}
function canBeJoined(a2, b2) {
  return a2.id === null && b2.id === null;
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
const NBSP_FILLER = (domDocument) => domDocument.createTextNode("\xA0");
const MARKED_NBSP_FILLER = (domDocument) => {
  const span = domDocument.createElement("span");
  span.dataset.ckeFiller = "true";
  span.innerText = "\xA0";
  return span;
};
const BR_FILLER = (domDocument) => {
  const fillerBr = domDocument.createElement("br");
  fillerBr.dataset.ckeFiller = "true";
  return fillerBr;
};
const INLINE_FILLER_LENGTH = 7;
const INLINE_FILLER = "\u2060".repeat(INLINE_FILLER_LENGTH);
function startsWithFiller(domNode) {
  return isText(domNode) && domNode.data.substr(0, INLINE_FILLER_LENGTH) === INLINE_FILLER;
}
function isInlineFiller(domText) {
  return domText.data.length == INLINE_FILLER_LENGTH && startsWithFiller(domText);
}
function getDataWithoutFiller(domText) {
  if (startsWithFiller(domText)) {
    return domText.data.slice(INLINE_FILLER_LENGTH);
  } else {
    return domText.data;
  }
}
var renderer = "";
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
const BR_FILLER_REF = BR_FILLER(global$1.document);
const NBSP_FILLER_REF = NBSP_FILLER(global$1.document);
const MARKED_NBSP_FILLER_REF = MARKED_NBSP_FILLER(global$1.document);
const UNSAFE_ATTRIBUTE_NAME_PREFIX = "data-ck-unsafe-attribute-";
const UNSAFE_ELEMENT_REPLACEMENT_ATTRIBUTE = "data-ck-unsafe-element";
class DomConverter {
  constructor(document2, options = {}) {
    this.document = document2;
    this.renderingMode = options.renderingMode || "editing";
    this.blockFillerMode = options.blockFillerMode || (this.renderingMode === "editing" ? "br" : "nbsp");
    this.preElements = ["pre"];
    this.blockElements = [
      "address",
      "article",
      "aside",
      "blockquote",
      "caption",
      "center",
      "dd",
      "details",
      "dir",
      "div",
      "dl",
      "dt",
      "fieldset",
      "figcaption",
      "figure",
      "footer",
      "form",
      "h1",
      "h2",
      "h3",
      "h4",
      "h5",
      "h6",
      "header",
      "hgroup",
      "legend",
      "li",
      "main",
      "menu",
      "nav",
      "ol",
      "p",
      "pre",
      "section",
      "summary",
      "table",
      "tbody",
      "td",
      "tfoot",
      "th",
      "thead",
      "tr",
      "ul"
    ];
    this.inlineObjectElements = [
      "object",
      "iframe",
      "input",
      "button",
      "textarea",
      "select",
      "option",
      "video",
      "embed",
      "audio",
      "img",
      "canvas"
    ];
    this.unsafeElements = ["script", "style"];
    this._domDocument = this.renderingMode === "editing" ? global$1.document : global$1.document.implementation.createHTMLDocument("");
    this._domToViewMapping = /* @__PURE__ */ new WeakMap();
    this._viewToDomMapping = /* @__PURE__ */ new WeakMap();
    this._fakeSelectionMapping = /* @__PURE__ */ new WeakMap();
    this._rawContentElementMatcher = new Matcher();
    this._encounteredRawContentDomNodes = /* @__PURE__ */ new WeakSet();
  }
  bindFakeSelection(domElement, viewDocumentSelection) {
    this._fakeSelectionMapping.set(domElement, new Selection$1(viewDocumentSelection));
  }
  fakeSelectionToView(domElement) {
    return this._fakeSelectionMapping.get(domElement);
  }
  bindElements(domElement, viewElement) {
    this._domToViewMapping.set(domElement, viewElement);
    this._viewToDomMapping.set(viewElement, domElement);
  }
  unbindDomElement(domElement) {
    const viewElement = this._domToViewMapping.get(domElement);
    if (viewElement) {
      this._domToViewMapping.delete(domElement);
      this._viewToDomMapping.delete(viewElement);
      for (const child of Array.from(domElement.children)) {
        this.unbindDomElement(child);
      }
    }
  }
  bindDocumentFragments(domFragment, viewFragment) {
    this._domToViewMapping.set(domFragment, viewFragment);
    this._viewToDomMapping.set(viewFragment, domFragment);
  }
  shouldRenderAttribute(attributeKey, attributeValue, elementName) {
    if (this.renderingMode === "data") {
      return true;
    }
    attributeKey = attributeKey.toLowerCase();
    if (attributeKey.startsWith("on")) {
      return false;
    }
    if (attributeKey === "srcdoc" && attributeValue.match(/\bon\S+\s*=|javascript:|<\s*\/*script/i)) {
      return false;
    }
    if (elementName === "img" && (attributeKey === "src" || attributeKey === "srcset")) {
      return true;
    }
    if (elementName === "source" && attributeKey === "srcset") {
      return true;
    }
    if (attributeValue.match(/^\s*(javascript:|data:(image\/svg|text\/x?html))/i)) {
      return false;
    }
    return true;
  }
  setContentOf(domElement, html) {
    if (this.renderingMode === "data") {
      domElement.innerHTML = html;
      return;
    }
    const document2 = new DOMParser().parseFromString(html, "text/html");
    const fragment = document2.createDocumentFragment();
    const bodyChildNodes = document2.body.childNodes;
    while (bodyChildNodes.length > 0) {
      fragment.appendChild(bodyChildNodes[0]);
    }
    const treeWalker = document2.createTreeWalker(fragment, NodeFilter.SHOW_ELEMENT);
    const nodes = [];
    let currentNode;
    while (currentNode = treeWalker.nextNode()) {
      nodes.push(currentNode);
    }
    for (const currentNode2 of nodes) {
      for (const attributeName of currentNode2.getAttributeNames()) {
        this.setDomElementAttribute(currentNode2, attributeName, currentNode2.getAttribute(attributeName));
      }
      const elementName = currentNode2.tagName.toLowerCase();
      if (this._shouldRenameElement(elementName)) {
        _logUnsafeElement(elementName);
        currentNode2.replaceWith(this._createReplacementDomElement(elementName, currentNode2));
      }
    }
    while (domElement.firstChild) {
      domElement.firstChild.remove();
    }
    domElement.append(fragment);
  }
  viewToDom(viewNode, options = {}) {
    if (viewNode.is("$text")) {
      const textData = this._processDataFromViewText(viewNode);
      return this._domDocument.createTextNode(textData);
    } else {
      if (this.mapViewToDom(viewNode)) {
        return this.mapViewToDom(viewNode);
      }
      let domElement;
      if (viewNode.is("documentFragment")) {
        domElement = this._domDocument.createDocumentFragment();
        if (options.bind) {
          this.bindDocumentFragments(domElement, viewNode);
        }
      } else if (viewNode.is("uiElement")) {
        if (viewNode.name === "$comment") {
          domElement = this._domDocument.createComment(viewNode.getCustomProperty("$rawContent"));
        } else {
          domElement = viewNode.render(this._domDocument, this);
        }
        if (options.bind) {
          this.bindElements(domElement, viewNode);
        }
        return domElement;
      } else {
        if (this._shouldRenameElement(viewNode.name)) {
          _logUnsafeElement(viewNode.name);
          domElement = this._createReplacementDomElement(viewNode.name);
        } else if (viewNode.hasAttribute("xmlns")) {
          domElement = this._domDocument.createElementNS(viewNode.getAttribute("xmlns"), viewNode.name);
        } else {
          domElement = this._domDocument.createElement(viewNode.name);
        }
        if (viewNode.is("rawElement")) {
          viewNode.render(domElement, this);
        }
        if (options.bind) {
          this.bindElements(domElement, viewNode);
        }
        for (const key of viewNode.getAttributeKeys()) {
          this.setDomElementAttribute(domElement, key, viewNode.getAttribute(key), viewNode);
        }
      }
      if (options.withChildren !== false) {
        for (const child of this.viewChildrenToDom(viewNode, options)) {
          domElement.appendChild(child);
        }
      }
      return domElement;
    }
  }
  setDomElementAttribute(domElement, key, value, relatedViewElement) {
    const shouldRenderAttribute = this.shouldRenderAttribute(key, value, domElement.tagName.toLowerCase()) || relatedViewElement && relatedViewElement.shouldRenderUnsafeAttribute(key);
    if (!shouldRenderAttribute) {
      logWarning("domconverter-unsafe-attribute-detected", { domElement, key, value });
    }
    if (domElement.hasAttribute(key) && !shouldRenderAttribute) {
      domElement.removeAttribute(key);
    } else if (domElement.hasAttribute(UNSAFE_ATTRIBUTE_NAME_PREFIX + key) && shouldRenderAttribute) {
      domElement.removeAttribute(UNSAFE_ATTRIBUTE_NAME_PREFIX + key);
    }
    domElement.setAttribute(shouldRenderAttribute ? key : UNSAFE_ATTRIBUTE_NAME_PREFIX + key, value);
  }
  removeDomElementAttribute(domElement, key) {
    if (key == UNSAFE_ELEMENT_REPLACEMENT_ATTRIBUTE) {
      return;
    }
    domElement.removeAttribute(key);
    domElement.removeAttribute(UNSAFE_ATTRIBUTE_NAME_PREFIX + key);
  }
  *viewChildrenToDom(viewElement, options = {}) {
    const fillerPositionOffset = viewElement.getFillerOffset && viewElement.getFillerOffset();
    let offset = 0;
    for (const childView of viewElement.getChildren()) {
      if (fillerPositionOffset === offset) {
        yield this._getBlockFiller();
      }
      const transparentRendering = childView.is("element") && !!childView.getCustomProperty("dataPipeline:transparentRendering") && !first(childView.getAttributes());
      if (transparentRendering && this.renderingMode == "data") {
        yield* this.viewChildrenToDom(childView, options);
      } else {
        if (transparentRendering) {
          logWarning("domconverter-transparent-rendering-unsupported-in-editing-pipeline", { viewElement: childView });
        }
        yield this.viewToDom(childView, options);
      }
      offset++;
    }
    if (fillerPositionOffset === offset) {
      yield this._getBlockFiller();
    }
  }
  viewRangeToDom(viewRange) {
    const domStart = this.viewPositionToDom(viewRange.start);
    const domEnd = this.viewPositionToDom(viewRange.end);
    const domRange = this._domDocument.createRange();
    domRange.setStart(domStart.parent, domStart.offset);
    domRange.setEnd(domEnd.parent, domEnd.offset);
    return domRange;
  }
  viewPositionToDom(viewPosition) {
    const viewParent = viewPosition.parent;
    if (viewParent.is("$text")) {
      const domParent = this.findCorrespondingDomText(viewParent);
      if (!domParent) {
        return null;
      }
      let offset = viewPosition.offset;
      if (startsWithFiller(domParent)) {
        offset += INLINE_FILLER_LENGTH;
      }
      return { parent: domParent, offset };
    } else {
      let domParent, domBefore, domAfter;
      if (viewPosition.offset === 0) {
        domParent = this.mapViewToDom(viewParent);
        if (!domParent) {
          return null;
        }
        domAfter = domParent.childNodes[0];
      } else {
        const nodeBefore = viewPosition.nodeBefore;
        domBefore = nodeBefore.is("$text") ? this.findCorrespondingDomText(nodeBefore) : this.mapViewToDom(nodeBefore);
        if (!domBefore) {
          return null;
        }
        domParent = domBefore.parentNode;
        domAfter = domBefore.nextSibling;
      }
      if (isText(domAfter) && startsWithFiller(domAfter)) {
        return { parent: domAfter, offset: INLINE_FILLER_LENGTH };
      }
      const offset = domBefore ? indexOf(domBefore) + 1 : 0;
      return { parent: domParent, offset };
    }
  }
  domToView(domNode, options = {}) {
    if (this.isBlockFiller(domNode)) {
      return null;
    }
    const hostElement = this.getHostViewElement(domNode);
    if (hostElement) {
      return hostElement;
    }
    if (isComment(domNode) && options.skipComments) {
      return null;
    }
    if (isText(domNode)) {
      if (isInlineFiller(domNode)) {
        return null;
      } else {
        const textData = this._processDataFromDomText(domNode);
        return textData === "" ? null : new Text$2(this.document, textData);
      }
    } else {
      if (this.mapDomToView(domNode)) {
        return this.mapDomToView(domNode);
      }
      let viewElement;
      if (this.isDocumentFragment(domNode)) {
        viewElement = new DocumentFragment$1(this.document);
        if (options.bind) {
          this.bindDocumentFragments(domNode, viewElement);
        }
      } else {
        viewElement = this._createViewElement(domNode, options);
        if (options.bind) {
          this.bindElements(domNode, viewElement);
        }
        const attrs = domNode.attributes;
        if (attrs) {
          for (let l2 = attrs.length, i2 = 0; i2 < l2; i2++) {
            viewElement._setAttribute(attrs[i2].name, attrs[i2].value);
          }
        }
        if (this._isViewElementWithRawContent(viewElement, options) || isComment(domNode)) {
          const rawContent = isComment(domNode) ? domNode.data : domNode.innerHTML;
          viewElement._setCustomProperty("$rawContent", rawContent);
          this._encounteredRawContentDomNodes.add(domNode);
          return viewElement;
        }
      }
      if (options.withChildren !== false) {
        for (const child of this.domChildrenToView(domNode, options)) {
          viewElement._appendChild(child);
        }
      }
      return viewElement;
    }
  }
  *domChildrenToView(domElement, options) {
    for (let i2 = 0; i2 < domElement.childNodes.length; i2++) {
      const domChild = domElement.childNodes[i2];
      const viewChild = this.domToView(domChild, options);
      if (viewChild !== null) {
        yield viewChild;
      }
    }
  }
  domSelectionToView(domSelection) {
    if (domSelection.rangeCount === 1) {
      let container = domSelection.getRangeAt(0).startContainer;
      if (isText(container)) {
        container = container.parentNode;
      }
      const viewSelection = this.fakeSelectionToView(container);
      if (viewSelection) {
        return viewSelection;
      }
    }
    const isBackward = this.isDomSelectionBackward(domSelection);
    const viewRanges = [];
    for (let i2 = 0; i2 < domSelection.rangeCount; i2++) {
      const domRange = domSelection.getRangeAt(i2);
      const viewRange = this.domRangeToView(domRange);
      if (viewRange) {
        viewRanges.push(viewRange);
      }
    }
    return new Selection$1(viewRanges, { backward: isBackward });
  }
  domRangeToView(domRange) {
    const viewStart = this.domPositionToView(domRange.startContainer, domRange.startOffset);
    const viewEnd = this.domPositionToView(domRange.endContainer, domRange.endOffset);
    if (viewStart && viewEnd) {
      return new Range$1(viewStart, viewEnd);
    }
    return null;
  }
  domPositionToView(domParent, domOffset = 0) {
    if (this.isBlockFiller(domParent)) {
      return this.domPositionToView(domParent.parentNode, indexOf(domParent));
    }
    const viewElement = this.mapDomToView(domParent);
    if (viewElement && (viewElement.is("uiElement") || viewElement.is("rawElement"))) {
      return Position$1._createBefore(viewElement);
    }
    if (isText(domParent)) {
      if (isInlineFiller(domParent)) {
        return this.domPositionToView(domParent.parentNode, indexOf(domParent));
      }
      const viewParent = this.findCorrespondingViewText(domParent);
      let offset = domOffset;
      if (!viewParent) {
        return null;
      }
      if (startsWithFiller(domParent)) {
        offset -= INLINE_FILLER_LENGTH;
        offset = offset < 0 ? 0 : offset;
      }
      return new Position$1(viewParent, offset);
    } else {
      if (domOffset === 0) {
        const viewParent = this.mapDomToView(domParent);
        if (viewParent) {
          return new Position$1(viewParent, 0);
        }
      } else {
        const domBefore = domParent.childNodes[domOffset - 1];
        if (isText(domBefore) && isInlineFiller(domBefore)) {
          return this.domPositionToView(domBefore.parentNode, indexOf(domBefore));
        }
        const viewBefore = isText(domBefore) ? this.findCorrespondingViewText(domBefore) : this.mapDomToView(domBefore);
        if (viewBefore && viewBefore.parent) {
          return new Position$1(viewBefore.parent, viewBefore.index + 1);
        }
      }
      return null;
    }
  }
  mapDomToView(domElementOrDocumentFragment) {
    const hostElement = this.getHostViewElement(domElementOrDocumentFragment);
    return hostElement || this._domToViewMapping.get(domElementOrDocumentFragment);
  }
  findCorrespondingViewText(domText) {
    if (isInlineFiller(domText)) {
      return null;
    }
    const hostElement = this.getHostViewElement(domText);
    if (hostElement) {
      return hostElement;
    }
    const previousSibling = domText.previousSibling;
    if (previousSibling) {
      if (!this.isElement(previousSibling)) {
        return null;
      }
      const viewElement = this.mapDomToView(previousSibling);
      if (viewElement) {
        const nextSibling = viewElement.nextSibling;
        if (nextSibling instanceof Text$2) {
          return nextSibling;
        } else {
          return null;
        }
      }
    } else {
      const viewElement = this.mapDomToView(domText.parentNode);
      if (viewElement) {
        const firstChild = viewElement.getChild(0);
        if (firstChild instanceof Text$2) {
          return firstChild;
        } else {
          return null;
        }
      }
    }
    return null;
  }
  mapViewToDom(documentFragmentOrElement) {
    return this._viewToDomMapping.get(documentFragmentOrElement);
  }
  findCorrespondingDomText(viewText) {
    const previousSibling = viewText.previousSibling;
    if (previousSibling && this.mapViewToDom(previousSibling)) {
      return this.mapViewToDom(previousSibling).nextSibling;
    }
    if (!previousSibling && viewText.parent && this.mapViewToDom(viewText.parent)) {
      return this.mapViewToDom(viewText.parent).childNodes[0];
    }
    return null;
  }
  focus(viewEditable) {
    const domEditable = this.mapViewToDom(viewEditable);
    if (domEditable && domEditable.ownerDocument.activeElement !== domEditable) {
      const { scrollX, scrollY } = global$1.window;
      const scrollPositions = [];
      forEachDomElementAncestor(domEditable, (node) => {
        const { scrollLeft, scrollTop } = node;
        scrollPositions.push([scrollLeft, scrollTop]);
      });
      domEditable.focus();
      forEachDomElementAncestor(domEditable, (node) => {
        const [scrollLeft, scrollTop] = scrollPositions.shift();
        node.scrollLeft = scrollLeft;
        node.scrollTop = scrollTop;
      });
      global$1.window.scrollTo(scrollX, scrollY);
    }
  }
  isElement(node) {
    return node && node.nodeType == Node.ELEMENT_NODE;
  }
  isDocumentFragment(node) {
    return node && node.nodeType == Node.DOCUMENT_FRAGMENT_NODE;
  }
  isBlockFiller(domNode) {
    if (this.blockFillerMode == "br") {
      return domNode.isEqualNode(BR_FILLER_REF);
    }
    if (domNode.tagName === "BR" && hasBlockParent(domNode, this.blockElements) && domNode.parentNode.childNodes.length === 1) {
      return true;
    }
    return domNode.isEqualNode(MARKED_NBSP_FILLER_REF) || isNbspBlockFiller(domNode, this.blockElements);
  }
  isDomSelectionBackward(selection) {
    if (selection.isCollapsed) {
      return false;
    }
    const range = this._domDocument.createRange();
    try {
      range.setStart(selection.anchorNode, selection.anchorOffset);
      range.setEnd(selection.focusNode, selection.focusOffset);
    } catch (e2) {
      return false;
    }
    const backward = range.collapsed;
    range.detach();
    return backward;
  }
  getHostViewElement(domNode) {
    const ancestors = getAncestors(domNode);
    ancestors.pop();
    while (ancestors.length) {
      const domNode2 = ancestors.pop();
      const viewNode = this._domToViewMapping.get(domNode2);
      if (viewNode && (viewNode.is("uiElement") || viewNode.is("rawElement"))) {
        return viewNode;
      }
    }
    return null;
  }
  isDomSelectionCorrect(domSelection) {
    return this._isDomSelectionPositionCorrect(domSelection.anchorNode, domSelection.anchorOffset) && this._isDomSelectionPositionCorrect(domSelection.focusNode, domSelection.focusOffset);
  }
  registerRawContentMatcher(pattern) {
    this._rawContentElementMatcher.add(pattern);
  }
  _getBlockFiller() {
    switch (this.blockFillerMode) {
      case "nbsp":
        return NBSP_FILLER(this._domDocument);
      case "markedNbsp":
        return MARKED_NBSP_FILLER(this._domDocument);
      case "br":
        return BR_FILLER(this._domDocument);
    }
  }
  _isDomSelectionPositionCorrect(domParent, offset) {
    if (isText(domParent) && startsWithFiller(domParent) && offset < INLINE_FILLER_LENGTH) {
      return false;
    }
    if (this.isElement(domParent) && startsWithFiller(domParent.childNodes[offset])) {
      return false;
    }
    const viewParent = this.mapDomToView(domParent);
    if (viewParent && (viewParent.is("uiElement") || viewParent.is("rawElement"))) {
      return false;
    }
    return true;
  }
  _processDataFromViewText(node) {
    let data = node.data;
    if (node.getAncestors().some((parent2) => this.preElements.includes(parent2.name))) {
      return data;
    }
    if (data.charAt(0) == " ") {
      const prevNode = this._getTouchingInlineViewNode(node, false);
      const prevEndsWithSpace = prevNode && prevNode.is("$textProxy") && this._nodeEndsWithSpace(prevNode);
      if (prevEndsWithSpace || !prevNode) {
        data = "\xA0" + data.substr(1);
      }
    }
    if (data.charAt(data.length - 1) == " ") {
      const nextNode = this._getTouchingInlineViewNode(node, true);
      const nextStartsWithSpace = nextNode && nextNode.is("$textProxy") && nextNode.data.charAt(0) == " ";
      if (data.charAt(data.length - 2) == " " || !nextNode || nextStartsWithSpace) {
        data = data.substr(0, data.length - 1) + "\xA0";
      }
    }
    return data.replace(/ {2}/g, " \xA0");
  }
  _nodeEndsWithSpace(node) {
    if (node.getAncestors().some((parent2) => this.preElements.includes(parent2.name))) {
      return false;
    }
    const data = this._processDataFromViewText(node);
    return data.charAt(data.length - 1) == " ";
  }
  _processDataFromDomText(node) {
    let data = node.data;
    if (_hasDomParentOfType(node, this.preElements)) {
      return getDataWithoutFiller(node);
    }
    data = data.replace(/[ \n\t\r]{1,}/g, " ");
    const prevNode = this._getTouchingInlineDomNode(node, false);
    const nextNode = this._getTouchingInlineDomNode(node, true);
    const shouldLeftTrim = this._checkShouldLeftTrimDomText(node, prevNode);
    const shouldRightTrim = this._checkShouldRightTrimDomText(node, nextNode);
    if (shouldLeftTrim) {
      data = data.replace(/^ /, "");
    }
    if (shouldRightTrim) {
      data = data.replace(/ $/, "");
    }
    data = getDataWithoutFiller(new Text(data));
    data = data.replace(/ \u00A0/g, "  ");
    const isNextNodeInlineObjectElement = nextNode && this.isElement(nextNode) && nextNode.tagName != "BR";
    const isNextNodeStartingWithSpace = nextNode && isText(nextNode) && nextNode.data.charAt(0) == " ";
    if (/( |\u00A0)\u00A0$/.test(data) || !nextNode || isNextNodeInlineObjectElement || isNextNodeStartingWithSpace) {
      data = data.replace(/\u00A0$/, " ");
    }
    if (shouldLeftTrim || prevNode && this.isElement(prevNode) && prevNode.tagName != "BR") {
      data = data.replace(/^\u00A0/, " ");
    }
    return data;
  }
  _checkShouldLeftTrimDomText(node, prevNode) {
    if (!prevNode) {
      return true;
    }
    if (this.isElement(prevNode)) {
      return prevNode.tagName === "BR";
    }
    if (this._encounteredRawContentDomNodes.has(node.previousSibling)) {
      return false;
    }
    return /[^\S\u00A0]/.test(prevNode.data.charAt(prevNode.data.length - 1));
  }
  _checkShouldRightTrimDomText(node, nextNode) {
    if (nextNode) {
      return false;
    }
    return !startsWithFiller(node);
  }
  _getTouchingInlineViewNode(node, getNext) {
    const treeWalker = new TreeWalker$1({
      startPosition: getNext ? Position$1._createAfter(node) : Position$1._createBefore(node),
      direction: getNext ? "forward" : "backward"
    });
    for (const value of treeWalker) {
      if (value.item.is("element") && this.inlineObjectElements.includes(value.item.name)) {
        return value.item;
      } else if (value.item.is("containerElement")) {
        return null;
      } else if (value.item.is("element", "br")) {
        return null;
      } else if (value.item.is("$textProxy")) {
        return value.item;
      }
    }
    return null;
  }
  _getTouchingInlineDomNode(node, getNext) {
    if (!node.parentNode) {
      return null;
    }
    const stepInto = getNext ? "firstChild" : "lastChild";
    const stepOver = getNext ? "nextSibling" : "previousSibling";
    let skipChildren = true;
    let returnNode = node;
    do {
      if (!skipChildren && returnNode[stepInto]) {
        returnNode = returnNode[stepInto];
      } else if (returnNode[stepOver]) {
        returnNode = returnNode[stepOver];
        skipChildren = false;
      } else {
        returnNode = returnNode.parentNode;
        skipChildren = true;
      }
      if (!returnNode || this._isBlockElement(returnNode)) {
        return null;
      }
    } while (!(isText(returnNode) || returnNode.tagName == "BR" || this._isInlineObjectElement(returnNode)));
    return returnNode;
  }
  _isBlockElement(node) {
    return this.isElement(node) && this.blockElements.includes(node.tagName.toLowerCase());
  }
  _isInlineObjectElement(node) {
    return this.isElement(node) && this.inlineObjectElements.includes(node.tagName.toLowerCase());
  }
  _createViewElement(node, options) {
    if (isComment(node)) {
      return new UIElement(this.document, "$comment");
    }
    const viewName = options.keepOriginalCase ? node.tagName : node.tagName.toLowerCase();
    return new Element$1(this.document, viewName);
  }
  _isViewElementWithRawContent(viewElement, options) {
    return options.withChildren !== false && !!this._rawContentElementMatcher.match(viewElement);
  }
  _shouldRenameElement(elementName) {
    const name = elementName.toLowerCase();
    return this.renderingMode === "editing" && this.unsafeElements.includes(name);
  }
  _createReplacementDomElement(elementName, originalDomElement) {
    const newDomElement = this._domDocument.createElement("span");
    newDomElement.setAttribute(UNSAFE_ELEMENT_REPLACEMENT_ATTRIBUTE, elementName);
    if (originalDomElement) {
      while (originalDomElement.firstChild) {
        newDomElement.appendChild(originalDomElement.firstChild);
      }
      for (const attributeName of originalDomElement.getAttributeNames()) {
        newDomElement.setAttribute(attributeName, originalDomElement.getAttribute(attributeName));
      }
    }
    return newDomElement;
  }
}
function _hasDomParentOfType(node, types) {
  const parents = getAncestors(node);
  return parents.some((parent2) => parent2.tagName && types.includes(parent2.tagName.toLowerCase()));
}
function forEachDomElementAncestor(element, callback) {
  let node = element;
  while (node) {
    callback(node);
    node = node.parentElement;
  }
}
function isNbspBlockFiller(domNode, blockElements) {
  const isNBSP = domNode.isEqualNode(NBSP_FILLER_REF);
  return isNBSP && hasBlockParent(domNode, blockElements) && domNode.parentNode.childNodes.length === 1;
}
function hasBlockParent(domNode, blockElements) {
  const parent2 = domNode.parentNode;
  return !!parent2 && !!parent2.tagName && blockElements.includes(parent2.tagName.toLowerCase());
}
function _logUnsafeElement(elementName) {
  if (elementName === "script") {
    logWarning("domconverter-unsafe-script-element-detected");
  }
  if (elementName === "style") {
    logWarning("domconverter-unsafe-style-element-detected");
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class TypeCheckable {
  is() {
    throw new Error("is() method is abstract");
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class Node$1 extends TypeCheckable {
  constructor(attrs) {
    super();
    this.parent = null;
    this._attrs = toMap(attrs);
  }
  get document() {
    return null;
  }
  get index() {
    let pos;
    if (!this.parent) {
      return null;
    }
    if ((pos = this.parent.getChildIndex(this)) === null) {
      throw new CKEditorError("model-node-not-found-in-parent", this);
    }
    return pos;
  }
  get startOffset() {
    let pos;
    if (!this.parent) {
      return null;
    }
    if ((pos = this.parent.getChildStartOffset(this)) === null) {
      throw new CKEditorError("model-node-not-found-in-parent", this);
    }
    return pos;
  }
  get offsetSize() {
    return 1;
  }
  get endOffset() {
    if (!this.parent) {
      return null;
    }
    return this.startOffset + this.offsetSize;
  }
  get nextSibling() {
    const index = this.index;
    return index !== null && this.parent.getChild(index + 1) || null;
  }
  get previousSibling() {
    const index = this.index;
    return index !== null && this.parent.getChild(index - 1) || null;
  }
  get root() {
    let root2 = this;
    while (root2.parent) {
      root2 = root2.parent;
    }
    return root2;
  }
  isAttached() {
    return this.root.is("rootElement");
  }
  getPath() {
    const path = [];
    let node = this;
    while (node.parent) {
      path.unshift(node.startOffset);
      node = node.parent;
    }
    return path;
  }
  getAncestors(options = {}) {
    const ancestors = [];
    let parent2 = options.includeSelf ? this : this.parent;
    while (parent2) {
      ancestors[options.parentFirst ? "push" : "unshift"](parent2);
      parent2 = parent2.parent;
    }
    return ancestors;
  }
  getCommonAncestor(node, options = {}) {
    const ancestorsA = this.getAncestors(options);
    const ancestorsB = node.getAncestors(options);
    let i2 = 0;
    while (ancestorsA[i2] == ancestorsB[i2] && ancestorsA[i2]) {
      i2++;
    }
    return i2 === 0 ? null : ancestorsA[i2 - 1];
  }
  isBefore(node) {
    if (this == node) {
      return false;
    }
    if (this.root !== node.root) {
      return false;
    }
    const thisPath = this.getPath();
    const nodePath = node.getPath();
    const result = compareArrays(thisPath, nodePath);
    switch (result) {
      case "prefix":
        return true;
      case "extension":
        return false;
      default:
        return thisPath[result] < nodePath[result];
    }
  }
  isAfter(node) {
    if (this == node) {
      return false;
    }
    if (this.root !== node.root) {
      return false;
    }
    return !this.isBefore(node);
  }
  hasAttribute(key) {
    return this._attrs.has(key);
  }
  getAttribute(key) {
    return this._attrs.get(key);
  }
  getAttributes() {
    return this._attrs.entries();
  }
  getAttributeKeys() {
    return this._attrs.keys();
  }
  toJSON() {
    const json = {};
    if (this._attrs.size) {
      json.attributes = Array.from(this._attrs).reduce((result, attr) => {
        result[attr[0]] = attr[1];
        return result;
      }, {});
    }
    return json;
  }
  _clone(_deep) {
    return new this.constructor(this._attrs);
  }
  _remove() {
    this.parent._removeChildren(this.index);
  }
  _setAttribute(key, value) {
    this._attrs.set(key, value);
  }
  _setAttributesTo(attrs) {
    this._attrs = toMap(attrs);
  }
  _removeAttribute(key) {
    return this._attrs.delete(key);
  }
  _clearAttributes() {
    this._attrs.clear();
  }
}
Node$1.prototype.is = function(type) {
  return type === "node" || type === "model:node";
};
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class NodeList {
  constructor(nodes) {
    this._nodes = [];
    if (nodes) {
      this._insertNodes(0, nodes);
    }
  }
  [Symbol.iterator]() {
    return this._nodes[Symbol.iterator]();
  }
  get length() {
    return this._nodes.length;
  }
  get maxOffset() {
    return this._nodes.reduce((sum, node) => sum + node.offsetSize, 0);
  }
  getNode(index) {
    return this._nodes[index] || null;
  }
  getNodeIndex(node) {
    const index = this._nodes.indexOf(node);
    return index == -1 ? null : index;
  }
  getNodeStartOffset(node) {
    const index = this.getNodeIndex(node);
    return index === null ? null : this._nodes.slice(0, index).reduce((sum, node2) => sum + node2.offsetSize, 0);
  }
  indexToOffset(index) {
    if (index == this._nodes.length) {
      return this.maxOffset;
    }
    const node = this._nodes[index];
    if (!node) {
      throw new CKEditorError("model-nodelist-index-out-of-bounds", this);
    }
    return this.getNodeStartOffset(node);
  }
  offsetToIndex(offset) {
    let totalOffset = 0;
    for (const node of this._nodes) {
      if (offset >= totalOffset && offset < totalOffset + node.offsetSize) {
        return this.getNodeIndex(node);
      }
      totalOffset += node.offsetSize;
    }
    if (totalOffset != offset) {
      throw new CKEditorError("model-nodelist-offset-out-of-bounds", this, {
        offset,
        nodeList: this
      });
    }
    return this.length;
  }
  _insertNodes(index, nodes) {
    for (const node of nodes) {
      if (!(node instanceof Node$1)) {
        throw new CKEditorError("model-nodelist-insertnodes-not-node", this);
      }
    }
    this._nodes = spliceArray(this._nodes, Array.from(nodes), index, 0);
  }
  _removeNodes(indexStart, howMany = 1) {
    return this._nodes.splice(indexStart, howMany);
  }
  toJSON() {
    return this._nodes.map((node) => node.toJSON());
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class Text$1 extends Node$1 {
  constructor(data, attrs) {
    super(attrs);
    this._data = data || "";
  }
  get offsetSize() {
    return this.data.length;
  }
  get data() {
    return this._data;
  }
  toJSON() {
    const json = super.toJSON();
    json.data = this.data;
    return json;
  }
  _clone() {
    return new Text$1(this.data, this.getAttributes());
  }
  static fromJSON(json) {
    return new Text$1(json.data, json.attributes);
  }
}
Text$1.prototype.is = function(type) {
  return type === "$text" || type === "model:$text" || type === "text" || type === "model:text" || type === "node" || type === "model:node";
};
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class TextProxy extends TypeCheckable {
  constructor(textNode, offsetInText, length) {
    super();
    this.textNode = textNode;
    if (offsetInText < 0 || offsetInText > textNode.offsetSize) {
      throw new CKEditorError("model-textproxy-wrong-offsetintext", this);
    }
    if (length < 0 || offsetInText + length > textNode.offsetSize) {
      throw new CKEditorError("model-textproxy-wrong-length", this);
    }
    this.data = textNode.data.substring(offsetInText, offsetInText + length);
    this.offsetInText = offsetInText;
  }
  get startOffset() {
    return this.textNode.startOffset !== null ? this.textNode.startOffset + this.offsetInText : null;
  }
  get offsetSize() {
    return this.data.length;
  }
  get endOffset() {
    return this.startOffset !== null ? this.startOffset + this.offsetSize : null;
  }
  get isPartial() {
    return this.offsetSize !== this.textNode.offsetSize;
  }
  get parent() {
    return this.textNode.parent;
  }
  get root() {
    return this.textNode.root;
  }
  getPath() {
    const path = this.textNode.getPath();
    if (path.length > 0) {
      path[path.length - 1] += this.offsetInText;
    }
    return path;
  }
  getAncestors(options = {}) {
    const ancestors = [];
    let parent2 = options.includeSelf ? this : this.parent;
    while (parent2) {
      ancestors[options.parentFirst ? "push" : "unshift"](parent2);
      parent2 = parent2.parent;
    }
    return ancestors;
  }
  hasAttribute(key) {
    return this.textNode.hasAttribute(key);
  }
  getAttribute(key) {
    return this.textNode.getAttribute(key);
  }
  getAttributes() {
    return this.textNode.getAttributes();
  }
  getAttributeKeys() {
    return this.textNode.getAttributeKeys();
  }
}
TextProxy.prototype.is = function(type) {
  return type === "$textProxy" || type === "model:$textProxy" || type === "textProxy" || type === "model:textProxy";
};
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class Element extends Node$1 {
  constructor(name, attrs, children) {
    super(attrs);
    this._children = new NodeList();
    this.name = name;
    if (children) {
      this._insertChild(0, children);
    }
  }
  get childCount() {
    return this._children.length;
  }
  get maxOffset() {
    return this._children.maxOffset;
  }
  get isEmpty() {
    return this.childCount === 0;
  }
  getChild(index) {
    return this._children.getNode(index);
  }
  getChildren() {
    return this._children[Symbol.iterator]();
  }
  getChildIndex(node) {
    return this._children.getNodeIndex(node);
  }
  getChildStartOffset(node) {
    return this._children.getNodeStartOffset(node);
  }
  offsetToIndex(offset) {
    return this._children.offsetToIndex(offset);
  }
  getNodeByPath(relativePath) {
    let node = this;
    for (const index of relativePath) {
      node = node.getChild(node.offsetToIndex(index));
    }
    return node;
  }
  findAncestor(parentName, options = {}) {
    let parent2 = options.includeSelf ? this : this.parent;
    while (parent2) {
      if (parent2.name === parentName) {
        return parent2;
      }
      parent2 = parent2.parent;
    }
    return null;
  }
  toJSON() {
    const json = super.toJSON();
    json.name = this.name;
    if (this._children.length > 0) {
      json.children = [];
      for (const node of this._children) {
        json.children.push(node.toJSON());
      }
    }
    return json;
  }
  _clone(deep = false) {
    const children = deep ? Array.from(this._children).map((node) => node._clone(true)) : void 0;
    return new Element(this.name, this.getAttributes(), children);
  }
  _appendChild(nodes) {
    this._insertChild(this.childCount, nodes);
  }
  _insertChild(index, items) {
    const nodes = normalize$2(items);
    for (const node of nodes) {
      if (node.parent !== null) {
        node._remove();
      }
      node.parent = this;
    }
    this._children._insertNodes(index, nodes);
  }
  _removeChildren(index, howMany = 1) {
    const nodes = this._children._removeNodes(index, howMany);
    for (const node of nodes) {
      node.parent = null;
    }
    return nodes;
  }
  static fromJSON(json) {
    let children;
    if (json.children) {
      children = [];
      for (const child of json.children) {
        if (child.name) {
          children.push(Element.fromJSON(child));
        } else {
          children.push(Text$1.fromJSON(child));
        }
      }
    }
    return new Element(json.name, json.attributes, children);
  }
}
Element.prototype.is = function(type, name) {
  if (!name) {
    return type === "element" || type === "model:element" || type === "node" || type === "model:node";
  }
  return name === this.name && (type === "element" || type === "model:element");
};
function normalize$2(nodes) {
  if (typeof nodes == "string") {
    return [new Text$1(nodes)];
  }
  if (!isIterable(nodes)) {
    nodes = [nodes];
  }
  return Array.from(nodes).map((node) => {
    if (typeof node == "string") {
      return new Text$1(node);
    }
    if (node instanceof TextProxy) {
      return new Text$1(node.data, node.getAttributes());
    }
    return node;
  });
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class TreeWalker {
  constructor(options) {
    if (!options || !options.boundaries && !options.startPosition) {
      throw new CKEditorError("model-tree-walker-no-start-position", null);
    }
    const direction = options.direction || "forward";
    if (direction != "forward" && direction != "backward") {
      throw new CKEditorError("model-tree-walker-unknown-direction", options, { direction });
    }
    this.direction = direction;
    this.boundaries = options.boundaries || null;
    if (options.startPosition) {
      this.position = options.startPosition.clone();
    } else {
      this.position = Position._createAt(this.boundaries[this.direction == "backward" ? "end" : "start"]);
    }
    this.position.stickiness = "toNone";
    this.singleCharacters = !!options.singleCharacters;
    this.shallow = !!options.shallow;
    this.ignoreElementEnd = !!options.ignoreElementEnd;
    this._boundaryStartParent = this.boundaries ? this.boundaries.start.parent : null;
    this._boundaryEndParent = this.boundaries ? this.boundaries.end.parent : null;
    this._visitedParent = this.position.parent;
  }
  [Symbol.iterator]() {
    return this;
  }
  skip(skip) {
    let done, value, prevPosition, prevVisitedParent;
    do {
      prevPosition = this.position;
      prevVisitedParent = this._visitedParent;
      ({ done, value } = this.next());
    } while (!done && skip(value));
    if (!done) {
      this.position = prevPosition;
      this._visitedParent = prevVisitedParent;
    }
  }
  next() {
    if (this.direction == "forward") {
      return this._next();
    } else {
      return this._previous();
    }
  }
  _next() {
    const previousPosition = this.position;
    const position = this.position.clone();
    const parent2 = this._visitedParent;
    if (parent2.parent === null && position.offset === parent2.maxOffset) {
      return { done: true, value: void 0 };
    }
    if (parent2 === this._boundaryEndParent && position.offset == this.boundaries.end.offset) {
      return { done: true, value: void 0 };
    }
    const textNodeAtPosition = getTextNodeAtPosition(position, parent2);
    const node = textNodeAtPosition ? textNodeAtPosition : getNodeAfterPosition(position, parent2, textNodeAtPosition);
    if (node instanceof Element) {
      if (!this.shallow) {
        position.path.push(0);
        this._visitedParent = node;
      } else {
        position.offset++;
      }
      this.position = position;
      return formatReturnValue("elementStart", node, previousPosition, position, 1);
    } else if (node instanceof Text$1) {
      let charactersCount;
      if (this.singleCharacters) {
        charactersCount = 1;
      } else {
        let offset = node.endOffset;
        if (this._boundaryEndParent == parent2 && this.boundaries.end.offset < offset) {
          offset = this.boundaries.end.offset;
        }
        charactersCount = offset - position.offset;
      }
      const offsetInTextNode = position.offset - node.startOffset;
      const item = new TextProxy(node, offsetInTextNode, charactersCount);
      position.offset += charactersCount;
      this.position = position;
      return formatReturnValue("text", item, previousPosition, position, charactersCount);
    } else {
      position.path.pop();
      position.offset++;
      this.position = position;
      this._visitedParent = parent2.parent;
      if (this.ignoreElementEnd) {
        return this._next();
      } else {
        return formatReturnValue("elementEnd", parent2, previousPosition, position);
      }
    }
  }
  _previous() {
    const previousPosition = this.position;
    const position = this.position.clone();
    const parent2 = this._visitedParent;
    if (parent2.parent === null && position.offset === 0) {
      return { done: true, value: void 0 };
    }
    if (parent2 == this._boundaryStartParent && position.offset == this.boundaries.start.offset) {
      return { done: true, value: void 0 };
    }
    const positionParent = position.parent;
    const textNodeAtPosition = getTextNodeAtPosition(position, positionParent);
    const node = textNodeAtPosition ? textNodeAtPosition : getNodeBeforePosition(position, positionParent, textNodeAtPosition);
    if (node instanceof Element) {
      position.offset--;
      if (!this.shallow) {
        position.path.push(node.maxOffset);
        this.position = position;
        this._visitedParent = node;
        if (this.ignoreElementEnd) {
          return this._previous();
        } else {
          return formatReturnValue("elementEnd", node, previousPosition, position);
        }
      } else {
        this.position = position;
        return formatReturnValue("elementStart", node, previousPosition, position, 1);
      }
    } else if (node instanceof Text$1) {
      let charactersCount;
      if (this.singleCharacters) {
        charactersCount = 1;
      } else {
        let offset = node.startOffset;
        if (this._boundaryStartParent == parent2 && this.boundaries.start.offset > offset) {
          offset = this.boundaries.start.offset;
        }
        charactersCount = position.offset - offset;
      }
      const offsetInTextNode = position.offset - node.startOffset;
      const item = new TextProxy(node, offsetInTextNode - charactersCount, charactersCount);
      position.offset -= charactersCount;
      this.position = position;
      return formatReturnValue("text", item, previousPosition, position, charactersCount);
    } else {
      position.path.pop();
      this.position = position;
      this._visitedParent = parent2.parent;
      return formatReturnValue("elementStart", parent2, previousPosition, position, 1);
    }
  }
}
function formatReturnValue(type, item, previousPosition, nextPosition, length) {
  return {
    done: false,
    value: {
      type,
      item,
      previousPosition,
      nextPosition,
      length
    }
  };
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class Position extends TypeCheckable {
  constructor(root2, path, stickiness = "toNone") {
    super();
    if (!root2.is("element") && !root2.is("documentFragment")) {
      throw new CKEditorError("model-position-root-invalid", root2);
    }
    if (!(path instanceof Array) || path.length === 0) {
      throw new CKEditorError("model-position-path-incorrect-format", root2, { path });
    }
    if (root2.is("rootElement")) {
      path = path.slice();
    } else {
      path = [...root2.getPath(), ...path];
      root2 = root2.root;
    }
    this.root = root2;
    this.path = path;
    this.stickiness = stickiness;
  }
  get offset() {
    return this.path[this.path.length - 1];
  }
  set offset(newOffset) {
    this.path[this.path.length - 1] = newOffset;
  }
  get parent() {
    let parent2 = this.root;
    for (let i2 = 0; i2 < this.path.length - 1; i2++) {
      parent2 = parent2.getChild(parent2.offsetToIndex(this.path[i2]));
      if (!parent2) {
        throw new CKEditorError("model-position-path-incorrect", this, { position: this });
      }
    }
    if (parent2.is("$text")) {
      throw new CKEditorError("model-position-path-incorrect", this, { position: this });
    }
    return parent2;
  }
  get index() {
    return this.parent.offsetToIndex(this.offset);
  }
  get textNode() {
    return getTextNodeAtPosition(this, this.parent);
  }
  get nodeAfter() {
    const parent2 = this.parent;
    return getNodeAfterPosition(this, parent2, getTextNodeAtPosition(this, parent2));
  }
  get nodeBefore() {
    const parent2 = this.parent;
    return getNodeBeforePosition(this, parent2, getTextNodeAtPosition(this, parent2));
  }
  get isAtStart() {
    return this.offset === 0;
  }
  get isAtEnd() {
    return this.offset == this.parent.maxOffset;
  }
  compareWith(otherPosition) {
    if (this.root != otherPosition.root) {
      return "different";
    }
    const result = compareArrays(this.path, otherPosition.path);
    switch (result) {
      case "same":
        return "same";
      case "prefix":
        return "before";
      case "extension":
        return "after";
      default:
        return this.path[result] < otherPosition.path[result] ? "before" : "after";
    }
  }
  getLastMatchingPosition(skip, options = {}) {
    options.startPosition = this;
    const treeWalker = new TreeWalker(options);
    treeWalker.skip(skip);
    return treeWalker.position;
  }
  getParentPath() {
    return this.path.slice(0, -1);
  }
  getAncestors() {
    const parent2 = this.parent;
    if (parent2.is("documentFragment")) {
      return [parent2];
    } else {
      return parent2.getAncestors({ includeSelf: true });
    }
  }
  findAncestor(parentName) {
    const parent2 = this.parent;
    if (parent2.is("element")) {
      return parent2.findAncestor(parentName, { includeSelf: true });
    }
    return null;
  }
  getCommonPath(position) {
    if (this.root != position.root) {
      return [];
    }
    const cmp = compareArrays(this.path, position.path);
    const diffAt = typeof cmp == "string" ? Math.min(this.path.length, position.path.length) : cmp;
    return this.path.slice(0, diffAt);
  }
  getCommonAncestor(position) {
    const ancestorsA = this.getAncestors();
    const ancestorsB = position.getAncestors();
    let i2 = 0;
    while (ancestorsA[i2] == ancestorsB[i2] && ancestorsA[i2]) {
      i2++;
    }
    return i2 === 0 ? null : ancestorsA[i2 - 1];
  }
  getShiftedBy(shift) {
    const shifted = this.clone();
    const offset = shifted.offset + shift;
    shifted.offset = offset < 0 ? 0 : offset;
    return shifted;
  }
  isAfter(otherPosition) {
    return this.compareWith(otherPosition) == "after";
  }
  isBefore(otherPosition) {
    return this.compareWith(otherPosition) == "before";
  }
  isEqual(otherPosition) {
    return this.compareWith(otherPosition) == "same";
  }
  isTouching(otherPosition) {
    if (this.root !== otherPosition.root) {
      return false;
    }
    const commonLevel = Math.min(this.path.length, otherPosition.path.length);
    for (let level = 0; level < commonLevel; level++) {
      const diff = this.path[level] - otherPosition.path[level];
      if (diff < -1 || diff > 1) {
        return false;
      } else if (diff === 1) {
        return checkTouchingBranch(otherPosition, this, level);
      } else if (diff === -1) {
        return checkTouchingBranch(this, otherPosition, level);
      }
    }
    if (this.path.length === otherPosition.path.length) {
      return true;
    } else if (this.path.length > otherPosition.path.length) {
      return checkOnlyZeroes(this.path, commonLevel);
    } else {
      return checkOnlyZeroes(otherPosition.path, commonLevel);
    }
  }
  hasSameParentAs(position) {
    if (this.root !== position.root) {
      return false;
    }
    const thisParentPath = this.getParentPath();
    const posParentPath = position.getParentPath();
    return compareArrays(thisParentPath, posParentPath) == "same";
  }
  getTransformedByOperation(operation) {
    let result;
    switch (operation.type) {
      case "insert":
        result = this._getTransformedByInsertOperation(operation);
        break;
      case "move":
      case "remove":
      case "reinsert":
        result = this._getTransformedByMoveOperation(operation);
        break;
      case "split":
        result = this._getTransformedBySplitOperation(operation);
        break;
      case "merge":
        result = this._getTransformedByMergeOperation(operation);
        break;
      default:
        result = Position._createAt(this);
        break;
    }
    return result;
  }
  _getTransformedByInsertOperation(operation) {
    return this._getTransformedByInsertion(operation.position, operation.howMany);
  }
  _getTransformedByMoveOperation(operation) {
    return this._getTransformedByMove(operation.sourcePosition, operation.targetPosition, operation.howMany);
  }
  _getTransformedBySplitOperation(operation) {
    const movedRange = operation.movedRange;
    const isContained = movedRange.containsPosition(this) || movedRange.start.isEqual(this) && this.stickiness == "toNext";
    if (isContained) {
      return this._getCombined(operation.splitPosition, operation.moveTargetPosition);
    } else {
      if (operation.graveyardPosition) {
        return this._getTransformedByMove(operation.graveyardPosition, operation.insertionPosition, 1);
      } else {
        return this._getTransformedByInsertion(operation.insertionPosition, 1);
      }
    }
  }
  _getTransformedByMergeOperation(operation) {
    const movedRange = operation.movedRange;
    const isContained = movedRange.containsPosition(this) || movedRange.start.isEqual(this);
    let pos;
    if (isContained) {
      pos = this._getCombined(operation.sourcePosition, operation.targetPosition);
      if (operation.sourcePosition.isBefore(operation.targetPosition)) {
        pos = pos._getTransformedByDeletion(operation.deletionPosition, 1);
      }
    } else if (this.isEqual(operation.deletionPosition)) {
      pos = Position._createAt(operation.deletionPosition);
    } else {
      pos = this._getTransformedByMove(operation.deletionPosition, operation.graveyardPosition, 1);
    }
    return pos;
  }
  _getTransformedByDeletion(deletePosition, howMany) {
    const transformed = Position._createAt(this);
    if (this.root != deletePosition.root) {
      return transformed;
    }
    if (compareArrays(deletePosition.getParentPath(), this.getParentPath()) == "same") {
      if (deletePosition.offset < this.offset) {
        if (deletePosition.offset + howMany > this.offset) {
          return null;
        } else {
          transformed.offset -= howMany;
        }
      }
    } else if (compareArrays(deletePosition.getParentPath(), this.getParentPath()) == "prefix") {
      const i2 = deletePosition.path.length - 1;
      if (deletePosition.offset <= this.path[i2]) {
        if (deletePosition.offset + howMany > this.path[i2]) {
          return null;
        } else {
          transformed.path[i2] -= howMany;
        }
      }
    }
    return transformed;
  }
  _getTransformedByInsertion(insertPosition, howMany) {
    const transformed = Position._createAt(this);
    if (this.root != insertPosition.root) {
      return transformed;
    }
    if (compareArrays(insertPosition.getParentPath(), this.getParentPath()) == "same") {
      if (insertPosition.offset < this.offset || insertPosition.offset == this.offset && this.stickiness != "toPrevious") {
        transformed.offset += howMany;
      }
    } else if (compareArrays(insertPosition.getParentPath(), this.getParentPath()) == "prefix") {
      const i2 = insertPosition.path.length - 1;
      if (insertPosition.offset <= this.path[i2]) {
        transformed.path[i2] += howMany;
      }
    }
    return transformed;
  }
  _getTransformedByMove(sourcePosition, targetPosition, howMany) {
    targetPosition = targetPosition._getTransformedByDeletion(sourcePosition, howMany);
    if (sourcePosition.isEqual(targetPosition)) {
      return Position._createAt(this);
    }
    const transformed = this._getTransformedByDeletion(sourcePosition, howMany);
    const isMoved = transformed === null || sourcePosition.isEqual(this) && this.stickiness == "toNext" || sourcePosition.getShiftedBy(howMany).isEqual(this) && this.stickiness == "toPrevious";
    if (isMoved) {
      return this._getCombined(sourcePosition, targetPosition);
    } else {
      return transformed._getTransformedByInsertion(targetPosition, howMany);
    }
  }
  _getCombined(source, target) {
    const i2 = source.path.length - 1;
    const combined = Position._createAt(target);
    combined.stickiness = this.stickiness;
    combined.offset = combined.offset + this.path[i2] - source.offset;
    combined.path = [...combined.path, ...this.path.slice(i2 + 1)];
    return combined;
  }
  toJSON() {
    return {
      root: this.root.toJSON(),
      path: Array.from(this.path),
      stickiness: this.stickiness
    };
  }
  clone() {
    return new this.constructor(this.root, this.path, this.stickiness);
  }
  static _createAt(itemOrPosition, offset, stickiness = "toNone") {
    if (itemOrPosition instanceof Position) {
      return new Position(itemOrPosition.root, itemOrPosition.path, itemOrPosition.stickiness);
    } else {
      const node = itemOrPosition;
      if (offset == "end") {
        offset = node.maxOffset;
      } else if (offset == "before") {
        return this._createBefore(node, stickiness);
      } else if (offset == "after") {
        return this._createAfter(node, stickiness);
      } else if (offset !== 0 && !offset) {
        throw new CKEditorError("model-createpositionat-offset-required", [this, itemOrPosition]);
      }
      if (!node.is("element") && !node.is("documentFragment")) {
        throw new CKEditorError("model-position-parent-incorrect", [this, itemOrPosition]);
      }
      const path = node.getPath();
      path.push(offset);
      return new this(node.root, path, stickiness);
    }
  }
  static _createAfter(item, stickiness) {
    if (!item.parent) {
      throw new CKEditorError("model-position-after-root", [this, item], { root: item });
    }
    return this._createAt(item.parent, item.endOffset, stickiness);
  }
  static _createBefore(item, stickiness) {
    if (!item.parent) {
      throw new CKEditorError("model-position-before-root", item, { root: item });
    }
    return this._createAt(item.parent, item.startOffset, stickiness);
  }
  static fromJSON(json, doc) {
    if (json.root === "$graveyard") {
      const pos = new Position(doc.graveyard, json.path);
      pos.stickiness = json.stickiness;
      return pos;
    }
    if (!doc.getRoot(json.root)) {
      throw new CKEditorError("model-position-fromjson-no-root", doc, { rootName: json.root });
    }
    return new Position(doc.getRoot(json.root), json.path, json.stickiness);
  }
}
Position.prototype.is = function(type) {
  return type === "position" || type === "model:position";
};
function getTextNodeAtPosition(position, positionParent) {
  const node = positionParent.getChild(positionParent.offsetToIndex(position.offset));
  if (node && node.is("$text") && node.startOffset < position.offset) {
    return node;
  }
  return null;
}
function getNodeAfterPosition(position, positionParent, textNode) {
  if (textNode !== null) {
    return null;
  }
  return positionParent.getChild(positionParent.offsetToIndex(position.offset));
}
function getNodeBeforePosition(position, positionParent, textNode) {
  if (textNode !== null) {
    return null;
  }
  return positionParent.getChild(positionParent.offsetToIndex(position.offset) - 1);
}
function checkTouchingBranch(left, right, level) {
  if (level + 1 === left.path.length) {
    return false;
  }
  if (!checkOnlyZeroes(right.path, level + 1)) {
    return false;
  }
  if (!checkOnlyMaxOffset(left, level + 1)) {
    return false;
  }
  return true;
}
function checkOnlyZeroes(arr, idx) {
  while (idx < arr.length) {
    if (arr[idx] !== 0) {
      return false;
    }
    idx++;
  }
  return true;
}
function checkOnlyMaxOffset(pos, level) {
  let parent2 = pos.parent;
  let idx = pos.path.length - 1;
  let add = 0;
  while (idx >= level) {
    if (pos.path[idx] + add !== parent2.maxOffset) {
      return false;
    }
    add = 1;
    idx--;
    parent2 = parent2.parent;
  }
  return true;
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class Range extends TypeCheckable {
  constructor(start, end) {
    super();
    this.start = Position._createAt(start);
    this.end = end ? Position._createAt(end) : Position._createAt(start);
    this.start.stickiness = this.isCollapsed ? "toNone" : "toNext";
    this.end.stickiness = this.isCollapsed ? "toNone" : "toPrevious";
  }
  *[Symbol.iterator]() {
    yield* new TreeWalker({ boundaries: this, ignoreElementEnd: true });
  }
  get isCollapsed() {
    return this.start.isEqual(this.end);
  }
  get isFlat() {
    const startParentPath = this.start.getParentPath();
    const endParentPath = this.end.getParentPath();
    return compareArrays(startParentPath, endParentPath) == "same";
  }
  get root() {
    return this.start.root;
  }
  containsPosition(position) {
    return position.isAfter(this.start) && position.isBefore(this.end);
  }
  containsRange(otherRange, loose = false) {
    if (otherRange.isCollapsed) {
      loose = false;
    }
    const containsStart = this.containsPosition(otherRange.start) || loose && this.start.isEqual(otherRange.start);
    const containsEnd = this.containsPosition(otherRange.end) || loose && this.end.isEqual(otherRange.end);
    return containsStart && containsEnd;
  }
  containsItem(item) {
    const pos = Position._createBefore(item);
    return this.containsPosition(pos) || this.start.isEqual(pos);
  }
  isEqual(otherRange) {
    return this.start.isEqual(otherRange.start) && this.end.isEqual(otherRange.end);
  }
  isIntersecting(otherRange) {
    return this.start.isBefore(otherRange.end) && this.end.isAfter(otherRange.start);
  }
  getDifference(otherRange) {
    const ranges = [];
    if (this.isIntersecting(otherRange)) {
      if (this.containsPosition(otherRange.start)) {
        ranges.push(new Range(this.start, otherRange.start));
      }
      if (this.containsPosition(otherRange.end)) {
        ranges.push(new Range(otherRange.end, this.end));
      }
    } else {
      ranges.push(new Range(this.start, this.end));
    }
    return ranges;
  }
  getIntersection(otherRange) {
    if (this.isIntersecting(otherRange)) {
      let commonRangeStart = this.start;
      let commonRangeEnd = this.end;
      if (this.containsPosition(otherRange.start)) {
        commonRangeStart = otherRange.start;
      }
      if (this.containsPosition(otherRange.end)) {
        commonRangeEnd = otherRange.end;
      }
      return new Range(commonRangeStart, commonRangeEnd);
    }
    return null;
  }
  getJoined(otherRange, loose = false) {
    let shouldJoin = this.isIntersecting(otherRange);
    if (!shouldJoin) {
      if (this.start.isBefore(otherRange.start)) {
        shouldJoin = loose ? this.end.isTouching(otherRange.start) : this.end.isEqual(otherRange.start);
      } else {
        shouldJoin = loose ? otherRange.end.isTouching(this.start) : otherRange.end.isEqual(this.start);
      }
    }
    if (!shouldJoin) {
      return null;
    }
    let startPosition = this.start;
    let endPosition = this.end;
    if (otherRange.start.isBefore(startPosition)) {
      startPosition = otherRange.start;
    }
    if (otherRange.end.isAfter(endPosition)) {
      endPosition = otherRange.end;
    }
    return new Range(startPosition, endPosition);
  }
  getMinimalFlatRanges() {
    const ranges = [];
    const diffAt = this.start.getCommonPath(this.end).length;
    const pos = Position._createAt(this.start);
    let posParent = pos.parent;
    while (pos.path.length > diffAt + 1) {
      const howMany = posParent.maxOffset - pos.offset;
      if (howMany !== 0) {
        ranges.push(new Range(pos, pos.getShiftedBy(howMany)));
      }
      pos.path = pos.path.slice(0, -1);
      pos.offset++;
      posParent = posParent.parent;
    }
    while (pos.path.length <= this.end.path.length) {
      const offset = this.end.path[pos.path.length - 1];
      const howMany = offset - pos.offset;
      if (howMany !== 0) {
        ranges.push(new Range(pos, pos.getShiftedBy(howMany)));
      }
      pos.offset = offset;
      pos.path.push(0);
    }
    return ranges;
  }
  getWalker(options = {}) {
    options.boundaries = this;
    return new TreeWalker(options);
  }
  *getItems(options = {}) {
    options.boundaries = this;
    options.ignoreElementEnd = true;
    const treeWalker = new TreeWalker(options);
    for (const value of treeWalker) {
      yield value.item;
    }
  }
  *getPositions(options = {}) {
    options.boundaries = this;
    const treeWalker = new TreeWalker(options);
    yield treeWalker.position;
    for (const value of treeWalker) {
      yield value.nextPosition;
    }
  }
  getTransformedByOperation(operation) {
    switch (operation.type) {
      case "insert":
        return this._getTransformedByInsertOperation(operation);
      case "move":
      case "remove":
      case "reinsert":
        return this._getTransformedByMoveOperation(operation);
      case "split":
        return [this._getTransformedBySplitOperation(operation)];
      case "merge":
        return [this._getTransformedByMergeOperation(operation)];
    }
    return [new Range(this.start, this.end)];
  }
  getTransformedByOperations(operations2) {
    const ranges = [new Range(this.start, this.end)];
    for (const operation of operations2) {
      for (let i2 = 0; i2 < ranges.length; i2++) {
        const result = ranges[i2].getTransformedByOperation(operation);
        ranges.splice(i2, 1, ...result);
        i2 += result.length - 1;
      }
    }
    for (let i2 = 0; i2 < ranges.length; i2++) {
      const range = ranges[i2];
      for (let j2 = i2 + 1; j2 < ranges.length; j2++) {
        const next = ranges[j2];
        if (range.containsRange(next) || next.containsRange(range) || range.isEqual(next)) {
          ranges.splice(j2, 1);
        }
      }
    }
    return ranges;
  }
  getCommonAncestor() {
    return this.start.getCommonAncestor(this.end);
  }
  getContainedElement() {
    if (this.isCollapsed) {
      return null;
    }
    const nodeAfterStart = this.start.nodeAfter;
    const nodeBeforeEnd = this.end.nodeBefore;
    if (nodeAfterStart && nodeAfterStart.is("element") && nodeAfterStart === nodeBeforeEnd) {
      return nodeAfterStart;
    }
    return null;
  }
  toJSON() {
    return {
      start: this.start.toJSON(),
      end: this.end.toJSON()
    };
  }
  clone() {
    return new this.constructor(this.start, this.end);
  }
  _getTransformedByInsertOperation(operation, spread = false) {
    return this._getTransformedByInsertion(operation.position, operation.howMany, spread);
  }
  _getTransformedByMoveOperation(operation, spread = false) {
    const sourcePosition = operation.sourcePosition;
    const howMany = operation.howMany;
    const targetPosition = operation.targetPosition;
    return this._getTransformedByMove(sourcePosition, targetPosition, howMany, spread);
  }
  _getTransformedBySplitOperation(operation) {
    const start = this.start._getTransformedBySplitOperation(operation);
    let end = this.end._getTransformedBySplitOperation(operation);
    if (this.end.isEqual(operation.insertionPosition)) {
      end = this.end.getShiftedBy(1);
    }
    if (start.root != end.root) {
      end = this.end.getShiftedBy(-1);
    }
    return new Range(start, end);
  }
  _getTransformedByMergeOperation(operation) {
    if (this.start.isEqual(operation.targetPosition) && this.end.isEqual(operation.deletionPosition)) {
      return new Range(this.start);
    }
    let start = this.start._getTransformedByMergeOperation(operation);
    let end = this.end._getTransformedByMergeOperation(operation);
    if (start.root != end.root) {
      end = this.end.getShiftedBy(-1);
    }
    if (start.isAfter(end)) {
      if (operation.sourcePosition.isBefore(operation.targetPosition)) {
        start = Position._createAt(end);
        start.offset = 0;
      } else {
        if (!operation.deletionPosition.isEqual(start)) {
          end = operation.deletionPosition;
        }
        start = operation.targetPosition;
      }
      return new Range(start, end);
    }
    return new Range(start, end);
  }
  _getTransformedByInsertion(insertPosition, howMany, spread = false) {
    if (spread && this.containsPosition(insertPosition)) {
      return [
        new Range(this.start, insertPosition),
        new Range(insertPosition.getShiftedBy(howMany), this.end._getTransformedByInsertion(insertPosition, howMany))
      ];
    } else {
      const range = new Range(this.start, this.end);
      range.start = range.start._getTransformedByInsertion(insertPosition, howMany);
      range.end = range.end._getTransformedByInsertion(insertPosition, howMany);
      return [range];
    }
  }
  _getTransformedByMove(sourcePosition, targetPosition, howMany, spread = false) {
    if (this.isCollapsed) {
      const newPos = this.start._getTransformedByMove(sourcePosition, targetPosition, howMany);
      return [new Range(newPos)];
    }
    const moveRange = Range._createFromPositionAndShift(sourcePosition, howMany);
    const insertPosition = targetPosition._getTransformedByDeletion(sourcePosition, howMany);
    if (this.containsPosition(targetPosition) && !spread) {
      if (moveRange.containsPosition(this.start) || moveRange.containsPosition(this.end)) {
        const start = this.start._getTransformedByMove(sourcePosition, targetPosition, howMany);
        const end = this.end._getTransformedByMove(sourcePosition, targetPosition, howMany);
        return [new Range(start, end)];
      }
    }
    let result;
    const differenceSet = this.getDifference(moveRange);
    let difference = null;
    const common = this.getIntersection(moveRange);
    if (differenceSet.length == 1) {
      difference = new Range(differenceSet[0].start._getTransformedByDeletion(sourcePosition, howMany), differenceSet[0].end._getTransformedByDeletion(sourcePosition, howMany));
    } else if (differenceSet.length == 2) {
      difference = new Range(this.start, this.end._getTransformedByDeletion(sourcePosition, howMany));
    }
    if (difference) {
      result = difference._getTransformedByInsertion(insertPosition, howMany, common !== null || spread);
    } else {
      result = [];
    }
    if (common) {
      const transformedCommon = new Range(common.start._getCombined(moveRange.start, insertPosition), common.end._getCombined(moveRange.start, insertPosition));
      if (result.length == 2) {
        result.splice(1, 0, transformedCommon);
      } else {
        result.push(transformedCommon);
      }
    }
    return result;
  }
  _getTransformedByDeletion(deletePosition, howMany) {
    let newStart = this.start._getTransformedByDeletion(deletePosition, howMany);
    let newEnd = this.end._getTransformedByDeletion(deletePosition, howMany);
    if (newStart == null && newEnd == null) {
      return null;
    }
    if (newStart == null) {
      newStart = deletePosition;
    }
    if (newEnd == null) {
      newEnd = deletePosition;
    }
    return new Range(newStart, newEnd);
  }
  static _createFromPositionAndShift(position, shift) {
    const start = position;
    const end = position.getShiftedBy(shift);
    return shift > 0 ? new this(start, end) : new this(end, start);
  }
  static _createIn(element) {
    return new this(Position._createAt(element, 0), Position._createAt(element, element.maxOffset));
  }
  static _createOn(item) {
    return this._createFromPositionAndShift(Position._createBefore(item), item.offsetSize);
  }
  static _createFromRanges(ranges) {
    if (ranges.length === 0) {
      throw new CKEditorError("range-create-from-ranges-empty-array", null);
    } else if (ranges.length == 1) {
      return ranges[0].clone();
    }
    const ref = ranges[0];
    ranges.sort((a2, b2) => {
      return a2.start.isAfter(b2.start) ? 1 : -1;
    });
    const refIndex = ranges.indexOf(ref);
    const result = new this(ref.start, ref.end);
    if (refIndex > 0) {
      for (let i2 = refIndex - 1; true; i2++) {
        if (ranges[i2].end.isEqual(result.start)) {
          result.start = Position._createAt(ranges[i2].start);
        } else {
          break;
        }
      }
    }
    for (let i2 = refIndex + 1; i2 < ranges.length; i2++) {
      if (ranges[i2].start.isEqual(result.end)) {
        result.end = Position._createAt(ranges[i2].end);
      } else {
        break;
      }
    }
    return result;
  }
  static fromJSON(json, doc) {
    return new this(Position.fromJSON(json.start, doc), Position.fromJSON(json.end, doc));
  }
}
Range.prototype.is = function(type) {
  return type === "range" || type === "model:range";
};
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class Mapper extends EmitterMixin() {
  constructor() {
    super();
    this._modelToViewMapping = /* @__PURE__ */ new WeakMap();
    this._viewToModelMapping = /* @__PURE__ */ new WeakMap();
    this._viewToModelLengthCallbacks = /* @__PURE__ */ new Map();
    this._markerNameToElements = /* @__PURE__ */ new Map();
    this._elementToMarkerNames = /* @__PURE__ */ new Map();
    this._deferredBindingRemovals = /* @__PURE__ */ new Map();
    this._unboundMarkerNames = /* @__PURE__ */ new Set();
    this.on("modelToViewPosition", (evt, data) => {
      if (data.viewPosition) {
        return;
      }
      const viewContainer = this._modelToViewMapping.get(data.modelPosition.parent);
      if (!viewContainer) {
        throw new CKEditorError("mapping-model-position-view-parent-not-found", this, { modelPosition: data.modelPosition });
      }
      data.viewPosition = this.findPositionIn(viewContainer, data.modelPosition.offset);
    }, { priority: "low" });
    this.on("viewToModelPosition", (evt, data) => {
      if (data.modelPosition) {
        return;
      }
      const viewBlock = this.findMappedViewAncestor(data.viewPosition);
      const modelParent = this._viewToModelMapping.get(viewBlock);
      const modelOffset = this._toModelOffset(data.viewPosition.parent, data.viewPosition.offset, viewBlock);
      data.modelPosition = Position._createAt(modelParent, modelOffset);
    }, { priority: "low" });
  }
  bindElements(modelElement, viewElement) {
    this._modelToViewMapping.set(modelElement, viewElement);
    this._viewToModelMapping.set(viewElement, modelElement);
  }
  unbindViewElement(viewElement, options = {}) {
    const modelElement = this.toModelElement(viewElement);
    if (this._elementToMarkerNames.has(viewElement)) {
      for (const markerName of this._elementToMarkerNames.get(viewElement)) {
        this._unboundMarkerNames.add(markerName);
      }
    }
    if (options.defer) {
      this._deferredBindingRemovals.set(viewElement, viewElement.root);
    } else {
      this._viewToModelMapping.delete(viewElement);
      if (this._modelToViewMapping.get(modelElement) == viewElement) {
        this._modelToViewMapping.delete(modelElement);
      }
    }
  }
  unbindModelElement(modelElement) {
    const viewElement = this.toViewElement(modelElement);
    this._modelToViewMapping.delete(modelElement);
    if (this._viewToModelMapping.get(viewElement) == modelElement) {
      this._viewToModelMapping.delete(viewElement);
    }
  }
  bindElementToMarker(element, name) {
    const elements = this._markerNameToElements.get(name) || /* @__PURE__ */ new Set();
    elements.add(element);
    const names = this._elementToMarkerNames.get(element) || /* @__PURE__ */ new Set();
    names.add(name);
    this._markerNameToElements.set(name, elements);
    this._elementToMarkerNames.set(element, names);
  }
  unbindElementFromMarkerName(element, name) {
    const nameToElements = this._markerNameToElements.get(name);
    if (nameToElements) {
      nameToElements.delete(element);
      if (nameToElements.size == 0) {
        this._markerNameToElements.delete(name);
      }
    }
    const elementToNames = this._elementToMarkerNames.get(element);
    if (elementToNames) {
      elementToNames.delete(name);
      if (elementToNames.size == 0) {
        this._elementToMarkerNames.delete(element);
      }
    }
  }
  flushUnboundMarkerNames() {
    const markerNames = Array.from(this._unboundMarkerNames);
    this._unboundMarkerNames.clear();
    return markerNames;
  }
  flushDeferredBindings() {
    for (const [viewElement, root2] of this._deferredBindingRemovals) {
      if (viewElement.root == root2) {
        this.unbindViewElement(viewElement);
      }
    }
    this._deferredBindingRemovals = /* @__PURE__ */ new Map();
  }
  clearBindings() {
    this._modelToViewMapping = /* @__PURE__ */ new WeakMap();
    this._viewToModelMapping = /* @__PURE__ */ new WeakMap();
    this._markerNameToElements = /* @__PURE__ */ new Map();
    this._elementToMarkerNames = /* @__PURE__ */ new Map();
    this._unboundMarkerNames = /* @__PURE__ */ new Set();
    this._deferredBindingRemovals = /* @__PURE__ */ new Map();
  }
  toModelElement(viewElement) {
    return this._viewToModelMapping.get(viewElement);
  }
  toViewElement(modelElement) {
    return this._modelToViewMapping.get(modelElement);
  }
  toModelRange(viewRange) {
    return new Range(this.toModelPosition(viewRange.start), this.toModelPosition(viewRange.end));
  }
  toViewRange(modelRange) {
    return new Range$1(this.toViewPosition(modelRange.start), this.toViewPosition(modelRange.end));
  }
  toModelPosition(viewPosition) {
    const data = {
      viewPosition,
      mapper: this
    };
    this.fire("viewToModelPosition", data);
    return data.modelPosition;
  }
  toViewPosition(modelPosition, options = {}) {
    const data = {
      modelPosition,
      mapper: this,
      isPhantom: options.isPhantom
    };
    this.fire("modelToViewPosition", data);
    return data.viewPosition;
  }
  markerNameToElements(name) {
    const boundElements = this._markerNameToElements.get(name);
    if (!boundElements) {
      return null;
    }
    const elements = /* @__PURE__ */ new Set();
    for (const element of boundElements) {
      if (element.is("attributeElement")) {
        for (const clone2 of element.getElementsWithSameId()) {
          elements.add(clone2);
        }
      } else {
        elements.add(element);
      }
    }
    return elements;
  }
  registerViewToModelLength(viewElementName, lengthCallback) {
    this._viewToModelLengthCallbacks.set(viewElementName, lengthCallback);
  }
  findMappedViewAncestor(viewPosition) {
    let parent2 = viewPosition.parent;
    while (!this._viewToModelMapping.has(parent2)) {
      parent2 = parent2.parent;
    }
    return parent2;
  }
  _toModelOffset(viewParent, viewOffset, viewBlock) {
    if (viewBlock != viewParent) {
      const offsetToParentStart = this._toModelOffset(viewParent.parent, viewParent.index, viewBlock);
      const offsetInParent = this._toModelOffset(viewParent, viewOffset, viewParent);
      return offsetToParentStart + offsetInParent;
    }
    if (viewParent.is("$text")) {
      return viewOffset;
    }
    let modelOffset = 0;
    for (let i2 = 0; i2 < viewOffset; i2++) {
      modelOffset += this.getModelLength(viewParent.getChild(i2));
    }
    return modelOffset;
  }
  getModelLength(viewNode) {
    if (this._viewToModelLengthCallbacks.get(viewNode.name)) {
      const callback = this._viewToModelLengthCallbacks.get(viewNode.name);
      return callback(viewNode);
    } else if (this._viewToModelMapping.has(viewNode)) {
      return 1;
    } else if (viewNode.is("$text")) {
      return viewNode.data.length;
    } else if (viewNode.is("uiElement")) {
      return 0;
    } else {
      let len = 0;
      for (const child of viewNode.getChildren()) {
        len += this.getModelLength(child);
      }
      return len;
    }
  }
  findPositionIn(viewParent, expectedOffset) {
    let viewNode;
    let lastLength = 0;
    let modelOffset = 0;
    let viewOffset = 0;
    if (viewParent.is("$text")) {
      return new Position$1(viewParent, expectedOffset);
    }
    while (modelOffset < expectedOffset) {
      viewNode = viewParent.getChild(viewOffset);
      lastLength = this.getModelLength(viewNode);
      modelOffset += lastLength;
      viewOffset++;
    }
    if (modelOffset == expectedOffset) {
      return this._moveViewPositionToTextNode(new Position$1(viewParent, viewOffset));
    } else {
      return this.findPositionIn(viewNode, expectedOffset - (modelOffset - lastLength));
    }
  }
  _moveViewPositionToTextNode(viewPosition) {
    const nodeBefore = viewPosition.nodeBefore;
    const nodeAfter = viewPosition.nodeAfter;
    if (nodeBefore instanceof Text$2) {
      return new Position$1(nodeBefore, nodeBefore.data.length);
    } else if (nodeAfter instanceof Text$2) {
      return new Position$1(nodeAfter, 0);
    }
    return viewPosition;
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class ModelConsumable {
  constructor() {
    this._consumable = /* @__PURE__ */ new Map();
    this._textProxyRegistry = /* @__PURE__ */ new Map();
  }
  add(item, type) {
    type = _normalizeConsumableType(type);
    if (item instanceof TextProxy) {
      item = this._getSymbolForTextProxy(item);
    }
    if (!this._consumable.has(item)) {
      this._consumable.set(item, /* @__PURE__ */ new Map());
    }
    this._consumable.get(item).set(type, true);
  }
  consume(item, type) {
    type = _normalizeConsumableType(type);
    if (item instanceof TextProxy) {
      item = this._getSymbolForTextProxy(item);
    }
    if (this.test(item, type)) {
      this._consumable.get(item).set(type, false);
      return true;
    } else {
      return false;
    }
  }
  test(item, type) {
    type = _normalizeConsumableType(type);
    if (item instanceof TextProxy) {
      item = this._getSymbolForTextProxy(item);
    }
    const itemConsumables = this._consumable.get(item);
    if (itemConsumables === void 0) {
      return null;
    }
    const value = itemConsumables.get(type);
    if (value === void 0) {
      return null;
    }
    return value;
  }
  revert(item, type) {
    type = _normalizeConsumableType(type);
    if (item instanceof TextProxy) {
      item = this._getSymbolForTextProxy(item);
    }
    const test = this.test(item, type);
    if (test === false) {
      this._consumable.get(item).set(type, true);
      return true;
    } else if (test === true) {
      return false;
    }
    return null;
  }
  verifyAllConsumed(eventGroup) {
    const items = [];
    for (const [item, consumables] of this._consumable) {
      for (const [event, canConsume] of consumables) {
        const eventPrefix = event.split(":")[0];
        if (canConsume && eventGroup == eventPrefix) {
          items.push({
            event,
            item: item.name || item.description
          });
        }
      }
    }
    if (items.length) {
      throw new CKEditorError("conversion-model-consumable-not-consumed", null, { items });
    }
  }
  _getSymbolForTextProxy(textProxy) {
    let symbol = null;
    const startMap = this._textProxyRegistry.get(textProxy.startOffset);
    if (startMap) {
      const endMap = startMap.get(textProxy.endOffset);
      if (endMap) {
        symbol = endMap.get(textProxy.parent);
      }
    }
    if (!symbol) {
      symbol = this._addSymbolForTextProxy(textProxy);
    }
    return symbol;
  }
  _addSymbolForTextProxy(textProxy) {
    const start = textProxy.startOffset;
    const end = textProxy.endOffset;
    const parent2 = textProxy.parent;
    const symbol = Symbol("$textProxy:" + textProxy.data);
    let startMap;
    let endMap;
    startMap = this._textProxyRegistry.get(start);
    if (!startMap) {
      startMap = /* @__PURE__ */ new Map();
      this._textProxyRegistry.set(start, startMap);
    }
    endMap = startMap.get(end);
    if (!endMap) {
      endMap = /* @__PURE__ */ new Map();
      startMap.set(end, endMap);
    }
    endMap.set(parent2, symbol);
    return symbol;
  }
}
function _normalizeConsumableType(type) {
  const parts = type.split(":");
  if (parts[0] == "insert") {
    return parts[0];
  }
  if (parts[0] == "addMarker" || parts[0] == "removeMarker") {
    return type;
  }
  return parts.length > 1 ? parts[0] + ":" + parts[1] : parts[0];
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class DowncastDispatcher extends EmitterMixin() {
  constructor(conversionApi) {
    super();
    this._conversionApi = { dispatcher: this, ...conversionApi };
    this._firedEventsMap = /* @__PURE__ */ new WeakMap();
  }
  convertChanges(differ, markers, writer) {
    const conversionApi = this._createConversionApi(writer, differ.getRefreshedItems());
    for (const change of differ.getMarkersToRemove()) {
      this._convertMarkerRemove(change.name, change.range, conversionApi);
    }
    const changes = this._reduceChanges(differ.getChanges());
    for (const entry of changes) {
      if (entry.type === "insert") {
        this._convertInsert(Range._createFromPositionAndShift(entry.position, entry.length), conversionApi);
      } else if (entry.type === "reinsert") {
        this._convertReinsert(Range._createFromPositionAndShift(entry.position, entry.length), conversionApi);
      } else if (entry.type === "remove") {
        this._convertRemove(entry.position, entry.length, entry.name, conversionApi);
      } else {
        this._convertAttribute(entry.range, entry.attributeKey, entry.attributeOldValue, entry.attributeNewValue, conversionApi);
      }
    }
    for (const markerName of conversionApi.mapper.flushUnboundMarkerNames()) {
      const markerRange = markers.get(markerName).getRange();
      this._convertMarkerRemove(markerName, markerRange, conversionApi);
      this._convertMarkerAdd(markerName, markerRange, conversionApi);
    }
    for (const change of differ.getMarkersToAdd()) {
      this._convertMarkerAdd(change.name, change.range, conversionApi);
    }
    conversionApi.mapper.flushDeferredBindings();
    conversionApi.consumable.verifyAllConsumed("insert");
  }
  convert(range, markers, writer, options = {}) {
    const conversionApi = this._createConversionApi(writer, void 0, options);
    this._convertInsert(range, conversionApi);
    for (const [name, range2] of markers) {
      this._convertMarkerAdd(name, range2, conversionApi);
    }
    conversionApi.consumable.verifyAllConsumed("insert");
  }
  convertSelection(selection, markers, writer) {
    const markersAtSelection = Array.from(markers.getMarkersAtPosition(selection.getFirstPosition()));
    const conversionApi = this._createConversionApi(writer);
    this._addConsumablesForSelection(conversionApi.consumable, selection, markersAtSelection);
    this.fire("selection", { selection }, conversionApi);
    if (!selection.isCollapsed) {
      return;
    }
    for (const marker of markersAtSelection) {
      const markerRange = marker.getRange();
      if (!shouldMarkerChangeBeConverted(selection.getFirstPosition(), marker, conversionApi.mapper)) {
        continue;
      }
      const data = {
        item: selection,
        markerName: marker.name,
        markerRange
      };
      if (conversionApi.consumable.test(selection, "addMarker:" + marker.name)) {
        this.fire(`addMarker:${marker.name}`, data, conversionApi);
      }
    }
    for (const key of selection.getAttributeKeys()) {
      const data = {
        item: selection,
        range: selection.getFirstRange(),
        attributeKey: key,
        attributeOldValue: null,
        attributeNewValue: selection.getAttribute(key)
      };
      if (conversionApi.consumable.test(selection, "attribute:" + data.attributeKey)) {
        this.fire(`attribute:${data.attributeKey}:$text`, data, conversionApi);
      }
    }
  }
  _convertInsert(range, conversionApi, options = {}) {
    if (!options.doNotAddConsumables) {
      this._addConsumablesForInsert(conversionApi.consumable, Array.from(range));
    }
    for (const data of Array.from(range.getWalker({ shallow: true })).map(walkerValueToEventData)) {
      this._testAndFire("insert", data, conversionApi);
    }
  }
  _convertRemove(position, length, name, conversionApi) {
    this.fire(`remove:${name}`, { position, length }, conversionApi);
  }
  _convertAttribute(range, key, oldValue, newValue, conversionApi) {
    this._addConsumablesForRange(conversionApi.consumable, range, `attribute:${key}`);
    for (const value of range) {
      const data = {
        item: value.item,
        range: Range._createFromPositionAndShift(value.previousPosition, value.length),
        attributeKey: key,
        attributeOldValue: oldValue,
        attributeNewValue: newValue
      };
      this._testAndFire(`attribute:${key}`, data, conversionApi);
    }
  }
  _convertReinsert(range, conversionApi) {
    const walkerValues = Array.from(range.getWalker({ shallow: true }));
    this._addConsumablesForInsert(conversionApi.consumable, walkerValues);
    for (const data of walkerValues.map(walkerValueToEventData)) {
      this._testAndFire("insert", { ...data, reconversion: true }, conversionApi);
    }
  }
  _convertMarkerAdd(markerName, markerRange, conversionApi) {
    if (markerRange.root.rootName == "$graveyard") {
      return;
    }
    const eventName = `addMarker:${markerName}`;
    conversionApi.consumable.add(markerRange, eventName);
    this.fire(eventName, { markerName, markerRange }, conversionApi);
    if (!conversionApi.consumable.consume(markerRange, eventName)) {
      return;
    }
    this._addConsumablesForRange(conversionApi.consumable, markerRange, eventName);
    for (const item of markerRange.getItems()) {
      if (!conversionApi.consumable.test(item, eventName)) {
        continue;
      }
      const data = { item, range: Range._createOn(item), markerName, markerRange };
      this.fire(eventName, data, conversionApi);
    }
  }
  _convertMarkerRemove(markerName, markerRange, conversionApi) {
    if (markerRange.root.rootName == "$graveyard") {
      return;
    }
    this.fire(`removeMarker:${markerName}`, { markerName, markerRange }, conversionApi);
  }
  _reduceChanges(changes) {
    const data = { changes };
    this.fire("reduceChanges", data);
    return data.changes;
  }
  _addConsumablesForInsert(consumable, walkerValues) {
    for (const value of walkerValues) {
      const item = value.item;
      if (consumable.test(item, "insert") === null) {
        consumable.add(item, "insert");
        for (const key of item.getAttributeKeys()) {
          consumable.add(item, "attribute:" + key);
        }
      }
    }
    return consumable;
  }
  _addConsumablesForRange(consumable, range, type) {
    for (const item of range.getItems()) {
      consumable.add(item, type);
    }
    return consumable;
  }
  _addConsumablesForSelection(consumable, selection, markers) {
    consumable.add(selection, "selection");
    for (const marker of markers) {
      consumable.add(selection, "addMarker:" + marker.name);
    }
    for (const key of selection.getAttributeKeys()) {
      consumable.add(selection, "attribute:" + key);
    }
    return consumable;
  }
  _testAndFire(type, data, conversionApi) {
    const eventName = getEventName(type, data);
    const itemKey = data.item.is("$textProxy") ? conversionApi.consumable._getSymbolForTextProxy(data.item) : data.item;
    const eventsFiredForConversion = this._firedEventsMap.get(conversionApi);
    const eventsFiredForItem = eventsFiredForConversion.get(itemKey);
    if (!eventsFiredForItem) {
      eventsFiredForConversion.set(itemKey, /* @__PURE__ */ new Set([eventName]));
    } else if (!eventsFiredForItem.has(eventName)) {
      eventsFiredForItem.add(eventName);
    } else {
      return;
    }
    this.fire(eventName, data, conversionApi);
  }
  _testAndFireAddAttributes(item, conversionApi) {
    const data = {
      item,
      range: Range._createOn(item)
    };
    for (const key of data.item.getAttributeKeys()) {
      data.attributeKey = key;
      data.attributeOldValue = null;
      data.attributeNewValue = data.item.getAttribute(key);
      this._testAndFire(`attribute:${key}`, data, conversionApi);
    }
  }
  _createConversionApi(writer, refreshedItems = /* @__PURE__ */ new Set(), options = {}) {
    const conversionApi = {
      ...this._conversionApi,
      consumable: new ModelConsumable(),
      writer,
      options,
      convertItem: (item) => this._convertInsert(Range._createOn(item), conversionApi),
      convertChildren: (element) => this._convertInsert(Range._createIn(element), conversionApi, { doNotAddConsumables: true }),
      convertAttributes: (item) => this._testAndFireAddAttributes(item, conversionApi),
      canReuseView: (viewElement) => !refreshedItems.has(conversionApi.mapper.toModelElement(viewElement))
    };
    this._firedEventsMap.set(conversionApi, /* @__PURE__ */ new Map());
    return conversionApi;
  }
}
function shouldMarkerChangeBeConverted(modelPosition, marker, mapper) {
  const range = marker.getRange();
  const ancestors = Array.from(modelPosition.getAncestors());
  ancestors.shift();
  ancestors.reverse();
  const hasCustomHandling = ancestors.some((element) => {
    if (range.containsItem(element)) {
      const viewElement = mapper.toViewElement(element);
      return !!viewElement.getCustomProperty("addHighlight");
    }
  });
  return !hasCustomHandling;
}
function getEventName(type, data) {
  const name = data.item.is("element") ? data.item.name : "$text";
  return `${type}:${name}`;
}
function walkerValueToEventData(value) {
  const item = value.item;
  const itemRange = Range._createFromPositionAndShift(value.previousPosition, value.length);
  return {
    item,
    range: itemRange
  };
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class Selection extends EmitterMixin(TypeCheckable) {
  constructor(...args) {
    super();
    this._lastRangeBackward = false;
    this._attrs = /* @__PURE__ */ new Map();
    this._ranges = [];
    if (args.length) {
      this.setTo(...args);
    }
  }
  get anchor() {
    if (this._ranges.length > 0) {
      const range = this._ranges[this._ranges.length - 1];
      return this._lastRangeBackward ? range.end : range.start;
    }
    return null;
  }
  get focus() {
    if (this._ranges.length > 0) {
      const range = this._ranges[this._ranges.length - 1];
      return this._lastRangeBackward ? range.start : range.end;
    }
    return null;
  }
  get isCollapsed() {
    const length = this._ranges.length;
    if (length === 1) {
      return this._ranges[0].isCollapsed;
    } else {
      return false;
    }
  }
  get rangeCount() {
    return this._ranges.length;
  }
  get isBackward() {
    return !this.isCollapsed && this._lastRangeBackward;
  }
  isEqual(otherSelection) {
    if (this.rangeCount != otherSelection.rangeCount) {
      return false;
    } else if (this.rangeCount === 0) {
      return true;
    }
    if (!this.anchor.isEqual(otherSelection.anchor) || !this.focus.isEqual(otherSelection.focus)) {
      return false;
    }
    for (const thisRange of this._ranges) {
      let found = false;
      for (const otherRange of otherSelection._ranges) {
        if (thisRange.isEqual(otherRange)) {
          found = true;
          break;
        }
      }
      if (!found) {
        return false;
      }
    }
    return true;
  }
  *getRanges() {
    for (const range of this._ranges) {
      yield new Range(range.start, range.end);
    }
  }
  getFirstRange() {
    let first2 = null;
    for (const range of this._ranges) {
      if (!first2 || range.start.isBefore(first2.start)) {
        first2 = range;
      }
    }
    return first2 ? new Range(first2.start, first2.end) : null;
  }
  getLastRange() {
    let last2 = null;
    for (const range of this._ranges) {
      if (!last2 || range.end.isAfter(last2.end)) {
        last2 = range;
      }
    }
    return last2 ? new Range(last2.start, last2.end) : null;
  }
  getFirstPosition() {
    const first2 = this.getFirstRange();
    return first2 ? first2.start.clone() : null;
  }
  getLastPosition() {
    const lastRange = this.getLastRange();
    return lastRange ? lastRange.end.clone() : null;
  }
  setTo(...args) {
    let [selectable, placeOrOffset, options] = args;
    if (typeof placeOrOffset == "object") {
      options = placeOrOffset;
      placeOrOffset = void 0;
    }
    if (selectable === null) {
      this._setRanges([]);
    } else if (selectable instanceof Selection) {
      this._setRanges(selectable.getRanges(), selectable.isBackward);
    } else if (selectable && typeof selectable.getRanges == "function") {
      this._setRanges(selectable.getRanges(), selectable.isBackward);
    } else if (selectable instanceof Range) {
      this._setRanges([selectable], !!options && !!options.backward);
    } else if (selectable instanceof Position) {
      this._setRanges([new Range(selectable)]);
    } else if (selectable instanceof Node$1) {
      const backward = !!options && !!options.backward;
      let range;
      if (placeOrOffset == "in") {
        range = Range._createIn(selectable);
      } else if (placeOrOffset == "on") {
        range = Range._createOn(selectable);
      } else if (placeOrOffset !== void 0) {
        range = new Range(Position._createAt(selectable, placeOrOffset));
      } else {
        throw new CKEditorError("model-selection-setto-required-second-parameter", [this, selectable]);
      }
      this._setRanges([range], backward);
    } else if (isIterable(selectable)) {
      this._setRanges(selectable, options && !!options.backward);
    } else {
      throw new CKEditorError("model-selection-setto-not-selectable", [this, selectable]);
    }
  }
  _setRanges(newRanges, isLastBackward = false) {
    const ranges = Array.from(newRanges);
    const anyNewRange = ranges.some((newRange) => {
      if (!(newRange instanceof Range)) {
        throw new CKEditorError("model-selection-set-ranges-not-range", [this, newRanges]);
      }
      return this._ranges.every((oldRange) => {
        return !oldRange.isEqual(newRange);
      });
    });
    if (ranges.length === this._ranges.length && !anyNewRange) {
      return;
    }
    this._replaceAllRanges(ranges);
    this._lastRangeBackward = !!isLastBackward;
    this.fire("change:range", { directChange: true });
  }
  setFocus(itemOrPosition, offset) {
    if (this.anchor === null) {
      throw new CKEditorError("model-selection-setfocus-no-ranges", [this, itemOrPosition]);
    }
    const newFocus = Position._createAt(itemOrPosition, offset);
    if (newFocus.compareWith(this.focus) == "same") {
      return;
    }
    const anchor = this.anchor;
    if (this._ranges.length) {
      this._popRange();
    }
    if (newFocus.compareWith(anchor) == "before") {
      this._pushRange(new Range(newFocus, anchor));
      this._lastRangeBackward = true;
    } else {
      this._pushRange(new Range(anchor, newFocus));
      this._lastRangeBackward = false;
    }
    this.fire("change:range", { directChange: true });
  }
  getAttribute(key) {
    return this._attrs.get(key);
  }
  getAttributes() {
    return this._attrs.entries();
  }
  getAttributeKeys() {
    return this._attrs.keys();
  }
  hasAttribute(key) {
    return this._attrs.has(key);
  }
  removeAttribute(key) {
    if (this.hasAttribute(key)) {
      this._attrs.delete(key);
      this.fire("change:attribute", { attributeKeys: [key], directChange: true });
    }
  }
  setAttribute(key, value) {
    if (this.getAttribute(key) !== value) {
      this._attrs.set(key, value);
      this.fire("change:attribute", { attributeKeys: [key], directChange: true });
    }
  }
  getSelectedElement() {
    if (this.rangeCount !== 1) {
      return null;
    }
    return this.getFirstRange().getContainedElement();
  }
  *getSelectedBlocks() {
    const visited = /* @__PURE__ */ new WeakSet();
    for (const range of this.getRanges()) {
      const startBlock = getParentBlock(range.start, visited);
      if (startBlock && isTopBlockInRange(startBlock, range)) {
        yield startBlock;
      }
      for (const value of range.getWalker()) {
        const block = value.item;
        if (value.type == "elementEnd" && isUnvisitedTopBlock(block, visited, range)) {
          yield block;
        }
      }
      const endBlock = getParentBlock(range.end, visited);
      if (endBlock && !range.end.isTouching(Position._createAt(endBlock, 0)) && isTopBlockInRange(endBlock, range)) {
        yield endBlock;
      }
    }
  }
  containsEntireContent(element = this.anchor.root) {
    const limitStartPosition = Position._createAt(element, 0);
    const limitEndPosition = Position._createAt(element, "end");
    return limitStartPosition.isTouching(this.getFirstPosition()) && limitEndPosition.isTouching(this.getLastPosition());
  }
  _pushRange(range) {
    this._checkRange(range);
    this._ranges.push(new Range(range.start, range.end));
  }
  _checkRange(range) {
    for (let i2 = 0; i2 < this._ranges.length; i2++) {
      if (range.isIntersecting(this._ranges[i2])) {
        throw new CKEditorError("model-selection-range-intersects", [this, range], { addedRange: range, intersectingRange: this._ranges[i2] });
      }
    }
  }
  _replaceAllRanges(ranges) {
    this._removeAllRanges();
    for (const range of ranges) {
      this._pushRange(range);
    }
  }
  _removeAllRanges() {
    while (this._ranges.length > 0) {
      this._popRange();
    }
  }
  _popRange() {
    this._ranges.pop();
  }
}
Selection.prototype.is = function(type) {
  return type === "selection" || type === "model:selection";
};
function isUnvisitedBlock(element, visited) {
  if (visited.has(element)) {
    return false;
  }
  visited.add(element);
  return element.root.document.model.schema.isBlock(element) && !!element.parent;
}
function isUnvisitedTopBlock(element, visited, range) {
  return isUnvisitedBlock(element, visited) && isTopBlockInRange(element, range);
}
function getParentBlock(position, visited) {
  const element = position.parent;
  const schema = element.root.document.model.schema;
  const ancestors = position.parent.getAncestors({ parentFirst: true, includeSelf: true });
  let hasParentLimit = false;
  const block = ancestors.find((element2) => {
    if (hasParentLimit) {
      return false;
    }
    hasParentLimit = schema.isLimit(element2);
    return !hasParentLimit && isUnvisitedBlock(element2, visited);
  });
  ancestors.forEach((element2) => visited.add(element2));
  return block;
}
function isTopBlockInRange(block, range) {
  const parentBlock = findAncestorBlock(block);
  if (!parentBlock) {
    return true;
  }
  const isParentInRange = range.containsRange(Range._createOn(parentBlock), true);
  return !isParentInRange;
}
function findAncestorBlock(node) {
  const schema = node.root.document.model.schema;
  let parent2 = node.parent;
  while (parent2) {
    if (schema.isBlock(parent2)) {
      return parent2;
    }
    parent2 = parent2.parent;
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class LiveRange extends EmitterMixin(Range) {
  constructor(start, end) {
    super(start, end);
    bindWithDocument$1.call(this);
  }
  detach() {
    this.stopListening();
  }
  toRange() {
    return new Range(this.start, this.end);
  }
  static fromRange(range) {
    return new LiveRange(range.start, range.end);
  }
}
LiveRange.prototype.is = function(type) {
  return type === "liveRange" || type === "model:liveRange" || type == "range" || type === "model:range";
};
function bindWithDocument$1() {
  this.listenTo(this.root.document.model, "applyOperation", (event, args) => {
    const operation = args[0];
    if (!operation.isDocumentOperation) {
      return;
    }
    transform$1.call(this, operation);
  }, { priority: "low" });
}
function transform$1(operation) {
  const ranges = this.getTransformedByOperation(operation);
  const result = Range._createFromRanges(ranges);
  const boundariesChanged = !result.isEqual(this);
  const contentChanged = doesOperationChangeRangeContent(this, operation);
  let deletionPosition = null;
  if (boundariesChanged) {
    if (result.root.rootName == "$graveyard") {
      if (operation.type == "remove") {
        deletionPosition = operation.sourcePosition;
      } else {
        deletionPosition = operation.deletionPosition;
      }
    }
    const oldRange = this.toRange();
    this.start = result.start;
    this.end = result.end;
    this.fire("change:range", oldRange, { deletionPosition });
  } else if (contentChanged) {
    this.fire("change:content", this.toRange(), { deletionPosition });
  }
}
function doesOperationChangeRangeContent(range, operation) {
  switch (operation.type) {
    case "insert":
      return range.containsPosition(operation.position);
    case "move":
    case "remove":
    case "reinsert":
    case "merge":
      return range.containsPosition(operation.sourcePosition) || range.start.isEqual(operation.sourcePosition) || range.containsPosition(operation.targetPosition);
    case "split":
      return range.containsPosition(operation.splitPosition) || range.containsPosition(operation.insertionPosition);
  }
  return false;
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
const storePrefix = "selection:";
class DocumentSelection extends EmitterMixin(TypeCheckable) {
  constructor(doc) {
    super();
    this._selection = new LiveSelection(doc);
    this._selection.delegate("change:range").to(this);
    this._selection.delegate("change:attribute").to(this);
    this._selection.delegate("change:marker").to(this);
  }
  get isCollapsed() {
    return this._selection.isCollapsed;
  }
  get anchor() {
    return this._selection.anchor;
  }
  get focus() {
    return this._selection.focus;
  }
  get rangeCount() {
    return this._selection.rangeCount;
  }
  get hasOwnRange() {
    return this._selection.hasOwnRange;
  }
  get isBackward() {
    return this._selection.isBackward;
  }
  get isGravityOverridden() {
    return this._selection.isGravityOverridden;
  }
  get markers() {
    return this._selection.markers;
  }
  get _ranges() {
    return this._selection._ranges;
  }
  getRanges() {
    return this._selection.getRanges();
  }
  getFirstPosition() {
    return this._selection.getFirstPosition();
  }
  getLastPosition() {
    return this._selection.getLastPosition();
  }
  getFirstRange() {
    return this._selection.getFirstRange();
  }
  getLastRange() {
    return this._selection.getLastRange();
  }
  getSelectedBlocks() {
    return this._selection.getSelectedBlocks();
  }
  getSelectedElement() {
    return this._selection.getSelectedElement();
  }
  containsEntireContent(element) {
    return this._selection.containsEntireContent(element);
  }
  destroy() {
    this._selection.destroy();
  }
  getAttributeKeys() {
    return this._selection.getAttributeKeys();
  }
  getAttributes() {
    return this._selection.getAttributes();
  }
  getAttribute(key) {
    return this._selection.getAttribute(key);
  }
  hasAttribute(key) {
    return this._selection.hasAttribute(key);
  }
  refresh() {
    this._selection.updateMarkers();
    this._selection._updateAttributes(false);
  }
  observeMarkers(prefixOrName) {
    this._selection.observeMarkers(prefixOrName);
  }
  _setFocus(itemOrPosition, offset) {
    this._selection.setFocus(itemOrPosition, offset);
  }
  _setTo(...args) {
    this._selection.setTo(...args);
  }
  _setAttribute(key, value) {
    this._selection.setAttribute(key, value);
  }
  _removeAttribute(key) {
    this._selection.removeAttribute(key);
  }
  _getStoredAttributes() {
    return this._selection.getStoredAttributes();
  }
  _overrideGravity() {
    return this._selection.overrideGravity();
  }
  _restoreGravity(uid2) {
    this._selection.restoreGravity(uid2);
  }
  static _getStoreAttributeKey(key) {
    return storePrefix + key;
  }
  static _isStoreAttributeKey(key) {
    return key.startsWith(storePrefix);
  }
}
DocumentSelection.prototype.is = function(type) {
  return type === "selection" || type == "model:selection" || type == "documentSelection" || type == "model:documentSelection";
};
class LiveSelection extends Selection {
  constructor(doc) {
    super();
    this.markers = new Collection({ idProperty: "name" });
    this._attributePriority = /* @__PURE__ */ new Map();
    this._selectionRestorePosition = null;
    this._hasChangedRange = false;
    this._overriddenGravityRegister = /* @__PURE__ */ new Set();
    this._observedMarkers = /* @__PURE__ */ new Set();
    this._model = doc.model;
    this._document = doc;
    this.listenTo(this._model, "applyOperation", (evt, args) => {
      const operation = args[0];
      if (!operation.isDocumentOperation || operation.type == "marker" || operation.type == "rename" || operation.type == "noop") {
        return;
      }
      if (this._ranges.length == 0 && this._selectionRestorePosition) {
        this._fixGraveyardSelection(this._selectionRestorePosition);
      }
      this._selectionRestorePosition = null;
      if (this._hasChangedRange) {
        this._hasChangedRange = false;
        this.fire("change:range", { directChange: false });
      }
    }, { priority: "lowest" });
    this.on("change:range", () => {
      this._validateSelectionRanges(this.getRanges());
    });
    this.listenTo(this._model.markers, "update", (evt, marker, oldRange, newRange) => {
      this._updateMarker(marker, newRange);
    });
    this.listenTo(this._document, "change", (evt, batch) => {
      clearAttributesStoredInElement(this._model, batch);
    });
  }
  get isCollapsed() {
    const length = this._ranges.length;
    return length === 0 ? this._document._getDefaultRange().isCollapsed : super.isCollapsed;
  }
  get anchor() {
    return super.anchor || this._document._getDefaultRange().start;
  }
  get focus() {
    return super.focus || this._document._getDefaultRange().end;
  }
  get rangeCount() {
    return this._ranges.length ? this._ranges.length : 1;
  }
  get hasOwnRange() {
    return this._ranges.length > 0;
  }
  get isGravityOverridden() {
    return !!this._overriddenGravityRegister.size;
  }
  destroy() {
    for (let i2 = 0; i2 < this._ranges.length; i2++) {
      this._ranges[i2].detach();
    }
    this.stopListening();
  }
  *getRanges() {
    if (this._ranges.length) {
      yield* super.getRanges();
    } else {
      yield this._document._getDefaultRange();
    }
  }
  getFirstRange() {
    return super.getFirstRange() || this._document._getDefaultRange();
  }
  getLastRange() {
    return super.getLastRange() || this._document._getDefaultRange();
  }
  setTo(...args) {
    super.setTo(...args);
    this._updateAttributes(true);
    this.updateMarkers();
  }
  setFocus(itemOrPosition, offset) {
    super.setFocus(itemOrPosition, offset);
    this._updateAttributes(true);
    this.updateMarkers();
  }
  setAttribute(key, value) {
    if (this._setAttribute(key, value)) {
      const attributeKeys = [key];
      this.fire("change:attribute", { attributeKeys, directChange: true });
    }
  }
  removeAttribute(key) {
    if (this._removeAttribute(key)) {
      const attributeKeys = [key];
      this.fire("change:attribute", { attributeKeys, directChange: true });
    }
  }
  overrideGravity() {
    const overrideUid = uid();
    this._overriddenGravityRegister.add(overrideUid);
    if (this._overriddenGravityRegister.size === 1) {
      this._updateAttributes(true);
    }
    return overrideUid;
  }
  restoreGravity(uid2) {
    if (!this._overriddenGravityRegister.has(uid2)) {
      throw new CKEditorError("document-selection-gravity-wrong-restore", this, { uid: uid2 });
    }
    this._overriddenGravityRegister.delete(uid2);
    if (!this.isGravityOverridden) {
      this._updateAttributes(true);
    }
  }
  observeMarkers(prefixOrName) {
    this._observedMarkers.add(prefixOrName);
    this.updateMarkers();
  }
  _replaceAllRanges(ranges) {
    this._validateSelectionRanges(ranges);
    super._replaceAllRanges(ranges);
  }
  _popRange() {
    this._ranges.pop().detach();
  }
  _pushRange(range) {
    const liveRange = this._prepareRange(range);
    if (liveRange) {
      this._ranges.push(liveRange);
    }
  }
  _validateSelectionRanges(ranges) {
    for (const range of ranges) {
      if (!this._document._validateSelectionRange(range)) {
        throw new CKEditorError("document-selection-wrong-position", this, { range });
      }
    }
  }
  _prepareRange(range) {
    this._checkRange(range);
    if (range.root == this._document.graveyard) {
      return;
    }
    const liveRange = LiveRange.fromRange(range);
    liveRange.on("change:range", (evt, oldRange, data) => {
      this._hasChangedRange = true;
      if (liveRange.root == this._document.graveyard) {
        this._selectionRestorePosition = data.deletionPosition;
        const index = this._ranges.indexOf(liveRange);
        this._ranges.splice(index, 1);
        liveRange.detach();
      }
    });
    return liveRange;
  }
  updateMarkers() {
    if (!this._observedMarkers.size) {
      return;
    }
    const markers = [];
    let changed = false;
    for (const marker of this._model.markers) {
      const markerGroup = marker.name.split(":", 1)[0];
      if (!this._observedMarkers.has(markerGroup)) {
        continue;
      }
      const markerRange = marker.getRange();
      for (const selectionRange of this.getRanges()) {
        if (markerRange.containsRange(selectionRange, !selectionRange.isCollapsed)) {
          markers.push(marker);
        }
      }
    }
    const oldMarkers = Array.from(this.markers);
    for (const marker of markers) {
      if (!this.markers.has(marker)) {
        this.markers.add(marker);
        changed = true;
      }
    }
    for (const marker of Array.from(this.markers)) {
      if (!markers.includes(marker)) {
        this.markers.remove(marker);
        changed = true;
      }
    }
    if (changed) {
      this.fire("change:marker", { oldMarkers, directChange: false });
    }
  }
  _updateMarker(marker, markerRange) {
    const markerGroup = marker.name.split(":", 1)[0];
    if (!this._observedMarkers.has(markerGroup)) {
      return;
    }
    let changed = false;
    const oldMarkers = Array.from(this.markers);
    const hasMarker = this.markers.has(marker);
    if (!markerRange) {
      if (hasMarker) {
        this.markers.remove(marker);
        changed = true;
      }
    } else {
      let contained = false;
      for (const selectionRange of this.getRanges()) {
        if (markerRange.containsRange(selectionRange, !selectionRange.isCollapsed)) {
          contained = true;
          break;
        }
      }
      if (contained && !hasMarker) {
        this.markers.add(marker);
        changed = true;
      } else if (!contained && hasMarker) {
        this.markers.remove(marker);
        changed = true;
      }
    }
    if (changed) {
      this.fire("change:marker", { oldMarkers, directChange: false });
    }
  }
  _updateAttributes(clearAll) {
    const newAttributes = toMap(this._getSurroundingAttributes());
    const oldAttributes = toMap(this.getAttributes());
    if (clearAll) {
      this._attributePriority = /* @__PURE__ */ new Map();
      this._attrs = /* @__PURE__ */ new Map();
    } else {
      for (const [key, priority] of this._attributePriority) {
        if (priority == "low") {
          this._attrs.delete(key);
          this._attributePriority.delete(key);
        }
      }
    }
    this._setAttributesTo(newAttributes);
    const changed = [];
    for (const [newKey, newValue] of this.getAttributes()) {
      if (!oldAttributes.has(newKey) || oldAttributes.get(newKey) !== newValue) {
        changed.push(newKey);
      }
    }
    for (const [oldKey] of oldAttributes) {
      if (!this.hasAttribute(oldKey)) {
        changed.push(oldKey);
      }
    }
    if (changed.length > 0) {
      this.fire("change:attribute", { attributeKeys: changed, directChange: false });
    }
  }
  _setAttribute(key, value, directChange = true) {
    const priority = directChange ? "normal" : "low";
    if (priority == "low" && this._attributePriority.get(key) == "normal") {
      return false;
    }
    const oldValue = super.getAttribute(key);
    if (oldValue === value) {
      return false;
    }
    this._attrs.set(key, value);
    this._attributePriority.set(key, priority);
    return true;
  }
  _removeAttribute(key, directChange = true) {
    const priority = directChange ? "normal" : "low";
    if (priority == "low" && this._attributePriority.get(key) == "normal") {
      return false;
    }
    this._attributePriority.set(key, priority);
    if (!super.hasAttribute(key)) {
      return false;
    }
    this._attrs.delete(key);
    return true;
  }
  _setAttributesTo(attrs) {
    const changed = /* @__PURE__ */ new Set();
    for (const [oldKey, oldValue] of this.getAttributes()) {
      if (attrs.get(oldKey) === oldValue) {
        continue;
      }
      this._removeAttribute(oldKey, false);
    }
    for (const [key, value] of attrs) {
      const gotAdded = this._setAttribute(key, value, false);
      if (gotAdded) {
        changed.add(key);
      }
    }
    return changed;
  }
  *getStoredAttributes() {
    const selectionParent = this.getFirstPosition().parent;
    if (this.isCollapsed && selectionParent.isEmpty) {
      for (const key of selectionParent.getAttributeKeys()) {
        if (key.startsWith(storePrefix)) {
          const realKey = key.substr(storePrefix.length);
          yield [realKey, selectionParent.getAttribute(key)];
        }
      }
    }
  }
  _getSurroundingAttributes() {
    const position = this.getFirstPosition();
    const schema = this._model.schema;
    let attrs = null;
    if (!this.isCollapsed) {
      const range = this.getFirstRange();
      for (const value of range) {
        if (value.item.is("element") && schema.isObject(value.item)) {
          break;
        }
        if (value.type == "text") {
          attrs = value.item.getAttributes();
          break;
        }
      }
    } else {
      const nodeBefore = position.textNode ? position.textNode : position.nodeBefore;
      const nodeAfter = position.textNode ? position.textNode : position.nodeAfter;
      if (!this.isGravityOverridden) {
        attrs = getAttrsIfCharacter(nodeBefore);
      }
      if (!attrs) {
        attrs = getAttrsIfCharacter(nodeAfter);
      }
      if (!this.isGravityOverridden && !attrs) {
        let node = nodeBefore;
        while (node && !schema.isInline(node) && !attrs) {
          node = node.previousSibling;
          attrs = getAttrsIfCharacter(node);
        }
      }
      if (!attrs) {
        let node = nodeAfter;
        while (node && !schema.isInline(node) && !attrs) {
          node = node.nextSibling;
          attrs = getAttrsIfCharacter(node);
        }
      }
      if (!attrs) {
        attrs = this.getStoredAttributes();
      }
    }
    return attrs;
  }
  _fixGraveyardSelection(deletionPosition) {
    const selectionRange = this._model.schema.getNearestSelectionRange(deletionPosition);
    if (selectionRange) {
      this._pushRange(selectionRange);
    }
  }
}
function getAttrsIfCharacter(node) {
  if (node instanceof TextProxy || node instanceof Text$1) {
    return node.getAttributes();
  }
  return null;
}
function clearAttributesStoredInElement(model, batch) {
  const differ = model.document.differ;
  for (const entry of differ.getChanges()) {
    if (entry.type != "insert") {
      continue;
    }
    const changeParent = entry.position.parent;
    const isNoLongerEmpty = entry.length === changeParent.maxOffset;
    if (isNoLongerEmpty) {
      model.enqueueChange(batch, (writer) => {
        const storedAttributes = Array.from(changeParent.getAttributeKeys()).filter((key) => key.startsWith(storePrefix));
        for (const key of storedAttributes) {
          writer.removeAttribute(key, changeParent);
        }
      });
    }
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
function insertText() {
  return (evt, data, conversionApi) => {
    if (!conversionApi.consumable.consume(data.item, evt.name)) {
      return;
    }
    const viewWriter = conversionApi.writer;
    const viewPosition = conversionApi.mapper.toViewPosition(data.range.start);
    const viewText = viewWriter.createText(data.item.data);
    viewWriter.insert(viewPosition, viewText);
  };
}
function insertAttributesAndChildren() {
  return (evt, data, conversionApi) => {
    conversionApi.convertAttributes(data.item);
    if (!data.reconversion && data.item.is("element") && !data.item.isEmpty) {
      conversionApi.convertChildren(data.item);
    }
  };
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
function autoParagraphEmptyRoots(writer) {
  const { schema, document: document2 } = writer.model;
  for (const rootName of document2.getRootNames()) {
    const root2 = document2.getRoot(rootName);
    if (root2.isEmpty && !schema.checkChild(root2, "$text")) {
      if (schema.checkChild(root2, "paragraph")) {
        writer.insertElement("paragraph", root2);
        return true;
      }
    }
  }
  return false;
}
function isParagraphable(position, nodeOrType, schema) {
  const context = schema.createContext(position);
  if (!schema.checkChild(context, "paragraph")) {
    return false;
  }
  if (!schema.checkChild(context.push("paragraph"), nodeOrType)) {
    return false;
  }
  return true;
}
function wrapInParagraph(position, writer) {
  const paragraph2 = writer.createElement("paragraph");
  writer.insert(paragraph2, position);
  return writer.createPositionAt(paragraph2, 0);
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
function convertToModelFragment() {
  return (evt, data, conversionApi) => {
    if (!data.modelRange && conversionApi.consumable.consume(data.viewItem, { name: true })) {
      const { modelRange, modelCursor } = conversionApi.convertChildren(data.viewItem, data.modelCursor);
      data.modelRange = modelRange;
      data.modelCursor = modelCursor;
    }
  };
}
function convertText() {
  return (evt, data, { schema, consumable, writer }) => {
    let position = data.modelCursor;
    if (!consumable.test(data.viewItem)) {
      return;
    }
    if (!schema.checkChild(position, "$text")) {
      if (!isParagraphable(position, "$text", schema)) {
        return;
      }
      if (data.viewItem.data.trim().length == 0) {
        return;
      }
      const nodeBefore = position.nodeBefore;
      position = wrapInParagraph(position, writer);
      if (nodeBefore && nodeBefore.is("element", "$marker")) {
        writer.move(writer.createRangeOn(nodeBefore), position);
        position = writer.createPositionAfter(nodeBefore);
      }
    }
    consumable.consume(data.viewItem);
    const text2 = writer.createText(data.viewItem.data);
    writer.insert(text2, position);
    data.modelRange = writer.createRange(position, position.getShiftedBy(text2.offsetSize));
    data.modelCursor = data.modelRange.end;
  };
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class ViewConsumable {
  constructor() {
    this._consumables = /* @__PURE__ */ new Map();
  }
  add(element, consumables) {
    let elementConsumables;
    if (element.is("$text") || element.is("documentFragment")) {
      this._consumables.set(element, true);
      return;
    }
    if (!this._consumables.has(element)) {
      elementConsumables = new ViewElementConsumables(element);
      this._consumables.set(element, elementConsumables);
    } else {
      elementConsumables = this._consumables.get(element);
    }
    elementConsumables.add(consumables);
  }
  test(element, consumables) {
    const elementConsumables = this._consumables.get(element);
    if (elementConsumables === void 0) {
      return null;
    }
    if (element.is("$text") || element.is("documentFragment")) {
      return elementConsumables;
    }
    return elementConsumables.test(consumables);
  }
  consume(element, consumables) {
    if (this.test(element, consumables)) {
      if (element.is("$text") || element.is("documentFragment")) {
        this._consumables.set(element, false);
      } else {
        this._consumables.get(element).consume(consumables);
      }
      return true;
    }
    return false;
  }
  revert(element, consumables) {
    const elementConsumables = this._consumables.get(element);
    if (elementConsumables !== void 0) {
      if (element.is("$text") || element.is("documentFragment")) {
        this._consumables.set(element, true);
      } else {
        elementConsumables.revert(consumables);
      }
    }
  }
  static consumablesFromElement(element) {
    const consumables = {
      element,
      name: true,
      attributes: [],
      classes: [],
      styles: []
    };
    const attributes = element.getAttributeKeys();
    for (const attribute of attributes) {
      if (attribute == "style" || attribute == "class") {
        continue;
      }
      consumables.attributes.push(attribute);
    }
    const classes = element.getClassNames();
    for (const className of classes) {
      consumables.classes.push(className);
    }
    const styles2 = element.getStyleNames();
    for (const style of styles2) {
      consumables.styles.push(style);
    }
    return consumables;
  }
  static createFrom(from, instance) {
    if (!instance) {
      instance = new ViewConsumable();
    }
    if (from.is("$text")) {
      instance.add(from);
      return instance;
    }
    if (from.is("element")) {
      instance.add(from, ViewConsumable.consumablesFromElement(from));
    }
    if (from.is("documentFragment")) {
      instance.add(from);
    }
    for (const child of from.getChildren()) {
      instance = ViewConsumable.createFrom(child, instance);
    }
    return instance;
  }
}
const CONSUMABLE_TYPES = ["attributes", "classes", "styles"];
class ViewElementConsumables {
  constructor(from) {
    this.element = from;
    this._canConsumeName = null;
    this._consumables = {
      attributes: /* @__PURE__ */ new Map(),
      styles: /* @__PURE__ */ new Map(),
      classes: /* @__PURE__ */ new Map()
    };
  }
  add(consumables) {
    if (consumables.name) {
      this._canConsumeName = true;
    }
    for (const type of CONSUMABLE_TYPES) {
      if (type in consumables) {
        this._add(type, consumables[type]);
      }
    }
  }
  test(consumables) {
    if (consumables.name && !this._canConsumeName) {
      return this._canConsumeName;
    }
    for (const type of CONSUMABLE_TYPES) {
      if (type in consumables) {
        const value = this._test(type, consumables[type]);
        if (value !== true) {
          return value;
        }
      }
    }
    return true;
  }
  consume(consumables) {
    if (consumables.name) {
      this._canConsumeName = false;
    }
    for (const type of CONSUMABLE_TYPES) {
      if (type in consumables) {
        this._consume(type, consumables[type]);
      }
    }
  }
  revert(consumables) {
    if (consumables.name) {
      this._canConsumeName = true;
    }
    for (const type of CONSUMABLE_TYPES) {
      if (type in consumables) {
        this._revert(type, consumables[type]);
      }
    }
  }
  _add(type, item) {
    const items = isArray$1(item) ? item : [item];
    const consumables = this._consumables[type];
    for (const name of items) {
      if (type === "attributes" && (name === "class" || name === "style")) {
        throw new CKEditorError("viewconsumable-invalid-attribute", this);
      }
      consumables.set(name, true);
      if (type === "styles") {
        for (const alsoName of this.element.document.stylesProcessor.getRelatedStyles(name)) {
          consumables.set(alsoName, true);
        }
      }
    }
  }
  _test(type, item) {
    const items = isArray$1(item) ? item : [item];
    const consumables = this._consumables[type];
    for (const name of items) {
      if (type === "attributes" && (name === "class" || name === "style")) {
        const consumableName = name == "class" ? "classes" : "styles";
        const value = this._test(consumableName, [...this._consumables[consumableName].keys()]);
        if (value !== true) {
          return value;
        }
      } else {
        const value = consumables.get(name);
        if (value === void 0) {
          return null;
        }
        if (!value) {
          return false;
        }
      }
    }
    return true;
  }
  _consume(type, item) {
    const items = isArray$1(item) ? item : [item];
    const consumables = this._consumables[type];
    for (const name of items) {
      if (type === "attributes" && (name === "class" || name === "style")) {
        const consumableName = name == "class" ? "classes" : "styles";
        this._consume(consumableName, [...this._consumables[consumableName].keys()]);
      } else {
        consumables.set(name, false);
        if (type == "styles") {
          for (const toConsume of this.element.document.stylesProcessor.getRelatedStyles(name)) {
            consumables.set(toConsume, false);
          }
        }
      }
    }
  }
  _revert(type, item) {
    const items = isArray$1(item) ? item : [item];
    const consumables = this._consumables[type];
    for (const name of items) {
      if (type === "attributes" && (name === "class" || name === "style")) {
        const consumableName = name == "class" ? "classes" : "styles";
        this._revert(consumableName, [...this._consumables[consumableName].keys()]);
      } else {
        const value = consumables.get(name);
        if (value === false) {
          consumables.set(name, true);
        }
      }
    }
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class SchemaContext {
  constructor(context) {
    if (context instanceof SchemaContext) {
      return context;
    }
    let items;
    if (typeof context == "string") {
      items = [context];
    } else if (!Array.isArray(context)) {
      items = context.getAncestors({ includeSelf: true });
    } else {
      items = context;
    }
    this._items = items.map(mapContextItem);
  }
  get length() {
    return this._items.length;
  }
  get last() {
    return this._items[this._items.length - 1];
  }
  [Symbol.iterator]() {
    return this._items[Symbol.iterator]();
  }
  push(item) {
    const ctx = new SchemaContext([item]);
    ctx._items = [...this._items, ...ctx._items];
    return ctx;
  }
  getItem(index) {
    return this._items[index];
  }
  *getNames() {
    yield* this._items.map((item) => item.name);
  }
  endsWith(query) {
    return Array.from(this.getNames()).join(" ").endsWith(query);
  }
  startsWith(query) {
    return Array.from(this.getNames()).join(" ").startsWith(query);
  }
}
function mapContextItem(ctxItem) {
  if (typeof ctxItem == "string" || ctxItem.is("documentFragment")) {
    return {
      name: typeof ctxItem == "string" ? ctxItem : "$documentFragment",
      *getAttributeKeys() {
      },
      getAttribute() {
      }
    };
  } else {
    return {
      name: ctxItem.is("element") ? ctxItem.name : "$text",
      *getAttributeKeys() {
        yield* ctxItem.getAttributeKeys();
      },
      getAttribute(key) {
        return ctxItem.getAttribute(key);
      }
    };
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class UpcastDispatcher extends EmitterMixin() {
  constructor(conversionApi) {
    super();
    this._splitParts = /* @__PURE__ */ new Map();
    this._cursorParents = /* @__PURE__ */ new Map();
    this._modelCursor = null;
    this._emptyElementsToKeep = /* @__PURE__ */ new Set();
    this.conversionApi = {
      ...conversionApi,
      consumable: null,
      writer: null,
      store: null,
      convertItem: (viewItem, modelCursor) => this._convertItem(viewItem, modelCursor),
      convertChildren: (viewElement, positionOrElement) => this._convertChildren(viewElement, positionOrElement),
      safeInsert: (modelElement, position) => this._safeInsert(modelElement, position),
      updateConversionResult: (modelElement, data) => this._updateConversionResult(modelElement, data),
      splitToAllowedParent: (modelElement, modelCursor) => this._splitToAllowedParent(modelElement, modelCursor),
      getSplitParts: (modelElement) => this._getSplitParts(modelElement),
      keepEmptyElement: (modelElement) => this._keepEmptyElement(modelElement)
    };
  }
  convert(viewElement, writer, context = ["$root"]) {
    this.fire("viewCleanup", viewElement);
    this._modelCursor = createContextTree(context, writer);
    this.conversionApi.writer = writer;
    this.conversionApi.consumable = ViewConsumable.createFrom(viewElement);
    this.conversionApi.store = {};
    const { modelRange } = this._convertItem(viewElement, this._modelCursor);
    const documentFragment = writer.createDocumentFragment();
    if (modelRange) {
      this._removeEmptyElements();
      for (const item of Array.from(this._modelCursor.parent.getChildren())) {
        writer.append(item, documentFragment);
      }
      documentFragment.markers = extractMarkersFromModelFragment(documentFragment, writer);
    }
    this._modelCursor = null;
    this._splitParts.clear();
    this._cursorParents.clear();
    this._emptyElementsToKeep.clear();
    this.conversionApi.writer = null;
    this.conversionApi.store = null;
    return documentFragment;
  }
  _convertItem(viewItem, modelCursor) {
    const data = { viewItem, modelCursor, modelRange: null };
    if (viewItem.is("element")) {
      this.fire(`element:${viewItem.name}`, data, this.conversionApi);
    } else if (viewItem.is("$text")) {
      this.fire("text", data, this.conversionApi);
    } else {
      this.fire("documentFragment", data, this.conversionApi);
    }
    if (data.modelRange && !(data.modelRange instanceof Range)) {
      throw new CKEditorError("view-conversion-dispatcher-incorrect-result", this);
    }
    return { modelRange: data.modelRange, modelCursor: data.modelCursor };
  }
  _convertChildren(viewItem, elementOrModelCursor) {
    let nextModelCursor = elementOrModelCursor.is("position") ? elementOrModelCursor : Position._createAt(elementOrModelCursor, 0);
    const modelRange = new Range(nextModelCursor);
    for (const viewChild of Array.from(viewItem.getChildren())) {
      const result = this._convertItem(viewChild, nextModelCursor);
      if (result.modelRange instanceof Range) {
        modelRange.end = result.modelRange.end;
        nextModelCursor = result.modelCursor;
      }
    }
    return { modelRange, modelCursor: nextModelCursor };
  }
  _safeInsert(modelElement, position) {
    const splitResult = this._splitToAllowedParent(modelElement, position);
    if (!splitResult) {
      return false;
    }
    this.conversionApi.writer.insert(modelElement, splitResult.position);
    return true;
  }
  _updateConversionResult(modelElement, data) {
    const parts = this._getSplitParts(modelElement);
    const writer = this.conversionApi.writer;
    if (!data.modelRange) {
      data.modelRange = writer.createRange(writer.createPositionBefore(modelElement), writer.createPositionAfter(parts[parts.length - 1]));
    }
    const savedCursorParent = this._cursorParents.get(modelElement);
    if (savedCursorParent) {
      data.modelCursor = writer.createPositionAt(savedCursorParent, 0);
    } else {
      data.modelCursor = data.modelRange.end;
    }
  }
  _splitToAllowedParent(node, modelCursor) {
    const { schema, writer } = this.conversionApi;
    let allowedParent = schema.findAllowedParent(modelCursor, node);
    if (allowedParent) {
      if (allowedParent === modelCursor.parent) {
        return { position: modelCursor };
      }
      if (this._modelCursor.parent.getAncestors().includes(allowedParent)) {
        allowedParent = null;
      }
    }
    if (!allowedParent) {
      if (!isParagraphable(modelCursor, node, schema)) {
        return null;
      }
      return {
        position: wrapInParagraph(modelCursor, writer)
      };
    }
    const splitResult = this.conversionApi.writer.split(modelCursor, allowedParent);
    const stack = [];
    for (const treeWalkerValue of splitResult.range.getWalker()) {
      if (treeWalkerValue.type == "elementEnd") {
        stack.push(treeWalkerValue.item);
      } else {
        const originalPart = stack.pop();
        const splitPart = treeWalkerValue.item;
        this._registerSplitPair(originalPart, splitPart);
      }
    }
    const cursorParent = splitResult.range.end.parent;
    this._cursorParents.set(node, cursorParent);
    return {
      position: splitResult.position,
      cursorParent
    };
  }
  _registerSplitPair(originalPart, splitPart) {
    if (!this._splitParts.has(originalPart)) {
      this._splitParts.set(originalPart, [originalPart]);
    }
    const list2 = this._splitParts.get(originalPart);
    this._splitParts.set(splitPart, list2);
    list2.push(splitPart);
  }
  _getSplitParts(element) {
    let parts;
    if (!this._splitParts.has(element)) {
      parts = [element];
    } else {
      parts = this._splitParts.get(element);
    }
    return parts;
  }
  _keepEmptyElement(element) {
    this._emptyElementsToKeep.add(element);
  }
  _removeEmptyElements() {
    let anyRemoved = false;
    for (const element of this._splitParts.keys()) {
      if (element.isEmpty && !this._emptyElementsToKeep.has(element)) {
        this.conversionApi.writer.remove(element);
        this._splitParts.delete(element);
        anyRemoved = true;
      }
    }
    if (anyRemoved) {
      this._removeEmptyElements();
    }
  }
}
function extractMarkersFromModelFragment(modelItem, writer) {
  const markerElements = /* @__PURE__ */ new Set();
  const markers = /* @__PURE__ */ new Map();
  const range = Range._createIn(modelItem).getItems();
  for (const item of range) {
    if (item.is("element", "$marker")) {
      markerElements.add(item);
    }
  }
  for (const markerElement of markerElements) {
    const markerName = markerElement.getAttribute("data-name");
    const currentPosition = writer.createPositionBefore(markerElement);
    if (!markers.has(markerName)) {
      markers.set(markerName, new Range(currentPosition.clone()));
    } else {
      markers.get(markerName).end = currentPosition.clone();
    }
    writer.remove(markerElement);
  }
  return markers;
}
function createContextTree(contextDefinition, writer) {
  let position;
  for (const item of new SchemaContext(contextDefinition)) {
    const attributes = {};
    for (const key of item.getAttributeKeys()) {
      attributes[key] = item.getAttribute(key);
    }
    const current = writer.createElement(item.name, attributes);
    if (position) {
      writer.insert(current, position);
    }
    position = Position._createAt(current, 0);
  }
  return position;
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class BasicHtmlWriter {
  getHtml(fragment) {
    const doc = document.implementation.createHTMLDocument("");
    const container = doc.createElement("div");
    container.appendChild(fragment);
    return container.innerHTML;
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class HtmlDataProcessor {
  constructor(document2) {
    this.skipComments = true;
    this.domParser = new DOMParser();
    this.domConverter = new DomConverter(document2, { renderingMode: "data" });
    this.htmlWriter = new BasicHtmlWriter();
  }
  toData(viewFragment) {
    const domFragment = this.domConverter.viewToDom(viewFragment);
    return this.htmlWriter.getHtml(domFragment);
  }
  toView(data) {
    const domFragment = this._toDom(data);
    return this.domConverter.domToView(domFragment, { skipComments: this.skipComments });
  }
  registerRawContentMatcher(pattern) {
    this.domConverter.registerRawContentMatcher(pattern);
  }
  useFillerType(type) {
    this.domConverter.blockFillerMode = type == "marked" ? "markedNbsp" : "nbsp";
  }
  _toDom(data) {
    if (!data.match(/<(?:html|body|head|meta)(?:\s[^>]*)?>/i)) {
      data = `<body>${data}</body>`;
    }
    const document2 = this.domParser.parseFromString(data, "text/html");
    const fragment = document2.createDocumentFragment();
    const bodyChildNodes = document2.body.childNodes;
    while (bodyChildNodes.length > 0) {
      fragment.appendChild(bodyChildNodes[0]);
    }
    return fragment;
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class DataController extends EmitterMixin() {
  constructor(model, stylesProcessor) {
    super();
    this.model = model;
    this.mapper = new Mapper();
    this.downcastDispatcher = new DowncastDispatcher({
      mapper: this.mapper,
      schema: model.schema
    });
    this.downcastDispatcher.on("insert:$text", insertText(), { priority: "lowest" });
    this.downcastDispatcher.on("insert", insertAttributesAndChildren(), { priority: "lowest" });
    this.upcastDispatcher = new UpcastDispatcher({
      schema: model.schema
    });
    this.viewDocument = new Document$1(stylesProcessor);
    this.stylesProcessor = stylesProcessor;
    this.htmlProcessor = new HtmlDataProcessor(this.viewDocument);
    this.processor = this.htmlProcessor;
    this._viewWriter = new DowncastWriter(this.viewDocument);
    this.upcastDispatcher.on("text", convertText(), { priority: "lowest" });
    this.upcastDispatcher.on("element", convertToModelFragment(), { priority: "lowest" });
    this.upcastDispatcher.on("documentFragment", convertToModelFragment(), { priority: "lowest" });
    ObservableMixin().prototype.decorate.call(this, "init");
    ObservableMixin().prototype.decorate.call(this, "set");
    ObservableMixin().prototype.decorate.call(this, "get");
    ObservableMixin().prototype.decorate.call(this, "toView");
    ObservableMixin().prototype.decorate.call(this, "toModel");
    this.on("init", () => {
      this.fire("ready");
    }, { priority: "lowest" });
    this.on("ready", () => {
      this.model.enqueueChange({ isUndoable: false }, autoParagraphEmptyRoots);
    }, { priority: "lowest" });
  }
  get(options = {}) {
    const { rootName = "main", trim = "empty" } = options;
    if (!this._checkIfRootsExists([rootName])) {
      throw new CKEditorError("datacontroller-get-non-existent-root", this);
    }
    const root2 = this.model.document.getRoot(rootName);
    if (trim === "empty" && !this.model.hasContent(root2, { ignoreWhitespaces: true })) {
      return "";
    }
    return this.stringify(root2, options);
  }
  stringify(modelElementOrFragment, options = {}) {
    const viewDocumentFragment = this.toView(modelElementOrFragment, options);
    return this.processor.toData(viewDocumentFragment);
  }
  toView(modelElementOrFragment, options = {}) {
    const viewDocument = this.viewDocument;
    const viewWriter = this._viewWriter;
    this.mapper.clearBindings();
    const modelRange = Range._createIn(modelElementOrFragment);
    const viewDocumentFragment = new DocumentFragment$1(viewDocument);
    this.mapper.bindElements(modelElementOrFragment, viewDocumentFragment);
    const markers = modelElementOrFragment.is("documentFragment") ? modelElementOrFragment.markers : _getMarkersRelativeToElement(modelElementOrFragment);
    this.downcastDispatcher.convert(modelRange, markers, viewWriter, options);
    return viewDocumentFragment;
  }
  init(data) {
    if (this.model.document.version) {
      throw new CKEditorError("datacontroller-init-document-not-empty", this);
    }
    let initialData = {};
    if (typeof data === "string") {
      initialData.main = data;
    } else {
      initialData = data;
    }
    if (!this._checkIfRootsExists(Object.keys(initialData))) {
      throw new CKEditorError("datacontroller-init-non-existent-root", this);
    }
    this.model.enqueueChange({ isUndoable: false }, (writer) => {
      for (const rootName of Object.keys(initialData)) {
        const modelRoot = this.model.document.getRoot(rootName);
        writer.insert(this.parse(initialData[rootName], modelRoot), modelRoot, 0);
      }
    });
    return Promise.resolve();
  }
  set(data, options = {}) {
    let newData = {};
    if (typeof data === "string") {
      newData.main = data;
    } else {
      newData = data;
    }
    if (!this._checkIfRootsExists(Object.keys(newData))) {
      throw new CKEditorError("datacontroller-set-non-existent-root", this);
    }
    this.model.enqueueChange(options.batchType || {}, (writer) => {
      writer.setSelection(null);
      writer.removeSelectionAttribute(this.model.document.selection.getAttributeKeys());
      for (const rootName of Object.keys(newData)) {
        const modelRoot = this.model.document.getRoot(rootName);
        writer.remove(writer.createRangeIn(modelRoot));
        writer.insert(this.parse(newData[rootName], modelRoot), modelRoot, 0);
      }
    });
  }
  parse(data, context = "$root") {
    const viewDocumentFragment = this.processor.toView(data);
    return this.toModel(viewDocumentFragment, context);
  }
  toModel(viewElementOrFragment, context = "$root") {
    return this.model.change((writer) => {
      return this.upcastDispatcher.convert(viewElementOrFragment, writer, context);
    });
  }
  addStyleProcessorRules(callback) {
    callback(this.stylesProcessor);
  }
  registerRawContentMatcher(pattern) {
    if (this.processor && this.processor !== this.htmlProcessor) {
      this.processor.registerRawContentMatcher(pattern);
    }
    this.htmlProcessor.registerRawContentMatcher(pattern);
  }
  destroy() {
    this.stopListening();
  }
  _checkIfRootsExists(rootNames) {
    for (const rootName of rootNames) {
      if (!this.model.document.getRootNames().includes(rootName)) {
        return false;
      }
    }
    return true;
  }
}
function _getMarkersRelativeToElement(element) {
  const result = [];
  const doc = element.root.document;
  if (!doc) {
    return /* @__PURE__ */ new Map();
  }
  const elementRange = Range._createIn(element);
  for (const marker of doc.model.markers) {
    const markerRange = marker.getRange();
    const isMarkerCollapsed = markerRange.isCollapsed;
    const isMarkerAtElementBoundary = markerRange.start.isEqual(elementRange.start) || markerRange.end.isEqual(elementRange.end);
    if (isMarkerCollapsed && isMarkerAtElementBoundary) {
      result.push([marker.name, markerRange]);
    } else {
      const updatedMarkerRange = elementRange.getIntersection(markerRange);
      if (updatedMarkerRange) {
        result.push([marker.name, updatedMarkerRange]);
      }
    }
  }
  result.sort(([n1, r1], [n2, r2]) => {
    if (r1.end.compareWith(r2.start) !== "after") {
      return 1;
    } else if (r1.start.compareWith(r2.end) !== "before") {
      return -1;
    } else {
      switch (r1.start.compareWith(r2.start)) {
        case "before":
          return 1;
        case "after":
          return -1;
        default:
          switch (r1.end.compareWith(r2.end)) {
            case "before":
              return 1;
            case "after":
              return -1;
            default:
              return n2.localeCompare(n1);
          }
      }
    }
  });
  return new Map(result);
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class Operation {
  constructor(baseVersion) {
    this.baseVersion = baseVersion;
    this.isDocumentOperation = this.baseVersion !== null;
    this.batch = null;
  }
  _validate() {
  }
  toJSON() {
    const json = Object.assign({}, this);
    json.__className = this.constructor.className;
    delete json.batch;
    delete json.isDocumentOperation;
    return json;
  }
  static get className() {
    return "Operation";
  }
  static fromJSON(json, document2) {
    return new this(json.baseVersion);
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
function _insert(position, nodes) {
  const normalizedNodes = _normalizeNodes(nodes);
  const offset = normalizedNodes.reduce((sum, node) => sum + node.offsetSize, 0);
  const parent2 = position.parent;
  _splitNodeAtPosition(position);
  const index = position.index;
  parent2._insertChild(index, normalizedNodes);
  _mergeNodesAtIndex(parent2, index + normalizedNodes.length);
  _mergeNodesAtIndex(parent2, index);
  return new Range(position, position.getShiftedBy(offset));
}
function _remove(range) {
  if (!range.isFlat) {
    throw new CKEditorError("operation-utils-remove-range-not-flat", this);
  }
  const parent2 = range.start.parent;
  _splitNodeAtPosition(range.start);
  _splitNodeAtPosition(range.end);
  const removed = parent2._removeChildren(range.start.index, range.end.index - range.start.index);
  _mergeNodesAtIndex(parent2, range.start.index);
  return removed;
}
function _move(sourceRange, targetPosition) {
  if (!sourceRange.isFlat) {
    throw new CKEditorError("operation-utils-move-range-not-flat", this);
  }
  const nodes = _remove(sourceRange);
  targetPosition = targetPosition._getTransformedByDeletion(sourceRange.start, sourceRange.end.offset - sourceRange.start.offset);
  return _insert(targetPosition, nodes);
}
function _setAttribute(range, key, value) {
  _splitNodeAtPosition(range.start);
  _splitNodeAtPosition(range.end);
  for (const item of range.getItems({ shallow: true })) {
    const node = item.is("$textProxy") ? item.textNode : item;
    if (value !== null) {
      node._setAttribute(key, value);
    } else {
      node._removeAttribute(key);
    }
    _mergeNodesAtIndex(node.parent, node.index);
  }
  _mergeNodesAtIndex(range.end.parent, range.end.index);
}
function _normalizeNodes(nodes) {
  const normalized = [];
  function convert(nodes2) {
    if (typeof nodes2 == "string") {
      normalized.push(new Text$1(nodes2));
    } else if (nodes2 instanceof TextProxy) {
      normalized.push(new Text$1(nodes2.data, nodes2.getAttributes()));
    } else if (nodes2 instanceof Node$1) {
      normalized.push(nodes2);
    } else if (isIterable(nodes2)) {
      for (const node of nodes2) {
        convert(node);
      }
    }
  }
  convert(nodes);
  for (let i2 = 1; i2 < normalized.length; i2++) {
    const node = normalized[i2];
    const prev = normalized[i2 - 1];
    if (node instanceof Text$1 && prev instanceof Text$1 && _haveSameAttributes(node, prev)) {
      normalized.splice(i2 - 1, 2, new Text$1(prev.data + node.data, prev.getAttributes()));
      i2--;
    }
  }
  return normalized;
}
function _mergeNodesAtIndex(element, index) {
  const nodeBefore = element.getChild(index - 1);
  const nodeAfter = element.getChild(index);
  if (nodeBefore && nodeAfter && nodeBefore.is("$text") && nodeAfter.is("$text") && _haveSameAttributes(nodeBefore, nodeAfter)) {
    const mergedNode = new Text$1(nodeBefore.data + nodeAfter.data, nodeBefore.getAttributes());
    element._removeChildren(index - 1, 2);
    element._insertChild(index - 1, mergedNode);
  }
}
function _splitNodeAtPosition(position) {
  const textNode = position.textNode;
  const element = position.parent;
  if (textNode) {
    const offsetDiff = position.offset - textNode.startOffset;
    const index = textNode.index;
    element._removeChildren(index, 1);
    const firstPart = new Text$1(textNode.data.substr(0, offsetDiff), textNode.getAttributes());
    const secondPart = new Text$1(textNode.data.substr(offsetDiff), textNode.getAttributes());
    element._insertChild(index, [firstPart, secondPart]);
  }
}
function _haveSameAttributes(nodeA, nodeB) {
  const iteratorA = nodeA.getAttributes();
  const iteratorB = nodeB.getAttributes();
  for (const attr of iteratorA) {
    if (attr[1] !== nodeB.getAttribute(attr[0])) {
      return false;
    }
    iteratorB.next();
  }
  return iteratorB.next().done;
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class MoveOperation extends Operation {
  constructor(sourcePosition, howMany, targetPosition, baseVersion) {
    super(baseVersion);
    this.sourcePosition = sourcePosition.clone();
    this.sourcePosition.stickiness = "toNext";
    this.howMany = howMany;
    this.targetPosition = targetPosition.clone();
    this.targetPosition.stickiness = "toNone";
  }
  get type() {
    if (this.targetPosition.root.rootName == "$graveyard") {
      return "remove";
    } else if (this.sourcePosition.root.rootName == "$graveyard") {
      return "reinsert";
    }
    return "move";
  }
  clone() {
    return new MoveOperation(this.sourcePosition, this.howMany, this.targetPosition, this.baseVersion);
  }
  getMovedRangeStart() {
    return this.targetPosition._getTransformedByDeletion(this.sourcePosition, this.howMany);
  }
  getReversed() {
    const newTargetPosition = this.sourcePosition._getTransformedByInsertion(this.targetPosition, this.howMany);
    return new MoveOperation(this.getMovedRangeStart(), this.howMany, newTargetPosition, this.baseVersion + 1);
  }
  _validate() {
    const sourceElement = this.sourcePosition.parent;
    const targetElement = this.targetPosition.parent;
    const sourceOffset = this.sourcePosition.offset;
    const targetOffset = this.targetPosition.offset;
    if (sourceOffset + this.howMany > sourceElement.maxOffset) {
      throw new CKEditorError("move-operation-nodes-do-not-exist", this);
    } else if (sourceElement === targetElement && sourceOffset < targetOffset && targetOffset < sourceOffset + this.howMany) {
      throw new CKEditorError("move-operation-range-into-itself", this);
    } else if (this.sourcePosition.root == this.targetPosition.root) {
      if (compareArrays(this.sourcePosition.getParentPath(), this.targetPosition.getParentPath()) == "prefix") {
        const i2 = this.sourcePosition.path.length - 1;
        if (this.targetPosition.path[i2] >= sourceOffset && this.targetPosition.path[i2] < sourceOffset + this.howMany) {
          throw new CKEditorError("move-operation-node-into-itself", this);
        }
      }
    }
  }
  _execute() {
    _move(Range._createFromPositionAndShift(this.sourcePosition, this.howMany), this.targetPosition);
  }
  toJSON() {
    const json = super.toJSON();
    json.sourcePosition = this.sourcePosition.toJSON();
    json.targetPosition = this.targetPosition.toJSON();
    return json;
  }
  static get className() {
    return "MoveOperation";
  }
  static fromJSON(json, document2) {
    const sourcePosition = Position.fromJSON(json.sourcePosition, document2);
    const targetPosition = Position.fromJSON(json.targetPosition, document2);
    return new this(sourcePosition, json.howMany, targetPosition, json.baseVersion);
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class InsertOperation extends Operation {
  constructor(position, nodes, baseVersion) {
    super(baseVersion);
    this.position = position.clone();
    this.position.stickiness = "toNone";
    this.nodes = new NodeList(_normalizeNodes(nodes));
    this.shouldReceiveAttributes = false;
  }
  get type() {
    return "insert";
  }
  get howMany() {
    return this.nodes.maxOffset;
  }
  clone() {
    const nodes = new NodeList([...this.nodes].map((node) => node._clone(true)));
    const insert = new InsertOperation(this.position, nodes, this.baseVersion);
    insert.shouldReceiveAttributes = this.shouldReceiveAttributes;
    return insert;
  }
  getReversed() {
    const graveyard = this.position.root.document.graveyard;
    const gyPosition = new Position(graveyard, [0]);
    return new MoveOperation(this.position, this.nodes.maxOffset, gyPosition, this.baseVersion + 1);
  }
  _validate() {
    const targetElement = this.position.parent;
    if (!targetElement || targetElement.maxOffset < this.position.offset) {
      throw new CKEditorError("insert-operation-position-invalid", this);
    }
  }
  _execute() {
    const originalNodes = this.nodes;
    this.nodes = new NodeList([...originalNodes].map((node) => node._clone(true)));
    _insert(this.position, originalNodes);
  }
  toJSON() {
    const json = super.toJSON();
    json.position = this.position.toJSON();
    json.nodes = this.nodes.toJSON();
    return json;
  }
  static get className() {
    return "InsertOperation";
  }
  static fromJSON(json, document2) {
    const children = [];
    for (const child of json.nodes) {
      if (child.name) {
        children.push(Element.fromJSON(child));
      } else {
        children.push(Text$1.fromJSON(child));
      }
    }
    const insert = new InsertOperation(Position.fromJSON(json.position, document2), children, json.baseVersion);
    insert.shouldReceiveAttributes = json.shouldReceiveAttributes;
    return insert;
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class MarkerOperation extends Operation {
  constructor(name, oldRange, newRange, markers, affectsData, baseVersion) {
    super(baseVersion);
    this.name = name;
    this.oldRange = oldRange ? oldRange.clone() : null;
    this.newRange = newRange ? newRange.clone() : null;
    this.affectsData = affectsData;
    this._markers = markers;
  }
  get type() {
    return "marker";
  }
  clone() {
    return new MarkerOperation(this.name, this.oldRange, this.newRange, this._markers, this.affectsData, this.baseVersion);
  }
  getReversed() {
    return new MarkerOperation(this.name, this.newRange, this.oldRange, this._markers, this.affectsData, this.baseVersion + 1);
  }
  _execute() {
    if (this.newRange) {
      this._markers._set(this.name, this.newRange, true, this.affectsData);
    } else {
      this._markers._remove(this.name);
    }
  }
  toJSON() {
    const json = super.toJSON();
    if (this.oldRange) {
      json.oldRange = this.oldRange.toJSON();
    }
    if (this.newRange) {
      json.newRange = this.newRange.toJSON();
    }
    delete json._markers;
    return json;
  }
  static get className() {
    return "MarkerOperation";
  }
  static fromJSON(json, document2) {
    return new MarkerOperation(json.name, json.oldRange ? Range.fromJSON(json.oldRange, document2) : null, json.newRange ? Range.fromJSON(json.newRange, document2) : null, document2.model.markers, json.affectsData, json.baseVersion);
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class AttributeOperation extends Operation {
  constructor(range, key, oldValue, newValue, baseVersion) {
    super(baseVersion);
    this.range = range.clone();
    this.key = key;
    this.oldValue = oldValue === void 0 ? null : oldValue;
    this.newValue = newValue === void 0 ? null : newValue;
  }
  get type() {
    if (this.oldValue === null) {
      return "addAttribute";
    } else if (this.newValue === null) {
      return "removeAttribute";
    } else {
      return "changeAttribute";
    }
  }
  clone() {
    return new AttributeOperation(this.range, this.key, this.oldValue, this.newValue, this.baseVersion);
  }
  getReversed() {
    return new AttributeOperation(this.range, this.key, this.newValue, this.oldValue, this.baseVersion + 1);
  }
  toJSON() {
    const json = super.toJSON();
    json.range = this.range.toJSON();
    return json;
  }
  _validate() {
    if (!this.range.isFlat) {
      throw new CKEditorError("attribute-operation-range-not-flat", this);
    }
    for (const item of this.range.getItems({ shallow: true })) {
      if (this.oldValue !== null && !isEqual(item.getAttribute(this.key), this.oldValue)) {
        throw new CKEditorError("attribute-operation-wrong-old-value", this, { item, key: this.key, value: this.oldValue });
      }
      if (this.oldValue === null && this.newValue !== null && item.hasAttribute(this.key)) {
        throw new CKEditorError("attribute-operation-attribute-exists", this, { node: item, key: this.key });
      }
    }
  }
  _execute() {
    if (!isEqual(this.oldValue, this.newValue)) {
      _setAttribute(this.range, this.key, this.newValue);
    }
  }
  static get className() {
    return "AttributeOperation";
  }
  static fromJSON(json, document2) {
    return new AttributeOperation(Range.fromJSON(json.range, document2), json.key, json.oldValue, json.newValue, json.baseVersion);
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class NoOperation extends Operation {
  get type() {
    return "noop";
  }
  clone() {
    return new NoOperation(this.baseVersion);
  }
  getReversed() {
    return new NoOperation(this.baseVersion + 1);
  }
  _execute() {
  }
  static get className() {
    return "NoOperation";
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class RenameOperation extends Operation {
  constructor(position, oldName, newName, baseVersion) {
    super(baseVersion);
    this.position = position;
    this.position.stickiness = "toNext";
    this.oldName = oldName;
    this.newName = newName;
  }
  get type() {
    return "rename";
  }
  clone() {
    return new RenameOperation(this.position.clone(), this.oldName, this.newName, this.baseVersion);
  }
  getReversed() {
    return new RenameOperation(this.position.clone(), this.newName, this.oldName, this.baseVersion + 1);
  }
  _validate() {
    const element = this.position.nodeAfter;
    if (!(element instanceof Element)) {
      throw new CKEditorError("rename-operation-wrong-position", this);
    } else if (element.name !== this.oldName) {
      throw new CKEditorError("rename-operation-wrong-name", this);
    }
  }
  _execute() {
    const element = this.position.nodeAfter;
    element.name = this.newName;
  }
  toJSON() {
    const json = super.toJSON();
    json.position = this.position.toJSON();
    return json;
  }
  static get className() {
    return "RenameOperation";
  }
  static fromJSON(json, document2) {
    return new RenameOperation(Position.fromJSON(json.position, document2), json.oldName, json.newName, json.baseVersion);
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class RootAttributeOperation extends Operation {
  constructor(root2, key, oldValue, newValue, baseVersion) {
    super(baseVersion);
    this.root = root2;
    this.key = key;
    this.oldValue = oldValue;
    this.newValue = newValue;
  }
  get type() {
    if (this.oldValue === null) {
      return "addRootAttribute";
    } else if (this.newValue === null) {
      return "removeRootAttribute";
    } else {
      return "changeRootAttribute";
    }
  }
  clone() {
    return new RootAttributeOperation(this.root, this.key, this.oldValue, this.newValue, this.baseVersion);
  }
  getReversed() {
    return new RootAttributeOperation(this.root, this.key, this.newValue, this.oldValue, this.baseVersion + 1);
  }
  _validate() {
    if (this.root != this.root.root || this.root.is("documentFragment")) {
      throw new CKEditorError("rootattribute-operation-not-a-root", this, { root: this.root, key: this.key });
    }
    if (this.oldValue !== null && this.root.getAttribute(this.key) !== this.oldValue) {
      throw new CKEditorError("rootattribute-operation-wrong-old-value", this, { root: this.root, key: this.key });
    }
    if (this.oldValue === null && this.newValue !== null && this.root.hasAttribute(this.key)) {
      throw new CKEditorError("rootattribute-operation-attribute-exists", this, { root: this.root, key: this.key });
    }
  }
  _execute() {
    if (this.newValue !== null) {
      this.root._setAttribute(this.key, this.newValue);
    } else {
      this.root._removeAttribute(this.key);
    }
  }
  toJSON() {
    const json = super.toJSON();
    json.root = this.root.toJSON();
    return json;
  }
  static get className() {
    return "RootAttributeOperation";
  }
  static fromJSON(json, document2) {
    if (!document2.getRoot(json.root)) {
      throw new CKEditorError("rootattribute-operation-fromjson-no-root", this, { rootName: json.root });
    }
    return new RootAttributeOperation(document2.getRoot(json.root), json.key, json.oldValue, json.newValue, json.baseVersion);
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class MergeOperation extends Operation {
  constructor(sourcePosition, howMany, targetPosition, graveyardPosition, baseVersion) {
    super(baseVersion);
    this.sourcePosition = sourcePosition.clone();
    this.sourcePosition.stickiness = "toPrevious";
    this.howMany = howMany;
    this.targetPosition = targetPosition.clone();
    this.targetPosition.stickiness = "toNext";
    this.graveyardPosition = graveyardPosition.clone();
  }
  get type() {
    return "merge";
  }
  get deletionPosition() {
    return new Position(this.sourcePosition.root, this.sourcePosition.path.slice(0, -1));
  }
  get movedRange() {
    const end = this.sourcePosition.getShiftedBy(Number.POSITIVE_INFINITY);
    return new Range(this.sourcePosition, end);
  }
  clone() {
    return new MergeOperation(this.sourcePosition, this.howMany, this.targetPosition, this.graveyardPosition, this.baseVersion);
  }
  getReversed() {
    const targetPosition = this.targetPosition._getTransformedByMergeOperation(this);
    const path = this.sourcePosition.path.slice(0, -1);
    const insertionPosition = new Position(this.sourcePosition.root, path)._getTransformedByMergeOperation(this);
    return new SplitOperation(targetPosition, this.howMany, insertionPosition, this.graveyardPosition, this.baseVersion + 1);
  }
  _validate() {
    const sourceElement = this.sourcePosition.parent;
    const targetElement = this.targetPosition.parent;
    if (!sourceElement.parent) {
      throw new CKEditorError("merge-operation-source-position-invalid", this);
    } else if (!targetElement.parent) {
      throw new CKEditorError("merge-operation-target-position-invalid", this);
    } else if (this.howMany != sourceElement.maxOffset) {
      throw new CKEditorError("merge-operation-how-many-invalid", this);
    }
  }
  _execute() {
    const mergedElement = this.sourcePosition.parent;
    const sourceRange = Range._createIn(mergedElement);
    _move(sourceRange, this.targetPosition);
    _move(Range._createOn(mergedElement), this.graveyardPosition);
  }
  toJSON() {
    const json = super.toJSON();
    json.sourcePosition = json.sourcePosition.toJSON();
    json.targetPosition = json.targetPosition.toJSON();
    json.graveyardPosition = json.graveyardPosition.toJSON();
    return json;
  }
  static get className() {
    return "MergeOperation";
  }
  static fromJSON(json, document2) {
    const sourcePosition = Position.fromJSON(json.sourcePosition, document2);
    const targetPosition = Position.fromJSON(json.targetPosition, document2);
    const graveyardPosition = Position.fromJSON(json.graveyardPosition, document2);
    return new this(sourcePosition, json.howMany, targetPosition, graveyardPosition, json.baseVersion);
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class SplitOperation extends Operation {
  constructor(splitPosition, howMany, insertionPosition, graveyardPosition, baseVersion) {
    super(baseVersion);
    this.splitPosition = splitPosition.clone();
    this.splitPosition.stickiness = "toNext";
    this.howMany = howMany;
    this.insertionPosition = insertionPosition;
    this.graveyardPosition = graveyardPosition ? graveyardPosition.clone() : null;
    if (this.graveyardPosition) {
      this.graveyardPosition.stickiness = "toNext";
    }
  }
  get type() {
    return "split";
  }
  get moveTargetPosition() {
    const path = this.insertionPosition.path.slice();
    path.push(0);
    return new Position(this.insertionPosition.root, path);
  }
  get movedRange() {
    const end = this.splitPosition.getShiftedBy(Number.POSITIVE_INFINITY);
    return new Range(this.splitPosition, end);
  }
  clone() {
    return new SplitOperation(this.splitPosition, this.howMany, this.insertionPosition, this.graveyardPosition, this.baseVersion);
  }
  getReversed() {
    const graveyard = this.splitPosition.root.document.graveyard;
    const graveyardPosition = new Position(graveyard, [0]);
    return new MergeOperation(this.moveTargetPosition, this.howMany, this.splitPosition, graveyardPosition, this.baseVersion + 1);
  }
  _validate() {
    const element = this.splitPosition.parent;
    const offset = this.splitPosition.offset;
    if (!element || element.maxOffset < offset) {
      throw new CKEditorError("split-operation-position-invalid", this);
    } else if (!element.parent) {
      throw new CKEditorError("split-operation-split-in-root", this);
    } else if (this.howMany != element.maxOffset - this.splitPosition.offset) {
      throw new CKEditorError("split-operation-how-many-invalid", this);
    } else if (this.graveyardPosition && !this.graveyardPosition.nodeAfter) {
      throw new CKEditorError("split-operation-graveyard-position-invalid", this);
    }
  }
  _execute() {
    const splitElement = this.splitPosition.parent;
    if (this.graveyardPosition) {
      _move(Range._createFromPositionAndShift(this.graveyardPosition, 1), this.insertionPosition);
    } else {
      const newElement = splitElement._clone();
      _insert(this.insertionPosition, newElement);
    }
    const sourceRange = new Range(Position._createAt(splitElement, this.splitPosition.offset), Position._createAt(splitElement, splitElement.maxOffset));
    _move(sourceRange, this.moveTargetPosition);
  }
  toJSON() {
    const json = super.toJSON();
    json.splitPosition = this.splitPosition.toJSON();
    json.insertionPosition = this.insertionPosition.toJSON();
    if (this.graveyardPosition) {
      json.graveyardPosition = this.graveyardPosition.toJSON();
    }
    return json;
  }
  static get className() {
    return "SplitOperation";
  }
  static getInsertionPosition(splitPosition) {
    const path = splitPosition.path.slice(0, -1);
    path[path.length - 1]++;
    return new Position(splitPosition.root, path, "toPrevious");
  }
  static fromJSON(json, document2) {
    const splitPosition = Position.fromJSON(json.splitPosition, document2);
    const insertionPosition = Position.fromJSON(json.insertionPosition, document2);
    const graveyardPosition = json.graveyardPosition ? Position.fromJSON(json.graveyardPosition, document2) : null;
    return new this(splitPosition, json.howMany, insertionPosition, graveyardPosition, json.baseVersion);
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
const operations = {};
operations[AttributeOperation.className] = AttributeOperation;
operations[InsertOperation.className] = InsertOperation;
operations[MarkerOperation.className] = MarkerOperation;
operations[MoveOperation.className] = MoveOperation;
operations[NoOperation.className] = NoOperation;
operations[Operation.className] = Operation;
operations[RenameOperation.className] = RenameOperation;
operations[RootAttributeOperation.className] = RootAttributeOperation;
operations[SplitOperation.className] = SplitOperation;
operations[MergeOperation.className] = MergeOperation;
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
const transformations = /* @__PURE__ */ new Map();
function setTransformation(OperationA, OperationB, transformationFunction) {
  let aGroup = transformations.get(OperationA);
  if (!aGroup) {
    aGroup = /* @__PURE__ */ new Map();
    transformations.set(OperationA, aGroup);
  }
  aGroup.set(OperationB, transformationFunction);
}
setTransformation(AttributeOperation, AttributeOperation, (a2, b2, context) => {
  if (a2.key === b2.key && a2.range.start.hasSameParentAs(b2.range.start)) {
    const operations2 = a2.range.getDifference(b2.range).map((range) => {
      return new AttributeOperation(range, a2.key, a2.oldValue, a2.newValue, 0);
    });
    const common = a2.range.getIntersection(b2.range);
    if (common) {
      if (context.aIsStrong) {
        operations2.push(new AttributeOperation(common, b2.key, b2.newValue, a2.newValue, 0));
      }
    }
    if (operations2.length == 0) {
      return [new NoOperation(0)];
    }
    return operations2;
  } else {
    return [a2];
  }
});
setTransformation(AttributeOperation, InsertOperation, (a2, b2) => {
  if (a2.range.start.hasSameParentAs(b2.position) && a2.range.containsPosition(b2.position)) {
    const range = a2.range._getTransformedByInsertion(b2.position, b2.howMany, !b2.shouldReceiveAttributes);
    const result = range.map((r2) => {
      return new AttributeOperation(r2, a2.key, a2.oldValue, a2.newValue, a2.baseVersion);
    });
    if (b2.shouldReceiveAttributes) {
      const op = _getComplementaryAttributeOperations(b2, a2.key, a2.oldValue);
      if (op) {
        result.unshift(op);
      }
    }
    return result;
  }
  a2.range = a2.range._getTransformedByInsertion(b2.position, b2.howMany, false)[0];
  return [a2];
});
function _getComplementaryAttributeOperations(insertOperation, key, newValue) {
  const nodes = insertOperation.nodes;
  const insertValue = nodes.getNode(0).getAttribute(key);
  if (insertValue == newValue) {
    return null;
  }
  const range = new Range(insertOperation.position, insertOperation.position.getShiftedBy(insertOperation.howMany));
  return new AttributeOperation(range, key, insertValue, newValue, 0);
}
setTransformation(AttributeOperation, MergeOperation, (a2, b2) => {
  const ranges = [];
  if (a2.range.start.hasSameParentAs(b2.deletionPosition)) {
    if (a2.range.containsPosition(b2.deletionPosition) || a2.range.start.isEqual(b2.deletionPosition)) {
      ranges.push(Range._createFromPositionAndShift(b2.graveyardPosition, 1));
    }
  }
  const range = a2.range._getTransformedByMergeOperation(b2);
  if (!range.isCollapsed) {
    ranges.push(range);
  }
  return ranges.map((range2) => {
    return new AttributeOperation(range2, a2.key, a2.oldValue, a2.newValue, a2.baseVersion);
  });
});
setTransformation(AttributeOperation, MoveOperation, (a2, b2) => {
  const ranges = _breakRangeByMoveOperation(a2.range, b2);
  return ranges.map((range) => new AttributeOperation(range, a2.key, a2.oldValue, a2.newValue, a2.baseVersion));
});
function _breakRangeByMoveOperation(range, moveOp) {
  const moveRange = Range._createFromPositionAndShift(moveOp.sourcePosition, moveOp.howMany);
  let common = null;
  let difference = [];
  if (moveRange.containsRange(range, true)) {
    common = range;
  } else if (range.start.hasSameParentAs(moveRange.start)) {
    difference = range.getDifference(moveRange);
    common = range.getIntersection(moveRange);
  } else {
    difference = [range];
  }
  const result = [];
  for (let diff of difference) {
    diff = diff._getTransformedByDeletion(moveOp.sourcePosition, moveOp.howMany);
    const targetPosition = moveOp.getMovedRangeStart();
    const spread = diff.start.hasSameParentAs(targetPosition);
    const diffs = diff._getTransformedByInsertion(targetPosition, moveOp.howMany, spread);
    result.push(...diffs);
  }
  if (common) {
    result.push(common._getTransformedByMove(moveOp.sourcePosition, moveOp.targetPosition, moveOp.howMany, false)[0]);
  }
  return result;
}
setTransformation(AttributeOperation, SplitOperation, (a2, b2) => {
  if (a2.range.end.isEqual(b2.insertionPosition)) {
    if (!b2.graveyardPosition) {
      a2.range.end.offset++;
    }
    return [a2];
  }
  if (a2.range.start.hasSameParentAs(b2.splitPosition) && a2.range.containsPosition(b2.splitPosition)) {
    const secondPart = a2.clone();
    secondPart.range = new Range(b2.moveTargetPosition.clone(), a2.range.end._getCombined(b2.splitPosition, b2.moveTargetPosition));
    a2.range.end = b2.splitPosition.clone();
    a2.range.end.stickiness = "toPrevious";
    return [a2, secondPart];
  }
  a2.range = a2.range._getTransformedBySplitOperation(b2);
  return [a2];
});
setTransformation(InsertOperation, AttributeOperation, (a2, b2) => {
  const result = [a2];
  if (a2.shouldReceiveAttributes && a2.position.hasSameParentAs(b2.range.start) && b2.range.containsPosition(a2.position)) {
    const op = _getComplementaryAttributeOperations(a2, b2.key, b2.newValue);
    if (op) {
      result.push(op);
    }
  }
  return result;
});
setTransformation(InsertOperation, InsertOperation, (a2, b2, context) => {
  if (a2.position.isEqual(b2.position) && context.aIsStrong) {
    return [a2];
  }
  a2.position = a2.position._getTransformedByInsertOperation(b2);
  return [a2];
});
setTransformation(InsertOperation, MoveOperation, (a2, b2) => {
  a2.position = a2.position._getTransformedByMoveOperation(b2);
  return [a2];
});
setTransformation(InsertOperation, SplitOperation, (a2, b2) => {
  a2.position = a2.position._getTransformedBySplitOperation(b2);
  return [a2];
});
setTransformation(InsertOperation, MergeOperation, (a2, b2) => {
  a2.position = a2.position._getTransformedByMergeOperation(b2);
  return [a2];
});
setTransformation(MarkerOperation, InsertOperation, (a2, b2) => {
  if (a2.oldRange) {
    a2.oldRange = a2.oldRange._getTransformedByInsertOperation(b2)[0];
  }
  if (a2.newRange) {
    a2.newRange = a2.newRange._getTransformedByInsertOperation(b2)[0];
  }
  return [a2];
});
setTransformation(MarkerOperation, MarkerOperation, (a2, b2, context) => {
  if (a2.name == b2.name) {
    if (context.aIsStrong) {
      a2.oldRange = b2.newRange ? b2.newRange.clone() : null;
    } else {
      return [new NoOperation(0)];
    }
  }
  return [a2];
});
setTransformation(MarkerOperation, MergeOperation, (a2, b2) => {
  if (a2.oldRange) {
    a2.oldRange = a2.oldRange._getTransformedByMergeOperation(b2);
  }
  if (a2.newRange) {
    a2.newRange = a2.newRange._getTransformedByMergeOperation(b2);
  }
  return [a2];
});
setTransformation(MarkerOperation, MoveOperation, (a2, b2, context) => {
  if (a2.oldRange) {
    a2.oldRange = Range._createFromRanges(a2.oldRange._getTransformedByMoveOperation(b2));
  }
  if (a2.newRange) {
    if (context.abRelation) {
      const aNewRange = Range._createFromRanges(a2.newRange._getTransformedByMoveOperation(b2));
      if (context.abRelation.side == "left" && b2.targetPosition.isEqual(a2.newRange.start)) {
        a2.newRange.end = aNewRange.end;
        a2.newRange.start.path = context.abRelation.path;
        return [a2];
      } else if (context.abRelation.side == "right" && b2.targetPosition.isEqual(a2.newRange.end)) {
        a2.newRange.start = aNewRange.start;
        a2.newRange.end.path = context.abRelation.path;
        return [a2];
      }
    }
    a2.newRange = Range._createFromRanges(a2.newRange._getTransformedByMoveOperation(b2));
  }
  return [a2];
});
setTransformation(MarkerOperation, SplitOperation, (a2, b2, context) => {
  if (a2.oldRange) {
    a2.oldRange = a2.oldRange._getTransformedBySplitOperation(b2);
  }
  if (a2.newRange) {
    if (context.abRelation) {
      const aNewRange = a2.newRange._getTransformedBySplitOperation(b2);
      if (a2.newRange.start.isEqual(b2.splitPosition) && context.abRelation.wasStartBeforeMergedElement) {
        a2.newRange.start = Position._createAt(b2.insertionPosition);
      } else if (a2.newRange.start.isEqual(b2.splitPosition) && !context.abRelation.wasInLeftElement) {
        a2.newRange.start = Position._createAt(b2.moveTargetPosition);
      }
      if (a2.newRange.end.isEqual(b2.splitPosition) && context.abRelation.wasInRightElement) {
        a2.newRange.end = Position._createAt(b2.moveTargetPosition);
      } else if (a2.newRange.end.isEqual(b2.splitPosition) && context.abRelation.wasEndBeforeMergedElement) {
        a2.newRange.end = Position._createAt(b2.insertionPosition);
      } else {
        a2.newRange.end = aNewRange.end;
      }
      return [a2];
    }
    a2.newRange = a2.newRange._getTransformedBySplitOperation(b2);
  }
  return [a2];
});
setTransformation(MergeOperation, InsertOperation, (a2, b2) => {
  if (a2.sourcePosition.hasSameParentAs(b2.position)) {
    a2.howMany += b2.howMany;
  }
  a2.sourcePosition = a2.sourcePosition._getTransformedByInsertOperation(b2);
  a2.targetPosition = a2.targetPosition._getTransformedByInsertOperation(b2);
  return [a2];
});
setTransformation(MergeOperation, MergeOperation, (a2, b2, context) => {
  if (a2.sourcePosition.isEqual(b2.sourcePosition) && a2.targetPosition.isEqual(b2.targetPosition)) {
    if (!context.bWasUndone) {
      return [new NoOperation(0)];
    } else {
      const path = b2.graveyardPosition.path.slice();
      path.push(0);
      a2.sourcePosition = new Position(b2.graveyardPosition.root, path);
      a2.howMany = 0;
      return [a2];
    }
  }
  if (a2.sourcePosition.isEqual(b2.sourcePosition) && !a2.targetPosition.isEqual(b2.targetPosition) && !context.bWasUndone && context.abRelation != "splitAtSource") {
    const aToGraveyard = a2.targetPosition.root.rootName == "$graveyard";
    const bToGraveyard = b2.targetPosition.root.rootName == "$graveyard";
    const aIsWeak = aToGraveyard && !bToGraveyard;
    const bIsWeak = bToGraveyard && !aToGraveyard;
    const forceMove = bIsWeak || !aIsWeak && context.aIsStrong;
    if (forceMove) {
      const sourcePosition = b2.targetPosition._getTransformedByMergeOperation(b2);
      const targetPosition = a2.targetPosition._getTransformedByMergeOperation(b2);
      return [new MoveOperation(sourcePosition, a2.howMany, targetPosition, 0)];
    } else {
      return [new NoOperation(0)];
    }
  }
  if (a2.sourcePosition.hasSameParentAs(b2.targetPosition)) {
    a2.howMany += b2.howMany;
  }
  a2.sourcePosition = a2.sourcePosition._getTransformedByMergeOperation(b2);
  a2.targetPosition = a2.targetPosition._getTransformedByMergeOperation(b2);
  if (!a2.graveyardPosition.isEqual(b2.graveyardPosition) || !context.aIsStrong) {
    a2.graveyardPosition = a2.graveyardPosition._getTransformedByMergeOperation(b2);
  }
  return [a2];
});
setTransformation(MergeOperation, MoveOperation, (a2, b2, context) => {
  const removedRange = Range._createFromPositionAndShift(b2.sourcePosition, b2.howMany);
  if (b2.type == "remove" && !context.bWasUndone && !context.forceWeakRemove) {
    if (a2.deletionPosition.hasSameParentAs(b2.sourcePosition) && removedRange.containsPosition(a2.sourcePosition)) {
      return [new NoOperation(0)];
    }
  }
  if (a2.sourcePosition.hasSameParentAs(b2.targetPosition)) {
    a2.howMany += b2.howMany;
  }
  if (a2.sourcePosition.hasSameParentAs(b2.sourcePosition)) {
    a2.howMany -= b2.howMany;
  }
  a2.sourcePosition = a2.sourcePosition._getTransformedByMoveOperation(b2);
  a2.targetPosition = a2.targetPosition._getTransformedByMoveOperation(b2);
  if (!a2.graveyardPosition.isEqual(b2.targetPosition)) {
    a2.graveyardPosition = a2.graveyardPosition._getTransformedByMoveOperation(b2);
  }
  return [a2];
});
setTransformation(MergeOperation, SplitOperation, (a2, b2, context) => {
  if (b2.graveyardPosition) {
    a2.graveyardPosition = a2.graveyardPosition._getTransformedByDeletion(b2.graveyardPosition, 1);
    if (a2.deletionPosition.isEqual(b2.graveyardPosition)) {
      a2.howMany = b2.howMany;
    }
  }
  if (a2.targetPosition.isEqual(b2.splitPosition)) {
    const mergeInside = b2.howMany != 0;
    const mergeSplittingElement = b2.graveyardPosition && a2.deletionPosition.isEqual(b2.graveyardPosition);
    if (mergeInside || mergeSplittingElement || context.abRelation == "mergeTargetNotMoved") {
      a2.sourcePosition = a2.sourcePosition._getTransformedBySplitOperation(b2);
      return [a2];
    }
  }
  if (a2.sourcePosition.isEqual(b2.splitPosition)) {
    if (context.abRelation == "mergeSourceNotMoved") {
      a2.howMany = 0;
      a2.targetPosition = a2.targetPosition._getTransformedBySplitOperation(b2);
      return [a2];
    }
    if (context.abRelation == "mergeSameElement" || a2.sourcePosition.offset > 0) {
      a2.sourcePosition = b2.moveTargetPosition.clone();
      a2.targetPosition = a2.targetPosition._getTransformedBySplitOperation(b2);
      return [a2];
    }
  }
  if (a2.sourcePosition.hasSameParentAs(b2.splitPosition)) {
    a2.howMany = b2.splitPosition.offset;
  }
  a2.sourcePosition = a2.sourcePosition._getTransformedBySplitOperation(b2);
  a2.targetPosition = a2.targetPosition._getTransformedBySplitOperation(b2);
  return [a2];
});
setTransformation(MoveOperation, InsertOperation, (a2, b2) => {
  const moveRange = Range._createFromPositionAndShift(a2.sourcePosition, a2.howMany);
  const transformed = moveRange._getTransformedByInsertOperation(b2, false)[0];
  a2.sourcePosition = transformed.start;
  a2.howMany = transformed.end.offset - transformed.start.offset;
  if (!a2.targetPosition.isEqual(b2.position)) {
    a2.targetPosition = a2.targetPosition._getTransformedByInsertOperation(b2);
  }
  return [a2];
});
setTransformation(MoveOperation, MoveOperation, (a2, b2, context) => {
  const rangeA = Range._createFromPositionAndShift(a2.sourcePosition, a2.howMany);
  const rangeB = Range._createFromPositionAndShift(b2.sourcePosition, b2.howMany);
  let aIsStrong = context.aIsStrong;
  let insertBefore = !context.aIsStrong;
  if (context.abRelation == "insertBefore" || context.baRelation == "insertAfter") {
    insertBefore = true;
  } else if (context.abRelation == "insertAfter" || context.baRelation == "insertBefore") {
    insertBefore = false;
  }
  let newTargetPosition;
  if (a2.targetPosition.isEqual(b2.targetPosition) && insertBefore) {
    newTargetPosition = a2.targetPosition._getTransformedByDeletion(b2.sourcePosition, b2.howMany);
  } else {
    newTargetPosition = a2.targetPosition._getTransformedByMove(b2.sourcePosition, b2.targetPosition, b2.howMany);
  }
  if (_moveTargetIntoMovedRange(a2, b2) && _moveTargetIntoMovedRange(b2, a2)) {
    return [b2.getReversed()];
  }
  const bTargetsToA = rangeA.containsPosition(b2.targetPosition);
  if (bTargetsToA && rangeA.containsRange(rangeB, true)) {
    rangeA.start = rangeA.start._getTransformedByMove(b2.sourcePosition, b2.targetPosition, b2.howMany);
    rangeA.end = rangeA.end._getTransformedByMove(b2.sourcePosition, b2.targetPosition, b2.howMany);
    return _makeMoveOperationsFromRanges([rangeA], newTargetPosition);
  }
  const aTargetsToB = rangeB.containsPosition(a2.targetPosition);
  if (aTargetsToB && rangeB.containsRange(rangeA, true)) {
    rangeA.start = rangeA.start._getCombined(b2.sourcePosition, b2.getMovedRangeStart());
    rangeA.end = rangeA.end._getCombined(b2.sourcePosition, b2.getMovedRangeStart());
    return _makeMoveOperationsFromRanges([rangeA], newTargetPosition);
  }
  const aCompB = compareArrays(a2.sourcePosition.getParentPath(), b2.sourcePosition.getParentPath());
  if (aCompB == "prefix" || aCompB == "extension") {
    rangeA.start = rangeA.start._getTransformedByMove(b2.sourcePosition, b2.targetPosition, b2.howMany);
    rangeA.end = rangeA.end._getTransformedByMove(b2.sourcePosition, b2.targetPosition, b2.howMany);
    return _makeMoveOperationsFromRanges([rangeA], newTargetPosition);
  }
  if (a2.type == "remove" && b2.type != "remove" && !context.aWasUndone && !context.forceWeakRemove) {
    aIsStrong = true;
  } else if (a2.type != "remove" && b2.type == "remove" && !context.bWasUndone && !context.forceWeakRemove) {
    aIsStrong = false;
  }
  const ranges = [];
  const difference = rangeA.getDifference(rangeB);
  for (const range of difference) {
    range.start = range.start._getTransformedByDeletion(b2.sourcePosition, b2.howMany);
    range.end = range.end._getTransformedByDeletion(b2.sourcePosition, b2.howMany);
    const shouldSpread = compareArrays(range.start.getParentPath(), b2.getMovedRangeStart().getParentPath()) == "same";
    const newRanges = range._getTransformedByInsertion(b2.getMovedRangeStart(), b2.howMany, shouldSpread);
    ranges.push(...newRanges);
  }
  const common = rangeA.getIntersection(rangeB);
  if (common !== null && aIsStrong) {
    common.start = common.start._getCombined(b2.sourcePosition, b2.getMovedRangeStart());
    common.end = common.end._getCombined(b2.sourcePosition, b2.getMovedRangeStart());
    if (ranges.length === 0) {
      ranges.push(common);
    } else if (ranges.length == 1) {
      if (rangeB.start.isBefore(rangeA.start) || rangeB.start.isEqual(rangeA.start)) {
        ranges.unshift(common);
      } else {
        ranges.push(common);
      }
    } else {
      ranges.splice(1, 0, common);
    }
  }
  if (ranges.length === 0) {
    return [new NoOperation(a2.baseVersion)];
  }
  return _makeMoveOperationsFromRanges(ranges, newTargetPosition);
});
setTransformation(MoveOperation, SplitOperation, (a2, b2, context) => {
  let newTargetPosition = a2.targetPosition.clone();
  if (!a2.targetPosition.isEqual(b2.insertionPosition) || !b2.graveyardPosition || context.abRelation == "moveTargetAfter") {
    newTargetPosition = a2.targetPosition._getTransformedBySplitOperation(b2);
  }
  const moveRange = Range._createFromPositionAndShift(a2.sourcePosition, a2.howMany);
  if (moveRange.end.isEqual(b2.insertionPosition)) {
    if (!b2.graveyardPosition) {
      a2.howMany++;
    }
    a2.targetPosition = newTargetPosition;
    return [a2];
  }
  if (moveRange.start.hasSameParentAs(b2.splitPosition) && moveRange.containsPosition(b2.splitPosition)) {
    let rightRange = new Range(b2.splitPosition, moveRange.end);
    rightRange = rightRange._getTransformedBySplitOperation(b2);
    const ranges2 = [
      new Range(moveRange.start, b2.splitPosition),
      rightRange
    ];
    return _makeMoveOperationsFromRanges(ranges2, newTargetPosition);
  }
  if (a2.targetPosition.isEqual(b2.splitPosition) && context.abRelation == "insertAtSource") {
    newTargetPosition = b2.moveTargetPosition;
  }
  if (a2.targetPosition.isEqual(b2.insertionPosition) && context.abRelation == "insertBetween") {
    newTargetPosition = a2.targetPosition;
  }
  const transformed = moveRange._getTransformedBySplitOperation(b2);
  const ranges = [transformed];
  if (b2.graveyardPosition) {
    const movesGraveyardElement = moveRange.start.isEqual(b2.graveyardPosition) || moveRange.containsPosition(b2.graveyardPosition);
    if (a2.howMany > 1 && movesGraveyardElement && !context.aWasUndone) {
      ranges.push(Range._createFromPositionAndShift(b2.insertionPosition, 1));
    }
  }
  return _makeMoveOperationsFromRanges(ranges, newTargetPosition);
});
setTransformation(MoveOperation, MergeOperation, (a2, b2, context) => {
  const movedRange = Range._createFromPositionAndShift(a2.sourcePosition, a2.howMany);
  if (b2.deletionPosition.hasSameParentAs(a2.sourcePosition) && movedRange.containsPosition(b2.sourcePosition)) {
    if (a2.type == "remove" && !context.forceWeakRemove) {
      if (!context.aWasUndone) {
        const results = [];
        let gyMoveSource = b2.graveyardPosition.clone();
        let splitNodesMoveSource = b2.targetPosition._getTransformedByMergeOperation(b2);
        if (a2.howMany > 1) {
          results.push(new MoveOperation(a2.sourcePosition, a2.howMany - 1, a2.targetPosition, 0));
          gyMoveSource = gyMoveSource._getTransformedByMove(a2.sourcePosition, a2.targetPosition, a2.howMany - 1);
          splitNodesMoveSource = splitNodesMoveSource._getTransformedByMove(a2.sourcePosition, a2.targetPosition, a2.howMany - 1);
        }
        const gyMoveTarget = b2.deletionPosition._getCombined(a2.sourcePosition, a2.targetPosition);
        const gyMove = new MoveOperation(gyMoveSource, 1, gyMoveTarget, 0);
        const splitNodesMoveTargetPath = gyMove.getMovedRangeStart().path.slice();
        splitNodesMoveTargetPath.push(0);
        const splitNodesMoveTarget = new Position(gyMove.targetPosition.root, splitNodesMoveTargetPath);
        splitNodesMoveSource = splitNodesMoveSource._getTransformedByMove(gyMoveSource, gyMoveTarget, 1);
        const splitNodesMove = new MoveOperation(splitNodesMoveSource, b2.howMany, splitNodesMoveTarget, 0);
        results.push(gyMove);
        results.push(splitNodesMove);
        return results;
      }
    } else {
      if (a2.howMany == 1) {
        if (!context.bWasUndone) {
          return [new NoOperation(0)];
        } else {
          a2.sourcePosition = b2.graveyardPosition.clone();
          a2.targetPosition = a2.targetPosition._getTransformedByMergeOperation(b2);
          return [a2];
        }
      }
    }
  }
  const moveRange = Range._createFromPositionAndShift(a2.sourcePosition, a2.howMany);
  const transformed = moveRange._getTransformedByMergeOperation(b2);
  a2.sourcePosition = transformed.start;
  a2.howMany = transformed.end.offset - transformed.start.offset;
  a2.targetPosition = a2.targetPosition._getTransformedByMergeOperation(b2);
  return [a2];
});
setTransformation(RenameOperation, InsertOperation, (a2, b2) => {
  a2.position = a2.position._getTransformedByInsertOperation(b2);
  return [a2];
});
setTransformation(RenameOperation, MergeOperation, (a2, b2) => {
  if (a2.position.isEqual(b2.deletionPosition)) {
    a2.position = b2.graveyardPosition.clone();
    a2.position.stickiness = "toNext";
    return [a2];
  }
  a2.position = a2.position._getTransformedByMergeOperation(b2);
  return [a2];
});
setTransformation(RenameOperation, MoveOperation, (a2, b2) => {
  a2.position = a2.position._getTransformedByMoveOperation(b2);
  return [a2];
});
setTransformation(RenameOperation, RenameOperation, (a2, b2, context) => {
  if (a2.position.isEqual(b2.position)) {
    if (context.aIsStrong) {
      a2.oldName = b2.newName;
    } else {
      return [new NoOperation(0)];
    }
  }
  return [a2];
});
setTransformation(RenameOperation, SplitOperation, (a2, b2) => {
  const renamePath = a2.position.path;
  const splitPath = b2.splitPosition.getParentPath();
  if (compareArrays(renamePath, splitPath) == "same" && !b2.graveyardPosition) {
    const extraRename = new RenameOperation(a2.position.getShiftedBy(1), a2.oldName, a2.newName, 0);
    return [a2, extraRename];
  }
  a2.position = a2.position._getTransformedBySplitOperation(b2);
  return [a2];
});
setTransformation(RootAttributeOperation, RootAttributeOperation, (a2, b2, context) => {
  if (a2.root === b2.root && a2.key === b2.key) {
    if (!context.aIsStrong || a2.newValue === b2.newValue) {
      return [new NoOperation(0)];
    } else {
      a2.oldValue = b2.newValue;
    }
  }
  return [a2];
});
setTransformation(SplitOperation, InsertOperation, (a2, b2) => {
  if (a2.splitPosition.hasSameParentAs(b2.position) && a2.splitPosition.offset < b2.position.offset) {
    a2.howMany += b2.howMany;
  }
  a2.splitPosition = a2.splitPosition._getTransformedByInsertOperation(b2);
  a2.insertionPosition = a2.insertionPosition._getTransformedByInsertOperation(b2);
  return [a2];
});
setTransformation(SplitOperation, MergeOperation, (a2, b2, context) => {
  if (!a2.graveyardPosition && !context.bWasUndone && a2.splitPosition.hasSameParentAs(b2.sourcePosition)) {
    const splitPath = b2.graveyardPosition.path.slice();
    splitPath.push(0);
    const splitPosition = new Position(b2.graveyardPosition.root, splitPath);
    const insertionPosition = SplitOperation.getInsertionPosition(new Position(b2.graveyardPosition.root, splitPath));
    const additionalSplit = new SplitOperation(splitPosition, 0, insertionPosition, null, 0);
    a2.splitPosition = a2.splitPosition._getTransformedByMergeOperation(b2);
    a2.insertionPosition = SplitOperation.getInsertionPosition(a2.splitPosition);
    a2.graveyardPosition = additionalSplit.insertionPosition.clone();
    a2.graveyardPosition.stickiness = "toNext";
    return [additionalSplit, a2];
  }
  if (a2.splitPosition.hasSameParentAs(b2.deletionPosition) && !a2.splitPosition.isAfter(b2.deletionPosition)) {
    a2.howMany--;
  }
  if (a2.splitPosition.hasSameParentAs(b2.targetPosition)) {
    a2.howMany += b2.howMany;
  }
  a2.splitPosition = a2.splitPosition._getTransformedByMergeOperation(b2);
  a2.insertionPosition = SplitOperation.getInsertionPosition(a2.splitPosition);
  if (a2.graveyardPosition) {
    a2.graveyardPosition = a2.graveyardPosition._getTransformedByMergeOperation(b2);
  }
  return [a2];
});
setTransformation(SplitOperation, MoveOperation, (a2, b2, context) => {
  const rangeToMove = Range._createFromPositionAndShift(b2.sourcePosition, b2.howMany);
  if (a2.graveyardPosition) {
    const gyElementMoved = rangeToMove.start.isEqual(a2.graveyardPosition) || rangeToMove.containsPosition(a2.graveyardPosition);
    if (!context.bWasUndone && gyElementMoved) {
      const sourcePosition = a2.splitPosition._getTransformedByMoveOperation(b2);
      const newParentPosition = a2.graveyardPosition._getTransformedByMoveOperation(b2);
      const newTargetPath = newParentPosition.path.slice();
      newTargetPath.push(0);
      const newTargetPosition = new Position(newParentPosition.root, newTargetPath);
      const moveOp = new MoveOperation(sourcePosition, a2.howMany, newTargetPosition, 0);
      return [moveOp];
    }
    a2.graveyardPosition = a2.graveyardPosition._getTransformedByMoveOperation(b2);
  }
  const splitAtTarget = a2.splitPosition.isEqual(b2.targetPosition);
  if (splitAtTarget && (context.baRelation == "insertAtSource" || context.abRelation == "splitBefore")) {
    a2.howMany += b2.howMany;
    a2.splitPosition = a2.splitPosition._getTransformedByDeletion(b2.sourcePosition, b2.howMany);
    a2.insertionPosition = SplitOperation.getInsertionPosition(a2.splitPosition);
    return [a2];
  }
  if (splitAtTarget && context.abRelation && context.abRelation.howMany) {
    const { howMany, offset } = context.abRelation;
    a2.howMany += howMany;
    a2.splitPosition = a2.splitPosition.getShiftedBy(offset);
    return [a2];
  }
  if (a2.splitPosition.hasSameParentAs(b2.sourcePosition) && rangeToMove.containsPosition(a2.splitPosition)) {
    const howManyRemoved = b2.howMany - (a2.splitPosition.offset - b2.sourcePosition.offset);
    a2.howMany -= howManyRemoved;
    if (a2.splitPosition.hasSameParentAs(b2.targetPosition) && a2.splitPosition.offset < b2.targetPosition.offset) {
      a2.howMany += b2.howMany;
    }
    a2.splitPosition = b2.sourcePosition.clone();
    a2.insertionPosition = SplitOperation.getInsertionPosition(a2.splitPosition);
    return [a2];
  }
  if (!b2.sourcePosition.isEqual(b2.targetPosition)) {
    if (a2.splitPosition.hasSameParentAs(b2.sourcePosition) && a2.splitPosition.offset <= b2.sourcePosition.offset) {
      a2.howMany -= b2.howMany;
    }
    if (a2.splitPosition.hasSameParentAs(b2.targetPosition) && a2.splitPosition.offset < b2.targetPosition.offset) {
      a2.howMany += b2.howMany;
    }
  }
  a2.splitPosition.stickiness = "toNone";
  a2.splitPosition = a2.splitPosition._getTransformedByMoveOperation(b2);
  a2.splitPosition.stickiness = "toNext";
  if (a2.graveyardPosition) {
    a2.insertionPosition = a2.insertionPosition._getTransformedByMoveOperation(b2);
  } else {
    a2.insertionPosition = SplitOperation.getInsertionPosition(a2.splitPosition);
  }
  return [a2];
});
setTransformation(SplitOperation, SplitOperation, (a2, b2, context) => {
  if (a2.splitPosition.isEqual(b2.splitPosition)) {
    if (!a2.graveyardPosition && !b2.graveyardPosition) {
      return [new NoOperation(0)];
    }
    if (a2.graveyardPosition && b2.graveyardPosition && a2.graveyardPosition.isEqual(b2.graveyardPosition)) {
      return [new NoOperation(0)];
    }
    if (context.abRelation == "splitBefore") {
      a2.howMany = 0;
      a2.graveyardPosition = a2.graveyardPosition._getTransformedBySplitOperation(b2);
      return [a2];
    }
  }
  if (a2.graveyardPosition && b2.graveyardPosition && a2.graveyardPosition.isEqual(b2.graveyardPosition)) {
    const aInGraveyard = a2.splitPosition.root.rootName == "$graveyard";
    const bInGraveyard = b2.splitPosition.root.rootName == "$graveyard";
    const aIsWeak = aInGraveyard && !bInGraveyard;
    const bIsWeak = bInGraveyard && !aInGraveyard;
    const forceMove = bIsWeak || !aIsWeak && context.aIsStrong;
    if (forceMove) {
      const result = [];
      if (b2.howMany) {
        result.push(new MoveOperation(b2.moveTargetPosition, b2.howMany, b2.splitPosition, 0));
      }
      if (a2.howMany) {
        result.push(new MoveOperation(a2.splitPosition, a2.howMany, a2.moveTargetPosition, 0));
      }
      return result;
    } else {
      return [new NoOperation(0)];
    }
  }
  if (a2.graveyardPosition) {
    a2.graveyardPosition = a2.graveyardPosition._getTransformedBySplitOperation(b2);
  }
  if (a2.splitPosition.isEqual(b2.insertionPosition) && context.abRelation == "splitBefore") {
    a2.howMany++;
    return [a2];
  }
  if (b2.splitPosition.isEqual(a2.insertionPosition) && context.baRelation == "splitBefore") {
    const newPositionPath = b2.insertionPosition.path.slice();
    newPositionPath.push(0);
    const newPosition = new Position(b2.insertionPosition.root, newPositionPath);
    const moveOp = new MoveOperation(a2.insertionPosition, 1, newPosition, 0);
    return [a2, moveOp];
  }
  if (a2.splitPosition.hasSameParentAs(b2.splitPosition) && a2.splitPosition.offset < b2.splitPosition.offset) {
    a2.howMany -= b2.howMany;
  }
  a2.splitPosition = a2.splitPosition._getTransformedBySplitOperation(b2);
  a2.insertionPosition = SplitOperation.getInsertionPosition(a2.splitPosition);
  return [a2];
});
function _moveTargetIntoMovedRange(a2, b2) {
  return a2.targetPosition._getTransformedByDeletion(b2.sourcePosition, b2.howMany) === null;
}
function _makeMoveOperationsFromRanges(ranges, targetPosition) {
  const operations2 = [];
  for (let i2 = 0; i2 < ranges.length; i2++) {
    const range = ranges[i2];
    const op = new MoveOperation(range.start, range.end.offset - range.start.offset, targetPosition, 0);
    operations2.push(op);
    for (let j2 = i2 + 1; j2 < ranges.length; j2++) {
      ranges[j2] = ranges[j2]._getTransformedByMove(op.sourcePosition, op.targetPosition, op.howMany)[0];
    }
    targetPosition = targetPosition._getTransformedByMove(op.sourcePosition, op.targetPosition, op.howMany);
  }
  return operations2;
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class LivePosition extends EmitterMixin(Position) {
  constructor(root2, path, stickiness = "toNone") {
    super(root2, path, stickiness);
    if (!this.root.is("rootElement")) {
      throw new CKEditorError("model-liveposition-root-not-rootelement", root2);
    }
    bindWithDocument.call(this);
  }
  detach() {
    this.stopListening();
  }
  toPosition() {
    return new Position(this.root, this.path.slice(), this.stickiness);
  }
  static fromPosition(position, stickiness) {
    return new this(position.root, position.path.slice(), stickiness ? stickiness : position.stickiness);
  }
}
LivePosition.prototype.is = function(type) {
  return type === "livePosition" || type === "model:livePosition" || type == "position" || type === "model:position";
};
function bindWithDocument() {
  this.listenTo(this.root.document.model, "applyOperation", (event, args) => {
    const operation = args[0];
    if (!operation.isDocumentOperation) {
      return;
    }
    transform.call(this, operation);
  }, { priority: "low" });
}
function transform(operation) {
  const result = this.getTransformedByOperation(operation);
  if (!this.isEqual(result)) {
    const oldPosition = this.toPosition();
    this.path = result.path;
    this.root = result.root;
    this.fire("change", oldPosition);
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class Differ {
  constructor(markerCollection) {
    this._changesInElement = /* @__PURE__ */ new Map();
    this._elementSnapshots = /* @__PURE__ */ new Map();
    this._changedMarkers = /* @__PURE__ */ new Map();
    this._changeCount = 0;
    this._cachedChanges = null;
    this._cachedChangesWithGraveyard = null;
    this._refreshedItems = /* @__PURE__ */ new Set();
    this._markerCollection = markerCollection;
  }
  get isEmpty() {
    return this._changesInElement.size == 0 && this._changedMarkers.size == 0;
  }
  bufferOperation(operationToBuffer) {
    const operation = operationToBuffer;
    switch (operation.type) {
      case "insert": {
        if (this._isInInsertedElement(operation.position.parent)) {
          return;
        }
        this._markInsert(operation.position.parent, operation.position.offset, operation.nodes.maxOffset);
        break;
      }
      case "addAttribute":
      case "removeAttribute":
      case "changeAttribute": {
        for (const item of operation.range.getItems({ shallow: true })) {
          if (this._isInInsertedElement(item.parent)) {
            continue;
          }
          this._markAttribute(item);
        }
        break;
      }
      case "remove":
      case "move":
      case "reinsert": {
        if (operation.sourcePosition.isEqual(operation.targetPosition) || operation.sourcePosition.getShiftedBy(operation.howMany).isEqual(operation.targetPosition)) {
          return;
        }
        const sourceParentInserted = this._isInInsertedElement(operation.sourcePosition.parent);
        const targetParentInserted = this._isInInsertedElement(operation.targetPosition.parent);
        if (!sourceParentInserted) {
          this._markRemove(operation.sourcePosition.parent, operation.sourcePosition.offset, operation.howMany);
        }
        if (!targetParentInserted) {
          this._markInsert(operation.targetPosition.parent, operation.getMovedRangeStart().offset, operation.howMany);
        }
        break;
      }
      case "rename": {
        if (this._isInInsertedElement(operation.position.parent)) {
          return;
        }
        this._markRemove(operation.position.parent, operation.position.offset, 1);
        this._markInsert(operation.position.parent, operation.position.offset, 1);
        const range = Range._createFromPositionAndShift(operation.position, 1);
        for (const marker of this._markerCollection.getMarkersIntersectingRange(range)) {
          const markerData = marker.getData();
          this.bufferMarkerChange(marker.name, markerData, markerData);
        }
        break;
      }
      case "split": {
        const splitElement = operation.splitPosition.parent;
        if (!this._isInInsertedElement(splitElement)) {
          this._markRemove(splitElement, operation.splitPosition.offset, operation.howMany);
        }
        if (!this._isInInsertedElement(operation.insertionPosition.parent)) {
          this._markInsert(operation.insertionPosition.parent, operation.insertionPosition.offset, 1);
        }
        if (operation.graveyardPosition) {
          this._markRemove(operation.graveyardPosition.parent, operation.graveyardPosition.offset, 1);
        }
        break;
      }
      case "merge": {
        const mergedElement = operation.sourcePosition.parent;
        if (!this._isInInsertedElement(mergedElement.parent)) {
          this._markRemove(mergedElement.parent, mergedElement.startOffset, 1);
        }
        const graveyardParent = operation.graveyardPosition.parent;
        this._markInsert(graveyardParent, operation.graveyardPosition.offset, 1);
        const mergedIntoElement = operation.targetPosition.parent;
        if (!this._isInInsertedElement(mergedIntoElement)) {
          this._markInsert(mergedIntoElement, operation.targetPosition.offset, mergedElement.maxOffset);
        }
        break;
      }
    }
    this._cachedChanges = null;
  }
  bufferMarkerChange(markerName, oldMarkerData, newMarkerData) {
    const buffered = this._changedMarkers.get(markerName);
    if (!buffered) {
      this._changedMarkers.set(markerName, {
        newMarkerData,
        oldMarkerData
      });
    } else {
      buffered.newMarkerData = newMarkerData;
      if (buffered.oldMarkerData.range == null && newMarkerData.range == null) {
        this._changedMarkers.delete(markerName);
      }
    }
  }
  getMarkersToRemove() {
    const result = [];
    for (const [name, change] of this._changedMarkers) {
      if (change.oldMarkerData.range != null) {
        result.push({ name, range: change.oldMarkerData.range });
      }
    }
    return result;
  }
  getMarkersToAdd() {
    const result = [];
    for (const [name, change] of this._changedMarkers) {
      if (change.newMarkerData.range != null) {
        result.push({ name, range: change.newMarkerData.range });
      }
    }
    return result;
  }
  getChangedMarkers() {
    return Array.from(this._changedMarkers).map(([name, change]) => ({
      name,
      data: {
        oldRange: change.oldMarkerData.range,
        newRange: change.newMarkerData.range
      }
    }));
  }
  hasDataChanges() {
    if (this._changesInElement.size > 0) {
      return true;
    }
    for (const { newMarkerData, oldMarkerData } of this._changedMarkers.values()) {
      if (newMarkerData.affectsData !== oldMarkerData.affectsData) {
        return true;
      }
      if (newMarkerData.affectsData) {
        const markerAdded = newMarkerData.range && !oldMarkerData.range;
        const markerRemoved = !newMarkerData.range && oldMarkerData.range;
        const markerChanged = newMarkerData.range && oldMarkerData.range && !newMarkerData.range.isEqual(oldMarkerData.range);
        if (markerAdded || markerRemoved || markerChanged) {
          return true;
        }
      }
    }
    return false;
  }
  getChanges(options = {}) {
    if (this._cachedChanges) {
      if (options.includeChangesInGraveyard) {
        return this._cachedChangesWithGraveyard.slice();
      } else {
        return this._cachedChanges.slice();
      }
    }
    let diffSet = [];
    for (const element of this._changesInElement.keys()) {
      const changes = this._changesInElement.get(element).sort((a2, b2) => {
        if (a2.offset === b2.offset) {
          if (a2.type != b2.type) {
            return a2.type == "remove" ? -1 : 1;
          }
          return 0;
        }
        return a2.offset < b2.offset ? -1 : 1;
      });
      const snapshotChildren = this._elementSnapshots.get(element);
      const elementChildren = _getChildrenSnapshot(element.getChildren());
      const actions = _generateActionsFromChanges(snapshotChildren.length, changes);
      let i2 = 0;
      let j2 = 0;
      for (const action of actions) {
        if (action === "i") {
          diffSet.push(this._getInsertDiff(element, i2, elementChildren[i2]));
          i2++;
        } else if (action === "r") {
          diffSet.push(this._getRemoveDiff(element, i2, snapshotChildren[j2]));
          j2++;
        } else if (action === "a") {
          const elementAttributes = elementChildren[i2].attributes;
          const snapshotAttributes = snapshotChildren[j2].attributes;
          let range;
          if (elementChildren[i2].name == "$text") {
            range = new Range(Position._createAt(element, i2), Position._createAt(element, i2 + 1));
          } else {
            const index = element.offsetToIndex(i2);
            range = new Range(Position._createAt(element, i2), Position._createAt(element.getChild(index), 0));
          }
          diffSet.push(...this._getAttributesDiff(range, snapshotAttributes, elementAttributes));
          i2++;
          j2++;
        } else {
          i2++;
          j2++;
        }
      }
    }
    diffSet.sort((a2, b2) => {
      if (a2.position.root != b2.position.root) {
        return a2.position.root.rootName < b2.position.root.rootName ? -1 : 1;
      }
      if (a2.position.isEqual(b2.position)) {
        return a2.changeCount - b2.changeCount;
      }
      return a2.position.isBefore(b2.position) ? -1 : 1;
    });
    for (let i2 = 1, prevIndex = 0; i2 < diffSet.length; i2++) {
      const prevDiff = diffSet[prevIndex];
      const thisDiff = diffSet[i2];
      const isConsecutiveTextRemove = prevDiff.type == "remove" && thisDiff.type == "remove" && prevDiff.name == "$text" && thisDiff.name == "$text" && prevDiff.position.isEqual(thisDiff.position);
      const isConsecutiveTextAdd = prevDiff.type == "insert" && thisDiff.type == "insert" && prevDiff.name == "$text" && thisDiff.name == "$text" && prevDiff.position.parent == thisDiff.position.parent && prevDiff.position.offset + prevDiff.length == thisDiff.position.offset;
      const isConsecutiveAttributeChange = prevDiff.type == "attribute" && thisDiff.type == "attribute" && prevDiff.position.parent == thisDiff.position.parent && prevDiff.range.isFlat && thisDiff.range.isFlat && prevDiff.position.offset + prevDiff.length == thisDiff.position.offset && prevDiff.attributeKey == thisDiff.attributeKey && prevDiff.attributeOldValue == thisDiff.attributeOldValue && prevDiff.attributeNewValue == thisDiff.attributeNewValue;
      if (isConsecutiveTextRemove || isConsecutiveTextAdd || isConsecutiveAttributeChange) {
        prevDiff.length++;
        if (isConsecutiveAttributeChange) {
          prevDiff.range.end = prevDiff.range.end.getShiftedBy(1);
        }
        diffSet[i2] = null;
      } else {
        prevIndex = i2;
      }
    }
    diffSet = diffSet.filter((v2) => v2);
    for (const item of diffSet) {
      delete item.changeCount;
      if (item.type == "attribute") {
        delete item.position;
        delete item.length;
      }
    }
    this._changeCount = 0;
    this._cachedChangesWithGraveyard = diffSet;
    this._cachedChanges = diffSet.filter(_changesInGraveyardFilter);
    if (options.includeChangesInGraveyard) {
      return this._cachedChangesWithGraveyard.slice();
    } else {
      return this._cachedChanges.slice();
    }
  }
  getRefreshedItems() {
    return new Set(this._refreshedItems);
  }
  reset() {
    this._changesInElement.clear();
    this._elementSnapshots.clear();
    this._changedMarkers.clear();
    this._refreshedItems = /* @__PURE__ */ new Set();
    this._cachedChanges = null;
  }
  _refreshItem(item) {
    if (this._isInInsertedElement(item.parent)) {
      return;
    }
    this._markRemove(item.parent, item.startOffset, item.offsetSize);
    this._markInsert(item.parent, item.startOffset, item.offsetSize);
    this._refreshedItems.add(item);
    const range = Range._createOn(item);
    for (const marker of this._markerCollection.getMarkersIntersectingRange(range)) {
      const markerData = marker.getData();
      this.bufferMarkerChange(marker.name, markerData, markerData);
    }
    this._cachedChanges = null;
  }
  _markInsert(parent2, offset, howMany) {
    const changeItem = { type: "insert", offset, howMany, count: this._changeCount++ };
    this._markChange(parent2, changeItem);
  }
  _markRemove(parent2, offset, howMany) {
    const changeItem = { type: "remove", offset, howMany, count: this._changeCount++ };
    this._markChange(parent2, changeItem);
    this._removeAllNestedChanges(parent2, offset, howMany);
  }
  _markAttribute(item) {
    const changeItem = { type: "attribute", offset: item.startOffset, howMany: item.offsetSize, count: this._changeCount++ };
    this._markChange(item.parent, changeItem);
  }
  _markChange(parent2, changeItem) {
    this._makeSnapshot(parent2);
    const changes = this._getChangesForElement(parent2);
    this._handleChange(changeItem, changes);
    changes.push(changeItem);
    for (let i2 = 0; i2 < changes.length; i2++) {
      if (changes[i2].howMany < 1) {
        changes.splice(i2, 1);
        i2--;
      }
    }
  }
  _getChangesForElement(element) {
    let changes;
    if (this._changesInElement.has(element)) {
      changes = this._changesInElement.get(element);
    } else {
      changes = [];
      this._changesInElement.set(element, changes);
    }
    return changes;
  }
  _makeSnapshot(element) {
    if (!this._elementSnapshots.has(element)) {
      this._elementSnapshots.set(element, _getChildrenSnapshot(element.getChildren()));
    }
  }
  _handleChange(inc, changes) {
    inc.nodesToHandle = inc.howMany;
    for (const old of changes) {
      const incEnd = inc.offset + inc.howMany;
      const oldEnd = old.offset + old.howMany;
      if (inc.type == "insert") {
        if (old.type == "insert") {
          if (inc.offset <= old.offset) {
            old.offset += inc.howMany;
          } else if (inc.offset < oldEnd) {
            old.howMany += inc.nodesToHandle;
            inc.nodesToHandle = 0;
          }
        }
        if (old.type == "remove") {
          if (inc.offset < old.offset) {
            old.offset += inc.howMany;
          }
        }
        if (old.type == "attribute") {
          if (inc.offset <= old.offset) {
            old.offset += inc.howMany;
          } else if (inc.offset < oldEnd) {
            const howMany = old.howMany;
            old.howMany = inc.offset - old.offset;
            changes.unshift({
              type: "attribute",
              offset: incEnd,
              howMany: howMany - old.howMany,
              count: this._changeCount++
            });
          }
        }
      }
      if (inc.type == "remove") {
        if (old.type == "insert") {
          if (incEnd <= old.offset) {
            old.offset -= inc.howMany;
          } else if (incEnd <= oldEnd) {
            if (inc.offset < old.offset) {
              const intersectionLength = incEnd - old.offset;
              old.offset = inc.offset;
              old.howMany -= intersectionLength;
              inc.nodesToHandle -= intersectionLength;
            } else {
              old.howMany -= inc.nodesToHandle;
              inc.nodesToHandle = 0;
            }
          } else {
            if (inc.offset <= old.offset) {
              inc.nodesToHandle -= old.howMany;
              old.howMany = 0;
            } else if (inc.offset < oldEnd) {
              const intersectionLength = oldEnd - inc.offset;
              old.howMany -= intersectionLength;
              inc.nodesToHandle -= intersectionLength;
            }
          }
        }
        if (old.type == "remove") {
          if (incEnd <= old.offset) {
            old.offset -= inc.howMany;
          } else if (inc.offset < old.offset) {
            inc.nodesToHandle += old.howMany;
            old.howMany = 0;
          }
        }
        if (old.type == "attribute") {
          if (incEnd <= old.offset) {
            old.offset -= inc.howMany;
          } else if (inc.offset < old.offset) {
            const intersectionLength = incEnd - old.offset;
            old.offset = inc.offset;
            old.howMany -= intersectionLength;
          } else if (inc.offset < oldEnd) {
            if (incEnd <= oldEnd) {
              const howMany = old.howMany;
              old.howMany = inc.offset - old.offset;
              const howManyAfter = howMany - old.howMany - inc.nodesToHandle;
              changes.unshift({
                type: "attribute",
                offset: inc.offset,
                howMany: howManyAfter,
                count: this._changeCount++
              });
            } else {
              old.howMany -= oldEnd - inc.offset;
            }
          }
        }
      }
      if (inc.type == "attribute") {
        if (old.type == "insert") {
          if (inc.offset < old.offset && incEnd > old.offset) {
            if (incEnd > oldEnd) {
              const attributePart = {
                type: "attribute",
                offset: oldEnd,
                howMany: incEnd - oldEnd,
                count: this._changeCount++
              };
              this._handleChange(attributePart, changes);
              changes.push(attributePart);
            }
            inc.nodesToHandle = old.offset - inc.offset;
            inc.howMany = inc.nodesToHandle;
          } else if (inc.offset >= old.offset && inc.offset < oldEnd) {
            if (incEnd > oldEnd) {
              inc.nodesToHandle = incEnd - oldEnd;
              inc.offset = oldEnd;
            } else {
              inc.nodesToHandle = 0;
            }
          }
        }
        if (old.type == "remove") {
          if (inc.offset < old.offset && incEnd > old.offset) {
            const attributePart = {
              type: "attribute",
              offset: old.offset,
              howMany: incEnd - old.offset,
              count: this._changeCount++
            };
            this._handleChange(attributePart, changes);
            changes.push(attributePart);
            inc.nodesToHandle = old.offset - inc.offset;
            inc.howMany = inc.nodesToHandle;
          }
        }
        if (old.type == "attribute") {
          if (inc.offset >= old.offset && incEnd <= oldEnd) {
            inc.nodesToHandle = 0;
            inc.howMany = 0;
            inc.offset = 0;
          } else if (inc.offset <= old.offset && incEnd >= oldEnd) {
            old.howMany = 0;
          }
        }
      }
    }
    inc.howMany = inc.nodesToHandle;
    delete inc.nodesToHandle;
  }
  _getInsertDiff(parent2, offset, elementSnapshot) {
    return {
      type: "insert",
      position: Position._createAt(parent2, offset),
      name: elementSnapshot.name,
      attributes: new Map(elementSnapshot.attributes),
      length: 1,
      changeCount: this._changeCount++
    };
  }
  _getRemoveDiff(parent2, offset, elementSnapshot) {
    return {
      type: "remove",
      position: Position._createAt(parent2, offset),
      name: elementSnapshot.name,
      attributes: new Map(elementSnapshot.attributes),
      length: 1,
      changeCount: this._changeCount++
    };
  }
  _getAttributesDiff(range, oldAttributes, newAttributes) {
    const diffs = [];
    newAttributes = new Map(newAttributes);
    for (const [key, oldValue] of oldAttributes) {
      const newValue = newAttributes.has(key) ? newAttributes.get(key) : null;
      if (newValue !== oldValue) {
        diffs.push({
          type: "attribute",
          position: range.start,
          range: range.clone(),
          length: 1,
          attributeKey: key,
          attributeOldValue: oldValue,
          attributeNewValue: newValue,
          changeCount: this._changeCount++
        });
      }
      newAttributes.delete(key);
    }
    for (const [key, newValue] of newAttributes) {
      diffs.push({
        type: "attribute",
        position: range.start,
        range: range.clone(),
        length: 1,
        attributeKey: key,
        attributeOldValue: null,
        attributeNewValue: newValue,
        changeCount: this._changeCount++
      });
    }
    return diffs;
  }
  _isInInsertedElement(element) {
    const parent2 = element.parent;
    if (!parent2) {
      return false;
    }
    const changes = this._changesInElement.get(parent2);
    const offset = element.startOffset;
    if (changes) {
      for (const change of changes) {
        if (change.type == "insert" && offset >= change.offset && offset < change.offset + change.howMany) {
          return true;
        }
      }
    }
    return this._isInInsertedElement(parent2);
  }
  _removeAllNestedChanges(parent2, offset, howMany) {
    const range = new Range(Position._createAt(parent2, offset), Position._createAt(parent2, offset + howMany));
    for (const item of range.getItems({ shallow: true })) {
      if (item.is("element")) {
        this._elementSnapshots.delete(item);
        this._changesInElement.delete(item);
        this._removeAllNestedChanges(item, 0, item.maxOffset);
      }
    }
  }
}
function _getChildrenSnapshot(children) {
  const snapshot = [];
  for (const child of children) {
    if (child.is("$text")) {
      for (let i2 = 0; i2 < child.data.length; i2++) {
        snapshot.push({
          name: "$text",
          attributes: new Map(child.getAttributes())
        });
      }
    } else {
      snapshot.push({
        name: child.name,
        attributes: new Map(child.getAttributes())
      });
    }
  }
  return snapshot;
}
function _generateActionsFromChanges(oldChildrenLength, changes) {
  const actions = [];
  let offset = 0;
  let oldChildrenHandled = 0;
  for (const change of changes) {
    if (change.offset > offset) {
      for (let i2 = 0; i2 < change.offset - offset; i2++) {
        actions.push("e");
      }
      oldChildrenHandled += change.offset - offset;
    }
    if (change.type == "insert") {
      for (let i2 = 0; i2 < change.howMany; i2++) {
        actions.push("i");
      }
      offset = change.offset + change.howMany;
    } else if (change.type == "remove") {
      for (let i2 = 0; i2 < change.howMany; i2++) {
        actions.push("r");
      }
      offset = change.offset;
      oldChildrenHandled += change.howMany;
    } else {
      actions.push(..."a".repeat(change.howMany).split(""));
      offset = change.offset + change.howMany;
      oldChildrenHandled += change.howMany;
    }
  }
  if (oldChildrenHandled < oldChildrenLength) {
    for (let i2 = 0; i2 < oldChildrenLength - oldChildrenHandled - offset; i2++) {
      actions.push("e");
    }
  }
  return actions;
}
function _changesInGraveyardFilter(entry) {
  const posInGy = "position" in entry && entry.position.root.rootName == "$graveyard";
  const rangeInGy = "range" in entry && entry.range.root.rootName == "$graveyard";
  return !posInGy && !rangeInGy;
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class History {
  constructor() {
    this._operations = [];
    this._undoPairs = /* @__PURE__ */ new Map();
    this._undoneOperations = /* @__PURE__ */ new Set();
    this._baseVersionToOperationIndex = /* @__PURE__ */ new Map();
    this._version = 0;
    this._gaps = /* @__PURE__ */ new Map();
  }
  get version() {
    return this._version;
  }
  set version(version2) {
    if (this._operations.length && version2 > this._version + 1) {
      this._gaps.set(this._version, version2);
    }
    this._version = version2;
  }
  get lastOperation() {
    return this._operations[this._operations.length - 1];
  }
  addOperation(operation) {
    if (operation.baseVersion !== this.version) {
      throw new CKEditorError("model-document-history-addoperation-incorrect-version", this, {
        operation,
        historyVersion: this.version
      });
    }
    this._operations.push(operation);
    this._version++;
    this._baseVersionToOperationIndex.set(operation.baseVersion, this._operations.length - 1);
  }
  getOperations(fromBaseVersion, toBaseVersion = this.version) {
    if (!this._operations.length) {
      return [];
    }
    const firstOperation = this._operations[0];
    if (fromBaseVersion === void 0) {
      fromBaseVersion = firstOperation.baseVersion;
    }
    let inclusiveTo = toBaseVersion - 1;
    for (const [gapFrom, gapTo] of this._gaps) {
      if (fromBaseVersion > gapFrom && fromBaseVersion < gapTo) {
        fromBaseVersion = gapTo;
      }
      if (inclusiveTo > gapFrom && inclusiveTo < gapTo) {
        inclusiveTo = gapFrom - 1;
      }
    }
    if (inclusiveTo < firstOperation.baseVersion || fromBaseVersion > this.lastOperation.baseVersion) {
      return [];
    }
    let fromIndex = this._baseVersionToOperationIndex.get(fromBaseVersion);
    if (fromIndex === void 0) {
      fromIndex = 0;
    }
    let toIndex = this._baseVersionToOperationIndex.get(inclusiveTo);
    if (toIndex === void 0) {
      toIndex = this._operations.length - 1;
    }
    return this._operations.slice(
      fromIndex,
      toIndex + 1
    );
  }
  getOperation(baseVersion) {
    const operationIndex = this._baseVersionToOperationIndex.get(baseVersion);
    if (operationIndex === void 0) {
      return;
    }
    return this._operations[operationIndex];
  }
  setOperationAsUndone(undoneOperation, undoingOperation) {
    this._undoPairs.set(undoingOperation, undoneOperation);
    this._undoneOperations.add(undoneOperation);
  }
  isUndoingOperation(operation) {
    return this._undoPairs.has(operation);
  }
  isUndoneOperation(operation) {
    return this._undoneOperations.has(operation);
  }
  getUndoneOperation(undoingOperation) {
    return this._undoPairs.get(undoingOperation);
  }
  reset() {
    this._version = 0;
    this._undoPairs = /* @__PURE__ */ new Map();
    this._operations = [];
    this._undoneOperations = /* @__PURE__ */ new Set();
    this._gaps = /* @__PURE__ */ new Map();
    this._baseVersionToOperationIndex = /* @__PURE__ */ new Map();
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class RootElement extends Element {
  constructor(document2, name, rootName = "main") {
    super(name);
    this._document = document2;
    this.rootName = rootName;
  }
  get document() {
    return this._document;
  }
  toJSON() {
    return this.rootName;
  }
}
RootElement.prototype.is = function(type, name) {
  if (!name) {
    return type === "rootElement" || type === "model:rootElement" || type === "element" || type === "model:element" || type === "node" || type === "model:node";
  }
  return name === this.name && (type === "rootElement" || type === "model:rootElement" || type === "element" || type === "model:element");
};
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
const graveyardName = "$graveyard";
class Document extends EmitterMixin() {
  constructor(model) {
    super();
    this.model = model;
    this.history = new History();
    this.selection = new DocumentSelection(this);
    this.roots = new Collection({ idProperty: "rootName" });
    this.differ = new Differ(model.markers);
    this._postFixers = /* @__PURE__ */ new Set();
    this._hasSelectionChangedFromTheLastChangeBlock = false;
    this.createRoot("$root", graveyardName);
    this.listenTo(model, "applyOperation", (evt, args) => {
      const operation = args[0];
      if (operation.isDocumentOperation) {
        this.differ.bufferOperation(operation);
      }
    }, { priority: "high" });
    this.listenTo(model, "applyOperation", (evt, args) => {
      const operation = args[0];
      if (operation.isDocumentOperation) {
        this.history.addOperation(operation);
      }
    }, { priority: "low" });
    this.listenTo(this.selection, "change", () => {
      this._hasSelectionChangedFromTheLastChangeBlock = true;
    });
    this.listenTo(model.markers, "update", (evt, marker, oldRange, newRange, oldMarkerData) => {
      const newMarkerData = { ...marker.getData(), range: newRange };
      this.differ.bufferMarkerChange(marker.name, oldMarkerData, newMarkerData);
      if (oldRange === null) {
        marker.on("change", (evt2, oldRange2) => {
          const markerData = marker.getData();
          this.differ.bufferMarkerChange(marker.name, { ...markerData, range: oldRange2 }, markerData);
        });
      }
    });
  }
  get version() {
    return this.history.version;
  }
  set version(version2) {
    this.history.version = version2;
  }
  get graveyard() {
    return this.getRoot(graveyardName);
  }
  createRoot(elementName = "$root", rootName = "main") {
    if (this.roots.get(rootName)) {
      throw new CKEditorError("model-document-createroot-name-exists", this, { name: rootName });
    }
    const root2 = new RootElement(this, elementName, rootName);
    this.roots.add(root2);
    return root2;
  }
  destroy() {
    this.selection.destroy();
    this.stopListening();
  }
  getRoot(name = "main") {
    return this.roots.get(name);
  }
  getRootNames() {
    return Array.from(this.roots, (root2) => root2.rootName).filter((name) => name != graveyardName);
  }
  registerPostFixer(postFixer) {
    this._postFixers.add(postFixer);
  }
  toJSON() {
    const json = clone$1(this);
    json.selection = "[engine.model.DocumentSelection]";
    json.model = "[engine.model.Model]";
    return json;
  }
  _handleChangeBlock(writer) {
    if (this._hasDocumentChangedFromTheLastChangeBlock()) {
      this._callPostFixers(writer);
      this.selection.refresh();
      if (this.differ.hasDataChanges()) {
        this.fire("change:data", writer.batch);
      } else {
        this.fire("change", writer.batch);
      }
      this.selection.refresh();
      this.differ.reset();
    }
    this._hasSelectionChangedFromTheLastChangeBlock = false;
  }
  _hasDocumentChangedFromTheLastChangeBlock() {
    return !this.differ.isEmpty || this._hasSelectionChangedFromTheLastChangeBlock;
  }
  _getDefaultRoot() {
    for (const root2 of this.roots) {
      if (root2 !== this.graveyard) {
        return root2;
      }
    }
    return this.graveyard;
  }
  _getDefaultRange() {
    const defaultRoot = this._getDefaultRoot();
    const model = this.model;
    const schema = model.schema;
    const position = model.createPositionFromPath(defaultRoot, [0]);
    const nearestRange = schema.getNearestSelectionRange(position);
    return nearestRange || model.createRange(position);
  }
  _validateSelectionRange(range) {
    return validateTextNodePosition(range.start) && validateTextNodePosition(range.end);
  }
  _callPostFixers(writer) {
    let wasFixed = false;
    do {
      for (const callback of this._postFixers) {
        this.selection.refresh();
        wasFixed = callback(writer);
        if (wasFixed) {
          break;
        }
      }
    } while (wasFixed);
  }
}
function validateTextNodePosition(rangeBoundary) {
  const textNode = rangeBoundary.textNode;
  if (textNode) {
    const data = textNode.data;
    const offset = rangeBoundary.offset - textNode.startOffset;
    return !isInsideSurrogatePair(data, offset) && !isInsideCombinedSymbol(data, offset);
  }
  return true;
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class MarkerCollection extends EmitterMixin() {
  constructor() {
    super(...arguments);
    this._markers = /* @__PURE__ */ new Map();
  }
  [Symbol.iterator]() {
    return this._markers.values();
  }
  has(markerOrName) {
    const markerName = markerOrName instanceof Marker ? markerOrName.name : markerOrName;
    return this._markers.has(markerName);
  }
  get(markerName) {
    return this._markers.get(markerName) || null;
  }
  _set(markerOrName, range, managedUsingOperations = false, affectsData = false) {
    const markerName = markerOrName instanceof Marker ? markerOrName.name : markerOrName;
    if (markerName.includes(",")) {
      throw new CKEditorError("markercollection-incorrect-marker-name", this);
    }
    const oldMarker = this._markers.get(markerName);
    if (oldMarker) {
      const oldMarkerData = oldMarker.getData();
      const oldRange = oldMarker.getRange();
      let hasChanged = false;
      if (!oldRange.isEqual(range)) {
        oldMarker._attachLiveRange(LiveRange.fromRange(range));
        hasChanged = true;
      }
      if (managedUsingOperations != oldMarker.managedUsingOperations) {
        oldMarker._managedUsingOperations = managedUsingOperations;
        hasChanged = true;
      }
      if (typeof affectsData === "boolean" && affectsData != oldMarker.affectsData) {
        oldMarker._affectsData = affectsData;
        hasChanged = true;
      }
      if (hasChanged) {
        this.fire(`update:${markerName}`, oldMarker, oldRange, range, oldMarkerData);
      }
      return oldMarker;
    }
    const liveRange = LiveRange.fromRange(range);
    const marker = new Marker(markerName, liveRange, managedUsingOperations, affectsData);
    this._markers.set(markerName, marker);
    this.fire(`update:${markerName}`, marker, null, range, { ...marker.getData(), range: null });
    return marker;
  }
  _remove(markerOrName) {
    const markerName = markerOrName instanceof Marker ? markerOrName.name : markerOrName;
    const oldMarker = this._markers.get(markerName);
    if (oldMarker) {
      this._markers.delete(markerName);
      this.fire(`update:${markerName}`, oldMarker, oldMarker.getRange(), null, oldMarker.getData());
      this._destroyMarker(oldMarker);
      return true;
    }
    return false;
  }
  _refresh(markerOrName) {
    const markerName = markerOrName instanceof Marker ? markerOrName.name : markerOrName;
    const marker = this._markers.get(markerName);
    if (!marker) {
      throw new CKEditorError("markercollection-refresh-marker-not-exists", this);
    }
    const range = marker.getRange();
    this.fire(`update:${markerName}`, marker, range, range, marker.getData());
  }
  *getMarkersAtPosition(position) {
    for (const marker of this) {
      if (marker.getRange().containsPosition(position)) {
        yield marker;
      }
    }
  }
  *getMarkersIntersectingRange(range) {
    for (const marker of this) {
      if (marker.getRange().getIntersection(range) !== null) {
        yield marker;
      }
    }
  }
  destroy() {
    for (const marker of this._markers.values()) {
      this._destroyMarker(marker);
    }
    this._markers = null;
    this.stopListening();
  }
  *getMarkersGroup(prefix) {
    for (const marker of this._markers.values()) {
      if (marker.name.startsWith(prefix + ":")) {
        yield marker;
      }
    }
  }
  _destroyMarker(marker) {
    marker.stopListening();
    marker._detachLiveRange();
  }
}
class Marker extends EmitterMixin(TypeCheckable) {
  constructor(name, liveRange, managedUsingOperations, affectsData) {
    super();
    this.name = name;
    this._liveRange = this._attachLiveRange(liveRange);
    this._managedUsingOperations = managedUsingOperations;
    this._affectsData = affectsData;
  }
  get managedUsingOperations() {
    if (!this._liveRange) {
      throw new CKEditorError("marker-destroyed", this);
    }
    return this._managedUsingOperations;
  }
  get affectsData() {
    if (!this._liveRange) {
      throw new CKEditorError("marker-destroyed", this);
    }
    return this._affectsData;
  }
  getData() {
    return {
      range: this.getRange(),
      affectsData: this.affectsData,
      managedUsingOperations: this.managedUsingOperations
    };
  }
  getStart() {
    if (!this._liveRange) {
      throw new CKEditorError("marker-destroyed", this);
    }
    return this._liveRange.start.clone();
  }
  getEnd() {
    if (!this._liveRange) {
      throw new CKEditorError("marker-destroyed", this);
    }
    return this._liveRange.end.clone();
  }
  getRange() {
    if (!this._liveRange) {
      throw new CKEditorError("marker-destroyed", this);
    }
    return this._liveRange.toRange();
  }
  _attachLiveRange(liveRange) {
    if (this._liveRange) {
      this._detachLiveRange();
    }
    liveRange.delegate("change:range").to(this);
    liveRange.delegate("change:content").to(this);
    this._liveRange = liveRange;
    return liveRange;
  }
  _detachLiveRange() {
    this._liveRange.stopDelegating("change:range", this);
    this._liveRange.stopDelegating("change:content", this);
    this._liveRange.detach();
    this._liveRange = null;
  }
}
Marker.prototype.is = function(type) {
  return type === "marker" || type === "model:marker";
};
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class DocumentFragment extends TypeCheckable {
  constructor(children) {
    super();
    this.markers = /* @__PURE__ */ new Map();
    this._children = new NodeList();
    if (children) {
      this._insertChild(0, children);
    }
  }
  [Symbol.iterator]() {
    return this.getChildren();
  }
  get childCount() {
    return this._children.length;
  }
  get maxOffset() {
    return this._children.maxOffset;
  }
  get isEmpty() {
    return this.childCount === 0;
  }
  get nextSibling() {
    return null;
  }
  get previousSibling() {
    return null;
  }
  get root() {
    return this;
  }
  get parent() {
    return null;
  }
  get document() {
    return null;
  }
  getAncestors() {
    return [];
  }
  getChild(index) {
    return this._children.getNode(index);
  }
  getChildren() {
    return this._children[Symbol.iterator]();
  }
  getChildIndex(node) {
    return this._children.getNodeIndex(node);
  }
  getChildStartOffset(node) {
    return this._children.getNodeStartOffset(node);
  }
  getPath() {
    return [];
  }
  getNodeByPath(relativePath) {
    let node = this;
    for (const index of relativePath) {
      node = node.getChild(node.offsetToIndex(index));
    }
    return node;
  }
  offsetToIndex(offset) {
    return this._children.offsetToIndex(offset);
  }
  toJSON() {
    const json = [];
    for (const node of this._children) {
      json.push(node.toJSON());
    }
    return json;
  }
  static fromJSON(json) {
    const children = [];
    for (const child of json) {
      if (child.name) {
        children.push(Element.fromJSON(child));
      } else {
        children.push(Text$1.fromJSON(child));
      }
    }
    return new DocumentFragment(children);
  }
  _appendChild(items) {
    this._insertChild(this.childCount, items);
  }
  _insertChild(index, items) {
    const nodes = normalize$1(items);
    for (const node of nodes) {
      if (node.parent !== null) {
        node._remove();
      }
      node.parent = this;
    }
    this._children._insertNodes(index, nodes);
  }
  _removeChildren(index, howMany = 1) {
    const nodes = this._children._removeNodes(index, howMany);
    for (const node of nodes) {
      node.parent = null;
    }
    return nodes;
  }
}
DocumentFragment.prototype.is = function(type) {
  return type === "documentFragment" || type === "model:documentFragment";
};
function normalize$1(nodes) {
  if (typeof nodes == "string") {
    return [new Text$1(nodes)];
  }
  if (!isIterable(nodes)) {
    nodes = [nodes];
  }
  return Array.from(nodes).map((node) => {
    if (typeof node == "string") {
      return new Text$1(node);
    }
    if (node instanceof TextProxy) {
      return new Text$1(node.data, node.getAttributes());
    }
    return node;
  });
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
const HEX_COLOR_REGEXP = /^#([0-9a-f]{3,4}|[0-9a-f]{6}|[0-9a-f]{8})$/i;
const RGB_COLOR_REGEXP = /^rgb\([ ]?([0-9]{1,3}[ %]?,[ ]?){2,3}[0-9]{1,3}[ %]?\)$/i;
const RGBA_COLOR_REGEXP = /^rgba\([ ]?([0-9]{1,3}[ %]?,[ ]?){3}(1|[0-9]+%|[0]?\.?[0-9]+)\)$/i;
const HSL_COLOR_REGEXP = /^hsl\([ ]?([0-9]{1,3}[ %]?[,]?[ ]*){3}(1|[0-9]+%|[0]?\.?[0-9]+)?\)$/i;
const HSLA_COLOR_REGEXP = /^hsla\([ ]?([0-9]{1,3}[ %]?,[ ]?){2,3}(1|[0-9]+%|[0]?\.?[0-9]+)\)$/i;
const COLOR_NAMES = /* @__PURE__ */ new Set([
  "black",
  "silver",
  "gray",
  "white",
  "maroon",
  "red",
  "purple",
  "fuchsia",
  "green",
  "lime",
  "olive",
  "yellow",
  "navy",
  "blue",
  "teal",
  "aqua",
  "orange",
  "aliceblue",
  "antiquewhite",
  "aquamarine",
  "azure",
  "beige",
  "bisque",
  "blanchedalmond",
  "blueviolet",
  "brown",
  "burlywood",
  "cadetblue",
  "chartreuse",
  "chocolate",
  "coral",
  "cornflowerblue",
  "cornsilk",
  "crimson",
  "cyan",
  "darkblue",
  "darkcyan",
  "darkgoldenrod",
  "darkgray",
  "darkgreen",
  "darkgrey",
  "darkkhaki",
  "darkmagenta",
  "darkolivegreen",
  "darkorange",
  "darkorchid",
  "darkred",
  "darksalmon",
  "darkseagreen",
  "darkslateblue",
  "darkslategray",
  "darkslategrey",
  "darkturquoise",
  "darkviolet",
  "deeppink",
  "deepskyblue",
  "dimgray",
  "dimgrey",
  "dodgerblue",
  "firebrick",
  "floralwhite",
  "forestgreen",
  "gainsboro",
  "ghostwhite",
  "gold",
  "goldenrod",
  "greenyellow",
  "grey",
  "honeydew",
  "hotpink",
  "indianred",
  "indigo",
  "ivory",
  "khaki",
  "lavender",
  "lavenderblush",
  "lawngreen",
  "lemonchiffon",
  "lightblue",
  "lightcoral",
  "lightcyan",
  "lightgoldenrodyellow",
  "lightgray",
  "lightgreen",
  "lightgrey",
  "lightpink",
  "lightsalmon",
  "lightseagreen",
  "lightskyblue",
  "lightslategray",
  "lightslategrey",
  "lightsteelblue",
  "lightyellow",
  "limegreen",
  "linen",
  "magenta",
  "mediumaquamarine",
  "mediumblue",
  "mediumorchid",
  "mediumpurple",
  "mediumseagreen",
  "mediumslateblue",
  "mediumspringgreen",
  "mediumturquoise",
  "mediumvioletred",
  "midnightblue",
  "mintcream",
  "mistyrose",
  "moccasin",
  "navajowhite",
  "oldlace",
  "olivedrab",
  "orangered",
  "orchid",
  "palegoldenrod",
  "palegreen",
  "paleturquoise",
  "palevioletred",
  "papayawhip",
  "peachpuff",
  "peru",
  "pink",
  "plum",
  "powderblue",
  "rosybrown",
  "royalblue",
  "saddlebrown",
  "salmon",
  "sandybrown",
  "seagreen",
  "seashell",
  "sienna",
  "skyblue",
  "slateblue",
  "slategray",
  "slategrey",
  "snow",
  "springgreen",
  "steelblue",
  "tan",
  "thistle",
  "tomato",
  "turquoise",
  "violet",
  "wheat",
  "whitesmoke",
  "yellowgreen",
  "activeborder",
  "activecaption",
  "appworkspace",
  "background",
  "buttonface",
  "buttonhighlight",
  "buttonshadow",
  "buttontext",
  "captiontext",
  "graytext",
  "highlight",
  "highlighttext",
  "inactiveborder",
  "inactivecaption",
  "inactivecaptiontext",
  "infobackground",
  "infotext",
  "menu",
  "menutext",
  "scrollbar",
  "threeddarkshadow",
  "threedface",
  "threedhighlight",
  "threedlightshadow",
  "threedshadow",
  "window",
  "windowframe",
  "windowtext",
  "rebeccapurple",
  "currentcolor",
  "transparent"
]);
function isColor(string) {
  if (string.startsWith("#")) {
    return HEX_COLOR_REGEXP.test(string);
  }
  if (string.startsWith("rgb")) {
    return RGB_COLOR_REGEXP.test(string) || RGBA_COLOR_REGEXP.test(string);
  }
  if (string.startsWith("hsl")) {
    return HSL_COLOR_REGEXP.test(string) || HSLA_COLOR_REGEXP.test(string);
  }
  return COLOR_NAMES.has(string.toLowerCase());
}
const lengthRegExp = /^([+-]?[0-9]*([.][0-9]+)?(px|cm|mm|in|pc|pt|ch|em|ex|rem|vh|vw|vmin|vmax)|0)$/;
function isLength(string) {
  return lengthRegExp.test(string);
}
const PERCENTAGE_VALUE_REGEXP = /^[+-]?[0-9]*([.][0-9]+)?%$/;
function isPercentage(string) {
  return PERCENTAGE_VALUE_REGEXP.test(string);
}
const repeatValues = ["repeat-x", "repeat-y", "repeat", "space", "round", "no-repeat"];
function isRepeat(string) {
  return repeatValues.includes(string);
}
const positionValues = ["center", "top", "bottom", "left", "right"];
function isPosition(string) {
  return positionValues.includes(string);
}
const attachmentValues = ["fixed", "scroll", "local"];
function isAttachment(string) {
  return attachmentValues.includes(string);
}
const urlRegExp = /^url\(/;
function isURL(string) {
  return urlRegExp.test(string);
}
function getShorthandValues(string) {
  return string.replace(/, /g, ",").split(" ").map((string2) => string2.replace(/,/g, ", "));
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
function addBackgroundRules(stylesProcessor) {
  stylesProcessor.setNormalizer("background", getBackgroundNormalizer());
  stylesProcessor.setNormalizer("background-color", getBackgroundColorNormalizer());
  stylesProcessor.setReducer("background", getBackgroundReducer());
  stylesProcessor.setStyleRelation("background", ["background-color"]);
}
function getBackgroundNormalizer() {
  return (value) => {
    const background = {};
    const parts = getShorthandValues(value);
    for (const part of parts) {
      if (isRepeat(part)) {
        background.repeat = background.repeat || [];
        background.repeat.push(part);
      } else if (isPosition(part)) {
        background.position = background.position || [];
        background.position.push(part);
      } else if (isAttachment(part)) {
        background.attachment = part;
      } else if (isColor(part)) {
        background.color = part;
      } else if (isURL(part)) {
        background.image = part;
      }
    }
    return {
      path: "background",
      value: background
    };
  };
}
function getBackgroundColorNormalizer() {
  return (value) => ({ path: "background.color", value });
}
function getBackgroundReducer() {
  return (value) => {
    const ret = [];
    ret.push(["background-color", value.color]);
    return ret;
  };
}
var cancel = '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="m11.591 10.177 4.243 4.242a1 1 0 0 1-1.415 1.415l-4.242-4.243-4.243 4.243a1 1 0 0 1-1.414-1.415l4.243-4.242L4.52 5.934A1 1 0 0 1 5.934 4.52l4.243 4.243 4.242-4.243a1 1 0 1 1 1.415 1.414l-4.243 4.243z"/></svg>';
var caption = '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M2 16h9a1 1 0 0 1 0 2H2a1 1 0 0 1 0-2z"/><path d="M17 1a2 2 0 0 1 2 2v9a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h14zm0 1.5H3a.5.5 0 0 0-.492.41L2.5 3v9a.5.5 0 0 0 .41.492L3 12.5h14a.5.5 0 0 0 .492-.41L17.5 12V3a.5.5 0 0 0-.41-.492L17 2.5z" fill-opacity=".6"/></svg>';
var check = '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M6.972 16.615a.997.997 0 0 1-.744-.292l-4.596-4.596a1 1 0 1 1 1.414-1.414l3.926 3.926 9.937-9.937a1 1 0 0 1 1.414 1.415L7.717 16.323a.997.997 0 0 1-.745.292z"/></svg>';
var cog = '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="m11.333 2 .19 2.263a5.899 5.899 0 0 1 1.458.604L14.714 3.4 16.6 5.286l-1.467 1.733c.263.452.468.942.605 1.46L18 8.666v2.666l-2.263.19a5.899 5.899 0 0 1-.604 1.458l1.467 1.733-1.886 1.886-1.733-1.467a5.899 5.899 0 0 1-1.46.605L11.334 18H8.667l-.19-2.263a5.899 5.899 0 0 1-1.458-.604L5.286 16.6 3.4 14.714l1.467-1.733a5.899 5.899 0 0 1-.604-1.458L2 11.333V8.667l2.262-.189a5.899 5.899 0 0 1 .605-1.459L3.4 5.286 5.286 3.4l1.733 1.467a5.899 5.899 0 0 1 1.46-.605L8.666 2h2.666zM10 6.267a3.733 3.733 0 1 0 0 7.466 3.733 3.733 0 0 0 0-7.466z"/></svg>';
var eraser = '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="m8.636 9.531-2.758 3.94a.5.5 0 0 0 .122.696l3.224 2.284h1.314l2.636-3.736L8.636 9.53zm.288 8.451L5.14 15.396a2 2 0 0 1-.491-2.786l6.673-9.53a2 2 0 0 1 2.785-.49l3.742 2.62a2 2 0 0 1 .491 2.785l-7.269 10.053-2.147-.066z"/><path d="M4 18h5.523v-1H4zm-2 0h1v-1H2z"/></svg>';
var lowVision = '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M5.085 6.22 2.943 4.078a.75.75 0 1 1 1.06-1.06l2.592 2.59A11.094 11.094 0 0 1 10 5.068c4.738 0 8.578 3.101 8.578 5.083 0 1.197-1.401 2.803-3.555 3.887l1.714 1.713a.75.75 0 0 1-.09 1.138.488.488 0 0 1-.15.084.75.75 0 0 1-.821-.16L6.17 7.304c-.258.11-.51.233-.757.365l6.239 6.24-.006.005.78.78c-.388.094-.78.166-1.174.215l-1.11-1.11h.011L4.55 8.197a7.2 7.2 0 0 0-.665.514l-.112.098 4.897 4.897-.005.006 1.276 1.276a10.164 10.164 0 0 1-1.477-.117l-.479-.479-.009.009-4.863-4.863-.022.031a2.563 2.563 0 0 0-.124.2c-.043.077-.08.158-.108.241a.534.534 0 0 0-.028.133.29.29 0 0 0 .008.072.927.927 0 0 0 .082.226c.067.133.145.26.234.379l3.242 3.365.025.01.59.623c-3.265-.918-5.59-3.155-5.59-4.668 0-1.194 1.448-2.838 3.663-3.93zm7.07.531a4.632 4.632 0 0 1 1.108 5.992l.345.344.046-.018a9.313 9.313 0 0 0 2-1.112c.256-.187.5-.392.727-.613.137-.134.27-.277.392-.431.072-.091.141-.185.203-.286.057-.093.107-.19.148-.292a.72.72 0 0 0 .036-.12.29.29 0 0 0 .008-.072.492.492 0 0 0-.028-.133.999.999 0 0 0-.036-.096 2.165 2.165 0 0 0-.071-.145 2.917 2.917 0 0 0-.125-.2 3.592 3.592 0 0 0-.263-.335 5.444 5.444 0 0 0-.53-.523 7.955 7.955 0 0 0-1.054-.768 9.766 9.766 0 0 0-1.879-.891c-.337-.118-.68-.219-1.027-.301zm-2.85.21-.069.002a.508.508 0 0 0-.254.097.496.496 0 0 0-.104.679.498.498 0 0 0 .326.199l.045.005c.091.003.181.003.272.012a2.45 2.45 0 0 1 2.017 1.513c.024.061.043.125.069.185a.494.494 0 0 0 .45.287h.008a.496.496 0 0 0 .35-.158.482.482 0 0 0 .13-.335.638.638 0 0 0-.048-.219 3.379 3.379 0 0 0-.36-.723 3.438 3.438 0 0 0-2.791-1.543l-.028-.001h-.013z"/></svg>';
var image = '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M6.91 10.54c.26-.23.64-.21.88.03l3.36 3.14 2.23-2.06a.64.64 0 0 1 .87 0l2.52 2.97V4.5H3.2v10.12l3.71-4.08zm10.27-7.51c.6 0 1.09.47 1.09 1.05v11.84c0 .59-.49 1.06-1.09 1.06H2.79c-.6 0-1.09-.47-1.09-1.06V4.08c0-.58.49-1.05 1.1-1.05h14.38zm-5.22 5.56a1.96 1.96 0 1 1 3.4-1.96 1.96 1.96 0 0 1-3.4 1.96z"/></svg>';
var alignBottom = '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="m9.239 13.938-2.88-1.663a.75.75 0 0 1 .75-1.3L9 12.067V4.75a.75.75 0 1 1 1.5 0v7.318l1.89-1.093a.75.75 0 0 1 .75 1.3l-2.879 1.663a.752.752 0 0 1-.511.187.752.752 0 0 1-.511-.187zM4.25 17a.75.75 0 1 1 0-1.5h10.5a.75.75 0 0 1 0 1.5H4.25z"/></svg>';
var alignMiddle = '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M9.75 11.875a.752.752 0 0 1 .508.184l2.883 1.666a.75.75 0 0 1-.659 1.344l-.091-.044-1.892-1.093.001 4.318a.75.75 0 1 1-1.5 0v-4.317l-1.89 1.092a.75.75 0 0 1-.75-1.3l2.879-1.663a.752.752 0 0 1 .51-.187zM15.25 9a.75.75 0 1 1 0 1.5H4.75a.75.75 0 1 1 0-1.5h10.5zM9.75.375a.75.75 0 0 1 .75.75v4.318l1.89-1.093.092-.045a.75.75 0 0 1 .659 1.344l-2.883 1.667a.752.752 0 0 1-.508.184.752.752 0 0 1-.511-.187L6.359 5.65a.75.75 0 0 1 .75-1.299L9 5.442V1.125a.75.75 0 0 1 .75-.75z"/></svg>';
var alignTop = '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="m10.261 7.062 2.88 1.663a.75.75 0 0 1-.75 1.3L10.5 8.933v7.317a.75.75 0 1 1-1.5 0V8.932l-1.89 1.093a.75.75 0 0 1-.75-1.3l2.879-1.663a.752.752 0 0 1 .511-.187.752.752 0 0 1 .511.187zM15.25 4a.75.75 0 1 1 0 1.5H4.75a.75.75 0 0 1 0-1.5h10.5z"/></svg>';
var alignLeft = '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M2 3.75c0 .414.336.75.75.75h14.5a.75.75 0 1 0 0-1.5H2.75a.75.75 0 0 0-.75.75zm0 8c0 .414.336.75.75.75h14.5a.75.75 0 1 0 0-1.5H2.75a.75.75 0 0 0-.75.75zm0 4c0 .414.336.75.75.75h9.929a.75.75 0 1 0 0-1.5H2.75a.75.75 0 0 0-.75.75zm0-8c0 .414.336.75.75.75h9.929a.75.75 0 1 0 0-1.5H2.75a.75.75 0 0 0-.75.75z"/></svg>';
var alignCenter = '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M2 3.75c0 .414.336.75.75.75h14.5a.75.75 0 1 0 0-1.5H2.75a.75.75 0 0 0-.75.75zm0 8c0 .414.336.75.75.75h14.5a.75.75 0 1 0 0-1.5H2.75a.75.75 0 0 0-.75.75zm2.286 4c0 .414.336.75.75.75h9.928a.75.75 0 1 0 0-1.5H5.036a.75.75 0 0 0-.75.75zm0-8c0 .414.336.75.75.75h9.928a.75.75 0 1 0 0-1.5H5.036a.75.75 0 0 0-.75.75z"/></svg>';
var alignRight = '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M18 3.75a.75.75 0 0 1-.75.75H2.75a.75.75 0 1 1 0-1.5h14.5a.75.75 0 0 1 .75.75zm0 8a.75.75 0 0 1-.75.75H2.75a.75.75 0 1 1 0-1.5h14.5a.75.75 0 0 1 .75.75zm0 4a.75.75 0 0 1-.75.75H7.321a.75.75 0 1 1 0-1.5h9.929a.75.75 0 0 1 .75.75zm0-8a.75.75 0 0 1-.75.75H7.321a.75.75 0 1 1 0-1.5h9.929a.75.75 0 0 1 .75.75z"/></svg>';
var alignJustify = '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M2 3.75c0 .414.336.75.75.75h14.5a.75.75 0 1 0 0-1.5H2.75a.75.75 0 0 0-.75.75zm0 8c0 .414.336.75.75.75h14.5a.75.75 0 1 0 0-1.5H2.75a.75.75 0 0 0-.75.75zm0 4c0 .414.336.75.75.75h9.929a.75.75 0 1 0 0-1.5H2.75a.75.75 0 0 0-.75.75zm0-8c0 .414.336.75.75.75h14.5a.75.75 0 1 0 0-1.5H2.75a.75.75 0 0 0-.75.75z"/></svg>';
var objectBlockLeft = '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path opacity=".5" d="M2 3h16v1.5H2zm0 12h16v1.5H2z"/><path d="M12.003 7v5.5a1 1 0 0 1-1 1H2.996a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h8.007a1 1 0 0 1 1 1zm-1.506.5H3.5V12h6.997V7.5z"/></svg>';
var objectCenter = '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path opacity=".5" d="M2 3h16v1.5H2zm0 12h16v1.5H2z"/><path d="M15.003 7v5.5a1 1 0 0 1-1 1H5.996a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h8.007a1 1 0 0 1 1 1zm-1.506.5H6.5V12h6.997V7.5z"/></svg>';
var objectBlockRight = '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path opacity=".5" d="M2 3h16v1.5H2zm0 12h16v1.5H2z"/><path d="M18.003 7v5.5a1 1 0 0 1-1 1H8.996a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h8.007a1 1 0 0 1 1 1zm-1.506.5H9.5V12h6.997V7.5z"/></svg>';
var objectFullWidth = '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path opacity=".5" d="M2 3h16v1.5H2zm0 12h16v1.5H2z"/><path d="M18 7v5.5a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1zm-1.505.5H3.504V12h12.991V7.5z"/></svg>';
var objectInline = '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path opacity=".5" d="M2 3h16v1.5H2zm11.5 9H18v1.5h-4.5zM2 15h16v1.5H2z"/><path d="M12.003 7v5.5a1 1 0 0 1-1 1H2.996a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h8.007a1 1 0 0 1 1 1zm-1.506.5H3.5V12h6.997V7.5z"/></svg>';
var objectLeft = '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path opacity=".5" d="M2 3h16v1.5H2zm11.5 9H18v1.5h-4.5zm0-3H18v1.5h-4.5zm0-3H18v1.5h-4.5zM2 15h16v1.5H2z"/><path d="M12.003 7v5.5a1 1 0 0 1-1 1H2.996a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h8.007a1 1 0 0 1 1 1zm-1.506.5H3.5V12h6.997V7.5z"/></svg>';
var objectRight = '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path opacity=".5" d="M2 3h16v1.5H2zm0 12h16v1.5H2zm0-9h5v1.5H2zm0 3h5v1.5H2zm0 3h5v1.5H2z"/><path d="M18.003 7v5.5a1 1 0 0 1-1 1H8.996a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h8.007a1 1 0 0 1 1 1zm-1.506.5H9.5V12h6.997V7.5z"/></svg>';
var objectSizeFull = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M2.5 17v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zM1 15.5v1H0v-1h1zm19 0v1h-1v-1h1zm-19-2v1H0v-1h1zm19 0v1h-1v-1h1zm-19-2v1H0v-1h1zm19 0v1h-1v-1h1zm-19-2v1H0v-1h1zm19 0v1h-1v-1h1zm-19-2v1H0v-1h1zm19 0v1h-1v-1h1zm-19-2v1H0v-1h1zm19 0v1h-1v-1h1zm0-2v1h-1v-1h1zm-19 0v1H0v-1h1zM14.5 2v1h-1V2h1zm2 0v1h-1V2h1zm2 0v1h-1V2h1zm-8 0v1h-1V2h1zm-2 0v1h-1V2h1zm-2 0v1h-1V2h1zm-2 0v1h-1V2h1zm8 0v1h-1V2h1zm-10 0v1h-1V2h1z"/><path d="M18.095 2H1.905C.853 2 0 2.895 0 4v12c0 1.105.853 2 1.905 2h16.19C19.147 18 20 17.105 20 16V4c0-1.105-.853-2-1.905-2zm0 1.5c.263 0 .476.224.476.5v12c0 .276-.213.5-.476.5H1.905a.489.489 0 0 1-.476-.5V4c0-.276.213-.5.476-.5h16.19z"/></svg>';
var objectSizeLarge = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M2.5 17v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zM1 15.5v1H0v-1h1zm19 0v1h-1v-1h1zm-19-2v1H0v-1h1zm19 0v1h-1v-1h1zm-19-2v1H0v-1h1zm19 0v1h-1v-1h1zm-19-2v1H0v-1h1zm19 0v1h-1v-1h1zm-19-2v1H0v-1h1zm19 0v1h-1v-1h1zm-19-2v1H0v-1h1zm19 0v1h-1v-1h1zm0-2v1h-1v-1h1zm-19 0v1H0v-1h1zM14.5 2v1h-1V2h1zm2 0v1h-1V2h1zm2 0v1h-1V2h1zm-8 0v1h-1V2h1zm-2 0v1h-1V2h1zm-2 0v1h-1V2h1zm-2 0v1h-1V2h1zm8 0v1h-1V2h1zm-10 0v1h-1V2h1z"/><path d="M13 6H2a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h11a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2zm0 1.5a.5.5 0 0 1 .5.5v8a.5.5 0 0 1-.5.5H2a.5.5 0 0 1-.5-.5V8a.5.5 0 0 1 .5-.5h11z"/></svg>';
var objectSizeSmall = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M2.5 17v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zM1 15.5v1H0v-1h1zm19 0v1h-1v-1h1zm-19-2v1H0v-1h1zm19 0v1h-1v-1h1zm-19-2v1H0v-1h1zm19 0v1h-1v-1h1zm-19-2v1H0v-1h1zm19 0v1h-1v-1h1zm-19-2v1H0v-1h1zm19 0v1h-1v-1h1zm-19-2v1H0v-1h1zm19 0v1h-1v-1h1zm0-2v1h-1v-1h1zm-19 0v1H0v-1h1zM14.5 2v1h-1V2h1zm2 0v1h-1V2h1zm2 0v1h-1V2h1zm-8 0v1h-1V2h1zm-2 0v1h-1V2h1zm-2 0v1h-1V2h1zm-2 0v1h-1V2h1zm8 0v1h-1V2h1zm-10 0v1h-1V2h1z"/><path d="M7 10H2a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h5a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2zm0 1.5a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5H2a.5.5 0 0 1-.5-.5v-4a.5.5 0 0 1 .5-.5h5z"/></svg>';
var objectSizeMedium = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M2.5 17v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zM1 15.5v1H0v-1h1zm19 0v1h-1v-1h1zm-19-2v1H0v-1h1zm19 0v1h-1v-1h1zm-19-2v1H0v-1h1zm19 0v1h-1v-1h1zm-19-2v1H0v-1h1zm19 0v1h-1v-1h1zm-19-2v1H0v-1h1zm19 0v1h-1v-1h1zm-19-2v1H0v-1h1zm19 0v1h-1v-1h1zm0-2v1h-1v-1h1zm-19 0v1H0v-1h1zM14.5 2v1h-1V2h1zm2 0v1h-1V2h1zm2 0v1h-1V2h1zm-8 0v1h-1V2h1zm-2 0v1h-1V2h1zm-2 0v1h-1V2h1zm-2 0v1h-1V2h1zm8 0v1h-1V2h1zm-10 0v1h-1V2h1z"/><path d="M10 8H2a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2v-6a2 2 0 0 0-2-2zm0 1.5a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-.5.5H2a.5.5 0 0 1-.5-.5v-6a.5.5 0 0 1 .5-.5h8z"/></svg>';
var pencil = '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="m7.3 17.37-.061.088a1.518 1.518 0 0 1-.934.535l-4.178.663-.806-4.153a1.495 1.495 0 0 1 .187-1.058l.056-.086L8.77 2.639c.958-1.351 2.803-1.076 4.296-.03 1.497 1.047 2.387 2.693 1.433 4.055L7.3 17.37zM9.14 4.728l-5.545 8.346 3.277 2.294 5.544-8.346L9.14 4.728zM6.07 16.512l-3.276-2.295.53 2.73 2.746-.435zM9.994 3.506 13.271 5.8c.316-.452-.16-1.333-1.065-1.966-.905-.634-1.895-.78-2.212-.328zM8 18.5 9.375 17H19v1.5H8z"/></svg>';
var pilcrow = '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M6.999 2H15a1 1 0 0 1 0 2h-1.004v13a1 1 0 1 1-2 0V4H8.999v13a1 1 0 1 1-2 0v-7A4 4 0 0 1 3 6a4 4 0 0 1 3.999-4z"/></svg>';
var quote = '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M3 10.423a6.5 6.5 0 0 1 6.056-6.408l.038.67C6.448 5.423 5.354 7.663 5.22 10H9c.552 0 .5.432.5.986v4.511c0 .554-.448.503-1 .503h-5c-.552 0-.5-.449-.5-1.003v-4.574zm8 0a6.5 6.5 0 0 1 6.056-6.408l.038.67c-2.646.739-3.74 2.979-3.873 5.315H17c.552 0 .5.432.5.986v4.511c0 .554-.448.503-1 .503h-5c-.552 0-.5-.449-.5-1.003v-4.574z"/></svg>';
var threeVerticalDots = '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle cx="9.5" cy="4.5" r="1.5"/><circle cx="9.5" cy="10.5" r="1.5"/><circle cx="9.5" cy="16.5" r="1.5"/></svg>';
var bold = '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M10.187 17H5.773c-.637 0-1.092-.138-1.364-.415-.273-.277-.409-.718-.409-1.323V4.738c0-.617.14-1.062.419-1.332.279-.27.73-.406 1.354-.406h4.68c.69 0 1.288.041 1.793.124.506.083.96.242 1.36.478.341.197.644.447.906.75a3.262 3.262 0 0 1 .808 2.162c0 1.401-.722 2.426-2.167 3.075C15.05 10.175 16 11.315 16 13.01a3.756 3.756 0 0 1-2.296 3.504 6.1 6.1 0 0 1-1.517.377c-.571.073-1.238.11-2 .11zm-.217-6.217H7v4.087h3.069c1.977 0 2.965-.69 2.965-2.072 0-.707-.256-1.22-.768-1.537-.512-.319-1.277-.478-2.296-.478zM7 5.13v3.619h2.606c.729 0 1.292-.067 1.69-.2a1.6 1.6 0 0 0 .91-.765c.165-.267.247-.566.247-.897 0-.707-.26-1.176-.778-1.409-.519-.232-1.31-.348-2.375-.348H7z"/></svg>';
var paragraph = '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M10.5 5.5H7v5h3.5a2.5 2.5 0 1 0 0-5zM5 3h6.5v.025a5 5 0 0 1 0 9.95V13H7v4a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1z"/></svg>';
var plus = '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M10 2a1 1 0 0 0-1 1v6H3a1 1 0 1 0 0 2h6v6a1 1 0 1 0 2 0v-6h6a1 1 0 1 0 0-2h-6V3a1 1 0 0 0-1-1Z"/></svg>';
var text = '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#a)"><path d="M9.816 11.5 7.038 4.785 4.261 11.5h5.555Zm.62 1.5H3.641l-1.666 4.028H.312l5.789-14h1.875l5.789 14h-1.663L10.436 13Z"/><path clip-rule="evenodd" d="m12.09 17-.534-1.292.848-1.971.545 1.319L12.113 17h-.023Zm1.142-5.187.545 1.319L15.5 9.13l1.858 4.316h-3.45l.398.965h3.467L18.887 17H20l-3.873-9h-1.254l-1.641 3.813Z"/></g><defs><clipPath id="a"><path d="M0 0h20v20H0z"/></clipPath></defs></svg>';
var importExport = '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#a)"><path clip-rule="evenodd" d="M19 4.5 14 0H3v12.673l.868-1.041c.185-.222.4-.402.632-.54V1.5h8v5h5v7.626a2.24 2.24 0 0 1 1.5.822V4.5ZM14 5V2l3.3 3H14Zm-3.692 12.5c.062.105.133.206.213.303L11.52 19H8v-.876a2.243 2.243 0 0 0 1.82-.624h.488Zm7.518-.657a.75.75 0 0 0-1.152-.96L15.5 17.29V12H14v5.29l-1.174-1.408a.75.75 0 0 0-1.152.96l2.346 2.816a.95.95 0 0 0 1.46 0l2.346-2.815Zm-15.056-.38a.75.75 0 0 1-.096-1.056l2.346-2.815a.95.95 0 0 1 1.46 0l2.346 2.815a.75.75 0 1 1-1.152.96L6.5 14.96V20H5v-5.04l-1.174 1.408a.75.75 0 0 1-1.056.096Z"/></g><defs><clipPath id="a"><path d="M0 0h20v20H0z"/></clipPath></defs></svg>';
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
const icons = {
  bold,
  cancel,
  caption,
  check,
  cog,
  eraser,
  image,
  lowVision,
  importExport,
  paragraph,
  plus,
  text,
  alignBottom,
  alignMiddle,
  alignTop,
  alignLeft,
  alignCenter,
  alignRight,
  alignJustify,
  objectLeft,
  objectCenter,
  objectRight,
  objectFullWidth,
  objectInline,
  objectBlockLeft,
  objectBlockRight,
  objectSizeFull,
  objectSizeLarge,
  objectSizeSmall,
  objectSizeMedium,
  pencil,
  pilcrow,
  quote,
  threeVerticalDots
};
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class FontCommand extends Command {
  constructor(editor, attributeKey) {
    super(editor);
    this.attributeKey = attributeKey;
  }
  refresh() {
    const model = this.editor.model;
    const doc = model.document;
    this.value = doc.selection.getAttribute(this.attributeKey);
    this.isEnabled = model.schema.checkAttributeInSelection(doc.selection, this.attributeKey);
  }
  execute(options = {}) {
    const model = this.editor.model;
    const document2 = model.document;
    const selection = document2.selection;
    const value = options.value;
    model.change((writer) => {
      if (selection.isCollapsed) {
        if (value) {
          writer.setSelectionAttribute(this.attributeKey, value);
        } else {
          writer.removeSelectionAttribute(this.attributeKey);
        }
      } else {
        const ranges = model.schema.getValidRanges(selection.getRanges(), this.attributeKey);
        for (const range of ranges) {
          if (value) {
            writer.setAttribute(this.attributeKey, value, range);
          } else {
            writer.removeAttribute(this.attributeKey, range);
          }
        }
      }
    });
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
function clickOutsideHandler({ emitter, activator, callback, contextElements }) {
  emitter.listenTo(document, "mousedown", (evt, domEvt) => {
    if (!activator()) {
      return;
    }
    const path = typeof domEvt.composedPath == "function" ? domEvt.composedPath() : [];
    const contextElementsList = typeof contextElements == "function" ? contextElements() : contextElements;
    for (const contextElement of contextElementsList) {
      if (contextElement.contains(domEvt.target) || path.includes(contextElement)) {
        return;
      }
    }
    callback();
  });
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
function addKeyboardHandlingForGrid({ keystrokeHandler, focusTracker, gridItems, numberOfColumns, uiLanguageDirection }) {
  const getNumberOfColumns = typeof numberOfColumns === "number" ? () => numberOfColumns : numberOfColumns;
  keystrokeHandler.set("arrowright", getGridItemFocuser((focusedElementIndex, gridItems2) => {
    return uiLanguageDirection === "rtl" ? getLeftElementIndex(focusedElementIndex, gridItems2.length) : getRightElementIndex(focusedElementIndex, gridItems2.length);
  }));
  keystrokeHandler.set("arrowleft", getGridItemFocuser((focusedElementIndex, gridItems2) => {
    return uiLanguageDirection === "rtl" ? getRightElementIndex(focusedElementIndex, gridItems2.length) : getLeftElementIndex(focusedElementIndex, gridItems2.length);
  }));
  keystrokeHandler.set("arrowup", getGridItemFocuser((focusedElementIndex, gridItems2) => {
    let nextIndex = focusedElementIndex - getNumberOfColumns();
    if (nextIndex < 0) {
      nextIndex = focusedElementIndex + getNumberOfColumns() * Math.floor(gridItems2.length / getNumberOfColumns());
      if (nextIndex > gridItems2.length - 1) {
        nextIndex -= getNumberOfColumns();
      }
    }
    return nextIndex;
  }));
  keystrokeHandler.set("arrowdown", getGridItemFocuser((focusedElementIndex, gridItems2) => {
    let nextIndex = focusedElementIndex + getNumberOfColumns();
    if (nextIndex > gridItems2.length - 1) {
      nextIndex = focusedElementIndex % getNumberOfColumns();
    }
    return nextIndex;
  }));
  function getGridItemFocuser(getIndexToFocus) {
    return (evt) => {
      const focusedElement = gridItems.find((item) => item.element === focusTracker.focusedElement);
      const focusedElementIndex = gridItems.getIndex(focusedElement);
      const nextIndexToFocus = getIndexToFocus(focusedElementIndex, gridItems);
      gridItems.get(nextIndexToFocus).focus();
      evt.stopPropagation();
      evt.preventDefault();
    };
  }
  function getRightElementIndex(elementIndex, collectionLength) {
    if (elementIndex === collectionLength - 1) {
      return 0;
    } else {
      return elementIndex + 1;
    }
  }
  function getLeftElementIndex(elementIndex, collectionLength) {
    if (elementIndex === 0) {
      return collectionLength - 1;
    } else {
      return elementIndex - 1;
    }
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class ViewCollection extends Collection {
  constructor(initialItems = []) {
    super(initialItems, {
      idProperty: "viewUid"
    });
    this.on("add", (evt, view, index) => {
      this._renderViewIntoCollectionParent(view, index);
    });
    this.on("remove", (evt, view) => {
      if (view.element && this._parentElement) {
        view.element.remove();
      }
    });
    this._parentElement = null;
  }
  destroy() {
    this.map((view) => view.destroy());
  }
  setParent(elementOrDocFragment) {
    this._parentElement = elementOrDocFragment;
    for (const view of this) {
      this._renderViewIntoCollectionParent(view);
    }
  }
  delegate(...events) {
    if (!events.length || !isStringArray(events)) {
      throw new CKEditorError("ui-viewcollection-delegate-wrong-events", this);
    }
    return {
      to: (dest) => {
        for (const view of this) {
          for (const evtName of events) {
            view.delegate(evtName).to(dest);
          }
        }
        this.on("add", (evt, view) => {
          for (const evtName of events) {
            view.delegate(evtName).to(dest);
          }
        });
        this.on("remove", (evt, view) => {
          for (const evtName of events) {
            view.stopDelegating(evtName, dest);
          }
        });
      }
    };
  }
  _renderViewIntoCollectionParent(view, index) {
    if (!view.isRendered) {
      view.render();
    }
    if (view.element && this._parentElement) {
      this._parentElement.insertBefore(view.element, this._parentElement.children[index]);
    }
  }
}
function isStringArray(arr) {
  return arr.every((a2) => typeof a2 == "string");
}
var globals = "";
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class View extends DomEmitterMixin(ObservableMixin()) {
  constructor(locale) {
    super();
    this.element = null;
    this.isRendered = false;
    this.locale = locale;
    this.t = locale && locale.t;
    this._viewCollections = new Collection();
    this._unboundChildren = this.createCollection();
    this._viewCollections.on("add", (evt, collection) => {
      collection.locale = locale;
      collection.t = locale && locale.t;
    });
    this.decorate("render");
  }
  get bindTemplate() {
    if (this._bindTemplate) {
      return this._bindTemplate;
    }
    return this._bindTemplate = Template.bind(this, this);
  }
  createCollection(views) {
    const collection = new ViewCollection(views);
    this._viewCollections.add(collection);
    return collection;
  }
  registerChild(children) {
    if (!isIterable(children)) {
      children = [children];
    }
    for (const child of children) {
      this._unboundChildren.add(child);
    }
  }
  deregisterChild(children) {
    if (!isIterable(children)) {
      children = [children];
    }
    for (const child of children) {
      this._unboundChildren.remove(child);
    }
  }
  setTemplate(definition) {
    this.template = new Template(definition);
  }
  extendTemplate(definition) {
    Template.extend(this.template, definition);
  }
  render() {
    if (this.isRendered) {
      throw new CKEditorError("ui-view-render-already-rendered", this);
    }
    if (this.template) {
      this.element = this.template.render();
      this.registerChild(this.template.getViews());
    }
    this.isRendered = true;
  }
  destroy() {
    this.stopListening();
    this._viewCollections.map((c2) => c2.destroy());
    if (this.template && this.template._revertData) {
      this.template.revert(this.element);
    }
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
const xhtmlNs = "http://www.w3.org/1999/xhtml";
class Template extends EmitterMixin() {
  constructor(def) {
    super();
    Object.assign(this, normalize(clone(def)));
    this._isRendered = false;
    this._revertData = null;
  }
  render() {
    const node = this._renderNode({
      intoFragment: true
    });
    this._isRendered = true;
    return node;
  }
  apply(node) {
    this._revertData = getEmptyRevertData();
    this._renderNode({
      node,
      intoFragment: false,
      isApplying: true,
      revertData: this._revertData
    });
    return node;
  }
  revert(node) {
    if (!this._revertData) {
      throw new CKEditorError("ui-template-revert-not-applied", [this, node]);
    }
    this._revertTemplateFromNode(node, this._revertData);
  }
  *getViews() {
    function* search(def) {
      if (def.children) {
        for (const child of def.children) {
          if (isView(child)) {
            yield child;
          } else if (isTemplate(child)) {
            yield* search(child);
          }
        }
      }
    }
    yield* search(this);
  }
  static bind(observable, emitter) {
    return {
      to(eventNameOrFunctionOrAttribute, callback) {
        return new TemplateToBinding({
          eventNameOrFunction: eventNameOrFunctionOrAttribute,
          attribute: eventNameOrFunctionOrAttribute,
          observable,
          emitter,
          callback
        });
      },
      if(attribute, valueIfTrue, callback) {
        return new TemplateIfBinding({
          observable,
          emitter,
          attribute,
          valueIfTrue,
          callback
        });
      }
    };
  }
  static extend(template, def) {
    if (template._isRendered) {
      throw new CKEditorError("template-extend-render", [this, template]);
    }
    extendTemplate(template, normalize(clone(def)));
  }
  _renderNode(data) {
    let isInvalid;
    if (data.node) {
      isInvalid = this.tag && this.text;
    } else {
      isInvalid = this.tag ? this.text : !this.text;
    }
    if (isInvalid) {
      throw new CKEditorError("ui-template-wrong-syntax", this);
    }
    if (this.text) {
      return this._renderText(data);
    } else {
      return this._renderElement(data);
    }
  }
  _renderElement(data) {
    let node = data.node;
    if (!node) {
      node = data.node = document.createElementNS(this.ns || xhtmlNs, this.tag);
    }
    this._renderAttributes(data);
    this._renderElementChildren(data);
    this._setUpListeners(data);
    return node;
  }
  _renderText(data) {
    let node = data.node;
    if (node) {
      data.revertData.text = node.textContent;
    } else {
      node = data.node = document.createTextNode("");
    }
    if (hasTemplateBinding(this.text)) {
      this._bindToObservable({
        schema: this.text,
        updater: getTextUpdater(node),
        data
      });
    } else {
      node.textContent = this.text.join("");
    }
    return node;
  }
  _renderAttributes(data) {
    if (!this.attributes) {
      return;
    }
    const node = data.node;
    const revertData = data.revertData;
    for (const attrName in this.attributes) {
      const domAttrValue = node.getAttribute(attrName);
      const attrValue = this.attributes[attrName];
      if (revertData) {
        revertData.attributes[attrName] = domAttrValue;
      }
      const attrNs = isNamespaced(attrValue) ? attrValue[0].ns : null;
      if (hasTemplateBinding(attrValue)) {
        const valueToBind = isNamespaced(attrValue) ? attrValue[0].value : attrValue;
        if (revertData && shouldExtend(attrName)) {
          valueToBind.unshift(domAttrValue);
        }
        this._bindToObservable({
          schema: valueToBind,
          updater: getAttributeUpdater(node, attrName, attrNs),
          data
        });
      } else if (attrName == "style" && typeof attrValue[0] !== "string") {
        this._renderStyleAttribute(attrValue[0], data);
      } else {
        if (revertData && domAttrValue && shouldExtend(attrName)) {
          attrValue.unshift(domAttrValue);
        }
        const value = attrValue.map((val) => val ? val.value || val : val).reduce((prev, next) => prev.concat(next), []).reduce(arrayValueReducer, "");
        if (!isFalsy(value)) {
          node.setAttributeNS(attrNs, attrName, value);
        }
      }
    }
  }
  _renderStyleAttribute(styles2, data) {
    const node = data.node;
    for (const styleName in styles2) {
      const styleValue = styles2[styleName];
      if (hasTemplateBinding(styleValue)) {
        this._bindToObservable({
          schema: [styleValue],
          updater: getStyleUpdater(node, styleName),
          data
        });
      } else {
        node.style[styleName] = styleValue;
      }
    }
  }
  _renderElementChildren(data) {
    const node = data.node;
    const container = data.intoFragment ? document.createDocumentFragment() : node;
    const isApplying = data.isApplying;
    let childIndex = 0;
    for (const child of this.children) {
      if (isViewCollection(child)) {
        if (!isApplying) {
          child.setParent(node);
          for (const view of child) {
            container.appendChild(view.element);
          }
        }
      } else if (isView(child)) {
        if (!isApplying) {
          if (!child.isRendered) {
            child.render();
          }
          container.appendChild(child.element);
        }
      } else if (isNode(child)) {
        container.appendChild(child);
      } else {
        if (isApplying) {
          const revertData = data.revertData;
          const childRevertData = getEmptyRevertData();
          revertData.children.push(childRevertData);
          child._renderNode({
            intoFragment: false,
            node: container.childNodes[childIndex++],
            isApplying: true,
            revertData: childRevertData
          });
        } else {
          container.appendChild(child.render());
        }
      }
    }
    if (data.intoFragment) {
      node.appendChild(container);
    }
  }
  _setUpListeners(data) {
    if (!this.eventListeners) {
      return;
    }
    for (const key in this.eventListeners) {
      const revertBindings = this.eventListeners[key].map((schemaItem) => {
        const [domEvtName, domSelector] = key.split("@");
        return schemaItem.activateDomEventListener(domEvtName, domSelector, data);
      });
      if (data.revertData) {
        data.revertData.bindings.push(revertBindings);
      }
    }
  }
  _bindToObservable({ schema, updater, data }) {
    const revertData = data.revertData;
    syncValueSchemaValue(schema, updater, data);
    const revertBindings = schema.filter((item) => !isFalsy(item)).filter((item) => item.observable).map((templateBinding) => templateBinding.activateAttributeListener(schema, updater, data));
    if (revertData) {
      revertData.bindings.push(revertBindings);
    }
  }
  _revertTemplateFromNode(node, revertData) {
    for (const binding of revertData.bindings) {
      for (const revertBinding of binding) {
        revertBinding();
      }
    }
    if (revertData.text) {
      node.textContent = revertData.text;
      return;
    }
    const element = node;
    for (const attrName in revertData.attributes) {
      const attrValue = revertData.attributes[attrName];
      if (attrValue === null) {
        element.removeAttribute(attrName);
      } else {
        element.setAttribute(attrName, attrValue);
      }
    }
    for (let i2 = 0; i2 < revertData.children.length; ++i2) {
      this._revertTemplateFromNode(element.childNodes[i2], revertData.children[i2]);
    }
  }
}
class TemplateBinding {
  constructor(def) {
    this.attribute = def.attribute;
    this.observable = def.observable;
    this.emitter = def.emitter;
    this.callback = def.callback;
  }
  getValue(node) {
    const value = this.observable[this.attribute];
    return this.callback ? this.callback(value, node) : value;
  }
  activateAttributeListener(schema, updater, data) {
    const callback = () => syncValueSchemaValue(schema, updater, data);
    this.emitter.listenTo(this.observable, `change:${this.attribute}`, callback);
    return () => {
      this.emitter.stopListening(this.observable, `change:${this.attribute}`, callback);
    };
  }
}
class TemplateToBinding extends TemplateBinding {
  constructor(def) {
    super(def);
    this.eventNameOrFunction = def.eventNameOrFunction;
  }
  activateDomEventListener(domEvtName, domSelector, data) {
    const callback = (evt, domEvt) => {
      if (!domSelector || domEvt.target.matches(domSelector)) {
        if (typeof this.eventNameOrFunction == "function") {
          this.eventNameOrFunction(domEvt);
        } else {
          this.observable.fire(this.eventNameOrFunction, domEvt);
        }
      }
    };
    this.emitter.listenTo(data.node, domEvtName, callback);
    return () => {
      this.emitter.stopListening(data.node, domEvtName, callback);
    };
  }
}
class TemplateIfBinding extends TemplateBinding {
  constructor(def) {
    super(def);
    this.valueIfTrue = def.valueIfTrue;
  }
  getValue(node) {
    const value = super.getValue(node);
    return isFalsy(value) ? false : this.valueIfTrue || true;
  }
}
function hasTemplateBinding(schema) {
  if (!schema) {
    return false;
  }
  if (schema.value) {
    schema = schema.value;
  }
  if (Array.isArray(schema)) {
    return schema.some(hasTemplateBinding);
  } else if (schema instanceof TemplateBinding) {
    return true;
  }
  return false;
}
function getValueSchemaValue(schema, node) {
  return schema.map((schemaItem) => {
    if (schemaItem instanceof TemplateBinding) {
      return schemaItem.getValue(node);
    }
    return schemaItem;
  });
}
function syncValueSchemaValue(schema, updater, { node }) {
  const values = getValueSchemaValue(schema, node);
  let value;
  if (schema.length == 1 && schema[0] instanceof TemplateIfBinding) {
    value = values[0];
  } else {
    value = values.reduce(arrayValueReducer, "");
  }
  if (isFalsy(value)) {
    updater.remove();
  } else {
    updater.set(value);
  }
}
function getTextUpdater(node) {
  return {
    set(value) {
      node.textContent = value;
    },
    remove() {
      node.textContent = "";
    }
  };
}
function getAttributeUpdater(el, attrName, ns) {
  return {
    set(value) {
      el.setAttributeNS(ns, attrName, value);
    },
    remove() {
      el.removeAttributeNS(ns, attrName);
    }
  };
}
function getStyleUpdater(el, styleName) {
  return {
    set(value) {
      el.style[styleName] = value;
    },
    remove() {
      el.style[styleName] = null;
    }
  };
}
function clone(def) {
  const clone2 = cloneDeepWith(def, (value) => {
    if (value && (value instanceof TemplateBinding || isTemplate(value) || isView(value) || isViewCollection(value))) {
      return value;
    }
  });
  return clone2;
}
function normalize(def) {
  if (typeof def == "string") {
    def = normalizePlainTextDefinition(def);
  } else if (def.text) {
    normalizeTextDefinition(def);
  }
  if (def.on) {
    def.eventListeners = normalizeListeners(def.on);
    delete def.on;
  }
  if (!def.text) {
    if (def.attributes) {
      normalizeAttributes(def.attributes);
    }
    const children = [];
    if (def.children) {
      if (isViewCollection(def.children)) {
        children.push(def.children);
      } else {
        for (const child of def.children) {
          if (isTemplate(child) || isView(child) || isNode(child)) {
            children.push(child);
          } else {
            children.push(new Template(child));
          }
        }
      }
    }
    def.children = children;
  }
  return def;
}
function normalizeAttributes(attributes) {
  for (const a2 in attributes) {
    if (attributes[a2].value) {
      attributes[a2].value = toArray(attributes[a2].value);
    }
    arrayify(attributes, a2);
  }
}
function normalizeListeners(listeners) {
  for (const l2 in listeners) {
    arrayify(listeners, l2);
  }
  return listeners;
}
function normalizePlainTextDefinition(def) {
  return {
    text: [def]
  };
}
function normalizeTextDefinition(def) {
  def.text = toArray(def.text);
}
function arrayify(obj, key) {
  obj[key] = toArray(obj[key]);
}
function arrayValueReducer(prev, cur) {
  if (isFalsy(cur)) {
    return prev;
  } else if (isFalsy(prev)) {
    return cur;
  } else {
    return `${prev} ${cur}`;
  }
}
function extendObjectValueArray(obj, ext) {
  for (const a2 in ext) {
    if (obj[a2]) {
      obj[a2].push(...ext[a2]);
    } else {
      obj[a2] = ext[a2];
    }
  }
}
function extendTemplate(template, def) {
  if (def.attributes) {
    if (!template.attributes) {
      template.attributes = {};
    }
    extendObjectValueArray(template.attributes, def.attributes);
  }
  if (def.eventListeners) {
    if (!template.eventListeners) {
      template.eventListeners = {};
    }
    extendObjectValueArray(template.eventListeners, def.eventListeners);
  }
  if (def.text) {
    template.text.push(...def.text);
  }
  if (def.children && def.children.length) {
    if (template.children.length != def.children.length) {
      throw new CKEditorError("ui-template-extend-children-mismatch", template);
    }
    let childIndex = 0;
    for (const childDef of def.children) {
      extendTemplate(template.children[childIndex++], childDef);
    }
  }
}
function isFalsy(value) {
  return !value && value !== 0;
}
function isView(item) {
  return item instanceof View;
}
function isTemplate(item) {
  return item instanceof Template;
}
function isViewCollection(item) {
  return item instanceof ViewCollection;
}
function isNamespaced(attrValue) {
  return isObject(attrValue[0]) && attrValue[0].ns;
}
function getEmptyRevertData() {
  return {
    children: [],
    bindings: [],
    attributes: {}
  };
}
function shouldExtend(attrName) {
  return attrName == "class" || attrName == "style";
}
var icon = "";
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class IconView extends View {
  constructor() {
    super();
    const bind = this.bindTemplate;
    this.set("content", "");
    this.set("viewBox", "0 0 20 20");
    this.set("fillColor", "");
    this.set("isColorInherited", true);
    this.setTemplate({
      tag: "svg",
      ns: "http://www.w3.org/2000/svg",
      attributes: {
        class: [
          "ck",
          "ck-icon",
          "ck-reset_all-excluded",
          bind.if("isColorInherited", "ck-icon_inherit-color")
        ],
        viewBox: bind.to("viewBox")
      }
    });
  }
  render() {
    super.render();
    this._updateXMLContent();
    this._colorFillPaths();
    this.on("change:content", () => {
      this._updateXMLContent();
      this._colorFillPaths();
    });
    this.on("change:fillColor", () => {
      this._colorFillPaths();
    });
  }
  _updateXMLContent() {
    if (this.content) {
      const parsed = new DOMParser().parseFromString(this.content.trim(), "image/svg+xml");
      const svg = parsed.querySelector("svg");
      const viewBox = svg.getAttribute("viewBox");
      if (viewBox) {
        this.viewBox = viewBox;
      }
      for (const { name, value } of Array.from(svg.attributes)) {
        if (IconView.presentationalAttributeNames.includes(name)) {
          this.element.setAttribute(name, value);
        }
      }
      while (this.element.firstChild) {
        this.element.removeChild(this.element.firstChild);
      }
      while (svg.childNodes.length > 0) {
        this.element.appendChild(svg.childNodes[0]);
      }
    }
  }
  _colorFillPaths() {
    if (this.fillColor) {
      this.element.querySelectorAll(".ck-icon__fill").forEach((path) => {
        path.style.fill = this.fillColor;
      });
    }
  }
}
IconView.presentationalAttributeNames = [
  "alignment-baseline",
  "baseline-shift",
  "clip-path",
  "clip-rule",
  "color",
  "color-interpolation",
  "color-interpolation-filters",
  "color-rendering",
  "cursor",
  "direction",
  "display",
  "dominant-baseline",
  "fill",
  "fill-opacity",
  "fill-rule",
  "filter",
  "flood-color",
  "flood-opacity",
  "font-family",
  "font-size",
  "font-size-adjust",
  "font-stretch",
  "font-style",
  "font-variant",
  "font-weight",
  "image-rendering",
  "letter-spacing",
  "lighting-color",
  "marker-end",
  "marker-mid",
  "marker-start",
  "mask",
  "opacity",
  "overflow",
  "paint-order",
  "pointer-events",
  "shape-rendering",
  "stop-color",
  "stop-opacity",
  "stroke",
  "stroke-dasharray",
  "stroke-dashoffset",
  "stroke-linecap",
  "stroke-linejoin",
  "stroke-miterlimit",
  "stroke-opacity",
  "stroke-width",
  "text-anchor",
  "text-decoration",
  "text-overflow",
  "text-rendering",
  "transform",
  "unicode-bidi",
  "vector-effect",
  "visibility",
  "white-space",
  "word-spacing",
  "writing-mode"
];
var button = "";
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class ButtonView extends View {
  constructor(locale) {
    super(locale);
    const bind = this.bindTemplate;
    const ariaLabelUid = uid();
    this.set("class", void 0);
    this.set("labelStyle", void 0);
    this.set("icon", void 0);
    this.set("isEnabled", true);
    this.set("isOn", false);
    this.set("isVisible", true);
    this.set("isToggleable", false);
    this.set("keystroke", void 0);
    this.set("label", void 0);
    this.set("tabindex", -1);
    this.set("tooltip", false);
    this.set("tooltipPosition", "s");
    this.set("type", "button");
    this.set("withText", false);
    this.set("withKeystroke", false);
    this.children = this.createCollection();
    this.labelView = this._createLabelView(ariaLabelUid);
    this.iconView = new IconView();
    this.iconView.extendTemplate({
      attributes: {
        class: "ck-button__icon"
      }
    });
    this.keystrokeView = this._createKeystrokeView();
    this.bind("_tooltipString").to(this, "tooltip", this, "label", this, "keystroke", this._getTooltipString.bind(this));
    const template = {
      tag: "button",
      attributes: {
        class: [
          "ck",
          "ck-button",
          bind.to("class"),
          bind.if("isEnabled", "ck-disabled", (value) => !value),
          bind.if("isVisible", "ck-hidden", (value) => !value),
          bind.to("isOn", (value) => value ? "ck-on" : "ck-off"),
          bind.if("withText", "ck-button_with-text"),
          bind.if("withKeystroke", "ck-button_with-keystroke")
        ],
        type: bind.to("type", (value) => value ? value : "button"),
        tabindex: bind.to("tabindex"),
        "aria-labelledby": `ck-editor__aria-label_${ariaLabelUid}`,
        "aria-disabled": bind.if("isEnabled", true, (value) => !value),
        "aria-pressed": bind.to("isOn", (value) => this.isToggleable ? String(!!value) : false),
        "data-cke-tooltip-text": bind.to("_tooltipString"),
        "data-cke-tooltip-position": bind.to("tooltipPosition")
      },
      children: this.children,
      on: {
        click: bind.to((evt) => {
          if (this.isEnabled) {
            this.fire("execute");
          } else {
            evt.preventDefault();
          }
        })
      }
    };
    if (env.isSafari) {
      template.on.mousedown = bind.to((evt) => {
        this.focus();
        evt.preventDefault();
      });
    }
    this.setTemplate(template);
  }
  render() {
    super.render();
    if (this.icon) {
      this.iconView.bind("content").to(this, "icon");
      this.children.add(this.iconView);
    }
    this.children.add(this.labelView);
    if (this.withKeystroke && this.keystroke) {
      this.children.add(this.keystrokeView);
    }
  }
  focus() {
    this.element.focus();
  }
  _createLabelView(ariaLabelUid) {
    const labelView = new View();
    const bind = this.bindTemplate;
    labelView.setTemplate({
      tag: "span",
      attributes: {
        class: [
          "ck",
          "ck-button__label"
        ],
        style: bind.to("labelStyle"),
        id: `ck-editor__aria-label_${ariaLabelUid}`
      },
      children: [
        {
          text: this.bindTemplate.to("label")
        }
      ]
    });
    return labelView;
  }
  _createKeystrokeView() {
    const keystrokeView = new View();
    keystrokeView.setTemplate({
      tag: "span",
      attributes: {
        class: [
          "ck",
          "ck-button__keystroke"
        ]
      },
      children: [
        {
          text: this.bindTemplate.to("keystroke", (text2) => getEnvKeystrokeText(text2))
        }
      ]
    });
    return keystrokeView;
  }
  _getTooltipString(tooltip2, label2, keystroke) {
    if (tooltip2) {
      if (typeof tooltip2 == "string") {
        return tooltip2;
      } else {
        if (keystroke) {
          keystroke = getEnvKeystrokeText(keystroke);
        }
        if (tooltip2 instanceof Function) {
          return tooltip2(label2, keystroke);
        } else {
          return `${label2}${keystroke ? ` (${keystroke})` : ""}`;
        }
      }
    }
    return "";
  }
}
var switchbutton = "";
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class SwitchButtonView extends ButtonView {
  constructor(locale) {
    super(locale);
    this.isToggleable = true;
    this.toggleSwitchView = this._createToggleView();
    this.extendTemplate({
      attributes: {
        class: "ck-switchbutton"
      }
    });
  }
  render() {
    super.render();
    this.children.add(this.toggleSwitchView);
  }
  _createToggleView() {
    const toggleSwitchView = new View();
    toggleSwitchView.setTemplate({
      tag: "span",
      attributes: {
        class: [
          "ck",
          "ck-button__toggle"
        ]
      },
      children: [
        {
          tag: "span",
          attributes: {
            class: [
              "ck",
              "ck-button__toggle__inner"
            ]
          }
        }
      ]
    });
    return toggleSwitchView;
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
function getLocalizedColorOptions(locale, options) {
  const t4 = locale.t;
  const localizedColorNames = {
    Black: t4("Black"),
    "Dim grey": t4("Dim grey"),
    Grey: t4("Grey"),
    "Light grey": t4("Light grey"),
    White: t4("White"),
    Red: t4("Red"),
    Orange: t4("Orange"),
    Yellow: t4("Yellow"),
    "Light green": t4("Light green"),
    Green: t4("Green"),
    Aquamarine: t4("Aquamarine"),
    Turquoise: t4("Turquoise"),
    "Light blue": t4("Light blue"),
    Blue: t4("Blue"),
    Purple: t4("Purple")
  };
  return options.map((colorOption) => {
    const label2 = localizedColorNames[colorOption.label];
    if (label2 && label2 != colorOption.label) {
      colorOption.label = label2;
    }
    return colorOption;
  });
}
function normalizeColorOptions(options) {
  return options.map(normalizeSingleColorDefinition).filter((option) => !!option);
}
function normalizeSingleColorDefinition(color) {
  if (typeof color === "string") {
    return {
      model: color,
      label: color,
      hasBorder: false,
      view: {
        name: "span",
        styles: {
          color
        }
      }
    };
  } else {
    return {
      model: color.color,
      label: color.label || color.color,
      hasBorder: color.hasBorder === void 0 ? false : color.hasBorder,
      view: {
        name: "span",
        styles: {
          color: `${color.color}`
        }
      }
    };
  }
}
var checkIcon = '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path class="ck-icon__fill" d="M16.935 5.328a2 2 0 0 1 0 2.829l-7.778 7.778a2 2 0 0 1-2.829 0L3.5 13.107a1.999 1.999 0 1 1 2.828-2.829l.707.707a1 1 0 0 0 1.414 0l5.658-5.657a2 2 0 0 1 2.828 0z"/><path d="M14.814 6.035 8.448 12.4a1 1 0 0 1-1.414 0l-1.413-1.415A1 1 0 1 0 4.207 12.4l2.829 2.829a1 1 0 0 0 1.414 0l7.778-7.778a1 1 0 1 0-1.414-1.415z"/></svg>';
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class ColorTileView extends ButtonView {
  constructor(locale) {
    super(locale);
    const bind = this.bindTemplate;
    this.set("color", void 0);
    this.set("hasBorder", false);
    this.icon = checkIcon;
    this.extendTemplate({
      attributes: {
        style: {
          backgroundColor: bind.to("color")
        },
        class: [
          "ck",
          "ck-color-grid__tile",
          bind.if("hasBorder", "ck-color-table__color-tile_bordered")
        ]
      }
    });
  }
  render() {
    super.render();
    this.iconView.fillColor = "hsl(0, 0%, 100%)";
  }
}
var colorgrid = "";
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class ColorGridView extends View {
  constructor(locale, options) {
    super(locale);
    const colorDefinitions = options && options.colorDefinitions || [];
    this.columns = options && options.columns ? options.columns : 5;
    const viewStyleAttribute = {
      gridTemplateColumns: `repeat( ${this.columns}, 1fr)`
    };
    this.set("selectedColor", void 0);
    this.items = this.createCollection();
    this.focusTracker = new FocusTracker();
    this.keystrokes = new KeystrokeHandler();
    this.items.on("add", (evt, colorTile) => {
      colorTile.isOn = colorTile.color === this.selectedColor;
    });
    colorDefinitions.forEach((color) => {
      const colorTile = new ColorTileView();
      colorTile.set({
        color: color.color,
        label: color.label,
        tooltip: true,
        hasBorder: color.options.hasBorder
      });
      colorTile.on("execute", () => {
        this.fire("execute", {
          value: color.color,
          hasBorder: color.options.hasBorder,
          label: color.label
        });
      });
      this.items.add(colorTile);
    });
    this.setTemplate({
      tag: "div",
      children: this.items,
      attributes: {
        class: [
          "ck",
          "ck-color-grid"
        ],
        style: viewStyleAttribute
      }
    });
    this.on("change:selectedColor", (evt, name, selectedColor) => {
      for (const item of this.items) {
        item.isOn = item.color === selectedColor;
      }
    });
  }
  focus() {
    if (this.items.length) {
      this.items.first.focus();
    }
  }
  focusLast() {
    if (this.items.length) {
      this.items.last.focus();
    }
  }
  render() {
    super.render();
    for (const item of this.items) {
      this.focusTracker.add(item.element);
    }
    this.items.on("add", (evt, item) => {
      this.focusTracker.add(item.element);
    });
    this.items.on("remove", (evt, item) => {
      this.focusTracker.remove(item.element);
    });
    this.keystrokes.listenTo(this.element);
    addKeyboardHandlingForGrid({
      keystrokeHandler: this.keystrokes,
      focusTracker: this.focusTracker,
      gridItems: this.items,
      numberOfColumns: this.columns,
      uiLanguageDirection: this.locale && this.locale.uiLanguageDirection
    });
  }
  destroy() {
    super.destroy();
    this.focusTracker.destroy();
    this.keystrokes.destroy();
  }
}
var dropdown = "";
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class DropdownView extends View {
  constructor(locale, buttonView, panelView) {
    super(locale);
    const bind = this.bindTemplate;
    this.buttonView = buttonView;
    this.panelView = panelView;
    this.set("isOpen", false);
    this.set("isEnabled", true);
    this.set("class", void 0);
    this.set("id", void 0);
    this.set("panelPosition", "auto");
    this.keystrokes = new KeystrokeHandler();
    this.focusTracker = new FocusTracker();
    this.setTemplate({
      tag: "div",
      attributes: {
        class: [
          "ck",
          "ck-dropdown",
          bind.to("class"),
          bind.if("isEnabled", "ck-disabled", (value) => !value)
        ],
        id: bind.to("id"),
        "aria-describedby": bind.to("ariaDescribedById")
      },
      children: [
        buttonView,
        panelView
      ]
    });
    buttonView.extendTemplate({
      attributes: {
        class: [
          "ck-dropdown__button"
        ],
        "data-cke-tooltip-disabled": bind.to("isOpen")
      }
    });
  }
  render() {
    super.render();
    this.focusTracker.add(this.buttonView.element);
    this.focusTracker.add(this.panelView.element);
    this.listenTo(this.buttonView, "open", () => {
      this.isOpen = !this.isOpen;
    });
    this.panelView.bind("isVisible").to(this, "isOpen");
    this.on("change:isOpen", (evt, name, isOpen) => {
      if (!isOpen) {
        return;
      }
      if (this.panelPosition === "auto") {
        this.panelView.position = DropdownView._getOptimalPosition({
          element: this.panelView.element,
          target: this.buttonView.element,
          fitInViewport: true,
          positions: this._panelPositions
        }).name;
      } else {
        this.panelView.position = this.panelPosition;
      }
    });
    this.keystrokes.listenTo(this.element);
    const closeDropdown = (data, cancel2) => {
      if (this.isOpen) {
        this.isOpen = false;
        cancel2();
      }
    };
    this.keystrokes.set("arrowdown", (data, cancel2) => {
      if (this.buttonView.isEnabled && !this.isOpen) {
        this.isOpen = true;
        cancel2();
      }
    });
    this.keystrokes.set("arrowright", (data, cancel2) => {
      if (this.isOpen) {
        cancel2();
      }
    });
    this.keystrokes.set("arrowleft", closeDropdown);
    this.keystrokes.set("esc", closeDropdown);
  }
  focus() {
    this.buttonView.focus();
  }
  get _panelPositions() {
    const { south, north, southEast, southWest, northEast, northWest, southMiddleEast, southMiddleWest, northMiddleEast, northMiddleWest } = DropdownView.defaultPanelPositions;
    if (this.locale.uiLanguageDirection !== "rtl") {
      return [
        southEast,
        southWest,
        southMiddleEast,
        southMiddleWest,
        south,
        northEast,
        northWest,
        northMiddleEast,
        northMiddleWest,
        north
      ];
    } else {
      return [
        southWest,
        southEast,
        southMiddleWest,
        southMiddleEast,
        south,
        northWest,
        northEast,
        northMiddleWest,
        northMiddleEast,
        north
      ];
    }
  }
}
DropdownView.defaultPanelPositions = {
  south: (buttonRect, panelRect) => {
    return {
      top: buttonRect.bottom,
      left: buttonRect.left - (panelRect.width - buttonRect.width) / 2,
      name: "s"
    };
  },
  southEast: (buttonRect) => {
    return {
      top: buttonRect.bottom,
      left: buttonRect.left,
      name: "se"
    };
  },
  southWest: (buttonRect, panelRect) => {
    return {
      top: buttonRect.bottom,
      left: buttonRect.left - panelRect.width + buttonRect.width,
      name: "sw"
    };
  },
  southMiddleEast: (buttonRect, panelRect) => {
    return {
      top: buttonRect.bottom,
      left: buttonRect.left - (panelRect.width - buttonRect.width) / 4,
      name: "sme"
    };
  },
  southMiddleWest: (buttonRect, panelRect) => {
    return {
      top: buttonRect.bottom,
      left: buttonRect.left - (panelRect.width - buttonRect.width) * 3 / 4,
      name: "smw"
    };
  },
  north: (buttonRect, panelRect) => {
    return {
      top: buttonRect.top - panelRect.height,
      left: buttonRect.left - (panelRect.width - buttonRect.width) / 2,
      name: "n"
    };
  },
  northEast: (buttonRect, panelRect) => {
    return {
      top: buttonRect.top - panelRect.height,
      left: buttonRect.left,
      name: "ne"
    };
  },
  northWest: (buttonRect, panelRect) => {
    return {
      top: buttonRect.top - panelRect.height,
      left: buttonRect.left - panelRect.width + buttonRect.width,
      name: "nw"
    };
  },
  northMiddleEast: (buttonRect, panelRect) => {
    return {
      top: buttonRect.top - panelRect.height,
      left: buttonRect.left - (panelRect.width - buttonRect.width) / 4,
      name: "nme"
    };
  },
  northMiddleWest: (buttonRect, panelRect) => {
    return {
      top: buttonRect.top - panelRect.height,
      left: buttonRect.left - (panelRect.width - buttonRect.width) * 3 / 4,
      name: "nmw"
    };
  }
};
DropdownView._getOptimalPosition = getOptimalPosition;
var dropdownArrowIcon = '<svg viewBox="0 0 10 10" xmlns="http://www.w3.org/2000/svg"><path d="M.941 4.523a.75.75 0 1 1 1.06-1.06l3.006 3.005 3.005-3.005a.75.75 0 1 1 1.06 1.06l-3.549 3.55a.75.75 0 0 1-1.168-.136L.941 4.523z"/></svg>';
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class DropdownButtonView extends ButtonView {
  constructor(locale) {
    super(locale);
    this.arrowView = this._createArrowView();
    this.extendTemplate({
      attributes: {
        "aria-haspopup": true,
        "aria-expanded": this.bindTemplate.to("isOn", (value) => String(value))
      }
    });
    this.delegate("execute").to(this, "open");
  }
  render() {
    super.render();
    this.children.add(this.arrowView);
  }
  _createArrowView() {
    const arrowView = new IconView();
    arrowView.content = dropdownArrowIcon;
    arrowView.extendTemplate({
      attributes: {
        class: "ck-dropdown__arrow"
      }
    });
    return arrowView;
  }
}
var splitbutton = "";
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class SplitButtonView extends View {
  constructor(locale) {
    super(locale);
    const bind = this.bindTemplate;
    this.set("class", void 0);
    this.set("labelStyle", void 0);
    this.set("icon", void 0);
    this.set("isEnabled", true);
    this.set("isOn", false);
    this.set("isToggleable", false);
    this.set("isVisible", true);
    this.set("keystroke", void 0);
    this.set("withKeystroke", false);
    this.set("label", void 0);
    this.set("tabindex", -1);
    this.set("tooltip", false);
    this.set("tooltipPosition", "s");
    this.set("type", "button");
    this.set("withText", false);
    this.children = this.createCollection();
    this.actionView = this._createActionView();
    this.arrowView = this._createArrowView();
    this.keystrokes = new KeystrokeHandler();
    this.focusTracker = new FocusTracker();
    this.setTemplate({
      tag: "div",
      attributes: {
        class: [
          "ck",
          "ck-splitbutton",
          bind.to("class"),
          bind.if("isVisible", "ck-hidden", (value) => !value),
          this.arrowView.bindTemplate.if("isOn", "ck-splitbutton_open")
        ]
      },
      children: this.children
    });
  }
  render() {
    super.render();
    this.children.add(this.actionView);
    this.children.add(this.arrowView);
    this.focusTracker.add(this.actionView.element);
    this.focusTracker.add(this.arrowView.element);
    this.keystrokes.listenTo(this.element);
    this.keystrokes.set("arrowright", (evt, cancel2) => {
      if (this.focusTracker.focusedElement === this.actionView.element) {
        this.arrowView.focus();
        cancel2();
      }
    });
    this.keystrokes.set("arrowleft", (evt, cancel2) => {
      if (this.focusTracker.focusedElement === this.arrowView.element) {
        this.actionView.focus();
        cancel2();
      }
    });
  }
  destroy() {
    super.destroy();
    this.focusTracker.destroy();
    this.keystrokes.destroy();
  }
  focus() {
    this.actionView.focus();
  }
  _createActionView() {
    const actionView = new ButtonView();
    actionView.bind("icon", "isEnabled", "isOn", "isToggleable", "keystroke", "label", "tabindex", "tooltip", "tooltipPosition", "type", "withText").to(this);
    actionView.extendTemplate({
      attributes: {
        class: "ck-splitbutton__action"
      }
    });
    actionView.delegate("execute").to(this);
    return actionView;
  }
  _createArrowView() {
    const arrowView = new ButtonView();
    const bind = arrowView.bindTemplate;
    arrowView.icon = dropdownArrowIcon;
    arrowView.extendTemplate({
      attributes: {
        class: [
          "ck-splitbutton__arrow"
        ],
        "data-cke-tooltip-disabled": bind.to("isOn"),
        "aria-haspopup": true,
        "aria-expanded": bind.to("isOn", (value) => String(value))
      }
    });
    arrowView.bind("isEnabled").to(this);
    arrowView.bind("label").to(this);
    arrowView.bind("tooltip").to(this);
    arrowView.delegate("execute").to(this, "open");
    return arrowView;
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class DropdownPanelView extends View {
  constructor(locale) {
    super(locale);
    const bind = this.bindTemplate;
    this.set("isVisible", false);
    this.set("position", "se");
    this.children = this.createCollection();
    this.setTemplate({
      tag: "div",
      attributes: {
        class: [
          "ck",
          "ck-reset",
          "ck-dropdown__panel",
          bind.to("position", (value) => `ck-dropdown__panel_${value}`),
          bind.if("isVisible", "ck-dropdown__panel-visible")
        ]
      },
      children: this.children,
      on: {
        selectstart: bind.to((evt) => evt.preventDefault())
      }
    });
  }
  focus() {
    if (this.children.length) {
      const firstChild = this.children.first;
      if (typeof firstChild.focus === "function") {
        firstChild.focus();
      } else {
        logWarning("ui-dropdown-panel-focus-child-missing-focus", { childView: this.children.first, dropdownPanel: this });
      }
    }
  }
  focusLast() {
    if (this.children.length) {
      const lastChild = this.children.last;
      if (typeof lastChild.focusLast === "function") {
        lastChild.focusLast();
      } else {
        lastChild.focus();
      }
    }
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class FocusCycler {
  constructor(options) {
    this.focusables = options.focusables;
    this.focusTracker = options.focusTracker;
    this.keystrokeHandler = options.keystrokeHandler;
    this.actions = options.actions;
    if (options.actions && options.keystrokeHandler) {
      for (const methodName in options.actions) {
        let actions = options.actions[methodName];
        if (typeof actions == "string") {
          actions = [actions];
        }
        for (const keystroke of actions) {
          options.keystrokeHandler.set(keystroke, (data, cancel2) => {
            this[methodName]();
            cancel2();
          });
        }
      }
    }
  }
  get first() {
    return this.focusables.find(isFocusable) || null;
  }
  get last() {
    return this.focusables.filter(isFocusable).slice(-1)[0] || null;
  }
  get next() {
    return this._getFocusableItem(1);
  }
  get previous() {
    return this._getFocusableItem(-1);
  }
  get current() {
    let index = null;
    if (this.focusTracker.focusedElement === null) {
      return null;
    }
    this.focusables.find((view, viewIndex) => {
      const focused = view.element === this.focusTracker.focusedElement;
      if (focused) {
        index = viewIndex;
      }
      return focused;
    });
    return index;
  }
  focusFirst() {
    this._focus(this.first);
  }
  focusLast() {
    this._focus(this.last);
  }
  focusNext() {
    this._focus(this.next);
  }
  focusPrevious() {
    this._focus(this.previous);
  }
  _focus(view) {
    if (view) {
      view.focus();
    }
  }
  _getFocusableItem(step) {
    const current = this.current;
    const collectionLength = this.focusables.length;
    if (!collectionLength) {
      return null;
    }
    if (current === null) {
      return this[step === 1 ? "first" : "last"];
    }
    let index = (current + collectionLength + step) % collectionLength;
    do {
      const view = this.focusables.get(index);
      if (isFocusable(view)) {
        return view;
      }
      index = (index + collectionLength + step) % collectionLength;
    } while (index !== current);
    return null;
  }
}
function isFocusable(view) {
  return !!(view.focus && isVisible(view.element));
}
var toolbar = "";
var list = "";
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class ListView extends View {
  constructor(locale) {
    super(locale);
    const bind = this.bindTemplate;
    this.items = this.createCollection();
    this.focusTracker = new FocusTracker();
    this.keystrokes = new KeystrokeHandler();
    this._focusCycler = new FocusCycler({
      focusables: this.items,
      focusTracker: this.focusTracker,
      keystrokeHandler: this.keystrokes,
      actions: {
        focusPrevious: "arrowup",
        focusNext: "arrowdown"
      }
    });
    this.set("ariaLabel", void 0);
    this.setTemplate({
      tag: "ul",
      attributes: {
        class: [
          "ck",
          "ck-reset",
          "ck-list"
        ],
        "aria-label": bind.to("ariaLabel")
      },
      children: this.items
    });
  }
  render() {
    super.render();
    for (const item of this.items) {
      this.focusTracker.add(item.element);
    }
    this.items.on("add", (evt, item) => {
      this.focusTracker.add(item.element);
    });
    this.items.on("remove", (evt, item) => {
      this.focusTracker.remove(item.element);
    });
    this.keystrokes.listenTo(this.element);
  }
  destroy() {
    super.destroy();
    this.focusTracker.destroy();
    this.keystrokes.destroy();
  }
  focus() {
    this._focusCycler.focusFirst();
  }
  focusLast() {
    this._focusCycler.focusLast();
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class ListItemView extends View {
  constructor(locale) {
    super(locale);
    const bind = this.bindTemplate;
    this.set("isVisible", true);
    this.children = this.createCollection();
    this.setTemplate({
      tag: "li",
      attributes: {
        class: [
          "ck",
          "ck-list__item",
          bind.if("isVisible", "ck-hidden", (value) => !value)
        ]
      },
      children: this.children
    });
  }
  focus() {
    this.children.first.focus();
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class ListSeparatorView extends View {
  constructor(locale) {
    super(locale);
    this.setTemplate({
      tag: "li",
      attributes: {
        class: [
          "ck",
          "ck-list__separator"
        ]
      }
    });
  }
}
var toolbardropdown = "";
var listdropdown = "";
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
function createDropdown(locale, ButtonClass = DropdownButtonView) {
  const buttonView = new ButtonClass(locale);
  const panelView = new DropdownPanelView(locale);
  const dropdownView = new DropdownView(locale, buttonView, panelView);
  buttonView.bind("isEnabled").to(dropdownView);
  if (buttonView instanceof SplitButtonView) {
    buttonView.arrowView.bind("isOn").to(dropdownView, "isOpen");
  } else {
    buttonView.bind("isOn").to(dropdownView, "isOpen");
  }
  addDefaultBehavior(dropdownView);
  return dropdownView;
}
function addListToDropdown(dropdownView, itemsOrCallback, options = {}) {
  if (dropdownView.isOpen) {
    addListToOpenDropdown(dropdownView, itemsOrCallback, options);
  } else {
    dropdownView.once("change:isOpen", () => addListToOpenDropdown(dropdownView, itemsOrCallback, options), { priority: "highest" });
  }
  focusChildOnDropdownOpen(dropdownView, () => dropdownView.listView.items.find((item) => {
    if (item instanceof ListItemView) {
      return item.children.first.isOn;
    }
    return false;
  }));
}
function addListToOpenDropdown(dropdownView, itemsOrCallback, options) {
  const locale = dropdownView.locale;
  const listView = dropdownView.listView = new ListView(locale);
  const items = typeof itemsOrCallback == "function" ? itemsOrCallback() : itemsOrCallback;
  listView.ariaLabel = options.ariaLabel;
  listView.items.bindTo(items).using((def) => {
    if (def.type === "separator") {
      return new ListSeparatorView(locale);
    } else if (def.type === "button" || def.type === "switchbutton") {
      const listItemView = new ListItemView(locale);
      let buttonView;
      if (def.type === "button") {
        buttonView = new ButtonView(locale);
      } else {
        buttonView = new SwitchButtonView(locale);
      }
      buttonView.bind(...Object.keys(def.model)).to(def.model);
      buttonView.delegate("execute").to(listItemView);
      listItemView.children.add(buttonView);
      return listItemView;
    }
    return null;
  });
  dropdownView.panelView.children.add(listView);
  listView.items.delegate("execute").to(dropdownView);
}
function focusChildOnDropdownOpen(dropdownView, childSelectorCallback) {
  dropdownView.on("change:isOpen", () => {
    if (!dropdownView.isOpen) {
      return;
    }
    const childToFocus = childSelectorCallback();
    if (!childToFocus) {
      return;
    }
    if (typeof childToFocus.focus === "function") {
      childToFocus.focus();
    } else {
      logWarning("ui-dropdown-focus-child-on-open-child-missing-focus", { view: childToFocus });
    }
  }, { priority: priorities.low - 10 });
}
function addDefaultBehavior(dropdownView) {
  closeDropdownOnClickOutside(dropdownView);
  closeDropdownOnExecute(dropdownView);
  closeDropdownOnBlur(dropdownView);
  focusDropdownContentsOnArrows(dropdownView);
  focusDropdownButtonOnClose(dropdownView);
  focusDropdownPanelOnOpen(dropdownView);
}
function closeDropdownOnClickOutside(dropdownView) {
  dropdownView.on("render", () => {
    clickOutsideHandler({
      emitter: dropdownView,
      activator: () => dropdownView.isOpen,
      callback: () => {
        dropdownView.isOpen = false;
      },
      contextElements: [dropdownView.element]
    });
  });
}
function closeDropdownOnExecute(dropdownView) {
  dropdownView.on("execute", (evt) => {
    if (evt.source instanceof SwitchButtonView) {
      return;
    }
    dropdownView.isOpen = false;
  });
}
function closeDropdownOnBlur(dropdownView) {
  dropdownView.focusTracker.on("change:isFocused", (evt, name, isFocused) => {
    if (dropdownView.isOpen && !isFocused) {
      dropdownView.isOpen = false;
    }
  });
}
function focusDropdownContentsOnArrows(dropdownView) {
  dropdownView.keystrokes.set("arrowdown", (data, cancel2) => {
    if (dropdownView.isOpen) {
      dropdownView.panelView.focus();
      cancel2();
    }
  });
  dropdownView.keystrokes.set("arrowup", (data, cancel2) => {
    if (dropdownView.isOpen) {
      dropdownView.panelView.focusLast();
      cancel2();
    }
  });
}
function focusDropdownButtonOnClose(dropdownView) {
  dropdownView.on("change:isOpen", (evt, name, isOpen) => {
    if (isOpen) {
      return;
    }
    const element = dropdownView.panelView.element;
    if (element && element.contains(global$1.document.activeElement)) {
      dropdownView.buttonView.focus();
    }
  });
}
function focusDropdownPanelOnOpen(dropdownView) {
  dropdownView.on("change:isOpen", (evt, name, isOpen) => {
    if (!isOpen) {
      return;
    }
    dropdownView.panelView.focus();
  }, { priority: "low" });
}
var balloonpanel = "";
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
const toPx = toUnit("px");
const defaultLimiterElement = global$1.document.body;
class BalloonPanelView extends View {
  constructor(locale) {
    super(locale);
    const bind = this.bindTemplate;
    this.set("top", 0);
    this.set("left", 0);
    this.set("position", "arrow_nw");
    this.set("isVisible", false);
    this.set("withArrow", true);
    this.set("class", void 0);
    this._pinWhenIsVisibleCallback = null;
    this.content = this.createCollection();
    this.setTemplate({
      tag: "div",
      attributes: {
        class: [
          "ck",
          "ck-balloon-panel",
          bind.to("position", (value) => `ck-balloon-panel_${value}`),
          bind.if("isVisible", "ck-balloon-panel_visible"),
          bind.if("withArrow", "ck-balloon-panel_with-arrow"),
          bind.to("class")
        ],
        style: {
          top: bind.to("top", toPx),
          left: bind.to("left", toPx)
        }
      },
      children: this.content
    });
  }
  show() {
    this.isVisible = true;
  }
  hide() {
    this.isVisible = false;
  }
  attachTo(options) {
    this.show();
    const defaultPositions = BalloonPanelView.defaultPositions;
    const positionOptions = Object.assign({}, {
      element: this.element,
      positions: [
        defaultPositions.southArrowNorth,
        defaultPositions.southArrowNorthMiddleWest,
        defaultPositions.southArrowNorthMiddleEast,
        defaultPositions.southArrowNorthWest,
        defaultPositions.southArrowNorthEast,
        defaultPositions.northArrowSouth,
        defaultPositions.northArrowSouthMiddleWest,
        defaultPositions.northArrowSouthMiddleEast,
        defaultPositions.northArrowSouthWest,
        defaultPositions.northArrowSouthEast,
        defaultPositions.viewportStickyNorth
      ],
      limiter: defaultLimiterElement,
      fitInViewport: true
    }, options);
    const optimalPosition = BalloonPanelView._getOptimalPosition(positionOptions);
    const left = parseInt(optimalPosition.left);
    const top = parseInt(optimalPosition.top);
    const position = optimalPosition.name;
    const config = optimalPosition.config || {};
    const { withArrow = true } = config;
    this.top = top;
    this.left = left;
    this.position = position;
    this.withArrow = withArrow;
  }
  pin(options) {
    this.unpin();
    this._pinWhenIsVisibleCallback = () => {
      if (this.isVisible) {
        this._startPinning(options);
      } else {
        this._stopPinning();
      }
    };
    this._startPinning(options);
    this.listenTo(this, "change:isVisible", this._pinWhenIsVisibleCallback);
  }
  unpin() {
    if (this._pinWhenIsVisibleCallback) {
      this._stopPinning();
      this.stopListening(this, "change:isVisible", this._pinWhenIsVisibleCallback);
      this._pinWhenIsVisibleCallback = null;
      this.hide();
    }
  }
  _startPinning(options) {
    this.attachTo(options);
    const targetElement = getDomElement(options.target);
    const limiterElement = options.limiter ? getDomElement(options.limiter) : defaultLimiterElement;
    this.listenTo(global$1.document, "scroll", (evt, domEvt) => {
      const scrollTarget = domEvt.target;
      const isWithinScrollTarget = targetElement && scrollTarget.contains(targetElement);
      const isLimiterWithinScrollTarget = limiterElement && scrollTarget.contains(limiterElement);
      if (isWithinScrollTarget || isLimiterWithinScrollTarget || !targetElement || !limiterElement) {
        this.attachTo(options);
      }
    }, { useCapture: true });
    this.listenTo(global$1.window, "resize", () => {
      this.attachTo(options);
    });
  }
  _stopPinning() {
    this.stopListening(global$1.document, "scroll");
    this.stopListening(global$1.window, "resize");
  }
}
BalloonPanelView.arrowSideOffset = 25;
BalloonPanelView.arrowHeightOffset = 10;
BalloonPanelView.stickyVerticalOffset = 20;
BalloonPanelView._getOptimalPosition = getOptimalPosition;
BalloonPanelView.defaultPositions = generatePositions();
function getDomElement(object) {
  if (isElement(object)) {
    return object;
  }
  if (isRange(object)) {
    return object.commonAncestorContainer;
  }
  if (typeof object == "function") {
    return getDomElement(object());
  }
  return null;
}
function generatePositions(options = {}) {
  const { sideOffset = BalloonPanelView.arrowSideOffset, heightOffset = BalloonPanelView.arrowHeightOffset, stickyVerticalOffset = BalloonPanelView.stickyVerticalOffset, config } = options;
  return {
    northWestArrowSouthWest: (targetRect, balloonRect) => ({
      top: getNorthTop(targetRect, balloonRect),
      left: targetRect.left - sideOffset,
      name: "arrow_sw",
      ...config && { config }
    }),
    northWestArrowSouthMiddleWest: (targetRect, balloonRect) => ({
      top: getNorthTop(targetRect, balloonRect),
      left: targetRect.left - balloonRect.width * 0.25 - sideOffset,
      name: "arrow_smw",
      ...config && { config }
    }),
    northWestArrowSouth: (targetRect, balloonRect) => ({
      top: getNorthTop(targetRect, balloonRect),
      left: targetRect.left - balloonRect.width / 2,
      name: "arrow_s",
      ...config && { config }
    }),
    northWestArrowSouthMiddleEast: (targetRect, balloonRect) => ({
      top: getNorthTop(targetRect, balloonRect),
      left: targetRect.left - balloonRect.width * 0.75 + sideOffset,
      name: "arrow_sme",
      ...config && { config }
    }),
    northWestArrowSouthEast: (targetRect, balloonRect) => ({
      top: getNorthTop(targetRect, balloonRect),
      left: targetRect.left - balloonRect.width + sideOffset,
      name: "arrow_se",
      ...config && { config }
    }),
    northArrowSouthWest: (targetRect, balloonRect) => ({
      top: getNorthTop(targetRect, balloonRect),
      left: targetRect.left + targetRect.width / 2 - sideOffset,
      name: "arrow_sw",
      ...config && { config }
    }),
    northArrowSouthMiddleWest: (targetRect, balloonRect) => ({
      top: getNorthTop(targetRect, balloonRect),
      left: targetRect.left + targetRect.width / 2 - balloonRect.width * 0.25 - sideOffset,
      name: "arrow_smw",
      ...config && { config }
    }),
    northArrowSouth: (targetRect, balloonRect) => ({
      top: getNorthTop(targetRect, balloonRect),
      left: targetRect.left + targetRect.width / 2 - balloonRect.width / 2,
      name: "arrow_s",
      ...config && { config }
    }),
    northArrowSouthMiddleEast: (targetRect, balloonRect) => ({
      top: getNorthTop(targetRect, balloonRect),
      left: targetRect.left + targetRect.width / 2 - balloonRect.width * 0.75 + sideOffset,
      name: "arrow_sme",
      ...config && { config }
    }),
    northArrowSouthEast: (targetRect, balloonRect) => ({
      top: getNorthTop(targetRect, balloonRect),
      left: targetRect.left + targetRect.width / 2 - balloonRect.width + sideOffset,
      name: "arrow_se",
      ...config && { config }
    }),
    northEastArrowSouthWest: (targetRect, balloonRect) => ({
      top: getNorthTop(targetRect, balloonRect),
      left: targetRect.right - sideOffset,
      name: "arrow_sw",
      ...config && { config }
    }),
    northEastArrowSouthMiddleWest: (targetRect, balloonRect) => ({
      top: getNorthTop(targetRect, balloonRect),
      left: targetRect.right - balloonRect.width * 0.25 - sideOffset,
      name: "arrow_smw",
      ...config && { config }
    }),
    northEastArrowSouth: (targetRect, balloonRect) => ({
      top: getNorthTop(targetRect, balloonRect),
      left: targetRect.right - balloonRect.width / 2,
      name: "arrow_s",
      ...config && { config }
    }),
    northEastArrowSouthMiddleEast: (targetRect, balloonRect) => ({
      top: getNorthTop(targetRect, balloonRect),
      left: targetRect.right - balloonRect.width * 0.75 + sideOffset,
      name: "arrow_sme",
      ...config && { config }
    }),
    northEastArrowSouthEast: (targetRect, balloonRect) => ({
      top: getNorthTop(targetRect, balloonRect),
      left: targetRect.right - balloonRect.width + sideOffset,
      name: "arrow_se",
      ...config && { config }
    }),
    southWestArrowNorthWest: (targetRect) => ({
      top: getSouthTop(targetRect),
      left: targetRect.left - sideOffset,
      name: "arrow_nw",
      ...config && { config }
    }),
    southWestArrowNorthMiddleWest: (targetRect, balloonRect) => ({
      top: getSouthTop(targetRect),
      left: targetRect.left - balloonRect.width * 0.25 - sideOffset,
      name: "arrow_nmw",
      ...config && { config }
    }),
    southWestArrowNorth: (targetRect, balloonRect) => ({
      top: getSouthTop(targetRect),
      left: targetRect.left - balloonRect.width / 2,
      name: "arrow_n",
      ...config && { config }
    }),
    southWestArrowNorthMiddleEast: (targetRect, balloonRect) => ({
      top: getSouthTop(targetRect),
      left: targetRect.left - balloonRect.width * 0.75 + sideOffset,
      name: "arrow_nme",
      ...config && { config }
    }),
    southWestArrowNorthEast: (targetRect, balloonRect) => ({
      top: getSouthTop(targetRect),
      left: targetRect.left - balloonRect.width + sideOffset,
      name: "arrow_ne",
      ...config && { config }
    }),
    southArrowNorthWest: (targetRect) => ({
      top: getSouthTop(targetRect),
      left: targetRect.left + targetRect.width / 2 - sideOffset,
      name: "arrow_nw",
      ...config && { config }
    }),
    southArrowNorthMiddleWest: (targetRect, balloonRect) => ({
      top: getSouthTop(targetRect),
      left: targetRect.left + targetRect.width / 2 - balloonRect.width * 0.25 - sideOffset,
      name: "arrow_nmw",
      ...config && { config }
    }),
    southArrowNorth: (targetRect, balloonRect) => ({
      top: getSouthTop(targetRect),
      left: targetRect.left + targetRect.width / 2 - balloonRect.width / 2,
      name: "arrow_n",
      ...config && { config }
    }),
    southArrowNorthMiddleEast: (targetRect, balloonRect) => ({
      top: getSouthTop(targetRect),
      left: targetRect.left + targetRect.width / 2 - balloonRect.width * 0.75 + sideOffset,
      name: "arrow_nme",
      ...config && { config }
    }),
    southArrowNorthEast: (targetRect, balloonRect) => ({
      top: getSouthTop(targetRect),
      left: targetRect.left + targetRect.width / 2 - balloonRect.width + sideOffset,
      name: "arrow_ne",
      ...config && { config }
    }),
    southEastArrowNorthWest: (targetRect) => ({
      top: getSouthTop(targetRect),
      left: targetRect.right - sideOffset,
      name: "arrow_nw",
      ...config && { config }
    }),
    southEastArrowNorthMiddleWest: (targetRect, balloonRect) => ({
      top: getSouthTop(targetRect),
      left: targetRect.right - balloonRect.width * 0.25 - sideOffset,
      name: "arrow_nmw",
      ...config && { config }
    }),
    southEastArrowNorth: (targetRect, balloonRect) => ({
      top: getSouthTop(targetRect),
      left: targetRect.right - balloonRect.width / 2,
      name: "arrow_n",
      ...config && { config }
    }),
    southEastArrowNorthMiddleEast: (targetRect, balloonRect) => ({
      top: getSouthTop(targetRect),
      left: targetRect.right - balloonRect.width * 0.75 + sideOffset,
      name: "arrow_nme",
      ...config && { config }
    }),
    southEastArrowNorthEast: (targetRect, balloonRect) => ({
      top: getSouthTop(targetRect),
      left: targetRect.right - balloonRect.width + sideOffset,
      name: "arrow_ne",
      ...config && { config }
    }),
    westArrowEast: (targetRect, balloonRect) => ({
      top: targetRect.top + targetRect.height / 2 - balloonRect.height / 2,
      left: targetRect.left - balloonRect.width - heightOffset,
      name: "arrow_e",
      ...config && { config }
    }),
    eastArrowWest: (targetRect, balloonRect) => ({
      top: targetRect.top + targetRect.height / 2 - balloonRect.height / 2,
      left: targetRect.right + heightOffset,
      name: "arrow_w",
      ...config && { config }
    }),
    viewportStickyNorth: (targetRect, balloonRect, viewportRect) => {
      if (!targetRect.getIntersection(viewportRect)) {
        return null;
      }
      return {
        top: viewportRect.top + stickyVerticalOffset,
        left: targetRect.left + targetRect.width / 2 - balloonRect.width / 2,
        name: "arrowless",
        config: {
          withArrow: false,
          ...config
        }
      };
    }
  };
  function getNorthTop(targetRect, balloonRect) {
    return targetRect.top - balloonRect.height - heightOffset;
  }
  function getSouthTop(targetRect) {
    return targetRect.bottom + heightOffset;
  }
}
var tooltip = "";
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
const BALLOON_CLASS = "ck-tooltip";
class TooltipManager extends DomEmitterMixin() {
  constructor(editor) {
    super();
    TooltipManager._editors.add(editor);
    if (TooltipManager._instance) {
      return TooltipManager._instance;
    }
    TooltipManager._instance = this;
    this.tooltipTextView = new View(editor.locale);
    this.tooltipTextView.set("text", "");
    this.tooltipTextView.setTemplate({
      tag: "span",
      attributes: {
        class: [
          "ck",
          "ck-tooltip__text"
        ]
      },
      children: [
        {
          text: this.tooltipTextView.bindTemplate.to("text")
        }
      ]
    });
    this.balloonPanelView = new BalloonPanelView(editor.locale);
    this.balloonPanelView.class = BALLOON_CLASS;
    this.balloonPanelView.content.add(this.tooltipTextView);
    this._resizeObserver = null;
    this._currentElementWithTooltip = null;
    this._currentTooltipPosition = null;
    this._pinTooltipDebounced = debounce(this._pinTooltip, 600);
    this.listenTo(global$1.document, "mouseenter", this._onEnterOrFocus.bind(this), { useCapture: true });
    this.listenTo(global$1.document, "mouseleave", this._onLeaveOrBlur.bind(this), { useCapture: true });
    this.listenTo(global$1.document, "focus", this._onEnterOrFocus.bind(this), { useCapture: true });
    this.listenTo(global$1.document, "blur", this._onLeaveOrBlur.bind(this), { useCapture: true });
    this.listenTo(global$1.document, "scroll", this._onScroll.bind(this), { useCapture: true });
    this._watchdogExcluded = true;
  }
  destroy(editor) {
    const editorBodyViewCollection = editor.ui.view && editor.ui.view.body;
    TooltipManager._editors.delete(editor);
    this.stopListening(editor.ui);
    if (editorBodyViewCollection && editorBodyViewCollection.has(this.balloonPanelView)) {
      editorBodyViewCollection.remove(this.balloonPanelView);
    }
    if (!TooltipManager._editors.size) {
      this._unpinTooltip();
      this.balloonPanelView.destroy();
      this.stopListening();
      TooltipManager._instance = null;
    }
  }
  static getPositioningFunctions(position) {
    const defaultPositions = TooltipManager.defaultBalloonPositions;
    return {
      s: [
        defaultPositions.southArrowNorth,
        defaultPositions.southArrowNorthEast,
        defaultPositions.southArrowNorthWest
      ],
      n: [defaultPositions.northArrowSouth],
      e: [defaultPositions.eastArrowWest],
      w: [defaultPositions.westArrowEast],
      sw: [defaultPositions.southArrowNorthEast],
      se: [defaultPositions.southArrowNorthWest]
    }[position];
  }
  _onEnterOrFocus(evt, { target }) {
    const elementWithTooltipAttribute = getDescendantWithTooltip(target);
    if (!elementWithTooltipAttribute) {
      return;
    }
    if (elementWithTooltipAttribute === this._currentElementWithTooltip) {
      return;
    }
    this._unpinTooltip();
    this._pinTooltipDebounced(elementWithTooltipAttribute, getTooltipData(elementWithTooltipAttribute));
  }
  _onLeaveOrBlur(evt, { target, relatedTarget }) {
    if (evt.name === "mouseleave") {
      if (!isElement(target)) {
        return;
      }
      if (this._currentElementWithTooltip && target !== this._currentElementWithTooltip) {
        return;
      }
      const descendantWithTooltip = getDescendantWithTooltip(target);
      const relatedDescendantWithTooltip = getDescendantWithTooltip(relatedTarget);
      if (descendantWithTooltip && descendantWithTooltip !== relatedDescendantWithTooltip) {
        this._unpinTooltip();
      }
    } else {
      if (this._currentElementWithTooltip && target !== this._currentElementWithTooltip) {
        return;
      }
      this._unpinTooltip();
    }
  }
  _onScroll(evt, { target }) {
    if (!this._currentElementWithTooltip) {
      return;
    }
    if (target.contains(this.balloonPanelView.element) && target.contains(this._currentElementWithTooltip)) {
      return;
    }
    this._unpinTooltip();
  }
  _pinTooltip(targetDomElement, { text: text2, position, cssClass }) {
    const bodyViewCollection = first(TooltipManager._editors.values()).ui.view.body;
    if (!bodyViewCollection.has(this.balloonPanelView)) {
      bodyViewCollection.add(this.balloonPanelView);
    }
    this.tooltipTextView.text = text2;
    this.balloonPanelView.pin({
      target: targetDomElement,
      positions: TooltipManager.getPositioningFunctions(position)
    });
    this._resizeObserver = new ResizeObserver(targetDomElement, () => {
      if (!isVisible(targetDomElement)) {
        this._unpinTooltip();
      }
    });
    this.balloonPanelView.class = [BALLOON_CLASS, cssClass].filter((className) => className).join(" ");
    for (const editor of TooltipManager._editors) {
      this.listenTo(editor.ui, "update", this._updateTooltipPosition.bind(this), { priority: "low" });
    }
    this._currentElementWithTooltip = targetDomElement;
    this._currentTooltipPosition = position;
  }
  _unpinTooltip() {
    this._pinTooltipDebounced.cancel();
    this.balloonPanelView.unpin();
    for (const editor of TooltipManager._editors) {
      this.stopListening(editor.ui, "update");
    }
    this._currentElementWithTooltip = null;
    this._currentTooltipPosition = null;
    if (this._resizeObserver) {
      this._resizeObserver.destroy();
    }
  }
  _updateTooltipPosition() {
    if (!isVisible(this._currentElementWithTooltip)) {
      this._unpinTooltip();
      return;
    }
    this.balloonPanelView.pin({
      target: this._currentElementWithTooltip,
      positions: TooltipManager.getPositioningFunctions(this._currentTooltipPosition)
    });
  }
}
TooltipManager.defaultBalloonPositions = generatePositions({
  heightOffset: 5,
  sideOffset: 13
});
TooltipManager._editors = /* @__PURE__ */ new Set();
TooltipManager._instance = null;
function getDescendantWithTooltip(element) {
  if (!isElement(element)) {
    return null;
  }
  return element.closest("[data-cke-tooltip-text]:not([data-cke-tooltip-disabled])");
}
function getTooltipData(element) {
  return {
    text: element.dataset.ckeTooltipText,
    position: element.dataset.ckeTooltipPosition || "s",
    cssClass: element.dataset.ckeTooltipClass || ""
  };
}
var editorui = "";
var label = "";
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class LabelView extends View {
  constructor(locale) {
    super(locale);
    this.set("text", void 0);
    this.set("for", void 0);
    this.id = `ck-editor__label_${uid()}`;
    const bind = this.bindTemplate;
    this.setTemplate({
      tag: "label",
      attributes: {
        class: [
          "ck",
          "ck-label"
        ],
        id: this.id,
        for: bind.to("for")
      },
      children: [
        {
          text: bind.to("text")
        }
      ]
    });
  }
}
var formheader = "";
var input = "";
var labeledfieldview = "";
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class Model extends ObservableMixin() {
  constructor(attributes, properties) {
    super();
    if (properties) {
      extend(this, properties);
    }
    if (attributes) {
      this.set(attributes);
    }
  }
}
var balloonrotator = "";
var fakepanel = "";
var stickypanel = "";
var blocktoolbar = "";
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class DocumentColorCollection extends Collection {
  constructor(options) {
    super(options);
    this.set("isEmpty", true);
    this.on("change", () => {
      this.set("isEmpty", this.length === 0);
    });
  }
  add(item, index) {
    if (this.find((element) => element.color === item.color)) {
      return;
    }
    super.add(item, index);
  }
  hasColor(color) {
    return !!this.find((item) => item.color === color);
  }
}
mix(DocumentColorCollection, ObservableMixin);
var fontcolor = "";
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class ColorTableView extends View {
  constructor(locale, { colors, columns, removeButtonLabel, documentColorsLabel, documentColorsCount }) {
    super(locale);
    this.items = this.createCollection();
    this.colorDefinitions = colors;
    this.focusTracker = new FocusTracker();
    this.keystrokes = new KeystrokeHandler();
    this.set("selectedColor");
    this.removeButtonLabel = removeButtonLabel;
    this.columns = columns;
    this.documentColors = new DocumentColorCollection();
    this.documentColorsCount = documentColorsCount;
    this._focusables = new ViewCollection();
    this._focusCycler = new FocusCycler({
      focusables: this._focusables,
      focusTracker: this.focusTracker,
      keystrokeHandler: this.keystrokes,
      actions: {
        focusPrevious: "shift + tab",
        focusNext: "tab"
      }
    });
    this._documentColorsLabel = documentColorsLabel;
    this.setTemplate({
      tag: "div",
      attributes: {
        class: [
          "ck",
          "ck-color-table"
        ]
      },
      children: this.items
    });
    this.items.add(this._createRemoveColorButton());
  }
  updateDocumentColors(model, attributeName) {
    const document2 = model.document;
    const maxCount = this.documentColorsCount;
    this.documentColors.clear();
    for (const rootName of document2.getRootNames()) {
      const root2 = document2.getRoot(rootName);
      const range = model.createRangeIn(root2);
      for (const node of range.getItems()) {
        if (node.is("$textProxy") && node.hasAttribute(attributeName)) {
          this._addColorToDocumentColors(node.getAttribute(attributeName));
          if (this.documentColors.length >= maxCount) {
            return;
          }
        }
      }
    }
  }
  updateSelectedColors() {
    const documentColorsGrid = this.documentColorsGrid;
    const staticColorsGrid = this.staticColorsGrid;
    const selectedColor = this.selectedColor;
    staticColorsGrid.selectedColor = selectedColor;
    if (documentColorsGrid) {
      documentColorsGrid.selectedColor = selectedColor;
    }
  }
  render() {
    super.render();
    this.keystrokes.listenTo(this.element);
  }
  destroy() {
    super.destroy();
    this.focusTracker.destroy();
    this.keystrokes.destroy();
  }
  appendGrids() {
    if (this.staticColorsGrid) {
      return;
    }
    this.staticColorsGrid = this._createStaticColorsGrid();
    this.items.add(this.staticColorsGrid);
    this.focusTracker.add(this.staticColorsGrid.element);
    this._focusables.add(this.staticColorsGrid);
    if (this.documentColorsCount) {
      const bind = Template.bind(this.documentColors, this.documentColors);
      const label2 = new LabelView(this.locale);
      label2.text = this._documentColorsLabel;
      label2.extendTemplate({
        attributes: {
          class: [
            "ck",
            "ck-color-grid__label",
            bind.if("isEmpty", "ck-hidden")
          ]
        }
      });
      this.items.add(label2);
      this.documentColorsGrid = this._createDocumentColorsGrid();
      this.items.add(this.documentColorsGrid);
      this.focusTracker.add(this.documentColorsGrid.element);
      this._focusables.add(this.documentColorsGrid);
    }
  }
  focus() {
    this._focusCycler.focusFirst();
  }
  focusLast() {
    this._focusCycler.focusLast();
  }
  _createRemoveColorButton() {
    const buttonView = new ButtonView();
    buttonView.set({
      withText: true,
      icon: icons.eraser,
      label: this.removeButtonLabel
    });
    buttonView.class = "ck-color-table__remove-color";
    buttonView.on("execute", () => {
      this.fire("execute", { value: null });
    });
    buttonView.render();
    this.focusTracker.add(buttonView.element);
    this._focusables.add(buttonView);
    return buttonView;
  }
  _createStaticColorsGrid() {
    const colorGrid = new ColorGridView(this.locale, {
      colorDefinitions: this.colorDefinitions,
      columns: this.columns
    });
    colorGrid.delegate("execute").to(this);
    return colorGrid;
  }
  _createDocumentColorsGrid() {
    const bind = Template.bind(this.documentColors, this.documentColors);
    const documentColorsGrid = new ColorGridView(this.locale, {
      columns: this.columns
    });
    documentColorsGrid.delegate("execute").to(this);
    documentColorsGrid.extendTemplate({
      attributes: {
        class: bind.if("isEmpty", "ck-hidden")
      }
    });
    documentColorsGrid.items.bindTo(this.documentColors).using(
      (colorObj) => {
        const colorTile = new ColorTileView();
        colorTile.set({
          color: colorObj.color,
          hasBorder: colorObj.options && colorObj.options.hasBorder
        });
        if (colorObj.label) {
          colorTile.set({
            label: colorObj.label,
            tooltip: true
          });
        }
        colorTile.on("execute", () => {
          this.fire("execute", {
            value: colorObj.color
          });
        });
        return colorTile;
      }
    );
    this.documentColors.on("change:isEmpty", (evt, name, val) => {
      if (val) {
        documentColorsGrid.selectedColor = null;
      }
    });
    return documentColorsGrid;
  }
  _addColorToDocumentColors(color) {
    const predefinedColor = this.colorDefinitions.find((definition) => definition.color === color);
    if (!predefinedColor) {
      this.documentColors.add({
        color,
        label: color,
        options: {
          hasBorder: false
        }
      });
    } else {
      this.documentColors.add(Object.assign({}, predefinedColor));
    }
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
const FONT_SIZE = "fontSize";
const FONT_COLOR = "fontColor";
const FONT_BACKGROUND_COLOR = "fontBackgroundColor";
function buildDefinition(modelAttributeKey, options) {
  const definition = {
    model: {
      key: modelAttributeKey,
      values: []
    },
    view: {},
    upcastAlso: {}
  };
  for (const option of options) {
    definition.model.values.push(option.model);
    definition.view[option.model] = option.view;
    if (option.upcastAlso) {
      definition.upcastAlso[option.model] = option.upcastAlso;
    }
  }
  return definition;
}
function renderUpcastAttribute(styleAttr) {
  return (viewElement) => normalizeColorCode(viewElement.getStyle(styleAttr));
}
function renderDowncastElement(styleAttr) {
  return (modelAttributeValue, { writer }) => writer.createAttributeElement("span", {
    style: `${styleAttr}:${modelAttributeValue}`
  }, { priority: 7 });
}
function addColorTableToDropdown({ dropdownView, colors, columns, removeButtonLabel, documentColorsLabel, documentColorsCount }) {
  const locale = dropdownView.locale;
  const colorTableView = new ColorTableView(locale, { colors, columns, removeButtonLabel, documentColorsLabel, documentColorsCount });
  dropdownView.colorTableView = colorTableView;
  dropdownView.panelView.children.add(colorTableView);
  colorTableView.delegate("execute").to(dropdownView, "execute");
  return colorTableView;
}
function normalizeColorCode(value) {
  return value.replace(/\s/g, "");
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class FontColorCommand extends FontCommand {
  constructor(editor) {
    super(editor, FONT_COLOR);
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class FontColorEditing extends Plugin {
  static get pluginName() {
    return "FontColorEditing";
  }
  constructor(editor) {
    super(editor);
    editor.config.define(FONT_COLOR, {
      colors: [
        {
          color: "hsl(0, 0%, 0%)",
          label: "Black"
        },
        {
          color: "hsl(0, 0%, 30%)",
          label: "Dim grey"
        },
        {
          color: "hsl(0, 0%, 60%)",
          label: "Grey"
        },
        {
          color: "hsl(0, 0%, 90%)",
          label: "Light grey"
        },
        {
          color: "hsl(0, 0%, 100%)",
          label: "White",
          hasBorder: true
        },
        {
          color: "hsl(0, 75%, 60%)",
          label: "Red"
        },
        {
          color: "hsl(30, 75%, 60%)",
          label: "Orange"
        },
        {
          color: "hsl(60, 75%, 60%)",
          label: "Yellow"
        },
        {
          color: "hsl(90, 75%, 60%)",
          label: "Light green"
        },
        {
          color: "hsl(120, 75%, 60%)",
          label: "Green"
        },
        {
          color: "hsl(150, 75%, 60%)",
          label: "Aquamarine"
        },
        {
          color: "hsl(180, 75%, 60%)",
          label: "Turquoise"
        },
        {
          color: "hsl(210, 75%, 60%)",
          label: "Light blue"
        },
        {
          color: "hsl(240, 75%, 60%)",
          label: "Blue"
        },
        {
          color: "hsl(270, 75%, 60%)",
          label: "Purple"
        }
      ],
      columns: 5
    });
    editor.conversion.for("upcast").elementToAttribute({
      view: {
        name: "span",
        styles: {
          "color": /[\s\S]+/
        }
      },
      model: {
        key: FONT_COLOR,
        value: renderUpcastAttribute("color")
      }
    });
    editor.conversion.for("upcast").elementToAttribute({
      view: {
        name: "font",
        attributes: {
          "color": /^#?\w+$/
        }
      },
      model: {
        key: FONT_COLOR,
        value: (viewElement) => viewElement.getAttribute("color")
      }
    });
    editor.conversion.for("downcast").attributeToElement({
      model: FONT_COLOR,
      view: renderDowncastElement("color")
    });
    editor.commands.add(FONT_COLOR, new FontColorCommand(editor));
    editor.model.schema.extend("$text", { allowAttributes: FONT_COLOR });
    editor.model.schema.setAttributeProperties(FONT_COLOR, {
      isFormatting: true,
      copyOnEnter: true
    });
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class ColorUI extends Plugin {
  constructor(editor, { commandName, icon: icon2, componentName, dropdownLabel }) {
    super(editor);
    this.commandName = commandName;
    this.componentName = componentName;
    this.icon = icon2;
    this.dropdownLabel = dropdownLabel;
    this.columns = editor.config.get(`${this.componentName}.columns`);
    this.colorTableView = void 0;
  }
  init() {
    const editor = this.editor;
    const locale = editor.locale;
    const t4 = locale.t;
    const command = editor.commands.get(this.commandName);
    const colorsConfig = normalizeColorOptions(editor.config.get(this.componentName).colors);
    const localizedColors = getLocalizedColorOptions(locale, colorsConfig);
    const documentColorsCount = editor.config.get(`${this.componentName}.documentColors`);
    editor.ui.componentFactory.add(this.componentName, (locale2) => {
      const dropdownView = createDropdown(locale2);
      this.colorTableView = addColorTableToDropdown({
        dropdownView,
        colors: localizedColors.map((option) => ({
          label: option.label,
          color: option.model,
          options: {
            hasBorder: option.hasBorder
          }
        })),
        columns: this.columns,
        removeButtonLabel: t4("Remove color"),
        documentColorsLabel: documentColorsCount !== 0 ? t4("Document colors") : void 0,
        documentColorsCount: documentColorsCount === void 0 ? this.columns : documentColorsCount
      });
      this.colorTableView.bind("selectedColor").to(command, "value");
      dropdownView.buttonView.set({
        label: this.dropdownLabel,
        icon: this.icon,
        tooltip: true
      });
      dropdownView.extendTemplate({
        attributes: {
          class: "ck-color-ui-dropdown"
        }
      });
      dropdownView.bind("isEnabled").to(command);
      dropdownView.on("execute", (evt, data) => {
        editor.execute(this.commandName, data);
        editor.editing.view.focus();
      });
      dropdownView.on("change:isOpen", (evt, name, isVisible2) => {
        dropdownView.colorTableView.appendGrids();
        if (isVisible2) {
          if (documentColorsCount !== 0) {
            this.colorTableView.updateDocumentColors(editor.model, this.componentName);
          }
          this.colorTableView.updateSelectedColors();
        }
      });
      focusChildOnDropdownOpen(dropdownView, () => dropdownView.colorTableView.staticColorsGrid.items.find((item) => item.isOn));
      return dropdownView;
    });
  }
}
var fontColorIcon = '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M12.4 10.3 10 4.5l-2.4 5.8h4.8zm.5 1.2H7.1L5.7 15H4.2l5-12h1.6l5 12h-1.5L13 11.5zm3.1 7H4a1 1 0 0 1 0-2h12a1 1 0 0 1 0 2z"/></svg>';
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class FontColorUI extends ColorUI {
  constructor(editor) {
    const t4 = editor.locale.t;
    super(editor, {
      commandName: FONT_COLOR,
      componentName: FONT_COLOR,
      icon: fontColorIcon,
      dropdownLabel: t4("Font Color")
    });
  }
  static get pluginName() {
    return "FontColorUI";
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class FontColor extends Plugin {
  static get requires() {
    return [FontColorEditing, FontColorUI];
  }
  static get pluginName() {
    return "FontColor";
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class FontBackgroundColorCommand extends FontCommand {
  constructor(editor) {
    super(editor, FONT_BACKGROUND_COLOR);
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class FontBackgroundColorEditing extends Plugin {
  static get pluginName() {
    return "FontBackgroundColorEditing";
  }
  constructor(editor) {
    super(editor);
    editor.config.define(FONT_BACKGROUND_COLOR, {
      colors: [
        {
          color: "hsl(0, 0%, 0%)",
          label: "Black"
        },
        {
          color: "hsl(0, 0%, 30%)",
          label: "Dim grey"
        },
        {
          color: "hsl(0, 0%, 60%)",
          label: "Grey"
        },
        {
          color: "hsl(0, 0%, 90%)",
          label: "Light grey"
        },
        {
          color: "hsl(0, 0%, 100%)",
          label: "White",
          hasBorder: true
        },
        {
          color: "hsl(0, 75%, 60%)",
          label: "Red"
        },
        {
          color: "hsl(30, 75%, 60%)",
          label: "Orange"
        },
        {
          color: "hsl(60, 75%, 60%)",
          label: "Yellow"
        },
        {
          color: "hsl(90, 75%, 60%)",
          label: "Light green"
        },
        {
          color: "hsl(120, 75%, 60%)",
          label: "Green"
        },
        {
          color: "hsl(150, 75%, 60%)",
          label: "Aquamarine"
        },
        {
          color: "hsl(180, 75%, 60%)",
          label: "Turquoise"
        },
        {
          color: "hsl(210, 75%, 60%)",
          label: "Light blue"
        },
        {
          color: "hsl(240, 75%, 60%)",
          label: "Blue"
        },
        {
          color: "hsl(270, 75%, 60%)",
          label: "Purple"
        }
      ],
      columns: 5
    });
    editor.data.addStyleProcessorRules(addBackgroundRules);
    editor.conversion.for("upcast").elementToAttribute({
      view: {
        name: "span",
        styles: {
          "background-color": /[\s\S]+/
        }
      },
      model: {
        key: FONT_BACKGROUND_COLOR,
        value: renderUpcastAttribute("background-color")
      }
    });
    editor.conversion.for("downcast").attributeToElement({
      model: FONT_BACKGROUND_COLOR,
      view: renderDowncastElement("background-color")
    });
    editor.commands.add(FONT_BACKGROUND_COLOR, new FontBackgroundColorCommand(editor));
    editor.model.schema.extend("$text", { allowAttributes: FONT_BACKGROUND_COLOR });
    editor.model.schema.setAttributeProperties(FONT_BACKGROUND_COLOR, {
      isFormatting: true,
      copyOnEnter: true
    });
  }
}
var fontBackgroundColorIcon = '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M4 2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2zm8.38 9.262H7.62L10 5.506l2.38 5.756zm.532 1.285L14.34 16h1.426L10.804 4H9.196L4.234 16H5.66l1.428-3.453h5.824z"/></svg>';
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class FontBackgroundColorUI extends ColorUI {
  constructor(editor) {
    const t4 = editor.locale.t;
    super(editor, {
      commandName: FONT_BACKGROUND_COLOR,
      componentName: FONT_BACKGROUND_COLOR,
      icon: fontBackgroundColorIcon,
      dropdownLabel: t4("Font Background Color")
    });
  }
  static get pluginName() {
    return "FontBackgroundColorUI";
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class FontBackgroundColor extends Plugin {
  static get requires() {
    return [FontBackgroundColorEditing, FontBackgroundColorUI];
  }
  static get pluginName() {
    return "FontBackgroundColor";
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class FontSizeCommand extends FontCommand {
  constructor(editor) {
    super(editor, FONT_SIZE);
  }
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
function normalizeOptions(configuredOptions) {
  return configuredOptions.map((item) => getOptionDefinition(item)).filter((option) => !!option);
}
const namedPresets = {
  get tiny() {
    return {
      title: "Tiny",
      model: "tiny",
      view: {
        name: "span",
        classes: "text-tiny",
        priority: 7
      }
    };
  },
  get small() {
    return {
      title: "Small",
      model: "small",
      view: {
        name: "span",
        classes: "text-small",
        priority: 7
      }
    };
  },
  get big() {
    return {
      title: "Big",
      model: "big",
      view: {
        name: "span",
        classes: "text-big",
        priority: 7
      }
    };
  },
  get huge() {
    return {
      title: "Huge",
      model: "huge",
      view: {
        name: "span",
        classes: "text-huge",
        priority: 7
      }
    };
  }
};
function getOptionDefinition(option) {
  if (isFullItemDefinition(option)) {
    return attachPriority(option);
  }
  const preset = findPreset(option);
  if (preset) {
    return attachPriority(preset);
  }
  if (option === "default") {
    return {
      model: void 0,
      title: "Default"
    };
  }
  if (isNumericalDefinition(option)) {
    return;
  }
  return generatePixelPreset(option);
}
function generatePixelPreset(definition) {
  if (typeof definition === "number" || typeof definition === "string") {
    definition = {
      title: String(definition),
      model: `${parseFloat(definition)}px`
    };
  }
  definition.view = {
    name: "span",
    styles: {
      "font-size": definition.model
    }
  };
  return attachPriority(definition);
}
function attachPriority(definition) {
  if (!definition.view.priority) {
    definition.view.priority = 7;
  }
  return definition;
}
function findPreset(definition) {
  return namedPresets[definition] || namedPresets[definition.model];
}
function isFullItemDefinition(definition) {
  return typeof definition === "object" && definition.title && definition.model && definition.view;
}
function isNumericalDefinition(definition) {
  let numberValue;
  if (typeof definition === "object") {
    if (!definition.model) {
      throw new CKEditorError("font-size-invalid-definition", null, definition);
    } else {
      numberValue = parseFloat(definition.model);
    }
  } else {
    numberValue = parseFloat(definition);
  }
  return isNaN(numberValue);
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
const styleFontSize = [
  "x-small",
  "x-small",
  "small",
  "medium",
  "large",
  "x-large",
  "xx-large",
  "xxx-large"
];
class FontSizeEditing extends Plugin {
  static get pluginName() {
    return "FontSizeEditing";
  }
  constructor(editor) {
    super(editor);
    editor.config.define(FONT_SIZE, {
      options: [
        "tiny",
        "small",
        "default",
        "big",
        "huge"
      ],
      supportAllValues: false
    });
  }
  init() {
    const editor = this.editor;
    editor.model.schema.extend("$text", { allowAttributes: FONT_SIZE });
    editor.model.schema.setAttributeProperties(FONT_SIZE, {
      isFormatting: true,
      copyOnEnter: true
    });
    const supportAllValues = editor.config.get("fontSize.supportAllValues");
    const options = normalizeOptions(this.editor.config.get("fontSize.options")).filter((item) => item.model);
    const definition = buildDefinition(FONT_SIZE, options);
    if (supportAllValues) {
      this._prepareAnyValueConverters(definition);
      this._prepareCompatibilityConverter();
    } else {
      editor.conversion.attributeToElement(definition);
    }
    editor.commands.add(FONT_SIZE, new FontSizeCommand(editor));
  }
  _prepareAnyValueConverters(definition) {
    const editor = this.editor;
    const presets = definition.model.values.filter((value) => {
      return !isLength(String(value)) && !isPercentage(String(value));
    });
    if (presets.length) {
      throw new CKEditorError(
        "font-size-invalid-use-of-named-presets",
        null,
        { presets }
      );
    }
    editor.conversion.for("downcast").attributeToElement({
      model: FONT_SIZE,
      view: (attributeValue, { writer }) => {
        if (!attributeValue) {
          return;
        }
        return writer.createAttributeElement("span", { style: "font-size:" + attributeValue }, { priority: 7 });
      }
    });
    editor.conversion.for("upcast").elementToAttribute({
      model: {
        key: FONT_SIZE,
        value: (viewElement) => viewElement.getStyle("font-size")
      },
      view: {
        name: "span",
        styles: {
          "font-size": /.*/
        }
      }
    });
  }
  _prepareCompatibilityConverter() {
    const editor = this.editor;
    editor.conversion.for("upcast").elementToAttribute({
      view: {
        name: "font",
        attributes: {
          "size": /^[+-]?\d{1,3}$/
        }
      },
      model: {
        key: FONT_SIZE,
        value: (viewElement) => {
          const value = viewElement.getAttribute("size");
          const isRelative = value[0] === "-" || value[0] === "+";
          let size = parseInt(value, 10);
          if (isRelative) {
            size = 3 + size;
          }
          const maxSize = styleFontSize.length - 1;
          const clampedSize = Math.min(Math.max(size, 0), maxSize);
          return styleFontSize[clampedSize];
        }
      }
    });
  }
}
var fontSizeIcon = '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M9.816 11.5 7.038 4.785 4.261 11.5h5.555zm.62 1.5H3.641l-1.666 4.028H.312l5.789-14h1.875l5.789 14h-1.663L10.436 13zm7.55 2.279.779-.779.707.707-2.265 2.265-2.193-2.265.707-.707.765.765V4.825c0-.042 0-.083.002-.123l-.77.77-.707-.707L17.207 2.5l2.265 2.265-.707.707-.782-.782c.002.043.003.089.003.135v10.454z"/></svg>';
var fontsize = "";
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class FontSizeUI extends Plugin {
  static get pluginName() {
    return "FontSizeUI";
  }
  init() {
    const editor = this.editor;
    const t4 = editor.t;
    const options = this._getLocalizedOptions();
    const command = editor.commands.get(FONT_SIZE);
    editor.ui.componentFactory.add(FONT_SIZE, (locale) => {
      const dropdownView = createDropdown(locale);
      addListToDropdown(dropdownView, () => _prepareListOptions(options, command));
      dropdownView.buttonView.set({
        label: t4("Font Size"),
        icon: fontSizeIcon,
        tooltip: true
      });
      dropdownView.extendTemplate({
        attributes: {
          class: [
            "ck-font-size-dropdown"
          ]
        }
      });
      dropdownView.bind("isEnabled").to(command);
      this.listenTo(dropdownView, "execute", (evt) => {
        editor.execute(evt.source.commandName, { value: evt.source.commandParam });
        editor.editing.view.focus();
      });
      return dropdownView;
    });
  }
  _getLocalizedOptions() {
    const editor = this.editor;
    const t4 = editor.t;
    const localizedTitles = {
      Default: t4("Default"),
      Tiny: t4("Tiny"),
      Small: t4("Small"),
      Big: t4("Big"),
      Huge: t4("Huge")
    };
    const options = normalizeOptions(editor.config.get(FONT_SIZE).options);
    return options.map((option) => {
      const title = localizedTitles[option.title];
      if (title && title != option.title) {
        option = Object.assign({}, option, { title });
      }
      return option;
    });
  }
}
function _prepareListOptions(options, command) {
  const itemDefinitions = new Collection();
  for (const option of options) {
    const def = {
      type: "button",
      model: new Model({
        commandName: FONT_SIZE,
        commandParam: option.model,
        label: option.title,
        class: "ck-fontsize-option",
        withText: true
      })
    };
    if (option.view && option.view.styles) {
      def.model.set("labelStyle", `font-size:${option.view.styles["font-size"]}`);
    }
    if (option.view && option.view.classes) {
      def.model.set("class", `${def.model.class} ${option.view.classes}`);
    }
    def.model.bind("isOn").to(command, "value", (value) => value === option.model);
    itemDefinitions.add(def);
  }
  return itemDefinitions;
}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
class FontSize extends Plugin {
  static get requires() {
    return [FontSizeEditing, FontSizeUI];
  }
  static get pluginName() {
    return "FontSize";
  }
  normalizeSizeOptions(options) {
    return normalizeOptions(options);
  }
}
const __default__$2 = {
  layout: _sfc_main$1u
};
const _sfc_main$2 = /* @__PURE__ */ Object.assign(__default__$2, {
  __name: "Create",
  __ssrInlineRender: true,
  setup(__props) {
    const wiki_categories = inertiaVue3.usePage().props.value.wiki_categories;
    const form = vue.reactive({
      title: "",
      slug: "",
      body: "",
      description: "",
      category_id: 0
    });
    const CKEditor_conf = vue.reactive({
      editor: ClassicEditor__default["default"],
      editorData: "",
      editorConfig: {
        htmlSupport: {
          allow: [
            {
              name: /.*/,
              attributes: true,
              classes: true,
              styles: true
            }
          ]
        },
        fontSize: {
          options: [9, 11, 13, "default", 17, 19, 21]
        },
        fontFamily: {
          options: [
            "default",
            "Ubuntu, Arial, sans-serif",
            "Ubuntu Mono, Courier New, Courier, monospace"
          ]
        },
        plugins: [
          SourceEditing,
          DataFilter,
          HtmlSupportPlugin,
          StyleEditing,
          StylePlugin,
          ImageCaptionPlugin,
          ImageUploadPlugin,
          ImagePlugin,
          ImageInsertPlugin,
          FontSize,
          AligmentPlugin,
          TablePlugin__default["default"],
          EssentialsPlugin__default["default"],
          BoldPlugin__default["default"],
          ItalicPlugin__default["default"],
          LinkPlugin__default["default"],
          ParagraphPlugin__default["default"],
          FontColor,
          FontBackgroundColor,
          HeadingPlugin__default["default"],
          ListPlugin__default["default"]
        ],
        toolbar: [
          "heading",
          "|",
          "sourceediting",
          "styleediting",
          "style",
          "|",
          "bold",
          "italic",
          "link",
          "|",
          "bulletedList",
          "numberedList",
          "blockQuote",
          "alignment",
          "|",
          "fontColor",
          "fontBackgroundColor",
          "fontSize",
          "|",
          "tableColumn",
          "tableRow",
          "mergeTableCells",
          "table",
          "insertTable",
          "|",
          "image",
          "imageinsert",
          "imageupload",
          "imagecaption",
          "imageresize",
          "|",
          "undo",
          "redo",
          "generalhtmlsupport",
          "datafilter"
        ],
        language: "en"
      }
    });
    const state2 = vue.reactive({
      title: "",
      message: "",
      group: "",
      duration: 5e3
    });
    function create_post() {
      form.body = CKEditor_conf.editorData;
      axios__default["default"].post(route("admin.wiki.store", form)).then((response) => {
        state2.title = "Success";
        state2.message = response.data.message;
        state2.group = response.data.status;
        notifyMe();
        inertia.Inertia.visit(route("admin.wiki.index"));
      }).catch((error) => {
        state2.title = "Error";
        state2.message = error.data.message;
        state2.group = error.data.status;
        notifyMe();
      });
    }
    function notifyMe() {
      Notifications.notify(
        {
          group: state2.group,
          title: state2.title.toUpperCase(),
          text: state2.message + " "
        },
        state2.duration
      );
    }
    return (_ctx, _push, _parent, _attrs) => {
      const _component_ck_editor = vue.resolveComponent("ck-editor");
      _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)}><div class="flex flex-wrap"><div class="w-full mb-12 px-4"><div class="relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded bg-white"><div class="rounded-t mb-0 px-4 py-3 border-0"><div class="flex flex-wrap items-center"><div class="w-full"><div class="flex flex-wrap -mx-3 mb-6"><div class="w-full px-3 mb-6 md:mb-0"><label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2" for="Title"> Title of the post </label><input${serverRenderer.ssrRenderAttr("value", form.title)} class="appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500" id="title" type="text"></div><div class="w-full flex items-center px-3 mb-6 md:mb-0"><div class="flex w-full flex-col"><label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2" for="grid-first-name"> Slug </label><input${serverRenderer.ssrRenderAttr("value", form.slug)} class="appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500" id="slug" type="text"></div><div class="flex w-full flex-col ml-5"><label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2" for="category"> Category Post </label><select id="category" class="appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500"><!--[-->`);
      serverRenderer.ssrRenderList(vue.unref(wiki_categories), (wiki_category) => {
        _push(`<option${serverRenderer.ssrRenderAttr("value", wiki_category.id)}>${serverRenderer.ssrInterpolate(wiki_category.name)}</option>`);
      });
      _push(`<!--]--></select></div></div></div><div class="flex flex-wrap -mx-3 mb-6"><div class="w-full px-3"><label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2" for="grid-password"> Description (MAX 160) </label><textarea class="appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500">${serverRenderer.ssrInterpolate(form.description)}</textarea><p class="text-gray-600 text-xs italic"> Make it as long and as crazy as you&#39;d like </p></div></div><div class="w-full px-3">`);
      _push(serverRenderer.ssrRenderComponent(JetButton, {
        onClick: ($event) => create_post()
      }, {
        default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`Create Post`);
          } else {
            return [
              vue.createTextVNode("Create Post")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div></div></div></div><div class="block w-full p-5">`);
      _push(serverRenderer.ssrRenderComponent(_component_ck_editor, {
        onInput: ($event) => CKEditor_conf.editorData = $event,
        editor: CKEditor_conf.editor,
        config: CKEditor_conf.editorConfig
      }, null, _parent));
      _push(`</div></div></div></div></div>`);
    };
  }
});
const _sfc_setup$2 = _sfc_main$2.setup;
_sfc_main$2.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Admin/Wiki/Create.vue");
  return _sfc_setup$2 ? _sfc_setup$2(props, ctx) : void 0;
};
var Create = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": _sfc_main$2
}, Symbol.toStringTag, { value: "Module" }));
const __default__$1 = {
  layout: _sfc_main$1u
};
const _sfc_main$1 = /* @__PURE__ */ Object.assign(__default__$1, {
  __name: "Edit",
  __ssrInlineRender: true,
  setup(__props) {
    const wiki_post = inertiaVue3.usePage().props.value.wiki_post;
    const wiki_categories = inertiaVue3.usePage().props.value.wiki_categories;
    const wiki_form = vue.reactive({
      title: wiki_post.title,
      category_id: wiki_post.category_id,
      slug: wiki_post.slug,
      description: wiki_post.description
    });
    const CKEditor_conf = vue.reactive({
      editor: ClassicEditor__default["default"],
      editorData: wiki_post.body,
      editorConfig: {
        htmlSupport: {
          allow: [
            {
              name: /.*/,
              attributes: true,
              classes: true,
              styles: true
            }
          ]
        },
        fontSize: {
          options: [9, 11, 13, "default", 17, 19, 21]
        },
        fontFamily: {
          options: [
            "default",
            "Ubuntu, Arial, sans-serif",
            "Ubuntu Mono, Courier New, Courier, monospace"
          ]
        },
        plugins: [
          SourceEditing,
          DataFilter,
          HtmlSupportPlugin,
          StyleEditing,
          StylePlugin,
          ImageCaptionPlugin,
          ImageUploadPlugin,
          ImagePlugin,
          ImageInsertPlugin,
          FontSize,
          AligmentPlugin,
          TablePlugin__default["default"],
          EssentialsPlugin__default["default"],
          BoldPlugin__default["default"],
          ItalicPlugin__default["default"],
          LinkPlugin__default["default"],
          ParagraphPlugin__default["default"],
          FontColor,
          FontBackgroundColor,
          HeadingPlugin__default["default"],
          ListPlugin__default["default"]
        ],
        toolbar: [
          "heading",
          "|",
          "sourceediting",
          "styleediting",
          "style",
          "|",
          "bold",
          "italic",
          "link",
          "|",
          "bulletedList",
          "numberedList",
          "blockQuote",
          "alignment",
          "|",
          "fontColor",
          "fontBackgroundColor",
          "fontSize",
          "|",
          "tableColumn",
          "tableRow",
          "mergeTableCells",
          "table",
          "insertTable",
          "|",
          "image",
          "imageinsert",
          "imageupload",
          "imagecaption",
          "imageresize",
          "|",
          "undo",
          "redo",
          "generalhtmlsupport",
          "datafilter"
        ],
        language: "en"
      }
    });
    const state2 = vue.reactive({
      title: "",
      message: "",
      group: "",
      duration: 5e3
    });
    function edit_post() {
      axios__default["default"].put(route("admin.wiki.update", wiki_post.id), {
        title: wiki_form.title,
        body: CKEditor_conf.editorData,
        category_id: wiki_form.category_id,
        slug: wiki_form.slug,
        description: wiki_form.description
      }).then((response) => {
        if (response.status == 200) {
          state2.title = "Success";
          state2.message = response.data.message;
          state2.group = "success";
          notifyMe();
          inertia.Inertia.reload();
        }
      }).catch((error) => {
        console.log(error);
      });
    }
    function notifyMe() {
      Notifications.notify(
        {
          group: state2.group,
          title: state2.title.toUpperCase(),
          text: state2.message + " "
        },
        state2.duration
      );
    }
    return (_ctx, _push, _parent, _attrs) => {
      const _component_ck_editor = vue.resolveComponent("ck-editor");
      _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)}><div class="flex flex-wrap"><div class="w-full mb-12 px-4"><div class="relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded bg-white"><div class="rounded-t mb-0 px-4 py-3 border-0"><div class="flex flex-wrap items-center"><div class="w-full"><div class="flex flex-wrap -mx-3 mb-6"><div class="w-full px-3 mb-6 md:mb-0"><label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2" for="grid-first-name"> Title of the post </label><input class="appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500" id="grid-first-name" type="text"${serverRenderer.ssrRenderAttr("value", wiki_form.title)}></div><div class="w-full flex items-center px-3 mb-6 md:mb-0"><div class="flex w-full flex-col"><label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2" for="grid-first-name"> Slug </label><input class="appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500" id="grid-first-name" type="text"${serverRenderer.ssrRenderAttr("value", wiki_form.slug)}></div><div class="flex w-full flex-col ml-5"><label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2" for="grid-last-name"> Category Post </label><select${serverRenderer.ssrRenderAttr("value", wiki_form.category_id)} class="appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500"><!--[-->`);
      serverRenderer.ssrRenderList(vue.unref(wiki_categories), (wiki_category) => {
        _push(`<option${serverRenderer.ssrRenderAttr("value", wiki_category.id)}>${serverRenderer.ssrInterpolate(wiki_category.name)}</option>`);
      });
      _push(`<!--]--></select></div></div></div><div class="flex flex-wrap -mx-3 mb-6"><div class="w-full px-3"><label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2" for="grid-password"> Description (MAX 160) </label><textarea class="appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500">${serverRenderer.ssrInterpolate(vue.unref(wiki_post).description)}</textarea><p class="text-gray-600 text-xs italic"> Make it as long and as crazy as you&#39;d like </p></div></div><div class="w-full px-3">`);
      _push(serverRenderer.ssrRenderComponent(JetButton, {
        onClick: ($event) => edit_post()
      }, {
        default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`Edit Post`);
          } else {
            return [
              vue.createTextVNode("Edit Post")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div></div></div></div><div class="block w-full p-5">`);
      _push(serverRenderer.ssrRenderComponent(_component_ck_editor, {
        ref: "editor",
        editor: CKEditor_conf.editor,
        modelValue: CKEditor_conf.editorData,
        "onUpdate:modelValue": ($event) => CKEditor_conf.editorData = $event,
        config: CKEditor_conf.editorConfig
      }, null, _parent));
      _push(`</div></div></div></div></div>`);
    };
  }
});
const _sfc_setup$1 = _sfc_main$1.setup;
_sfc_main$1.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Admin/Wiki/Edit.vue");
  return _sfc_setup$1 ? _sfc_setup$1(props, ctx) : void 0;
};
var Edit = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": _sfc_main$1
}, Symbol.toStringTag, { value: "Module" }));
const __default__ = {
  layout: _sfc_main$1u
};
const _sfc_main = /* @__PURE__ */ Object.assign(__default__, {
  __name: "Index",
  __ssrInlineRender: true,
  setup(__props) {
    const categories = vue.computed(() => inertiaVue3.usePage().props.value.categories);
    const wiki_posts = vue.computed(() => inertiaVue3.usePage().props.value.wiki_posts);
    const state2 = vue.reactive({
      title: "",
      message: "",
      group: "",
      duration: 5e3
    });
    function delete_post(id) {
      if (!confirm("Are you sure you want to delete this post?"))
        return;
      axios__default["default"].delete(route("admin.wiki.destroy", id)).then((response) => {
        if (response.status == 200) {
          state2.title = "Success";
          state2.message = response.data.message;
          state2.group = "success";
          notifyMe();
          inertia.Inertia.reload();
        }
      }).catch((error) => {
        console.log(error);
      });
    }
    function notifyMe() {
      Notifications.notify(
        {
          group: state2.group,
          title: state2.title.toUpperCase(),
          text: state2.message + " "
        },
        state2.duration
      );
    }
    return (_ctx, _push, _parent, _attrs) => {
      const _component_font_awesome_icon = vue.resolveComponent("font-awesome-icon");
      _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)}><div class="flex flex-wrap"><div class="w-full mb-12 px-4"><div class="relative flex flex-col min-w-0 break-words w-full mb-6 shadow-md rounded bg-white"><div class="rounded-t mb-0 px-4 py-3 border-0"><div class="flex flex-wrap items-center"><div class="relative w-full px-4 max-w-full flex justify-between"><h3 class="font-semibold text-lg text-blueGray-700 uppercase"> Wiki Posts </h3>`);
      _push(serverRenderer.ssrRenderComponent(vue.unref(inertiaVue3.Link), {
        href: _ctx.route("admin.wiki.create")
      }, {
        default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(JetButton, null, {
              default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`New Post`);
                } else {
                  return [
                    vue.createTextVNode("New Post")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(JetButton, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("New Post")
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div></div></div><div class="block w-full"><table class="items-center w-full bg-transparent border-collapse"><thead><tr><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left bg-blueGray-50 text-blueGray-500 border-blueGray-100"> ID </th><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left bg-blueGray-50 text-blueGray-500 border-blueGray-100"> Title </th><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left bg-blueGray-50 text-blueGray-500 border-blueGray-100"> Categorie </th><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left bg-blueGray-50 text-blueGray-500 border-blueGray-100"> Description </th><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left bg-blueGray-50 text-blueGray-500 border-blueGray-100"> Slug </th><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left bg-blueGray-50 text-blueGray-500 border-blueGray-100"> Created at </th><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left bg-blueGray-50 text-blueGray-500 border-blueGray-100"></th></tr></thead><tbody><!--[-->`);
      serverRenderer.ssrRenderList(vue.unref(wiki_posts).data, (wiki_post) => {
        _push(`<tr><th class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-left flex items-center"><span class="ml-3 font-bold text-blueGray-600">${serverRenderer.ssrInterpolate(wiki_post.id)}</span></th><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4">${serverRenderer.ssrInterpolate(wiki_post.title)}</td><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4"><i class="fas fa-circle text-orange-500 mr-2"></i> ${serverRenderer.ssrInterpolate(wiki_post.category.name)}</td><td class="border-t-0 px-6 overflow-hidden align-middle border-l-0 border-r-0 text-xs p-4"><div class="flex items-center">${serverRenderer.ssrInterpolate(wiki_post.description)}</div></td><td class="border-t-0 px-6 overflow-hidden align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4"><div class="flex items-center">${serverRenderer.ssrInterpolate(wiki_post.slug)}</div></td><td class="border-t-0 px-6 overflow-hidden align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4"><div class="flex items-center">${serverRenderer.ssrInterpolate(wiki_post.created_at)}</div></td><td class="px-5 py-5 bg-white text-sm text-right">`);
        _push(serverRenderer.ssrRenderComponent(JetDropdown, null, {
          trigger: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`<button type="button" class="inline-block text-gray-500 hover:text-gray-700 z-10"${_scopeId}><svg class="inline-block h-6 w-6 fill-current" viewBox="0 0 24 24"${_scopeId}><path d="M12 6a2 2 0 110-4 2 2 0 010 4zm0 8a2 2 0 110-4 2 2 0 010 4zm-2 6a2 2 0 104 0 2 2 0 00-4 0z"${_scopeId}></path></svg></button>`);
            } else {
              return [
                vue.createVNode("button", {
                  type: "button",
                  class: "inline-block text-gray-500 hover:text-gray-700 z-10"
                }, [
                  (vue.openBlock(), vue.createBlock("svg", {
                    class: "inline-block h-6 w-6 fill-current",
                    viewBox: "0 0 24 24"
                  }, [
                    vue.createVNode("path", { d: "M12 6a2 2 0 110-4 2 2 0 010 4zm0 8a2 2 0 110-4 2 2 0 010 4zm-2 6a2 2 0 104 0 2 2 0 00-4 0z" })
                  ]))
                ])
              ];
            }
          }),
          content: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`<div class="py-1" role="menu" aria-orientation="vertical" aria-labelledby="options-menu"${_scopeId}>`);
              _push2(serverRenderer.ssrRenderComponent(JetDropdownLink, {
                href: _ctx.route("wiki.show", {
                  page: wiki_post.slug,
                  category: wiki_post.category.name
                }),
                class: "flex justify-start w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900"
              }, {
                default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                      icon: "eye",
                      class: "mr-2"
                    }, null, _parent3, _scopeId2));
                    _push3(` Show `);
                  } else {
                    return [
                      vue.createVNode(_component_font_awesome_icon, {
                        icon: "eye",
                        class: "mr-2"
                      }),
                      vue.createTextVNode(" Show ")
                    ];
                  }
                }),
                _: 2
              }, _parent2, _scopeId));
              _push2(serverRenderer.ssrRenderComponent(JetDropdownLink, {
                href: _ctx.route(
                  "admin.wiki.edit",
                  {
                    id: wiki_post.id
                  }
                ),
                class: "flex justify-start w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900"
              }, {
                default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                      icon: "edit",
                      class: "mr-2"
                    }, null, _parent3, _scopeId2));
                    _push3(` Edit `);
                  } else {
                    return [
                      vue.createVNode(_component_font_awesome_icon, {
                        icon: "edit",
                        class: "mr-2"
                      }),
                      vue.createTextVNode(" Edit ")
                    ];
                  }
                }),
                _: 2
              }, _parent2, _scopeId));
              _push2(serverRenderer.ssrRenderComponent(JetDropdownLink, {
                onClick: ($event) => delete_post(
                  wiki_post.id
                ),
                class: "flex justify-start w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900"
              }, {
                default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                      icon: "trash",
                      class: "mr-2"
                    }, null, _parent3, _scopeId2));
                    _push3(` Destroy `);
                  } else {
                    return [
                      vue.createVNode(_component_font_awesome_icon, {
                        icon: "trash",
                        class: "mr-2"
                      }),
                      vue.createTextVNode(" Destroy ")
                    ];
                  }
                }),
                _: 2
              }, _parent2, _scopeId));
              _push2(serverRenderer.ssrRenderComponent(JetDropdownLink, {
                href: "",
                class: "flex justify-start w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900"
              }, {
                default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                      icon: "archive",
                      class: "mr-2"
                    }, null, _parent3, _scopeId2));
                    _push3(` Archive `);
                  } else {
                    return [
                      vue.createVNode(_component_font_awesome_icon, {
                        icon: "archive",
                        class: "mr-2"
                      }),
                      vue.createTextVNode(" Archive ")
                    ];
                  }
                }),
                _: 2
              }, _parent2, _scopeId));
              _push2(`</div>`);
            } else {
              return [
                vue.createVNode("div", {
                  class: "py-1",
                  role: "menu",
                  "aria-orientation": "vertical",
                  "aria-labelledby": "options-menu"
                }, [
                  vue.createVNode(JetDropdownLink, {
                    href: _ctx.route("wiki.show", {
                      page: wiki_post.slug,
                      category: wiki_post.category.name
                    }),
                    class: "flex justify-start w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createVNode(_component_font_awesome_icon, {
                        icon: "eye",
                        class: "mr-2"
                      }),
                      vue.createTextVNode(" Show ")
                    ]),
                    _: 2
                  }, 1032, ["href"]),
                  vue.createVNode(JetDropdownLink, {
                    href: _ctx.route(
                      "admin.wiki.edit",
                      {
                        id: wiki_post.id
                      }
                    ),
                    class: "flex justify-start w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createVNode(_component_font_awesome_icon, {
                        icon: "edit",
                        class: "mr-2"
                      }),
                      vue.createTextVNode(" Edit ")
                    ]),
                    _: 2
                  }, 1032, ["href"]),
                  vue.createVNode(JetDropdownLink, {
                    onClick: ($event) => delete_post(
                      wiki_post.id
                    ),
                    class: "flex justify-start w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createVNode(_component_font_awesome_icon, {
                        icon: "trash",
                        class: "mr-2"
                      }),
                      vue.createTextVNode(" Destroy ")
                    ]),
                    _: 2
                  }, 1032, ["onClick"]),
                  vue.createVNode(JetDropdownLink, {
                    href: "",
                    class: "flex justify-start w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createVNode(_component_font_awesome_icon, {
                        icon: "archive",
                        class: "mr-2"
                      }),
                      vue.createTextVNode(" Archive ")
                    ]),
                    _: 1
                  })
                ])
              ];
            }
          }),
          _: 2
        }, _parent));
        _push(`</td></tr>`);
      });
      _push(`<!--]--></tbody></table><div class="py-5">`);
      _push(serverRenderer.ssrRenderComponent(_sfc_main$1x, {
        links: vue.unref(wiki_posts).links,
        class: "mt-4 text-gray-600"
      }, null, _parent));
      _push(`</div></div></div></div></div><div class="flex flex-wrap mt-4"><div class="w-full xl:w-8/12 mb-12 xl:mb-0 px-4"><div class="relative flex flex-col min-w-0 break-words bg-white w-full mb-6 shadow-md rounded"><div class="rounded-t mb-0 px-4 py-3 border-0"><div class="flex flex-wrap items-center"><div class="relative w-full px-4 max-w-full flex-grow flex-1"><h3 class="font-semibold text-base text-blueGray-700"> Archived Posts </h3></div><div class="relative w-full px-4 max-w-full flex-grow flex-1 text-right"></div></div></div><div class="block w-full overflow-x-auto"></div></div></div><div class="w-full xl:w-4/12 px-4"><div class="relative flex flex-col min-w-0 break-words bg-white w-full mb-6 shadow-md rounded"><div class="rounded-t mb-0 px-4 py-3 border-0"><div class="flex flex-wrap items-center"><div class="relative w-full px-4 max-w-full flex-grow flex-1"><h3 class="font-semibold text-base text-blueGray-700"> Post Categories </h3></div><div class="relative w-full px-4 max-w-full flex-grow flex-1 text-right">`);
      _push(serverRenderer.ssrRenderComponent(JetButton, {
        class: "bg-indigo-500 text-white active:bg-indigo-600 text-xs font-bold uppercase px-3 py-1 rounded outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150",
        type: "button"
      }, {
        default: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` New Category `);
          } else {
            return [
              vue.createTextVNode(" New Category ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div></div></div><div class="block w-full overflow-x-auto"><div class="h-[20rem]"><table class="items-center w-full bg-transparent border-collapse"><thead><tr><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left bg-blueGray-50 text-blueGray-500 border-blueGray-100"> ID </th><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left bg-blueGray-50 text-blueGray-500 border-blueGray-100"> Name </th><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left bg-blueGray-50 text-blueGray-500 border-blueGray-100"> Slug </th><th class="px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left bg-blueGray-50 text-blueGray-500 border-blueGray-100"></th></tr></thead><tbody><!--[-->`);
      serverRenderer.ssrRenderList(vue.unref(categories).data, (wiki_category) => {
        _push(`<tr><th class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-left flex items-center"><span class="ml-3 font-bold text-blueGray-600">${serverRenderer.ssrInterpolate(wiki_category.id)}</span></th><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4">${serverRenderer.ssrInterpolate(wiki_category.name)}</td><td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4"><i class="fas fa-circle text-orange-500 mr-2"></i> ${serverRenderer.ssrInterpolate(wiki_category.slug)}</td><td class="px-5 py-5 bg-white text-sm text-right">`);
        _push(serverRenderer.ssrRenderComponent(JetDropdown, null, {
          trigger: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`<button type="button" class="inline-block text-gray-500 hover:text-gray-700 z-10"${_scopeId}><svg class="inline-block h-6 w-6 fill-current" viewBox="0 0 24 24"${_scopeId}><path d="M12 6a2 2 0 110-4 2 2 0 010 4zm0 8a2 2 0 110-4 2 2 0 010 4zm-2 6a2 2 0 104 0 2 2 0 00-4 0z"${_scopeId}></path></svg></button>`);
            } else {
              return [
                vue.createVNode("button", {
                  type: "button",
                  class: "inline-block text-gray-500 hover:text-gray-700 z-10"
                }, [
                  (vue.openBlock(), vue.createBlock("svg", {
                    class: "inline-block h-6 w-6 fill-current",
                    viewBox: "0 0 24 24"
                  }, [
                    vue.createVNode("path", { d: "M12 6a2 2 0 110-4 2 2 0 010 4zm0 8a2 2 0 110-4 2 2 0 010 4zm-2 6a2 2 0 104 0 2 2 0 00-4 0z" })
                  ]))
                ])
              ];
            }
          }),
          content: vue.withCtx((_2, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`<div class="py-1" role="menu" aria-orientation="vertical" aria-labelledby="options-menu"${_scopeId}>`);
              _push2(serverRenderer.ssrRenderComponent(JetDropdownLink, { class: "flex justify-start w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900" }, {
                default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                      icon: "edit",
                      class: "mr-2"
                    }, null, _parent3, _scopeId2));
                    _push3(` Edit `);
                  } else {
                    return [
                      vue.createVNode(_component_font_awesome_icon, {
                        icon: "edit",
                        class: "mr-2"
                      }),
                      vue.createTextVNode(" Edit ")
                    ];
                  }
                }),
                _: 2
              }, _parent2, _scopeId));
              _push2(serverRenderer.ssrRenderComponent(JetDropdownLink, { class: "flex justify-start w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900" }, {
                default: vue.withCtx((_3, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(serverRenderer.ssrRenderComponent(_component_font_awesome_icon, {
                      icon: "trash",
                      class: "mr-2"
                    }, null, _parent3, _scopeId2));
                    _push3(` Destroy `);
                  } else {
                    return [
                      vue.createVNode(_component_font_awesome_icon, {
                        icon: "trash",
                        class: "mr-2"
                      }),
                      vue.createTextVNode(" Destroy ")
                    ];
                  }
                }),
                _: 2
              }, _parent2, _scopeId));
              _push2(`</div>`);
            } else {
              return [
                vue.createVNode("div", {
                  class: "py-1",
                  role: "menu",
                  "aria-orientation": "vertical",
                  "aria-labelledby": "options-menu"
                }, [
                  vue.createVNode(JetDropdownLink, { class: "flex justify-start w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900" }, {
                    default: vue.withCtx(() => [
                      vue.createVNode(_component_font_awesome_icon, {
                        icon: "edit",
                        class: "mr-2"
                      }),
                      vue.createTextVNode(" Edit ")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(JetDropdownLink, { class: "flex justify-start w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900" }, {
                    default: vue.withCtx(() => [
                      vue.createVNode(_component_font_awesome_icon, {
                        icon: "trash",
                        class: "mr-2"
                      }),
                      vue.createTextVNode(" Destroy ")
                    ]),
                    _: 1
                  })
                ])
              ];
            }
          }),
          _: 2
        }, _parent));
        _push(`</td></tr>`);
      });
      _push(`<!--]--></tbody></table></div></div></div></div></div></div>`);
    };
  }
});
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Admin/Wiki/Index.vue");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
var Index = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": _sfc_main
}, Symbol.toStringTag, { value: "Module" }));
